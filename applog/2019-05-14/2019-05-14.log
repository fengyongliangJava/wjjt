2019-05-14 08:40:21 -Starting BootdoApplication on PC-201905091110 with PID 5944 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-14 08:40:21 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-14 08:40:21 -The following profiles are active: dev
2019-05-14 08:40:22 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Tue May 14 08:40:22 CST 2019]; root of context hierarchy
2019-05-14 08:40:27 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-14 08:40:30 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$24352bd3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 08:40:30 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$168e5a7a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 08:40:32 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 08:40:32 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 08:40:33 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 08:40:33 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-14 08:40:33 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-14 08:40:33 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 08:40:33 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 08:40:33 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 08:40:33 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 08:40:34 -Tomcat initialized with port(s): 8081 (http)
2019-05-14 08:40:34 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-14 08:40:34 -Starting service [Tomcat]
2019-05-14 08:40:34 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-14 08:40:34 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-14 08:40:35 -Initializing Spring embedded WebApplicationContext
2019-05-14 08:40:35 -Root WebApplicationContext: initialization completed in 13150 ms
2019-05-14 08:40:36 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-14 08:40:36 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-14 08:40:36 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-14 08:40:36 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-14 08:40:36 -Filter xssFilter was not registered (disabled)
2019-05-14 08:40:36 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-14 08:40:36 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-14 08:40:36 -Servlet statViewServlet mapped to [/druid/*]
2019-05-14 08:40:36 -Servlet dispatcherServlet mapped to [/]
2019-05-14 08:40:49 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Tue May 14 08:40:22 CST 2019]; root of context hierarchy
2019-05-14 08:40:51 -Using default implementation for ThreadExecutor
2019-05-14 08:40:51 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-14 08:40:51 -Quartz Scheduler v.2.2.1 created.
2019-05-14 08:40:51 -RAMJobStore initialized.
2019-05-14 08:40:51 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-14 08:40:51 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-14 08:40:51 -Quartz scheduler version: 2.2.1
2019-05-14 08:40:51 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@563317c1
2019-05-14 08:40:53 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-14 08:40:53 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-14 08:40:56 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 08:40:56 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-14 08:40:56 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 08:40:56 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 08:40:56 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-14 08:40:56 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 08:40:56 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-14 08:40:56 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-14 08:40:56 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-14 08:40:56 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 08:40:56 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-14 08:40:56 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 08:40:56 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 08:40:56 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-14 08:40:56 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 08:40:56 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-14 08:40:56 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 08:40:56 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 08:40:56 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-14 08:40:56 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-14 08:40:56 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 08:40:56 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 08:40:56 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-14 08:40:56 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-14 08:40:56 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 08:40:56 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-14 08:40:56 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 08:40:56 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-14 08:40:56 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 08:40:56 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 08:40:56 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 08:40:56 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-14 08:40:56 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-05-14 08:40:56 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-14 08:40:56 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-14 08:40:56 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 08:40:56 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-14 08:40:56 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-14 08:40:56 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-14 08:40:56 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-14 08:40:56 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 08:40:56 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-14 08:40:56 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-14 08:40:56 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 08:40:56 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-14 08:40:56 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-14 08:40:56 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-14 08:40:56 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-14 08:40:56 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-14 08:40:56 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-14 08:40:56 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-14 08:40:56 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 08:40:56 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-14 08:40:56 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-14 08:40:56 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 08:40:56 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-14 08:40:56 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-14 08:40:56 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 08:40:56 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-14 08:40:56 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-14 08:40:56 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-14 08:40:56 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-14 08:40:56 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-14 08:40:56 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-14 08:40:56 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-14 08:40:56 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-14 08:40:56 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-14 08:40:56 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 08:40:56 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-14 08:40:56 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-14 08:40:56 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 08:40:56 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-14 08:40:56 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-14 08:40:56 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-14 08:40:56 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-14 08:40:56 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 08:40:56 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-14 08:40:56 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-14 08:40:56 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-14 08:40:56 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-14 08:40:56 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-14 08:40:56 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-14 08:40:56 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-14 08:40:56 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-14 08:40:56 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-14 08:40:56 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-14 08:40:56 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-14 08:40:56 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 08:40:56 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-14 08:40:56 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-14 08:40:56 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-14 08:40:56 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-14 08:40:56 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-14 08:40:56 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-14 08:40:56 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-14 08:40:56 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-14 08:40:56 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-14 08:40:56 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-14 08:40:56 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-14 08:40:56 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 08:40:56 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-14 08:40:56 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 08:40:56 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-14 08:40:56 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-14 08:40:56 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-14 08:40:56 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-14 08:40:56 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-14 08:40:56 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-14 08:40:56 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-14 08:40:56 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-14 08:40:56 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 08:40:56 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-14 08:40:56 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-14 08:40:56 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-14 08:40:56 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-14 08:40:56 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-14 08:40:56 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-14 08:40:56 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-14 08:40:56 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-14 08:40:56 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-14 08:40:56 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-14 08:40:56 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-14 08:40:56 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 08:40:56 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-14 08:40:56 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-14 08:40:56 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 08:40:56 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-14 08:40:56 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-14 08:40:56 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-14 08:40:56 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-14 08:40:56 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-14 08:40:56 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-14 08:40:56 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-14 08:40:56 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-14 08:40:56 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-14 08:40:56 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-14 08:40:56 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-14 08:40:56 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-14 08:40:56 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 08:40:56 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-14 08:40:56 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-14 08:40:56 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-14 08:40:56 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 08:40:56 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-14 08:40:56 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-14 08:40:56 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-14 08:40:56 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-14 08:40:56 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 08:40:56 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-14 08:40:56 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-14 08:40:56 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-14 08:40:56 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 08:40:56 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-14 08:40:56 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-14 08:40:56 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-14 08:40:56 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-14 08:40:56 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 08:40:56 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-14 08:40:56 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-14 08:40:56 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-14 08:40:56 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 08:40:56 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-14 08:40:56 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-14 08:40:56 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-14 08:40:56 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-14 08:40:56 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-14 08:40:56 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 08:40:56 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-14 08:40:56 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-14 08:40:56 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 08:40:56 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-14 08:40:56 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-14 08:40:56 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 08:40:56 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-14 08:40:56 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-14 08:40:56 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-14 08:40:56 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-14 08:40:56 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 08:40:56 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-14 08:40:56 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-14 08:40:56 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-14 08:40:56 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-14 08:40:56 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 08:40:56 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 08:40:56 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-14 08:40:56 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-14 08:40:56 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-14 08:40:56 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-14 08:40:56 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-14 08:40:56 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-14 08:40:56 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-14 08:40:56 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-14 08:40:56 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-14 08:40:56 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 08:40:56 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-14 08:40:56 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-14 08:40:56 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-14 08:40:56 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-14 08:40:56 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-14 08:40:56 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-14 08:40:57 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-14 08:40:57 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-14 08:40:57 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-14 08:40:57 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-14 08:40:57 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 08:40:57 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-14 08:40:57 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-14 08:40:57 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-14 08:40:57 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-14 08:40:57 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-14 08:40:57 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-14 08:40:57 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-14 08:40:57 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-14 08:40:57 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-14 08:40:57 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-14 08:40:57 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-14 08:40:57 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-14 08:40:57 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 08:40:57 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-14 08:40:57 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-14 08:40:57 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-14 08:40:57 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-14 08:40:57 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 08:40:57 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-14 08:40:57 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-14 08:40:57 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-14 08:40:57 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 08:40:57 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-14 08:40:57 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-14 08:40:57 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-14 08:40:57 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-14 08:40:57 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-14 08:40:57 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-14 08:40:57 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-14 08:40:57 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-14 08:40:57 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-14 08:40:57 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-14 08:40:57 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-14 08:40:57 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-14 08:40:57 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-14 08:40:57 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-14 08:40:57 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-14 08:40:57 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-14 08:40:57 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-14 08:40:57 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 08:40:57 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-14 08:40:57 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-14 08:40:57 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 08:40:57 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-14 08:40:57 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-14 08:40:57 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-14 08:40:57 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-14 08:40:57 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-14 08:40:57 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-14 08:40:57 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-14 08:40:57 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-14 08:40:57 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 08:40:57 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-14 08:40:57 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-14 08:40:57 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 08:40:57 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-14 08:40:57 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-14 08:40:57 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-14 08:40:57 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-14 08:40:57 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-14 08:40:57 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-14 08:40:57 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-14 08:40:57 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-14 08:40:58 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-14 08:40:58 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-14 08:40:58 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-14 08:40:59 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-14 08:40:59 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Tue May 14 08:40:22 CST 2019]; root of context hierarchy
2019-05-14 08:40:59 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-14 08:40:59 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-14 08:40:59 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-14 08:40:59 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-14 08:41:00 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-14 08:41:03 -Registering beans for JMX exposure on startup
2019-05-14 08:41:03 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-14 08:41:03 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-14 08:41:03 -Starting beans in phase 2147483647
2019-05-14 08:41:03 -Context refreshed
2019-05-14 08:41:03 -Found 1 custom documentation plugin(s)
2019-05-14 08:41:03 -Scanning for api listing references
2019-05-14 08:41:04 -Generating unique operation named: getCountDUsingPOST_1
2019-05-14 08:41:04 -Generating unique operation named: removeUsingPOST_1
2019-05-14 08:41:04 -Generating unique operation named: addUsingGET_1
2019-05-14 08:41:04 -Generating unique operation named: editUsingGET_1
2019-05-14 08:41:04 -Generating unique operation named: listUsingGET_1
2019-05-14 08:41:04 -Generating unique operation named: removeUsingPOST_2
2019-05-14 08:41:04 -Generating unique operation named: removeUsingPOST_3
2019-05-14 08:41:04 -Generating unique operation named: saveUsingPOST_1
2019-05-14 08:41:04 -Generating unique operation named: updateUsingGET_1
2019-05-14 08:41:04 -Generating unique operation named: updateUsingHEAD_1
2019-05-14 08:41:04 -Generating unique operation named: updateUsingPOST_1
2019-05-14 08:41:04 -Generating unique operation named: updateUsingPUT_1
2019-05-14 08:41:04 -Generating unique operation named: updateUsingPATCH_1
2019-05-14 08:41:04 -Generating unique operation named: updateUsingDELETE_1
2019-05-14 08:41:04 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-14 08:41:04 -Generating unique operation named: updateUsingTRACE_1
2019-05-14 08:41:04 -Generating unique operation named: addUsingGET_2
2019-05-14 08:41:04 -Generating unique operation named: editUsingGET_2
2019-05-14 08:41:04 -Generating unique operation named: listUsingGET_2
2019-05-14 08:41:04 -Generating unique operation named: removeUsingPOST_4
2019-05-14 08:41:04 -Generating unique operation named: removeUsingPOST_5
2019-05-14 08:41:04 -Generating unique operation named: saveUsingPOST_2
2019-05-14 08:41:04 -Generating unique operation named: updateUsingPOST_2
2019-05-14 08:41:04 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-14 08:41:04 -Generating unique operation named: addUsingGET_3
2019-05-14 08:41:04 -Generating unique operation named: editUsingGET_3
2019-05-14 08:41:04 -Generating unique operation named: listUsingGET_3
2019-05-14 08:41:04 -Generating unique operation named: removeUsingPOST_6
2019-05-14 08:41:05 -Generating unique operation named: removeUsingPOST_7
2019-05-14 08:41:05 -Generating unique operation named: saveUsingPOST_3
2019-05-14 08:41:05 -Generating unique operation named: updateUsingGET_2
2019-05-14 08:41:05 -Generating unique operation named: updateUsingHEAD_2
2019-05-14 08:41:05 -Generating unique operation named: updateUsingPOST_3
2019-05-14 08:41:05 -Generating unique operation named: updateUsingPUT_2
2019-05-14 08:41:05 -Generating unique operation named: updateUsingPATCH_2
2019-05-14 08:41:05 -Generating unique operation named: updateUsingDELETE_2
2019-05-14 08:41:05 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-14 08:41:05 -Generating unique operation named: updateUsingTRACE_2
2019-05-14 08:41:05 -Generating unique operation named: addUsingGET_4
2019-05-14 08:41:05 -Generating unique operation named: editUsingGET_4
2019-05-14 08:41:05 -Generating unique operation named: listUsingGET_4
2019-05-14 08:41:05 -Generating unique operation named: removeUsingPOST_8
2019-05-14 08:41:05 -Generating unique operation named: removeUsingPOST_9
2019-05-14 08:41:05 -Generating unique operation named: saveUsingPOST_4
2019-05-14 08:41:05 -Generating unique operation named: updateUsingGET_3
2019-05-14 08:41:05 -Generating unique operation named: updateUsingHEAD_3
2019-05-14 08:41:05 -Generating unique operation named: updateUsingPOST_4
2019-05-14 08:41:05 -Generating unique operation named: updateUsingPUT_3
2019-05-14 08:41:05 -Generating unique operation named: updateUsingPATCH_3
2019-05-14 08:41:05 -Generating unique operation named: updateUsingDELETE_3
2019-05-14 08:41:05 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-14 08:41:05 -Generating unique operation named: updateUsingTRACE_3
2019-05-14 08:41:05 -Generating unique operation named: ElecUsingGET_1
2019-05-14 08:41:05 -Generating unique operation named: addUsingGET_5
2019-05-14 08:41:05 -Generating unique operation named: editUsingGET_5
2019-05-14 08:41:05 -Generating unique operation named: listUsingGET_5
2019-05-14 08:41:05 -Generating unique operation named: removeUsingPOST_10
2019-05-14 08:41:05 -Generating unique operation named: removeUsingPOST_11
2019-05-14 08:41:05 -Generating unique operation named: saveUsingPOST_5
2019-05-14 08:41:05 -Generating unique operation named: updateUsingGET_4
2019-05-14 08:41:05 -Generating unique operation named: updateUsingHEAD_4
2019-05-14 08:41:05 -Generating unique operation named: updateUsingPOST_5
2019-05-14 08:41:05 -Generating unique operation named: updateUsingPUT_4
2019-05-14 08:41:05 -Generating unique operation named: updateUsingPATCH_4
2019-05-14 08:41:05 -Generating unique operation named: updateUsingDELETE_4
2019-05-14 08:41:05 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-14 08:41:05 -Generating unique operation named: updateUsingTRACE_4
2019-05-14 08:41:05 -Generating unique operation named: editUsingGET_6
2019-05-14 08:41:05 -Generating unique operation named: listUsingGET_6
2019-05-14 08:41:05 -Generating unique operation named: updateUsingPOST_6
2019-05-14 08:41:05 -Generating unique operation named: addUsingGET_6
2019-05-14 08:41:05 -Generating unique operation named: editUsingGET_7
2019-05-14 08:41:05 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-14 08:41:05 -Generating unique operation named: listUsingGET_7
2019-05-14 08:41:05 -Generating unique operation named: removeUsingPOST_12
2019-05-14 08:41:05 -Generating unique operation named: removeUsingPOST_13
2019-05-14 08:41:05 -Generating unique operation named: saveUsingPOST_6
2019-05-14 08:41:05 -Generating unique operation named: updateUsingGET_5
2019-05-14 08:41:05 -Generating unique operation named: updateUsingHEAD_5
2019-05-14 08:41:05 -Generating unique operation named: updateUsingPOST_7
2019-05-14 08:41:05 -Generating unique operation named: updateUsingPUT_5
2019-05-14 08:41:05 -Generating unique operation named: updateUsingPATCH_5
2019-05-14 08:41:05 -Generating unique operation named: updateUsingDELETE_5
2019-05-14 08:41:05 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-14 08:41:05 -Generating unique operation named: updateUsingTRACE_5
2019-05-14 08:41:05 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-14 08:41:05 -Generating unique operation named: addUsingGET_7
2019-05-14 08:41:05 -Generating unique operation named: editUsingGET_8
2019-05-14 08:41:05 -Generating unique operation named: listUsingGET_8
2019-05-14 08:41:05 -Generating unique operation named: removeUsingPOST_14
2019-05-14 08:41:05 -Generating unique operation named: removeUsingPOST_15
2019-05-14 08:41:05 -Generating unique operation named: saveUsingPOST_7
2019-05-14 08:41:05 -Generating unique operation named: updateUsingGET_6
2019-05-14 08:41:05 -Generating unique operation named: updateUsingHEAD_6
2019-05-14 08:41:05 -Generating unique operation named: updateUsingPOST_8
2019-05-14 08:41:05 -Generating unique operation named: updateUsingPUT_6
2019-05-14 08:41:05 -Generating unique operation named: updateUsingPATCH_6
2019-05-14 08:41:05 -Generating unique operation named: updateUsingDELETE_6
2019-05-14 08:41:05 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-14 08:41:05 -Generating unique operation named: updateUsingTRACE_6
2019-05-14 08:41:05 -Generating unique operation named: addUsingGET_8
2019-05-14 08:41:05 -Generating unique operation named: editUsingGET_9
2019-05-14 08:41:05 -Generating unique operation named: listUsingGET_9
2019-05-14 08:41:05 -Generating unique operation named: removeUsingPOST_16
2019-05-14 08:41:05 -Generating unique operation named: removeUsingPOST_17
2019-05-14 08:41:05 -Generating unique operation named: saveUsingPOST_8
2019-05-14 08:41:05 -Generating unique operation named: updateUsingGET_7
2019-05-14 08:41:05 -Generating unique operation named: updateUsingHEAD_7
2019-05-14 08:41:05 -Generating unique operation named: updateUsingPOST_9
2019-05-14 08:41:05 -Generating unique operation named: updateUsingPUT_7
2019-05-14 08:41:05 -Generating unique operation named: updateUsingPATCH_7
2019-05-14 08:41:05 -Generating unique operation named: updateUsingDELETE_7
2019-05-14 08:41:05 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-14 08:41:05 -Generating unique operation named: updateUsingTRACE_7
2019-05-14 08:41:06 -Generating unique operation named: addUsingGET_9
2019-05-14 08:41:06 -Generating unique operation named: editUsingGET_10
2019-05-14 08:41:06 -Generating unique operation named: infoUsingGET_1
2019-05-14 08:41:06 -Generating unique operation named: infoUsingHEAD_1
2019-05-14 08:41:06 -Generating unique operation named: infoUsingPOST_1
2019-05-14 08:41:06 -Generating unique operation named: infoUsingPUT_1
2019-05-14 08:41:06 -Generating unique operation named: infoUsingPATCH_1
2019-05-14 08:41:06 -Generating unique operation named: infoUsingDELETE_1
2019-05-14 08:41:06 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-14 08:41:06 -Generating unique operation named: infoUsingTRACE_1
2019-05-14 08:41:06 -Generating unique operation named: listUsingGET_10
2019-05-14 08:41:06 -Generating unique operation named: removeUsingPOST_18
2019-05-14 08:41:06 -Generating unique operation named: removeUsingPOST_19
2019-05-14 08:41:06 -Generating unique operation named: saveUsingPOST_9
2019-05-14 08:41:06 -Generating unique operation named: updateUsingPOST_10
2019-05-14 08:41:06 -Generating unique operation named: listUsingGET_11
2019-05-14 08:41:06 -Generating unique operation named: removeUsingPOST_20
2019-05-14 08:41:06 -Generating unique operation named: welcomeUsingGET_1
2019-05-14 08:41:06 -Generating unique operation named: addUsingGET_10
2019-05-14 08:41:06 -Generating unique operation named: editUsingGET_11
2019-05-14 08:41:06 -Generating unique operation named: listUsingGET_12
2019-05-14 08:41:06 -Generating unique operation named: removeUsingPOST_21
2019-05-14 08:41:06 -Generating unique operation named: saveUsingPOST_10
2019-05-14 08:41:06 -Generating unique operation named: treeUsingGET_1
2019-05-14 08:41:06 -Generating unique operation named: treeUsingGET_2
2019-05-14 08:41:06 -Generating unique operation named: updateUsingPOST_11
2019-05-14 08:41:06 -Generating unique operation named: addUsingGET_11
2019-05-14 08:41:06 -Generating unique operation named: editUsingGET_12
2019-05-14 08:41:06 -Generating unique operation named: listUsingGET_13
2019-05-14 08:41:06 -Generating unique operation named: removeUsingPOST_22
2019-05-14 08:41:06 -Generating unique operation named: removeUsingPOST_23
2019-05-14 08:41:06 -Generating unique operation named: saveUsingPOST_11
2019-05-14 08:41:06 -Generating unique operation named: updateUsingGET_8
2019-05-14 08:41:06 -Generating unique operation named: updateUsingHEAD_8
2019-05-14 08:41:06 -Generating unique operation named: updateUsingPOST_12
2019-05-14 08:41:06 -Generating unique operation named: updateUsingPUT_8
2019-05-14 08:41:06 -Generating unique operation named: updateUsingPATCH_8
2019-05-14 08:41:06 -Generating unique operation named: updateUsingDELETE_8
2019-05-14 08:41:06 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-14 08:41:06 -Generating unique operation named: updateUsingTRACE_8
2019-05-14 08:41:06 -Generating unique operation named: addUsingGET_12
2019-05-14 08:41:06 -Generating unique operation named: editUsingGET_13
2019-05-14 08:41:06 -Generating unique operation named: listUsingGET_14
2019-05-14 08:41:06 -Generating unique operation named: removeUsingPOST_24
2019-05-14 08:41:06 -Generating unique operation named: removeUsingPOST_25
2019-05-14 08:41:06 -Generating unique operation named: saveUsingPOST_12
2019-05-14 08:41:06 -Generating unique operation named: updateUsingGET_9
2019-05-14 08:41:06 -Generating unique operation named: updateUsingHEAD_9
2019-05-14 08:41:06 -Generating unique operation named: updateUsingPOST_13
2019-05-14 08:41:06 -Generating unique operation named: updateUsingPUT_9
2019-05-14 08:41:06 -Generating unique operation named: updateUsingPATCH_9
2019-05-14 08:41:06 -Generating unique operation named: updateUsingDELETE_9
2019-05-14 08:41:06 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-14 08:41:06 -Generating unique operation named: updateUsingTRACE_9
2019-05-14 08:41:06 -Generating unique operation named: addUsingGET_13
2019-05-14 08:41:06 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-14 08:41:06 -Generating unique operation named: editUsingGET_14
2019-05-14 08:41:06 -Generating unique operation named: listUsingGET_15
2019-05-14 08:41:06 -Generating unique operation named: saveUsingPOST_13
2019-05-14 08:41:06 -Generating unique operation named: saveUsingPOST_14
2019-05-14 08:41:06 -Generating unique operation named: updateUsingPOST_14
2019-05-14 08:41:06 -Generating unique operation named: listUsingGET_16
2019-05-14 08:41:06 -Generating unique operation named: listUsingHEAD_1
2019-05-14 08:41:06 -Generating unique operation named: listUsingPOST_1
2019-05-14 08:41:06 -Generating unique operation named: listUsingPUT_1
2019-05-14 08:41:06 -Generating unique operation named: listUsingPATCH_1
2019-05-14 08:41:06 -Generating unique operation named: listUsingDELETE_1
2019-05-14 08:41:06 -Generating unique operation named: listUsingOPTIONS_1
2019-05-14 08:41:06 -Generating unique operation named: listUsingTRACE_1
2019-05-14 08:41:07 -Generating unique operation named: countDDUsingGET_1
2019-05-14 08:41:07 -Generating unique operation named: exportDDUsingGET_1
2019-05-14 08:41:07 -Generating unique operation named: getCountYYUsingPOST_1
2019-05-14 08:41:07 -Generating unique operation named: getCountMMUsingPOST_1
2019-05-14 08:41:07 -Generating unique operation named: addUsingGET_14
2019-05-14 08:41:07 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-14 08:41:07 -Generating unique operation named: editUsingGET_15
2019-05-14 08:41:07 -Generating unique operation named: listUsingGET_17
2019-05-14 08:41:07 -Generating unique operation named: removeUsingPOST_26
2019-05-14 08:41:07 -Generating unique operation named: saveUsingPOST_15
2019-05-14 08:41:07 -Generating unique operation named: treeUsingGET_3
2019-05-14 08:41:07 -Generating unique operation named: treeViewUsingGET_1
2019-05-14 08:41:07 -Generating unique operation named: updateUsingPOST_15
2019-05-14 08:41:07 -Generating unique operation named: addUsingGET_15
2019-05-14 08:41:07 -Generating unique operation named: editUsingGET_16
2019-05-14 08:41:07 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-14 08:41:07 -Generating unique operation named: listUsingGET_18
2019-05-14 08:41:07 -Generating unique operation named: removeUsingPOST_27
2019-05-14 08:41:07 -Generating unique operation named: removeUsingPOST_28
2019-05-14 08:41:07 -Generating unique operation named: saveUsingPOST_16
2019-05-14 08:41:07 -Generating unique operation named: updateUsingGET_10
2019-05-14 08:41:07 -Generating unique operation named: updateUsingHEAD_10
2019-05-14 08:41:07 -Generating unique operation named: updateUsingPOST_16
2019-05-14 08:41:07 -Generating unique operation named: updateUsingPUT_10
2019-05-14 08:41:07 -Generating unique operation named: updateUsingPATCH_10
2019-05-14 08:41:07 -Generating unique operation named: updateUsingDELETE_10
2019-05-14 08:41:07 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-14 08:41:07 -Generating unique operation named: updateUsingTRACE_10
2019-05-14 08:41:07 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-14 08:41:07 -Generating unique operation named: addUsingGET_16
2019-05-14 08:41:07 -Generating unique operation named: editUsingGET_17
2019-05-14 08:41:07 -Generating unique operation named: listUsingGET_19
2019-05-14 08:41:07 -Generating unique operation named: removeUsingPOST_29
2019-05-14 08:41:07 -Generating unique operation named: removeUsingPOST_30
2019-05-14 08:41:07 -Generating unique operation named: saveUsingPOST_17
2019-05-14 08:41:07 -Generating unique operation named: updateUsingGET_11
2019-05-14 08:41:07 -Generating unique operation named: updateUsingHEAD_11
2019-05-14 08:41:07 -Generating unique operation named: updateUsingPOST_17
2019-05-14 08:41:07 -Generating unique operation named: updateUsingPUT_11
2019-05-14 08:41:07 -Generating unique operation named: updateUsingPATCH_11
2019-05-14 08:41:07 -Generating unique operation named: updateUsingDELETE_11
2019-05-14 08:41:07 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-14 08:41:07 -Generating unique operation named: updateUsingTRACE_11
2019-05-14 08:41:07 -Generating unique operation named: addUsingGET_17
2019-05-14 08:41:07 -Generating unique operation named: editUsingGET_18
2019-05-14 08:41:07 -Generating unique operation named: listUsingGET_20
2019-05-14 08:41:07 -Generating unique operation named: removeUsingPOST_31
2019-05-14 08:41:07 -Generating unique operation named: removeUsingPOST_32
2019-05-14 08:41:07 -Generating unique operation named: saveUsingPOST_18
2019-05-14 08:41:07 -Generating unique operation named: updateUsingGET_12
2019-05-14 08:41:07 -Generating unique operation named: updateUsingHEAD_12
2019-05-14 08:41:07 -Generating unique operation named: updateUsingPOST_18
2019-05-14 08:41:07 -Generating unique operation named: updateUsingPUT_12
2019-05-14 08:41:07 -Generating unique operation named: updateUsingPATCH_12
2019-05-14 08:41:07 -Generating unique operation named: updateUsingDELETE_12
2019-05-14 08:41:07 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-14 08:41:07 -Generating unique operation named: updateUsingTRACE_12
2019-05-14 08:41:07 -Starting Quartz Scheduler now
2019-05-14 08:41:07 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-14 08:41:07 -Starting...
2019-05-14 08:41:07 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-14 08:41:07 -Started.
2019-05-14 08:41:07 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-14 08:41:08 -Using a shared selector for servlet write/read
2019-05-14 08:41:08 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-14 08:41:08 -Started BootdoApplication in 47.418 seconds (JVM running for 48.259)
2019-05-14 08:41:08 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-14 08:41:08 -==> Parameters: 
2019-05-14 08:41:08 -<==      Total: 1
2019-05-14 08:41:58 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-14 08:43:12 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-14 08:43:12 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-14 08:43:12 -FrameworkServlet 'dispatcherServlet': initialization completed in 88 ms
2019-05-14 08:43:12 -Enabling session validation scheduler...
2019-05-14 08:43:13 -请求地址 : http://localhost:8081/login;JSESSIONID=6869ad0c-c7bc-4ae8-9957-b3e1ba85d5be
2019-05-14 08:43:13 -HTTP METHOD : GET
2019-05-14 08:43:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-14 08:43:13 -参数 : [{}]
2019-05-14 08:43:13 -耗时 : 4
2019-05-14 08:43:13 -返回值 : login
2019-05-14 08:43:18 -请求地址 : http://localhost:8081/getVerify
2019-05-14 08:43:18 -HTTP METHOD : GET
2019-05-14 08:43:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-14 08:43:18 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@704f22a6, org.apache.shiro.web.servlet.ShiroHttpServletResponse@111dff73]
2019-05-14 08:43:24 -7727
2019-05-14 08:43:25 -耗时 : 6411
2019-05-14 08:43:25 -返回值 : null
2019-05-14 08:43:37 -请求地址 : http://localhost:8081/login
2019-05-14 08:43:37 -请求地址 : http://localhost:8081/login
2019-05-14 08:43:37 -HTTP METHOD : POST
2019-05-14 08:43:37 -HTTP METHOD : POST
2019-05-14 08:43:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-14 08:43:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-14 08:43:37 -参数 : [admin, 111111, 7727, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2095cd56]
2019-05-14 08:43:37 -参数 : [admin, 111111, 7727, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2eaa129f]
2019-05-14 08:43:37 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-14 08:43:37 -==> Parameters: admin(String)
2019-05-14 08:43:37 -<==      Total: 1
2019-05-14 08:43:37 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-14 08:43:37 -==> Parameters: admin(String)
2019-05-14 08:43:37 -<==      Total: 1
2019-05-14 08:43:37 -耗时 : 170
2019-05-14 08:43:37 -耗时 : 170
2019-05-14 08:43:37 -返回值 : {msg=操作成功, code=0}
2019-05-14 08:43:37 -返回值 : {msg=操作成功, code=0}
2019-05-14 08:43:37 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-14 08:43:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 08:43:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 08:43:37 -==> Parameters: 1(Long), admin(String), 登录(String), 170(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-14 08:43:37.913(Timestamp)
2019-05-14 08:43:37 -==> Parameters: 1(Long), admin(String), 登录(String), 170(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-14 08:43:37.913(Timestamp)
2019-05-14 08:43:38 -<==    Updates: 1
2019-05-14 08:43:38 -<==    Updates: 1
2019-05-14 08:43:38 -请求地址 : http://localhost:8081/index
2019-05-14 08:43:38 -HTTP METHOD : GET
2019-05-14 08:43:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-14 08:43:38 -参数 : [{}]
2019-05-14 08:43:38 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-14 08:43:38 -==> Parameters: 1(Long)
2019-05-14 08:43:38 -<==      Total: 49
2019-05-14 08:43:38 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-14 08:43:38 -==> Parameters: 138(Long)
2019-05-14 08:43:38 -<==      Total: 1
2019-05-14 08:43:38 -耗时 : 409
2019-05-14 08:43:38 -返回值 : index_v1
2019-05-14 08:43:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 08:43:38 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 409(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-14 08:43:38.939(Timestamp)
2019-05-14 08:43:39 -<==    Updates: 1
2019-05-14 08:43:39 -请求地址 : http://localhost:8081/main
2019-05-14 08:43:39 -HTTP METHOD : GET
2019-05-14 08:43:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 08:43:39 -参数 : []
2019-05-14 08:43:39 -耗时 : 1
2019-05-14 08:43:39 -返回值 : main
2019-05-14 08:43:42 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-14 08:43:42 -HTTP METHOD : GET
2019-05-14 08:43:42 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-14 08:43:42 -参数 : []
2019-05-14 08:43:42 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-14 08:43:42 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-14 08:43:42 -<==      Total: 0
2019-05-14 08:43:42 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-14 08:43:42 -==> Parameters: 1(Long), 0(String)
2019-05-14 08:43:42 -<==      Total: 1
2019-05-14 08:43:42 -耗时 : 114
2019-05-14 08:43:42 -返回值 : com.bootdo.common.utils.PageUtils@7cf6c3e1
2019-05-14 08:43:42 -请求地址 : http://localhost:8081/main
2019-05-14 08:43:42 -HTTP METHOD : GET
2019-05-14 08:43:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 08:43:42 -参数 : []
2019-05-14 08:43:42 -耗时 : 0
2019-05-14 08:43:42 -返回值 : main
2019-05-14 08:44:57 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-14 08:44:57 -==> Parameters: 1(Long)
2019-05-14 08:44:57 -<==      Total: 93
2019-05-14 08:44:57 -请求地址 : http://localhost:8081/elec/elecPrice
2019-05-14 08:44:57 -HTTP METHOD : GET
2019-05-14 08:44:57 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.ElecPrice
2019-05-14 08:44:57 -参数 : []
2019-05-14 08:44:57 -耗时 : 0
2019-05-14 08:44:57 -返回值 : elec/elecPrice/elecPrice
2019-05-14 08:44:59 -请求地址 : http://localhost:8081/elec/elecPrice/list
2019-05-14 08:44:59 -HTTP METHOD : GET
2019-05-14 08:44:59 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.list
2019-05-14 08:44:59 -参数 : [{limit=10, offset=0}]
2019-05-14 08:44:59 -==>  Preparing: select `id`,`elec_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName,`m_elec`,`s_elec`,`g1_elec`,`g2_elec`,`g3_elec`,`wm_elec`, `ws_elec`,`wg_elec`,`mm_elec`, `ms_elec`,`z_elec`,`create_time`, `create_by`, `update_time`, `update_by`,`remark` from elec_price order by id asc limit ?, ? 
2019-05-14 08:44:59 -==> Parameters: 0(Integer), 10(Integer)
2019-05-14 08:44:59 -<==      Total: 2
2019-05-14 08:44:59 -==>  Preparing: select count(*) from elec_price 
2019-05-14 08:44:59 -==> Parameters: 
2019-05-14 08:44:59 -<==      Total: 1
2019-05-14 08:44:59 -耗时 : 56
2019-05-14 08:44:59 -返回值 : com.bootdo.common.utils.PageUtils@20d2da38
2019-05-14 08:45:05 -请求地址 : http://localhost:8081/elec/elecPrice/edit/2
2019-05-14 08:45:05 -HTTP METHOD : GET
2019-05-14 08:45:05 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.edit
2019-05-14 08:45:05 -参数 : [2, {}]
2019-05-14 08:45:05 -==>  Preparing: select `id`,`elec_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName,`m_elec`,`s_elec`,`g1_elec`,`g2_elec`,`g3_elec`,`wm_elec`, `ws_elec`,`wg_elec`,`mm_elec`, `ms_elec`,`z_elec`,`create_time`, `create_by`, `update_time`, `update_by`,`remark` from elec_price where id = ? 
2019-05-14 08:45:05 -==> Parameters: 2(Long)
2019-05-14 08:45:05 -<==      Total: 1
2019-05-14 08:45:05 -耗时 : 8
2019-05-14 08:45:05 -返回值 : elec/elecPrice/edit
2019-05-14 08:45:11 -请求地址 : http://localhost:8081/elec/elecPrice/update
2019-05-14 08:45:11 -HTTP METHOD : POST
2019-05-14 08:45:11 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.update
2019-05-14 08:45:11 -参数 : [com.bootdo.elec.domain.ElecPriceDO@139bdac6]
2019-05-14 08:45:11 -==>  Preparing: update elec_price SET m_elec = ?, s_elec = ?, g1_elec = ?, create_by = ?, update_time = ? where id = ? 
2019-05-14 08:45:11 -==> Parameters: 0.465(BigDecimal), 0.792(BigDecimal), 0.970(BigDecimal), 1(Long), 2019-05-14 08:45:11.248(Timestamp), 2(Long)
2019-05-14 08:45:11 -<==    Updates: 1
2019-05-14 08:45:11 -耗时 : 234
2019-05-14 08:45:11 -返回值 : {msg=操作成功, code=0}
2019-05-14 08:45:11 -请求地址 : http://localhost:8081/elec/elecPrice/list
2019-05-14 08:45:11 -HTTP METHOD : GET
2019-05-14 08:45:11 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.list
2019-05-14 08:45:11 -参数 : [{limit=10, offset=0}]
2019-05-14 08:45:11 -==>  Preparing: select `id`,`elec_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName,`m_elec`,`s_elec`,`g1_elec`,`g2_elec`,`g3_elec`,`wm_elec`, `ws_elec`,`wg_elec`,`mm_elec`, `ms_elec`,`z_elec`,`create_time`, `create_by`, `update_time`, `update_by`,`remark` from elec_price order by id asc limit ?, ? 
2019-05-14 08:45:11 -==> Parameters: 0(Integer), 10(Integer)
2019-05-14 08:45:11 -<==      Total: 2
2019-05-14 08:45:11 -==>  Preparing: select count(*) from elec_price 
2019-05-14 08:45:11 -==> Parameters: 
2019-05-14 08:45:11 -<==      Total: 1
2019-05-14 08:45:11 -耗时 : 10
2019-05-14 08:45:11 -返回值 : com.bootdo.common.utils.PageUtils@7c0349e5
2019-05-14 08:45:13 -请求地址 : http://localhost:8081/elec/elecPrice/edit/2
2019-05-14 08:45:13 -HTTP METHOD : GET
2019-05-14 08:45:13 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.edit
2019-05-14 08:45:13 -参数 : [2, {}]
2019-05-14 08:45:13 -==>  Preparing: select `id`,`elec_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName,`m_elec`,`s_elec`,`g1_elec`,`g2_elec`,`g3_elec`,`wm_elec`, `ws_elec`,`wg_elec`,`mm_elec`, `ms_elec`,`z_elec`,`create_time`, `create_by`, `update_time`, `update_by`,`remark` from elec_price where id = ? 
2019-05-14 08:45:13 -==> Parameters: 2(Long)
2019-05-14 08:45:13 -<==      Total: 1
2019-05-14 08:45:13 -耗时 : 4
2019-05-14 08:45:13 -返回值 : elec/elecPrice/edit
2019-05-14 08:45:29 -请求地址 : http://localhost:8081/elec/elecPrice/update
2019-05-14 08:45:29 -HTTP METHOD : POST
2019-05-14 08:45:29 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.update
2019-05-14 08:45:29 -参数 : [com.bootdo.elec.domain.ElecPriceDO@1a70cbd4]
2019-05-14 08:45:29 -==>  Preparing: update elec_price SET m_elec = ?, s_elec = ?, g1_elec = ?, create_by = ?, update_time = ? where id = ? 
2019-05-14 08:45:29 -==> Parameters: 0.465(BigDecimal), 0.791(BigDecimal), 0.970(BigDecimal), 1(Long), 2019-05-14 08:45:29.594(Timestamp), 2(Long)
2019-05-14 08:45:29 -<==    Updates: 1
2019-05-14 08:45:29 -耗时 : 190
2019-05-14 08:45:29 -返回值 : {msg=操作成功, code=0}
2019-05-14 08:45:29 -请求地址 : http://localhost:8081/elec/elecPrice/list
2019-05-14 08:45:29 -HTTP METHOD : GET
2019-05-14 08:45:29 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.list
2019-05-14 08:45:29 -参数 : [{limit=10, offset=0}]
2019-05-14 08:45:29 -==>  Preparing: select `id`,`elec_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName,`m_elec`,`s_elec`,`g1_elec`,`g2_elec`,`g3_elec`,`wm_elec`, `ws_elec`,`wg_elec`,`mm_elec`, `ms_elec`,`z_elec`,`create_time`, `create_by`, `update_time`, `update_by`,`remark` from elec_price order by id asc limit ?, ? 
2019-05-14 08:45:29 -==> Parameters: 0(Integer), 10(Integer)
2019-05-14 08:45:29 -<==      Total: 2
2019-05-14 08:45:29 -==>  Preparing: select count(*) from elec_price 
2019-05-14 08:45:29 -==> Parameters: 
2019-05-14 08:45:29 -<==      Total: 1
2019-05-14 08:45:29 -耗时 : 15
2019-05-14 08:45:29 -返回值 : com.bootdo.common.utils.PageUtils@55998223
2019-05-14 08:45:56 -请求地址 : http://localhost:8081/water/waterPrice
2019-05-14 08:45:56 -HTTP METHOD : GET
2019-05-14 08:45:56 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.WaterPrice
2019-05-14 08:45:56 -参数 : []
2019-05-14 08:45:56 -耗时 : 0
2019-05-14 08:45:56 -返回值 : water/waterPrice/waterPrice
2019-05-14 08:45:57 -请求地址 : http://localhost:8081/water/waterPrice/list
2019-05-14 08:45:57 -HTTP METHOD : GET
2019-05-14 08:45:57 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.list
2019-05-14 08:45:57 -参数 : [{limit=10, offset=0}]
2019-05-14 08:45:57 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price order by id asc limit ?, ? 
2019-05-14 08:45:57 -==> Parameters: 0(Integer), 10(Integer)
2019-05-14 08:45:57 -<==      Total: 2
2019-05-14 08:45:57 -==>  Preparing: select count(*) from water_price 
2019-05-14 08:45:57 -==> Parameters: 
2019-05-14 08:45:57 -<==      Total: 1
2019-05-14 08:45:57 -耗时 : 31
2019-05-14 08:45:57 -返回值 : com.bootdo.common.utils.PageUtils@35ed73e0
2019-05-14 08:46:00 -请求地址 : http://localhost:8081/water/waterPrice/edit/1
2019-05-14 08:46:00 -HTTP METHOD : GET
2019-05-14 08:46:00 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.edit
2019-05-14 08:46:00 -参数 : [1, {}]
2019-05-14 08:46:00 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price where id = ? 
2019-05-14 08:46:00 -==> Parameters: 1(Long)
2019-05-14 08:46:00 -<==      Total: 1
2019-05-14 08:46:00 -耗时 : 8
2019-05-14 08:46:00 -返回值 : water/waterPrice/edit
2019-05-14 08:48:15 -请求地址 : http://localhost:8081/charts/tableDD
2019-05-14 08:48:15 -HTTP METHOD : GET
2019-05-14 08:48:15 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-05-14 08:48:15 -参数 : []
2019-05-14 08:48:15 -耗时 : 12
2019-05-14 08:48:15 -返回值 : charts/tableDD
2019-05-14 08:48:17 -请求地址 : http://localhost:8081/charts/countMM
2019-05-14 08:48:17 -HTTP METHOD : GET
2019-05-14 08:48:17 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-05-14 08:48:17 -参数 : []
2019-05-14 08:48:17 -耗时 : 11
2019-05-14 08:48:17 -返回值 : charts/countMM
2019-05-14 08:48:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 08:48:17 -HTTP METHOD : GET
2019-05-14 08:48:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 08:48:17 -参数 : [userType]
2019-05-14 08:48:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 08:48:17 -==> Parameters: userType(String)
2019-05-14 08:48:17 -<==      Total: 4
2019-05-14 08:48:17 -耗时 : 37
2019-05-14 08:48:17 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 08:48:20 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-14 08:48:20 -HTTP METHOD : GET
2019-05-14 08:48:20 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 08:48:20 -参数 : []
2019-05-14 08:48:20 -耗时 : 7
2019-05-14 08:48:20 -返回值 : charts/tableElecMM
2019-05-14 08:48:20 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 08:48:20 -HTTP METHOD : GET
2019-05-14 08:48:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 08:48:20 -参数 : [userType]
2019-05-14 08:48:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 08:48:20 -==> Parameters: userType(String)
2019-05-14 08:48:20 -<==      Total: 4
2019-05-14 08:48:20 -耗时 : 6
2019-05-14 08:48:20 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 08:48:22 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-05-14 08:48:22 -HTTP METHOD : GET
2019-05-14 08:48:22 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-14 08:48:22 -参数 : []
2019-05-14 08:48:22 -耗时 : 6
2019-05-14 08:48:22 -返回值 : charts/tableWaterMM
2019-05-14 08:48:22 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 08:48:22 -HTTP METHOD : GET
2019-05-14 08:48:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 08:48:22 -参数 : [userType]
2019-05-14 08:48:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 08:48:22 -==> Parameters: userType(String)
2019-05-14 08:48:22 -<==      Total: 4
2019-05-14 08:48:22 -耗时 : 5
2019-05-14 08:48:22 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 08:48:41 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-14 08:48:41 -HTTP METHOD : GET
2019-05-14 08:48:41 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-14 08:48:41 -参数 : []
2019-05-14 08:48:41 -耗时 : 1
2019-05-14 08:48:41 -返回值 : system/dept/deptTree
2019-05-14 08:48:41 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-14 08:48:41 -HTTP METHOD : GET
2019-05-14 08:48:41 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-14 08:48:41 -参数 : []
2019-05-14 08:48:41 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-14 08:48:41 -==> Parameters: 
2019-05-14 08:48:41 -<==      Total: 3
2019-05-14 08:48:41 -耗时 : 26
2019-05-14 08:48:41 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-14 08:48:45 -请求地址 : http://localhost:8081/charts/tableWaterMM/tableWaterMM
2019-05-14 08:48:45 -HTTP METHOD : POST
2019-05-14 08:48:45 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-14 08:48:45 -参数 : [com.bootdo.moneyLog.vo.WaterLogVo@1a568c81, com.bootdo.water.vo.WaterVo@736107c1]
2019-05-14 08:48:45 -==>  Preparing: SELECT DISTINCT water_price FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 08:48:45 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:48:45 -<==      Total: 2
2019-05-14 08:48:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 08:48:45 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableWaterMM/tableWaterMM(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2(String), null, 2019-05-14 08:48:45.43(Timestamp)
2019-05-14 08:48:45 -nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy107.MWaterPrice(Unknown Source)
	at com.bootdo.water.service.impl.WaterServiceImpl.MWaterPrice(WaterServiceImpl.java:102)
	at com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(tableWaterMMController.java:51)
	at com.bootdo.charts.controller.tableWaterMMController$$FastClassBySpringCGLIB$$8d5a3262.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor130.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableWaterMMController$$EnhancerBySpringCGLIB$$4314810c.tableWaterMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:81)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
2019-05-14 08:48:45 -<==    Updates: 1
2019-05-14 08:54:17 -请求地址 : http://localhost:8081/index
2019-05-14 08:54:17 -HTTP METHOD : GET
2019-05-14 08:54:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-14 08:54:17 -参数 : [{}]
2019-05-14 08:54:17 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-14 08:54:17 -==> Parameters: 1(Long)
2019-05-14 08:54:17 -<==      Total: 49
2019-05-14 08:54:17 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-14 08:54:17 -==> Parameters: 138(Long)
2019-05-14 08:54:17 -<==      Total: 1
2019-05-14 08:54:17 -耗时 : 20
2019-05-14 08:54:17 -返回值 : index_v1
2019-05-14 08:54:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 08:54:17 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 20(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-14 08:54:17.499(Timestamp)
2019-05-14 08:54:17 -<==    Updates: 1
2019-05-14 08:54:17 -请求地址 : http://localhost:8081/main
2019-05-14 08:54:17 -HTTP METHOD : GET
2019-05-14 08:54:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 08:54:17 -参数 : []
2019-05-14 08:54:17 -耗时 : 0
2019-05-14 08:54:17 -返回值 : main
2019-05-14 08:54:17 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-14 08:54:17 -HTTP METHOD : GET
2019-05-14 08:54:17 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-14 08:54:17 -参数 : []
2019-05-14 08:54:17 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-14 08:54:17 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-14 08:54:17 -<==      Total: 0
2019-05-14 08:54:17 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-14 08:54:17 -==> Parameters: 1(Long), 0(String)
2019-05-14 08:54:17 -<==      Total: 1
2019-05-14 08:54:17 -耗时 : 6
2019-05-14 08:54:17 -返回值 : com.bootdo.common.utils.PageUtils@772ab2c
2019-05-14 08:54:17 -请求地址 : http://localhost:8081/main
2019-05-14 08:54:17 -HTTP METHOD : GET
2019-05-14 08:54:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 08:54:17 -参数 : []
2019-05-14 08:54:17 -耗时 : 0
2019-05-14 08:54:17 -返回值 : main
2019-05-14 08:54:25 -请求地址 : http://localhost:8081/charts/countMM
2019-05-14 08:54:25 -HTTP METHOD : GET
2019-05-14 08:54:25 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-05-14 08:54:25 -参数 : []
2019-05-14 08:54:25 -耗时 : 1
2019-05-14 08:54:25 -返回值 : charts/countMM
2019-05-14 08:54:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 08:54:25 -HTTP METHOD : GET
2019-05-14 08:54:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 08:54:25 -参数 : [userType]
2019-05-14 08:54:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 08:54:25 -==> Parameters: userType(String)
2019-05-14 08:54:25 -<==      Total: 4
2019-05-14 08:54:25 -耗时 : 8
2019-05-14 08:54:25 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 08:54:27 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-14 08:54:27 -HTTP METHOD : GET
2019-05-14 08:54:27 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 08:54:27 -参数 : []
2019-05-14 08:54:27 -耗时 : 1
2019-05-14 08:54:27 -返回值 : charts/tableElecMM
2019-05-14 08:54:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 08:54:27 -HTTP METHOD : GET
2019-05-14 08:54:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 08:54:27 -参数 : [userType]
2019-05-14 08:54:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 08:54:27 -==> Parameters: userType(String)
2019-05-14 08:54:27 -<==      Total: 4
2019-05-14 08:54:27 -耗时 : 5
2019-05-14 08:54:27 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 08:54:28 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-05-14 08:54:28 -HTTP METHOD : GET
2019-05-14 08:54:28 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-14 08:54:28 -参数 : []
2019-05-14 08:54:28 -耗时 : 0
2019-05-14 08:54:28 -返回值 : charts/tableWaterMM
2019-05-14 08:54:28 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 08:54:28 -HTTP METHOD : GET
2019-05-14 08:54:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 08:54:28 -参数 : [userType]
2019-05-14 08:54:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 08:54:28 -==> Parameters: userType(String)
2019-05-14 08:54:28 -<==      Total: 4
2019-05-14 08:54:28 -耗时 : 5
2019-05-14 08:54:28 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 08:54:38 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-14 08:54:38 -HTTP METHOD : GET
2019-05-14 08:54:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-14 08:54:38 -参数 : []
2019-05-14 08:54:38 -耗时 : 1
2019-05-14 08:54:38 -返回值 : system/dept/deptTree
2019-05-14 08:54:38 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-14 08:54:38 -HTTP METHOD : GET
2019-05-14 08:54:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-14 08:54:38 -参数 : []
2019-05-14 08:54:38 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-14 08:54:38 -==> Parameters: 
2019-05-14 08:54:38 -<==      Total: 3
2019-05-14 08:54:38 -耗时 : 4
2019-05-14 08:54:38 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-14 08:54:40 -请求地址 : http://localhost:8081/charts/tableWaterMM/tableWaterMM
2019-05-14 08:54:40 -HTTP METHOD : POST
2019-05-14 08:54:40 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-14 08:54:40 -参数 : [com.bootdo.moneyLog.vo.WaterLogVo@291e69f5, com.bootdo.water.vo.WaterVo@3c48e4bb]
2019-05-14 08:54:40 -==>  Preparing: SELECT DISTINCT water_price FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 08:54:40 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:54:40 -<==      Total: 1
2019-05-14 08:54:40 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 08:54:40 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:54:40 -<==      Total: 1
2019-05-14 08:54:40 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 08:54:40 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:54:40 -<==      Total: 1
2019-05-14 08:54:40 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 08:54:40 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:54:40 -<==      Total: 1
2019-05-14 08:54:40 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 08:54:40 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:54:40 -<==      Total: 1
2019-05-14 08:54:40 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 08:54:40 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:54:40 -<==      Total: 1
2019-05-14 08:54:40 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "1" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 08:54:40 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:54:40 -<==      Total: 1
2019-05-14 08:54:40 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 08:54:40 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:54:40 -<==      Total: 1
2019-05-14 08:54:40 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "1" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 08:54:40 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:54:40 -<==      Total: 1
2019-05-14 08:54:40 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE `create_time` = ? and user_org = ? 
2019-05-14 08:54:40 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:54:40 -<==      Total: 1
2019-05-14 08:54:40 -==>  Preparing: SELECT ifnull(SUM(WATER_COST),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 08:54:40 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:54:40 -<==      Total: 1
2019-05-14 08:54:40 -==>  Preparing: SELECT DISTINCT water_price FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 08:54:40 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:54:40 -<==      Total: 1
2019-05-14 08:54:40 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 08:54:40 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:54:40 -<==      Total: 1
2019-05-14 08:54:40 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 08:54:40 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:54:40 -<==      Total: 1
2019-05-14 08:54:40 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE WATER_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 08:54:40 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:54:40 -<==      Total: 1
2019-05-14 08:54:40 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 08:54:40 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:54:40 -<==      Total: 1
2019-05-14 08:54:40 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE WATER_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 08:54:40 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:54:40 -<==      Total: 1
2019-05-14 08:54:40 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 08:54:40 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:54:40 -<==      Total: 1
2019-05-14 08:54:40 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE WATER_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 08:54:40 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:54:40 -<==      Total: 1
2019-05-14 08:54:40 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 08:54:40 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:54:40 -<==      Total: 1
2019-05-14 08:54:40 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE `create_time` = ? and user_org = ? 
2019-05-14 08:54:40 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:54:40 -<==      Total: 1
2019-05-14 08:54:40 -==>  Preparing: SELECT ifnull(SUM(WATER_COST),0) FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 08:54:40 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:54:40 -<==      Total: 1
2019-05-14 08:54:40 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-14 08:54:40 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:54:40 -<==      Total: 1
2019-05-14 08:54:40 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-14 08:54:40 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:54:40 -<==      Total: 1
2019-05-14 08:54:40 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-14 08:54:40 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:54:40 -<==      Total: 1
2019-05-14 08:54:40 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-14 08:54:40 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:54:40 -<==      Total: 1
2019-05-14 08:54:40 -耗时 : 218
2019-05-14 08:54:40 -返回值 : {LMWaterSumPre=0, CountPrehu=6, SWaterCountOwe=1, LSWaterSumOwe=0, CountOweyu=1, MWaterCountOwe=1, CountPreyu=3, SumS1WaterLog=20, SWaterSumOwe=0, LSWaterCountPre=0, CountLogyu=60, LCountPrehu=0, CountOwehu=2, MWaterCostSum=17, SWaterPrice=1, CountMWaterLog=1, MWaterPrice=1, MWaterCountPre=3, CountLoghu=2, LCountPreyu=0, SWaterSumPre=1, SWaterCountPre=3, CountAllyu=4, LMWaterCountPre=0, MWaterSumOwe=1, SumMWaterLog=40, LCountAllyu=0, LCountOwehu=0, CountAllhu=8, CountCostyu=18, Stotalhu=4, CountPrice=2, LCountAllhu=0, LMWaterCountOwe=0, LCountOweyu=0, MWaterCostCount=4, CountCosthu=8, SWaterCostSum=1, MWaterSumPre=2, Mtotalhu=4, Stotalyu=1, LStotalyu=0, LMtotalyu=0, LMtotalhu=0, CountS1WaterLog=1, LMWaterSumOwe=0, Mtotalyu=3, LStotalhu=0, LSWaterSumPre=0, LSWaterCountOwe=0, SWaterCostCount=4}
2019-05-14 08:55:00 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-14 08:55:30 -请求地址 : http://localhost:8081/index
2019-05-14 08:55:30 -HTTP METHOD : GET
2019-05-14 08:55:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-14 08:55:30 -参数 : [{}]
2019-05-14 08:55:30 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-14 08:55:30 -==> Parameters: 1(Long)
2019-05-14 08:55:30 -<==      Total: 49
2019-05-14 08:55:30 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-14 08:55:30 -==> Parameters: 138(Long)
2019-05-14 08:55:30 -<==      Total: 1
2019-05-14 08:55:30 -耗时 : 22
2019-05-14 08:55:30 -返回值 : index_v1
2019-05-14 08:55:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 08:55:30 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 22(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-14 08:55:30.7(Timestamp)
2019-05-14 08:55:30 -请求地址 : http://localhost:8081/main
2019-05-14 08:55:30 -HTTP METHOD : GET
2019-05-14 08:55:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 08:55:30 -参数 : []
2019-05-14 08:55:30 -耗时 : 0
2019-05-14 08:55:30 -返回值 : main
2019-05-14 08:55:30 -<==    Updates: 1
2019-05-14 08:55:30 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-14 08:55:30 -HTTP METHOD : GET
2019-05-14 08:55:30 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-14 08:55:30 -参数 : []
2019-05-14 08:55:30 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-14 08:55:30 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-14 08:55:30 -<==      Total: 0
2019-05-14 08:55:30 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-14 08:55:30 -==> Parameters: 1(Long), 0(String)
2019-05-14 08:55:30 -<==      Total: 1
2019-05-14 08:55:30 -耗时 : 5
2019-05-14 08:55:30 -返回值 : com.bootdo.common.utils.PageUtils@474ddb61
2019-05-14 08:55:30 -请求地址 : http://localhost:8081/main
2019-05-14 08:55:30 -HTTP METHOD : GET
2019-05-14 08:55:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 08:55:30 -参数 : []
2019-05-14 08:55:30 -耗时 : 2
2019-05-14 08:55:30 -返回值 : main
2019-05-14 08:55:34 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-14 08:55:34 -==> Parameters: 1(Long)
2019-05-14 08:55:34 -<==      Total: 93
2019-05-14 08:55:34 -请求地址 : http://localhost:8081/water/waterPrice
2019-05-14 08:55:34 -HTTP METHOD : GET
2019-05-14 08:55:34 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.WaterPrice
2019-05-14 08:55:34 -参数 : []
2019-05-14 08:55:34 -耗时 : 0
2019-05-14 08:55:34 -返回值 : water/waterPrice/waterPrice
2019-05-14 08:55:35 -请求地址 : http://localhost:8081/water/waterPrice/list
2019-05-14 08:55:35 -HTTP METHOD : GET
2019-05-14 08:55:35 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.list
2019-05-14 08:55:35 -参数 : [{limit=10, offset=0}]
2019-05-14 08:55:35 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price order by id asc limit ?, ? 
2019-05-14 08:55:35 -==> Parameters: 0(Integer), 10(Integer)
2019-05-14 08:55:35 -<==      Total: 2
2019-05-14 08:55:35 -==>  Preparing: select count(*) from water_price 
2019-05-14 08:55:35 -==> Parameters: 
2019-05-14 08:55:35 -<==      Total: 1
2019-05-14 08:55:35 -耗时 : 5
2019-05-14 08:55:35 -返回值 : com.bootdo.common.utils.PageUtils@b37148
2019-05-14 08:55:39 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-14 08:55:39 -HTTP METHOD : GET
2019-05-14 08:55:39 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 08:55:39 -参数 : []
2019-05-14 08:55:39 -耗时 : 1
2019-05-14 08:55:39 -返回值 : charts/tableElecMM
2019-05-14 08:55:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 08:55:40 -HTTP METHOD : GET
2019-05-14 08:55:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 08:55:40 -参数 : [userType]
2019-05-14 08:55:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 08:55:40 -==> Parameters: userType(String)
2019-05-14 08:55:40 -<==      Total: 4
2019-05-14 08:55:40 -耗时 : 4
2019-05-14 08:55:40 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 08:55:41 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-05-14 08:55:41 -HTTP METHOD : GET
2019-05-14 08:55:41 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-14 08:55:41 -参数 : []
2019-05-14 08:55:41 -耗时 : 1
2019-05-14 08:55:41 -返回值 : charts/tableWaterMM
2019-05-14 08:55:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 08:55:41 -HTTP METHOD : GET
2019-05-14 08:55:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 08:55:41 -参数 : [userType]
2019-05-14 08:55:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 08:55:41 -==> Parameters: userType(String)
2019-05-14 08:55:41 -<==      Total: 4
2019-05-14 08:55:41 -耗时 : 6
2019-05-14 08:55:41 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 08:55:44 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-14 08:55:44 -HTTP METHOD : GET
2019-05-14 08:55:44 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-14 08:55:44 -参数 : []
2019-05-14 08:55:44 -耗时 : 1
2019-05-14 08:55:44 -返回值 : system/dept/deptTree
2019-05-14 08:55:44 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-14 08:55:44 -HTTP METHOD : GET
2019-05-14 08:55:44 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-14 08:55:44 -参数 : []
2019-05-14 08:55:44 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-14 08:55:44 -==> Parameters: 
2019-05-14 08:55:44 -<==      Total: 3
2019-05-14 08:55:44 -耗时 : 2
2019-05-14 08:55:44 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-14 08:55:47 -请求地址 : http://localhost:8081/charts/tableWaterMM/tableWaterMM
2019-05-14 08:55:47 -HTTP METHOD : POST
2019-05-14 08:55:47 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-14 08:55:47 -参数 : [com.bootdo.moneyLog.vo.WaterLogVo@276a2987, com.bootdo.water.vo.WaterVo@50c4986d]
2019-05-14 08:55:47 -==>  Preparing: SELECT DISTINCT water_price FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 08:55:47 -==> Parameters: 2019-05(String), 2(String)
2019-05-14 08:55:47 -<==      Total: 0
2019-05-14 08:55:47 -null
java.lang.NullPointerException: null
	at com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(tableWaterMMController.java:51)
	at com.bootdo.charts.controller.tableWaterMMController$$FastClassBySpringCGLIB$$8d5a3262.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor130.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableWaterMMController$$EnhancerBySpringCGLIB$$4314810c.tableWaterMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-14 08:55:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 08:55:47 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableWaterMM/tableWaterMM(String), java.lang.NullPointerException(String), null, 2019-05-14 08:55:47.023(Timestamp)
2019-05-14 08:55:47 -<==    Updates: 1
2019-05-14 08:56:40 -请求地址 : http://localhost:8081/index
2019-05-14 08:56:40 -HTTP METHOD : GET
2019-05-14 08:56:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-14 08:56:40 -参数 : [{}]
2019-05-14 08:56:40 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-14 08:56:40 -==> Parameters: 1(Long)
2019-05-14 08:56:40 -<==      Total: 49
2019-05-14 08:56:40 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-14 08:56:40 -==> Parameters: 138(Long)
2019-05-14 08:56:40 -<==      Total: 1
2019-05-14 08:56:40 -耗时 : 16
2019-05-14 08:56:40 -返回值 : index_v1
2019-05-14 08:56:40 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 08:56:40 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-14 08:56:40.297(Timestamp)
2019-05-14 08:56:40 -请求地址 : http://localhost:8081/main
2019-05-14 08:56:40 -HTTP METHOD : GET
2019-05-14 08:56:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 08:56:40 -参数 : []
2019-05-14 08:56:40 -耗时 : 0
2019-05-14 08:56:40 -返回值 : main
2019-05-14 08:56:40 -<==    Updates: 1
2019-05-14 08:56:40 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-14 08:56:40 -HTTP METHOD : GET
2019-05-14 08:56:40 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-14 08:56:40 -参数 : []
2019-05-14 08:56:40 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-14 08:56:40 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-14 08:56:40 -<==      Total: 0
2019-05-14 08:56:40 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-14 08:56:40 -==> Parameters: 1(Long), 0(String)
2019-05-14 08:56:40 -<==      Total: 1
2019-05-14 08:56:40 -耗时 : 7
2019-05-14 08:56:40 -返回值 : com.bootdo.common.utils.PageUtils@38968d3b
2019-05-14 08:56:40 -请求地址 : http://localhost:8081/main
2019-05-14 08:56:40 -HTTP METHOD : GET
2019-05-14 08:56:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 08:56:40 -参数 : []
2019-05-14 08:56:40 -耗时 : 0
2019-05-14 08:56:40 -返回值 : main
2019-05-14 08:56:43 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-14 08:56:43 -HTTP METHOD : GET
2019-05-14 08:56:43 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 08:56:43 -参数 : []
2019-05-14 08:56:43 -耗时 : 1
2019-05-14 08:56:43 -返回值 : charts/tableElecMM
2019-05-14 08:56:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 08:56:44 -HTTP METHOD : GET
2019-05-14 08:56:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 08:56:44 -参数 : [userType]
2019-05-14 08:56:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 08:56:44 -==> Parameters: userType(String)
2019-05-14 08:56:44 -<==      Total: 4
2019-05-14 08:56:44 -耗时 : 4
2019-05-14 08:56:44 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 08:56:44 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-05-14 08:56:44 -HTTP METHOD : GET
2019-05-14 08:56:44 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-14 08:56:44 -参数 : []
2019-05-14 08:56:44 -耗时 : 0
2019-05-14 08:56:44 -返回值 : charts/tableWaterMM
2019-05-14 08:56:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 08:56:44 -HTTP METHOD : GET
2019-05-14 08:56:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 08:56:44 -参数 : [userType]
2019-05-14 08:56:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 08:56:44 -==> Parameters: userType(String)
2019-05-14 08:56:44 -<==      Total: 4
2019-05-14 08:56:44 -耗时 : 4
2019-05-14 08:56:44 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 08:56:50 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-14 08:56:50 -HTTP METHOD : GET
2019-05-14 08:56:50 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-14 08:56:50 -参数 : []
2019-05-14 08:56:50 -耗时 : 0
2019-05-14 08:56:50 -返回值 : system/dept/deptTree
2019-05-14 08:56:50 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-14 08:56:50 -HTTP METHOD : GET
2019-05-14 08:56:50 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-14 08:56:50 -参数 : []
2019-05-14 08:56:50 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-14 08:56:50 -==> Parameters: 
2019-05-14 08:56:50 -<==      Total: 3
2019-05-14 08:56:50 -耗时 : 3
2019-05-14 08:56:50 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-14 08:56:51 -请求地址 : http://localhost:8081/charts/tableWaterMM/tableWaterMM
2019-05-14 08:56:51 -HTTP METHOD : POST
2019-05-14 08:56:51 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-14 08:56:51 -参数 : [com.bootdo.moneyLog.vo.WaterLogVo@24c4992a, com.bootdo.water.vo.WaterVo@1c22ef51]
2019-05-14 08:56:51 -==>  Preparing: SELECT DISTINCT water_price FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 08:56:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:56:51 -<==      Total: 1
2019-05-14 08:56:51 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 08:56:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:56:51 -<==      Total: 1
2019-05-14 08:56:51 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 08:56:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:56:51 -<==      Total: 1
2019-05-14 08:56:51 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 08:56:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:56:51 -<==      Total: 1
2019-05-14 08:56:51 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 08:56:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:56:51 -<==      Total: 1
2019-05-14 08:56:51 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 08:56:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:56:51 -<==      Total: 1
2019-05-14 08:56:51 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "1" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 08:56:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:56:51 -<==      Total: 1
2019-05-14 08:56:51 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 08:56:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:56:51 -<==      Total: 1
2019-05-14 08:56:51 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "1" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 08:56:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:56:51 -<==      Total: 1
2019-05-14 08:56:51 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE `create_time` = ? and user_org = ? 
2019-05-14 08:56:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:56:51 -<==      Total: 1
2019-05-14 08:56:51 -==>  Preparing: SELECT ifnull(SUM(WATER_COST),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 08:56:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:56:51 -<==      Total: 1
2019-05-14 08:56:51 -==>  Preparing: SELECT DISTINCT water_price FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 08:56:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:56:51 -<==      Total: 1
2019-05-14 08:56:51 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 08:56:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:56:51 -<==      Total: 1
2019-05-14 08:56:51 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 08:56:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:56:51 -<==      Total: 1
2019-05-14 08:56:51 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE WATER_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 08:56:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:56:51 -<==      Total: 1
2019-05-14 08:56:51 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 08:56:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:56:51 -<==      Total: 1
2019-05-14 08:56:51 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE WATER_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 08:56:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:56:51 -<==      Total: 1
2019-05-14 08:56:51 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 08:56:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:56:51 -<==      Total: 1
2019-05-14 08:56:51 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE WATER_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 08:56:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:56:51 -<==      Total: 1
2019-05-14 08:56:51 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 08:56:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:56:51 -<==      Total: 1
2019-05-14 08:56:51 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE `create_time` = ? and user_org = ? 
2019-05-14 08:56:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:56:51 -<==      Total: 1
2019-05-14 08:56:51 -==>  Preparing: SELECT ifnull(SUM(WATER_COST),0) FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 08:56:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:56:51 -<==      Total: 1
2019-05-14 08:56:51 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-14 08:56:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:56:51 -<==      Total: 1
2019-05-14 08:56:51 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-14 08:56:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:56:51 -<==      Total: 1
2019-05-14 08:56:51 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-14 08:56:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:56:51 -<==      Total: 1
2019-05-14 08:56:51 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-14 08:56:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:56:51 -<==      Total: 1
2019-05-14 08:56:51 -耗时 : 71
2019-05-14 08:56:51 -返回值 : {LMWaterSumPre=0, CountPrehu=6, SWaterCountOwe=1, LSWaterSumOwe=0, CountOweyu=1, MWaterCountOwe=1, CountPreyu=3, SumS1WaterLog=20, SWaterSumOwe=0, LSWaterCountPre=0, CountLogyu=60, LCountPrehu=0, CountOwehu=2, MWaterCostSum=18, SWaterPrice=10, CountMWaterLog=1, MWaterPrice=6, MWaterCountPre=3, CountLoghu=2, LCountPreyu=0, SWaterSumPre=1, SWaterCountPre=3, CountAllyu=4, LMWaterCountPre=0, MWaterSumOwe=1, SumMWaterLog=40, LCountAllyu=0, LCountOwehu=0, CountAllhu=8, CountCostyu=28, Stotalhu=4, CountPrice=16, LCountAllhu=0, LMWaterCountOwe=0, LCountOweyu=0, MWaterCostCount=4, CountCosthu=8, SWaterCostSum=10, MWaterSumPre=2, Mtotalhu=4, Stotalyu=1, LStotalyu=0, LMtotalyu=0, LMtotalhu=0, CountS1WaterLog=1, LMWaterSumOwe=0, Mtotalyu=3, LStotalhu=0, LSWaterSumPre=0, LSWaterCountOwe=0, SWaterCostCount=4}
2019-05-14 08:59:29 -请求地址 : http://localhost:8081/index
2019-05-14 08:59:29 -HTTP METHOD : GET
2019-05-14 08:59:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-14 08:59:29 -参数 : [{}]
2019-05-14 08:59:29 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-14 08:59:29 -==> Parameters: 1(Long)
2019-05-14 08:59:29 -<==      Total: 49
2019-05-14 08:59:29 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-14 08:59:29 -==> Parameters: 138(Long)
2019-05-14 08:59:29 -<==      Total: 1
2019-05-14 08:59:29 -耗时 : 19
2019-05-14 08:59:29 -返回值 : index_v1
2019-05-14 08:59:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 08:59:29 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-14 08:59:29.893(Timestamp)
2019-05-14 08:59:29 -请求地址 : http://localhost:8081/main
2019-05-14 08:59:29 -HTTP METHOD : GET
2019-05-14 08:59:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 08:59:29 -参数 : []
2019-05-14 08:59:29 -耗时 : 1
2019-05-14 08:59:29 -返回值 : main
2019-05-14 08:59:29 -<==    Updates: 1
2019-05-14 08:59:30 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-14 08:59:30 -HTTP METHOD : GET
2019-05-14 08:59:30 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-14 08:59:30 -参数 : []
2019-05-14 08:59:30 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-14 08:59:30 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-14 08:59:30 -<==      Total: 0
2019-05-14 08:59:30 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-14 08:59:30 -==> Parameters: 1(Long), 0(String)
2019-05-14 08:59:30 -<==      Total: 1
2019-05-14 08:59:30 -耗时 : 7
2019-05-14 08:59:30 -返回值 : com.bootdo.common.utils.PageUtils@31cec5e0
2019-05-14 08:59:30 -请求地址 : http://localhost:8081/main
2019-05-14 08:59:30 -HTTP METHOD : GET
2019-05-14 08:59:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 08:59:30 -参数 : []
2019-05-14 08:59:30 -耗时 : 0
2019-05-14 08:59:30 -返回值 : main
2019-05-14 08:59:34 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-14 08:59:34 -HTTP METHOD : GET
2019-05-14 08:59:34 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 08:59:34 -参数 : []
2019-05-14 08:59:34 -耗时 : 1
2019-05-14 08:59:34 -返回值 : charts/tableElecMM
2019-05-14 08:59:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 08:59:34 -HTTP METHOD : GET
2019-05-14 08:59:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 08:59:34 -参数 : [userType]
2019-05-14 08:59:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 08:59:34 -==> Parameters: userType(String)
2019-05-14 08:59:34 -<==      Total: 4
2019-05-14 08:59:34 -耗时 : 5
2019-05-14 08:59:34 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 08:59:35 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-05-14 08:59:35 -HTTP METHOD : GET
2019-05-14 08:59:35 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-14 08:59:35 -参数 : []
2019-05-14 08:59:35 -耗时 : 0
2019-05-14 08:59:35 -返回值 : charts/tableWaterMM
2019-05-14 08:59:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 08:59:35 -HTTP METHOD : GET
2019-05-14 08:59:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 08:59:35 -参数 : [userType]
2019-05-14 08:59:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 08:59:35 -==> Parameters: userType(String)
2019-05-14 08:59:35 -<==      Total: 4
2019-05-14 08:59:35 -耗时 : 3
2019-05-14 08:59:35 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 08:59:45 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-14 08:59:45 -HTTP METHOD : GET
2019-05-14 08:59:45 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-14 08:59:45 -参数 : []
2019-05-14 08:59:45 -耗时 : 0
2019-05-14 08:59:45 -返回值 : system/dept/deptTree
2019-05-14 08:59:45 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-14 08:59:45 -HTTP METHOD : GET
2019-05-14 08:59:45 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-14 08:59:45 -参数 : []
2019-05-14 08:59:45 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-14 08:59:45 -==> Parameters: 
2019-05-14 08:59:45 -<==      Total: 3
2019-05-14 08:59:45 -耗时 : 3
2019-05-14 08:59:45 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-14 08:59:47 -请求地址 : http://localhost:8081/charts/tableWaterMM/tableWaterMM
2019-05-14 08:59:47 -HTTP METHOD : POST
2019-05-14 08:59:47 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-14 08:59:47 -参数 : [com.bootdo.moneyLog.vo.WaterLogVo@8e6fec5, com.bootdo.water.vo.WaterVo@4a915508]
2019-05-14 08:59:47 -==>  Preparing: SELECT DISTINCT water_price FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 08:59:47 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:59:47 -<==      Total: 1
2019-05-14 08:59:47 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 08:59:47 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:59:47 -<==      Total: 1
2019-05-14 08:59:47 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 08:59:47 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:59:47 -<==      Total: 1
2019-05-14 08:59:47 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 08:59:47 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:59:47 -<==      Total: 1
2019-05-14 08:59:47 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 08:59:47 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:59:47 -<==      Total: 1
2019-05-14 08:59:47 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 08:59:47 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:59:47 -<==      Total: 1
2019-05-14 08:59:47 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "1" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 08:59:47 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:59:47 -<==      Total: 1
2019-05-14 08:59:47 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 08:59:47 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:59:47 -<==      Total: 1
2019-05-14 08:59:47 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "1" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 08:59:47 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:59:47 -<==      Total: 1
2019-05-14 08:59:47 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE `create_time` = ? and user_org = ? 
2019-05-14 08:59:47 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:59:47 -<==      Total: 1
2019-05-14 08:59:47 -==>  Preparing: SELECT ifnull(SUM(WATER_COST),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 08:59:47 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:59:47 -<==      Total: 1
2019-05-14 08:59:47 -==>  Preparing: SELECT DISTINCT water_price FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 08:59:47 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:59:47 -<==      Total: 1
2019-05-14 08:59:47 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 08:59:47 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:59:47 -<==      Total: 1
2019-05-14 08:59:47 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 08:59:47 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:59:47 -<==      Total: 1
2019-05-14 08:59:47 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE WATER_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 08:59:47 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:59:47 -<==      Total: 1
2019-05-14 08:59:47 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 08:59:47 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:59:47 -<==      Total: 1
2019-05-14 08:59:47 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE WATER_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 08:59:47 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:59:47 -<==      Total: 1
2019-05-14 08:59:47 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 08:59:47 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:59:47 -<==      Total: 1
2019-05-14 08:59:47 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE WATER_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 08:59:47 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:59:47 -<==      Total: 1
2019-05-14 08:59:47 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 08:59:47 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:59:47 -<==      Total: 1
2019-05-14 08:59:47 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE `create_time` = ? and user_org = ? 
2019-05-14 08:59:47 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:59:47 -<==      Total: 1
2019-05-14 08:59:47 -==>  Preparing: SELECT ifnull(SUM(WATER_COST),0) FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 08:59:47 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:59:47 -<==      Total: 1
2019-05-14 08:59:47 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-14 08:59:47 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:59:47 -<==      Total: 1
2019-05-14 08:59:47 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-14 08:59:47 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:59:47 -<==      Total: 1
2019-05-14 08:59:47 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-14 08:59:47 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:59:47 -<==      Total: 1
2019-05-14 08:59:47 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-14 08:59:47 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 08:59:47 -<==      Total: 1
2019-05-14 08:59:47 -耗时 : 67
2019-05-14 08:59:47 -返回值 : {LMWaterSumPre=1, CountPrehu=6, SWaterCountOwe=1, LSWaterSumOwe=0, CountOweyu=1, MWaterCountOwe=1, CountPreyu=3, SumS1WaterLog=20, SWaterSumOwe=0, LSWaterCountPre=1, CountLogyu=60, LCountPrehu=2, CountOwehu=2, MWaterCostSum=18, SWaterPrice=10, CountMWaterLog=1, MWaterPrice=6, MWaterCountPre=3, CountLoghu=2, LCountPreyu=1, SWaterSumPre=1, SWaterCountPre=3, CountAllyu=4, LMWaterCountPre=1, MWaterSumOwe=1, SumMWaterLog=40, LCountAllyu=2, LCountOwehu=2, CountAllhu=8, CountCostyu=28, Stotalhu=4, CountPrice=16, LCountAllhu=4, LMWaterCountOwe=1, LCountOweyu=1, MWaterCostCount=4, CountCosthu=8, SWaterCostSum=10, MWaterSumPre=2, Mtotalhu=4, Stotalyu=1, LStotalyu=0, LMtotalyu=2, LMtotalhu=2, CountS1WaterLog=1, LMWaterSumOwe=1, Mtotalyu=3, LStotalhu=2, LSWaterSumPre=0, LSWaterCountOwe=1, SWaterCostCount=4}
2019-05-14 09:11:58 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 6 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(5)-CONNECTED(5)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 60], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 10], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 406]
2019-05-14 09:13:35 -请求地址 : http://localhost:8081/charts/tableWaterMM/exportWaterMM
2019-05-14 09:13:35 -HTTP METHOD : GET
2019-05-14 09:13:35 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.exportWaterMM
2019-05-14 09:13:35 -参数 : [com.bootdo.water.vo.WaterVo@6242b784, com.bootdo.moneyLog.vo.WaterLogVo@41ba0732, org.apache.shiro.web.servlet.ShiroHttpServletResponse@cbd80e3]
2019-05-14 09:13:36 -耗时 : 731
2019-05-14 09:13:36 -返回值 : null
2019-05-14 09:16:19 -请求地址 : http://localhost:8081/index
2019-05-14 09:16:19 -HTTP METHOD : GET
2019-05-14 09:16:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-14 09:16:19 -参数 : [{}]
2019-05-14 09:16:19 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-14 09:16:19 -==> Parameters: 1(Long)
2019-05-14 09:16:19 -<==      Total: 49
2019-05-14 09:16:19 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-14 09:16:19 -==> Parameters: 138(Long)
2019-05-14 09:16:19 -<==      Total: 1
2019-05-14 09:16:19 -耗时 : 23
2019-05-14 09:16:19 -返回值 : index_v1
2019-05-14 09:16:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 09:16:19 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-14 09:16:19.879(Timestamp)
2019-05-14 09:16:19 -请求地址 : http://localhost:8081/main
2019-05-14 09:16:19 -HTTP METHOD : GET
2019-05-14 09:16:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 09:16:19 -参数 : []
2019-05-14 09:16:19 -耗时 : 3
2019-05-14 09:16:19 -返回值 : main
2019-05-14 09:16:20 -<==    Updates: 1
2019-05-14 09:16:20 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-14 09:16:20 -HTTP METHOD : GET
2019-05-14 09:16:20 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-14 09:16:20 -参数 : []
2019-05-14 09:16:20 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-14 09:16:20 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-14 09:16:20 -<==      Total: 0
2019-05-14 09:16:20 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-14 09:16:20 -==> Parameters: 1(Long), 0(String)
2019-05-14 09:16:20 -<==      Total: 1
2019-05-14 09:16:20 -耗时 : 7
2019-05-14 09:16:20 -返回值 : com.bootdo.common.utils.PageUtils@9cf526a
2019-05-14 09:16:20 -请求地址 : http://localhost:8081/main
2019-05-14 09:16:20 -HTTP METHOD : GET
2019-05-14 09:16:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 09:16:20 -参数 : []
2019-05-14 09:16:20 -耗时 : 0
2019-05-14 09:16:20 -返回值 : main
2019-05-14 09:20:31 -Starting BootdoApplication on PC-201905091110 with PID 20376 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-14 09:20:31 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-14 09:20:31 -The following profiles are active: dev
2019-05-14 09:20:31 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Tue May 14 09:20:31 CST 2019]; root of context hierarchy
2019-05-14 09:20:35 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-14 09:20:39 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bb3b3035] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 09:20:39 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$ad945edc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 09:20:41 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 09:20:42 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 09:20:42 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 09:20:42 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-14 09:20:42 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-14 09:20:42 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 09:20:42 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 09:20:42 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 09:20:42 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 09:20:44 -Tomcat initialized with port(s): 8081 (http)
2019-05-14 09:20:44 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-14 09:20:44 -Starting service [Tomcat]
2019-05-14 09:20:44 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-14 09:20:44 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-14 09:20:44 -Initializing Spring embedded WebApplicationContext
2019-05-14 09:20:44 -Root WebApplicationContext: initialization completed in 13657 ms
2019-05-14 09:20:46 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-14 09:20:46 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-14 09:20:46 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-14 09:20:46 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-14 09:20:46 -Filter xssFilter was not registered (disabled)
2019-05-14 09:20:46 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-14 09:20:46 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-14 09:20:46 -Servlet statViewServlet mapped to [/druid/*]
2019-05-14 09:20:46 -Servlet dispatcherServlet mapped to [/]
2019-05-14 09:20:56 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Tue May 14 09:20:31 CST 2019]; root of context hierarchy
2019-05-14 09:20:56 -Using default implementation for ThreadExecutor
2019-05-14 09:20:56 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-14 09:20:56 -Quartz Scheduler v.2.2.1 created.
2019-05-14 09:20:56 -RAMJobStore initialized.
2019-05-14 09:20:56 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-14 09:20:56 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-14 09:20:56 -Quartz scheduler version: 2.2.1
2019-05-14 09:20:56 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@50a7c72b
2019-05-14 09:20:58 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-14 09:20:58 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-14 09:21:01 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-14 09:21:01 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 09:21:01 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 09:21:01 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-14 09:21:01 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 09:21:01 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 09:21:01 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-14 09:21:01 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-14 09:21:01 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-14 09:21:01 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 09:21:01 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-14 09:21:01 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 09:21:01 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 09:21:01 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-14 09:21:01 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 09:21:01 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-14 09:21:01 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 09:21:01 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 09:21:01 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-14 09:21:01 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-14 09:21:01 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 09:21:01 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 09:21:01 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-14 09:21:01 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-14 09:21:01 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 09:21:01 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-14 09:21:01 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 09:21:01 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-14 09:21:01 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 09:21:01 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 09:21:01 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 09:21:01 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-14 09:21:01 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-05-14 09:21:01 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-14 09:21:01 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-14 09:21:01 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 09:21:01 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-14 09:21:01 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-14 09:21:01 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-14 09:21:01 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-14 09:21:01 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 09:21:01 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-14 09:21:01 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-14 09:21:01 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-14 09:21:01 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-14 09:21:01 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-14 09:21:01 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 09:21:01 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-14 09:21:01 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-14 09:21:01 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-14 09:21:01 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-14 09:21:01 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 09:21:01 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-14 09:21:01 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-14 09:21:01 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-14 09:21:01 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 09:21:01 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-14 09:21:01 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 09:21:01 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-14 09:21:01 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-14 09:21:01 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-14 09:21:01 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-14 09:21:01 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-14 09:21:01 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-14 09:21:01 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-14 09:21:01 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-14 09:21:01 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-14 09:21:01 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 09:21:01 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-14 09:21:01 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-14 09:21:01 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 09:21:01 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-14 09:21:01 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-14 09:21:01 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-14 09:21:01 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-14 09:21:01 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 09:21:01 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-14 09:21:01 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-14 09:21:01 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-14 09:21:01 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-14 09:21:01 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-14 09:21:01 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-14 09:21:01 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-14 09:21:01 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-14 09:21:01 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-14 09:21:01 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-14 09:21:01 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-14 09:21:01 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 09:21:01 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-14 09:21:01 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-14 09:21:01 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-14 09:21:01 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-14 09:21:01 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-14 09:21:01 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-14 09:21:01 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-14 09:21:01 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-14 09:21:01 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-14 09:21:01 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-14 09:21:01 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-14 09:21:01 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 09:21:01 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-14 09:21:01 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 09:21:01 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-14 09:21:01 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-14 09:21:01 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-14 09:21:01 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-14 09:21:01 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-14 09:21:01 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-14 09:21:01 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-14 09:21:01 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-14 09:21:01 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 09:21:01 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-14 09:21:01 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-14 09:21:01 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-14 09:21:01 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-14 09:21:01 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-14 09:21:01 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-14 09:21:01 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-14 09:21:01 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-14 09:21:01 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-14 09:21:01 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-14 09:21:01 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-14 09:21:01 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 09:21:01 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-14 09:21:01 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 09:21:01 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-14 09:21:01 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-14 09:21:01 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-14 09:21:01 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-14 09:21:01 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-14 09:21:01 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-14 09:21:01 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-14 09:21:01 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-14 09:21:01 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-14 09:21:01 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-14 09:21:01 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-14 09:21:01 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-14 09:21:01 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-14 09:21:01 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 09:21:01 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-14 09:21:01 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 09:21:01 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-14 09:21:01 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-14 09:21:01 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-14 09:21:01 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-14 09:21:01 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-14 09:21:01 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-14 09:21:01 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 09:21:01 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-14 09:21:01 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 09:21:01 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-14 09:21:01 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-14 09:21:01 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-14 09:21:01 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-14 09:21:01 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-14 09:21:01 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-14 09:21:01 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 09:21:01 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-14 09:21:01 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 09:21:01 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-14 09:21:01 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-14 09:21:01 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-14 09:21:01 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-14 09:21:01 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-14 09:21:01 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-14 09:21:01 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-14 09:21:01 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 09:21:01 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-14 09:21:01 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-14 09:21:01 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 09:21:01 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-14 09:21:01 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 09:21:01 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-14 09:21:01 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-14 09:21:01 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-14 09:21:01 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-14 09:21:01 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-14 09:21:01 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 09:21:01 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-14 09:21:01 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 09:21:01 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-14 09:21:01 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-14 09:21:01 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-14 09:21:01 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 09:21:01 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-14 09:21:01 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-14 09:21:01 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-14 09:21:01 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-14 09:21:01 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-14 09:21:01 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-14 09:21:01 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-14 09:21:01 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 09:21:01 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-14 09:21:01 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-14 09:21:01 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-14 09:21:01 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-14 09:21:01 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-14 09:21:01 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-14 09:21:01 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-14 09:21:01 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-14 09:21:01 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-14 09:21:01 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-14 09:21:01 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-14 09:21:01 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-14 09:21:01 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 09:21:01 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-14 09:21:01 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-14 09:21:01 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-14 09:21:01 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-14 09:21:01 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-14 09:21:01 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-14 09:21:01 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-14 09:21:01 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-14 09:21:01 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-14 09:21:01 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-14 09:21:01 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-14 09:21:01 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-14 09:21:01 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 09:21:01 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-14 09:21:01 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-14 09:21:01 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-14 09:21:01 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-14 09:21:01 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 09:21:01 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-14 09:21:01 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-14 09:21:01 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-14 09:21:01 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 09:21:01 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-14 09:21:01 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-14 09:21:01 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-14 09:21:01 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-14 09:21:01 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-14 09:21:01 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-14 09:21:01 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-14 09:21:01 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-14 09:21:01 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-14 09:21:01 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-14 09:21:01 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-14 09:21:01 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-14 09:21:01 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-14 09:21:01 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-14 09:21:01 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-14 09:21:01 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-14 09:21:01 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-14 09:21:01 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 09:21:01 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-14 09:21:01 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-14 09:21:01 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 09:21:01 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-14 09:21:01 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-14 09:21:01 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-14 09:21:01 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-14 09:21:01 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-14 09:21:01 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-14 09:21:01 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-14 09:21:01 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-14 09:21:01 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 09:21:01 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-14 09:21:01 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-14 09:21:01 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 09:21:01 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-14 09:21:01 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-14 09:21:01 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-14 09:21:01 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-14 09:21:01 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-14 09:21:01 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-14 09:21:01 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-14 09:21:01 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-14 09:21:01 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-14 09:21:02 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-14 09:21:02 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-14 09:21:02 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-14 09:21:02 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Tue May 14 09:20:31 CST 2019]; root of context hierarchy
2019-05-14 09:21:03 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-14 09:21:03 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-14 09:21:03 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-14 09:21:03 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-14 09:21:03 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-14 09:21:05 -Registering beans for JMX exposure on startup
2019-05-14 09:21:05 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-14 09:21:05 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-14 09:21:05 -Starting beans in phase 2147483647
2019-05-14 09:21:05 -Context refreshed
2019-05-14 09:21:05 -Found 1 custom documentation plugin(s)
2019-05-14 09:21:05 -Scanning for api listing references
2019-05-14 09:21:06 -Generating unique operation named: getCountDUsingPOST_1
2019-05-14 09:21:06 -Generating unique operation named: removeUsingPOST_1
2019-05-14 09:21:06 -Generating unique operation named: addUsingGET_1
2019-05-14 09:21:06 -Generating unique operation named: editUsingGET_1
2019-05-14 09:21:06 -Generating unique operation named: listUsingGET_1
2019-05-14 09:21:06 -Generating unique operation named: removeUsingPOST_2
2019-05-14 09:21:06 -Generating unique operation named: removeUsingPOST_3
2019-05-14 09:21:06 -Generating unique operation named: saveUsingPOST_1
2019-05-14 09:21:06 -Generating unique operation named: updateUsingGET_1
2019-05-14 09:21:06 -Generating unique operation named: updateUsingHEAD_1
2019-05-14 09:21:07 -Generating unique operation named: updateUsingPOST_1
2019-05-14 09:21:07 -Generating unique operation named: updateUsingPUT_1
2019-05-14 09:21:07 -Generating unique operation named: updateUsingPATCH_1
2019-05-14 09:21:07 -Generating unique operation named: updateUsingDELETE_1
2019-05-14 09:21:07 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-14 09:21:07 -Generating unique operation named: updateUsingTRACE_1
2019-05-14 09:21:07 -Generating unique operation named: addUsingGET_2
2019-05-14 09:21:07 -Generating unique operation named: editUsingGET_2
2019-05-14 09:21:07 -Generating unique operation named: listUsingGET_2
2019-05-14 09:21:07 -Generating unique operation named: removeUsingPOST_4
2019-05-14 09:21:07 -Generating unique operation named: removeUsingPOST_5
2019-05-14 09:21:07 -Generating unique operation named: saveUsingPOST_2
2019-05-14 09:21:07 -Generating unique operation named: updateUsingPOST_2
2019-05-14 09:21:07 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-14 09:21:07 -Generating unique operation named: addUsingGET_3
2019-05-14 09:21:07 -Generating unique operation named: editUsingGET_3
2019-05-14 09:21:07 -Generating unique operation named: listUsingGET_3
2019-05-14 09:21:07 -Generating unique operation named: removeUsingPOST_6
2019-05-14 09:21:07 -Generating unique operation named: removeUsingPOST_7
2019-05-14 09:21:07 -Generating unique operation named: saveUsingPOST_3
2019-05-14 09:21:07 -Generating unique operation named: updateUsingGET_2
2019-05-14 09:21:07 -Generating unique operation named: updateUsingHEAD_2
2019-05-14 09:21:07 -Generating unique operation named: updateUsingPOST_3
2019-05-14 09:21:07 -Generating unique operation named: updateUsingPUT_2
2019-05-14 09:21:07 -Generating unique operation named: updateUsingPATCH_2
2019-05-14 09:21:07 -Generating unique operation named: updateUsingDELETE_2
2019-05-14 09:21:07 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-14 09:21:07 -Generating unique operation named: updateUsingTRACE_2
2019-05-14 09:21:07 -Generating unique operation named: addUsingGET_4
2019-05-14 09:21:07 -Generating unique operation named: editUsingGET_4
2019-05-14 09:21:07 -Generating unique operation named: listUsingGET_4
2019-05-14 09:21:07 -Generating unique operation named: removeUsingPOST_8
2019-05-14 09:21:07 -Generating unique operation named: removeUsingPOST_9
2019-05-14 09:21:07 -Generating unique operation named: saveUsingPOST_4
2019-05-14 09:21:07 -Generating unique operation named: updateUsingGET_3
2019-05-14 09:21:07 -Generating unique operation named: updateUsingHEAD_3
2019-05-14 09:21:07 -Generating unique operation named: updateUsingPOST_4
2019-05-14 09:21:07 -Generating unique operation named: updateUsingPUT_3
2019-05-14 09:21:07 -Generating unique operation named: updateUsingPATCH_3
2019-05-14 09:21:07 -Generating unique operation named: updateUsingDELETE_3
2019-05-14 09:21:07 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-14 09:21:07 -Generating unique operation named: updateUsingTRACE_3
2019-05-14 09:21:07 -Generating unique operation named: ElecUsingGET_1
2019-05-14 09:21:07 -Generating unique operation named: addUsingGET_5
2019-05-14 09:21:07 -Generating unique operation named: editUsingGET_5
2019-05-14 09:21:07 -Generating unique operation named: listUsingGET_5
2019-05-14 09:21:07 -Generating unique operation named: removeUsingPOST_10
2019-05-14 09:21:07 -Generating unique operation named: removeUsingPOST_11
2019-05-14 09:21:07 -Generating unique operation named: saveUsingPOST_5
2019-05-14 09:21:07 -Generating unique operation named: updateUsingGET_4
2019-05-14 09:21:07 -Generating unique operation named: updateUsingHEAD_4
2019-05-14 09:21:07 -Generating unique operation named: updateUsingPOST_5
2019-05-14 09:21:07 -Generating unique operation named: updateUsingPUT_4
2019-05-14 09:21:07 -Generating unique operation named: updateUsingPATCH_4
2019-05-14 09:21:07 -Generating unique operation named: updateUsingDELETE_4
2019-05-14 09:21:07 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-14 09:21:07 -Generating unique operation named: updateUsingTRACE_4
2019-05-14 09:21:07 -Generating unique operation named: editUsingGET_6
2019-05-14 09:21:07 -Generating unique operation named: listUsingGET_6
2019-05-14 09:21:07 -Generating unique operation named: updateUsingPOST_6
2019-05-14 09:21:07 -Generating unique operation named: addUsingGET_6
2019-05-14 09:21:07 -Generating unique operation named: editUsingGET_7
2019-05-14 09:21:07 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-14 09:21:07 -Generating unique operation named: listUsingGET_7
2019-05-14 09:21:07 -Generating unique operation named: removeUsingPOST_12
2019-05-14 09:21:07 -Generating unique operation named: removeUsingPOST_13
2019-05-14 09:21:07 -Generating unique operation named: saveUsingPOST_6
2019-05-14 09:21:07 -Generating unique operation named: updateUsingGET_5
2019-05-14 09:21:07 -Generating unique operation named: updateUsingHEAD_5
2019-05-14 09:21:07 -Generating unique operation named: updateUsingPOST_7
2019-05-14 09:21:07 -Generating unique operation named: updateUsingPUT_5
2019-05-14 09:21:07 -Generating unique operation named: updateUsingPATCH_5
2019-05-14 09:21:07 -Generating unique operation named: updateUsingDELETE_5
2019-05-14 09:21:07 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-14 09:21:07 -Generating unique operation named: updateUsingTRACE_5
2019-05-14 09:21:07 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-14 09:21:07 -Generating unique operation named: addUsingGET_7
2019-05-14 09:21:07 -Generating unique operation named: editUsingGET_8
2019-05-14 09:21:07 -Generating unique operation named: listUsingGET_8
2019-05-14 09:21:07 -Generating unique operation named: removeUsingPOST_14
2019-05-14 09:21:07 -Generating unique operation named: removeUsingPOST_15
2019-05-14 09:21:07 -Generating unique operation named: saveUsingPOST_7
2019-05-14 09:21:07 -Generating unique operation named: updateUsingGET_6
2019-05-14 09:21:07 -Generating unique operation named: updateUsingHEAD_6
2019-05-14 09:21:07 -Generating unique operation named: updateUsingPOST_8
2019-05-14 09:21:07 -Generating unique operation named: updateUsingPUT_6
2019-05-14 09:21:07 -Generating unique operation named: updateUsingPATCH_6
2019-05-14 09:21:07 -Generating unique operation named: updateUsingDELETE_6
2019-05-14 09:21:07 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-14 09:21:07 -Generating unique operation named: updateUsingTRACE_6
2019-05-14 09:21:07 -Generating unique operation named: addUsingGET_8
2019-05-14 09:21:07 -Generating unique operation named: editUsingGET_9
2019-05-14 09:21:07 -Generating unique operation named: listUsingGET_9
2019-05-14 09:21:07 -Generating unique operation named: removeUsingPOST_16
2019-05-14 09:21:07 -Generating unique operation named: removeUsingPOST_17
2019-05-14 09:21:07 -Generating unique operation named: saveUsingPOST_8
2019-05-14 09:21:07 -Generating unique operation named: updateUsingGET_7
2019-05-14 09:21:07 -Generating unique operation named: updateUsingHEAD_7
2019-05-14 09:21:07 -Generating unique operation named: updateUsingPOST_9
2019-05-14 09:21:07 -Generating unique operation named: updateUsingPUT_7
2019-05-14 09:21:07 -Generating unique operation named: updateUsingPATCH_7
2019-05-14 09:21:07 -Generating unique operation named: updateUsingDELETE_7
2019-05-14 09:21:07 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-14 09:21:07 -Generating unique operation named: updateUsingTRACE_7
2019-05-14 09:21:08 -Generating unique operation named: addUsingGET_9
2019-05-14 09:21:08 -Generating unique operation named: editUsingGET_10
2019-05-14 09:21:08 -Generating unique operation named: infoUsingGET_1
2019-05-14 09:21:08 -Generating unique operation named: infoUsingHEAD_1
2019-05-14 09:21:08 -Generating unique operation named: infoUsingPOST_1
2019-05-14 09:21:08 -Generating unique operation named: infoUsingPUT_1
2019-05-14 09:21:08 -Generating unique operation named: infoUsingPATCH_1
2019-05-14 09:21:08 -Generating unique operation named: infoUsingDELETE_1
2019-05-14 09:21:08 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-14 09:21:08 -Generating unique operation named: infoUsingTRACE_1
2019-05-14 09:21:08 -Generating unique operation named: listUsingGET_10
2019-05-14 09:21:08 -Generating unique operation named: removeUsingPOST_18
2019-05-14 09:21:08 -Generating unique operation named: removeUsingPOST_19
2019-05-14 09:21:08 -Generating unique operation named: saveUsingPOST_9
2019-05-14 09:21:08 -Generating unique operation named: updateUsingPOST_10
2019-05-14 09:21:08 -Generating unique operation named: listUsingGET_11
2019-05-14 09:21:08 -Generating unique operation named: removeUsingPOST_20
2019-05-14 09:21:08 -Generating unique operation named: welcomeUsingGET_1
2019-05-14 09:21:08 -Generating unique operation named: addUsingGET_10
2019-05-14 09:21:08 -Generating unique operation named: editUsingGET_11
2019-05-14 09:21:08 -Generating unique operation named: listUsingGET_12
2019-05-14 09:21:08 -Generating unique operation named: removeUsingPOST_21
2019-05-14 09:21:08 -Generating unique operation named: saveUsingPOST_10
2019-05-14 09:21:08 -Generating unique operation named: treeUsingGET_1
2019-05-14 09:21:08 -Generating unique operation named: treeUsingGET_2
2019-05-14 09:21:08 -Generating unique operation named: updateUsingPOST_11
2019-05-14 09:21:08 -Generating unique operation named: addUsingGET_11
2019-05-14 09:21:08 -Generating unique operation named: editUsingGET_12
2019-05-14 09:21:08 -Generating unique operation named: listUsingGET_13
2019-05-14 09:21:08 -Generating unique operation named: removeUsingPOST_22
2019-05-14 09:21:08 -Generating unique operation named: removeUsingPOST_23
2019-05-14 09:21:08 -Generating unique operation named: saveUsingPOST_11
2019-05-14 09:21:08 -Generating unique operation named: updateUsingGET_8
2019-05-14 09:21:08 -Generating unique operation named: updateUsingHEAD_8
2019-05-14 09:21:08 -Generating unique operation named: updateUsingPOST_12
2019-05-14 09:21:08 -Generating unique operation named: updateUsingPUT_8
2019-05-14 09:21:08 -Generating unique operation named: updateUsingPATCH_8
2019-05-14 09:21:08 -Generating unique operation named: updateUsingDELETE_8
2019-05-14 09:21:08 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-14 09:21:08 -Generating unique operation named: updateUsingTRACE_8
2019-05-14 09:21:08 -Generating unique operation named: addUsingGET_12
2019-05-14 09:21:08 -Generating unique operation named: editUsingGET_13
2019-05-14 09:21:08 -Generating unique operation named: listUsingGET_14
2019-05-14 09:21:08 -Generating unique operation named: removeUsingPOST_24
2019-05-14 09:21:08 -Generating unique operation named: removeUsingPOST_25
2019-05-14 09:21:08 -Generating unique operation named: saveUsingPOST_12
2019-05-14 09:21:08 -Generating unique operation named: updateUsingGET_9
2019-05-14 09:21:08 -Generating unique operation named: updateUsingHEAD_9
2019-05-14 09:21:08 -Generating unique operation named: updateUsingPOST_13
2019-05-14 09:21:08 -Generating unique operation named: updateUsingPUT_9
2019-05-14 09:21:08 -Generating unique operation named: updateUsingPATCH_9
2019-05-14 09:21:08 -Generating unique operation named: updateUsingDELETE_9
2019-05-14 09:21:08 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-14 09:21:08 -Generating unique operation named: updateUsingTRACE_9
2019-05-14 09:21:08 -Generating unique operation named: addUsingGET_13
2019-05-14 09:21:08 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-14 09:21:08 -Generating unique operation named: editUsingGET_14
2019-05-14 09:21:08 -Generating unique operation named: listUsingGET_15
2019-05-14 09:21:08 -Generating unique operation named: saveUsingPOST_13
2019-05-14 09:21:08 -Generating unique operation named: saveUsingPOST_14
2019-05-14 09:21:08 -Generating unique operation named: updateUsingPOST_14
2019-05-14 09:21:08 -Generating unique operation named: listUsingGET_16
2019-05-14 09:21:08 -Generating unique operation named: listUsingHEAD_1
2019-05-14 09:21:08 -Generating unique operation named: listUsingPOST_1
2019-05-14 09:21:08 -Generating unique operation named: listUsingPUT_1
2019-05-14 09:21:08 -Generating unique operation named: listUsingPATCH_1
2019-05-14 09:21:08 -Generating unique operation named: listUsingDELETE_1
2019-05-14 09:21:08 -Generating unique operation named: listUsingOPTIONS_1
2019-05-14 09:21:08 -Generating unique operation named: listUsingTRACE_1
2019-05-14 09:21:08 -Generating unique operation named: countDDUsingGET_1
2019-05-14 09:21:08 -Generating unique operation named: exportDDUsingGET_1
2019-05-14 09:21:08 -Generating unique operation named: getCountYYUsingPOST_1
2019-05-14 09:21:08 -Generating unique operation named: getCountMMUsingPOST_1
2019-05-14 09:21:08 -Generating unique operation named: addUsingGET_14
2019-05-14 09:21:08 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-14 09:21:08 -Generating unique operation named: editUsingGET_15
2019-05-14 09:21:08 -Generating unique operation named: listUsingGET_17
2019-05-14 09:21:08 -Generating unique operation named: removeUsingPOST_26
2019-05-14 09:21:08 -Generating unique operation named: saveUsingPOST_15
2019-05-14 09:21:08 -Generating unique operation named: treeUsingGET_3
2019-05-14 09:21:08 -Generating unique operation named: treeViewUsingGET_1
2019-05-14 09:21:08 -Generating unique operation named: updateUsingPOST_15
2019-05-14 09:21:08 -Generating unique operation named: addUsingGET_15
2019-05-14 09:21:08 -Generating unique operation named: editUsingGET_16
2019-05-14 09:21:08 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-14 09:21:09 -Generating unique operation named: listUsingGET_18
2019-05-14 09:21:09 -Generating unique operation named: removeUsingPOST_27
2019-05-14 09:21:09 -Generating unique operation named: removeUsingPOST_28
2019-05-14 09:21:09 -Generating unique operation named: saveUsingPOST_16
2019-05-14 09:21:09 -Generating unique operation named: updateUsingGET_10
2019-05-14 09:21:09 -Generating unique operation named: updateUsingHEAD_10
2019-05-14 09:21:09 -Generating unique operation named: updateUsingPOST_16
2019-05-14 09:21:09 -Generating unique operation named: updateUsingPUT_10
2019-05-14 09:21:09 -Generating unique operation named: updateUsingPATCH_10
2019-05-14 09:21:09 -Generating unique operation named: updateUsingDELETE_10
2019-05-14 09:21:09 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-14 09:21:09 -Generating unique operation named: updateUsingTRACE_10
2019-05-14 09:21:09 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-14 09:21:09 -Generating unique operation named: addUsingGET_16
2019-05-14 09:21:09 -Generating unique operation named: editUsingGET_17
2019-05-14 09:21:09 -Generating unique operation named: listUsingGET_19
2019-05-14 09:21:09 -Generating unique operation named: removeUsingPOST_29
2019-05-14 09:21:09 -Generating unique operation named: removeUsingPOST_30
2019-05-14 09:21:09 -Generating unique operation named: saveUsingPOST_17
2019-05-14 09:21:09 -Generating unique operation named: updateUsingGET_11
2019-05-14 09:21:09 -Generating unique operation named: updateUsingHEAD_11
2019-05-14 09:21:09 -Generating unique operation named: updateUsingPOST_17
2019-05-14 09:21:09 -Generating unique operation named: updateUsingPUT_11
2019-05-14 09:21:09 -Generating unique operation named: updateUsingPATCH_11
2019-05-14 09:21:09 -Generating unique operation named: updateUsingDELETE_11
2019-05-14 09:21:09 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-14 09:21:09 -Generating unique operation named: updateUsingTRACE_11
2019-05-14 09:21:09 -Generating unique operation named: addUsingGET_17
2019-05-14 09:21:09 -Generating unique operation named: editUsingGET_18
2019-05-14 09:21:09 -Generating unique operation named: listUsingGET_20
2019-05-14 09:21:09 -Generating unique operation named: removeUsingPOST_31
2019-05-14 09:21:09 -Generating unique operation named: removeUsingPOST_32
2019-05-14 09:21:09 -Generating unique operation named: saveUsingPOST_18
2019-05-14 09:21:09 -Generating unique operation named: updateUsingGET_12
2019-05-14 09:21:09 -Generating unique operation named: updateUsingHEAD_12
2019-05-14 09:21:09 -Generating unique operation named: updateUsingPOST_18
2019-05-14 09:21:09 -Generating unique operation named: updateUsingPUT_12
2019-05-14 09:21:09 -Generating unique operation named: updateUsingPATCH_12
2019-05-14 09:21:09 -Generating unique operation named: updateUsingDELETE_12
2019-05-14 09:21:09 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-14 09:21:09 -Generating unique operation named: updateUsingTRACE_12
2019-05-14 09:21:09 -Starting Quartz Scheduler now
2019-05-14 09:21:09 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-14 09:21:09 -Starting...
2019-05-14 09:21:09 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-14 09:21:09 -Started.
2019-05-14 09:21:09 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-14 09:21:09 -Using a shared selector for servlet write/read
2019-05-14 09:21:09 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-14 09:21:09 -Started BootdoApplication in 39.871 seconds (JVM running for 40.908)
2019-05-14 09:21:09 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-14 09:21:09 -==> Parameters: 
2019-05-14 09:21:09 -<==      Total: 1
2019-05-14 09:21:38 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-14 09:21:38 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-14 09:21:38 -FrameworkServlet 'dispatcherServlet': initialization completed in 94 ms
2019-05-14 09:21:38 -Enabling session validation scheduler...
2019-05-14 09:21:38 -请求地址 : http://localhost:8081/login;JSESSIONID=559348e1-8802-4be2-bb25-f719f6a07e5a
2019-05-14 09:21:38 -HTTP METHOD : GET
2019-05-14 09:21:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-14 09:21:38 -参数 : [{}]
2019-05-14 09:21:38 -耗时 : 5
2019-05-14 09:21:38 -返回值 : login
2019-05-14 09:21:39 -请求地址 : http://localhost:8081/getVerify
2019-05-14 09:21:39 -HTTP METHOD : GET
2019-05-14 09:21:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-14 09:21:39 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@3d14e6c5, org.apache.shiro.web.servlet.ShiroHttpServletResponse@33d31f17]
2019-05-14 09:21:42 -2961
2019-05-14 09:21:42 -耗时 : 3049
2019-05-14 09:21:42 -返回值 : null
2019-05-14 09:21:48 -请求地址 : http://localhost:8081/login
2019-05-14 09:21:48 -HTTP METHOD : POST
2019-05-14 09:21:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-14 09:21:48 -参数 : [admin, 111111, 2961, org.apache.shiro.web.servlet.ShiroHttpServletRequest@10c4b50f]
2019-05-14 09:21:48 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-14 09:21:48 -==> Parameters: admin(String)
2019-05-14 09:21:48 -<==      Total: 1
2019-05-14 09:21:48 -耗时 : 116
2019-05-14 09:21:48 -返回值 : {msg=操作成功, code=0}
2019-05-14 09:21:48 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-14 09:21:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 09:21:48 -==> Parameters: 1(Long), admin(String), 登录(String), 116(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-14 09:21:48.91(Timestamp)
2019-05-14 09:21:49 -<==    Updates: 1
2019-05-14 09:21:49 -请求地址 : http://localhost:8081/index
2019-05-14 09:21:49 -HTTP METHOD : GET
2019-05-14 09:21:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-14 09:21:49 -参数 : [{}]
2019-05-14 09:21:49 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-14 09:21:49 -==> Parameters: 1(Long)
2019-05-14 09:21:49 -<==      Total: 49
2019-05-14 09:21:49 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-14 09:21:49 -==> Parameters: 138(Long)
2019-05-14 09:21:49 -<==      Total: 1
2019-05-14 09:21:49 -耗时 : 258
2019-05-14 09:21:49 -返回值 : index_v1
2019-05-14 09:21:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 09:21:49 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 258(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-14 09:21:49.49(Timestamp)
2019-05-14 09:21:49 -<==    Updates: 1
2019-05-14 09:21:49 -请求地址 : http://localhost:8081/main
2019-05-14 09:21:49 -HTTP METHOD : GET
2019-05-14 09:21:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 09:21:49 -参数 : []
2019-05-14 09:21:49 -耗时 : 1
2019-05-14 09:21:49 -返回值 : main
2019-05-14 09:21:49 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-14 09:21:49 -HTTP METHOD : GET
2019-05-14 09:21:49 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-14 09:21:49 -参数 : []
2019-05-14 09:21:49 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-14 09:21:49 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-14 09:21:49 -<==      Total: 0
2019-05-14 09:21:49 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-14 09:21:49 -==> Parameters: 1(Long), 0(String)
2019-05-14 09:21:49 -<==      Total: 1
2019-05-14 09:21:49 -耗时 : 43
2019-05-14 09:21:49 -返回值 : com.bootdo.common.utils.PageUtils@7f57fc8b
2019-05-14 09:21:50 -请求地址 : http://localhost:8081/main
2019-05-14 09:21:50 -HTTP METHOD : GET
2019-05-14 09:21:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 09:21:50 -参数 : []
2019-05-14 09:21:50 -耗时 : 1
2019-05-14 09:21:50 -返回值 : main
2019-05-14 09:21:53 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-14 09:21:53 -==> Parameters: 1(Long)
2019-05-14 09:21:53 -<==      Total: 93
2019-05-14 09:21:53 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-14 09:21:53 -HTTP METHOD : GET
2019-05-14 09:21:53 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 09:21:53 -参数 : []
2019-05-14 09:21:53 -耗时 : 10
2019-05-14 09:21:53 -返回值 : charts/tableElecMM
2019-05-14 09:21:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:21:53 -HTTP METHOD : GET
2019-05-14 09:21:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:21:53 -参数 : [userType]
2019-05-14 09:21:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:21:53 -==> Parameters: userType(String)
2019-05-14 09:21:53 -<==      Total: 4
2019-05-14 09:21:53 -耗时 : 24
2019-05-14 09:21:53 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:21:54 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-05-14 09:21:54 -HTTP METHOD : GET
2019-05-14 09:21:54 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-14 09:21:54 -参数 : []
2019-05-14 09:21:54 -耗时 : 12
2019-05-14 09:21:54 -返回值 : charts/tableWaterMM
2019-05-14 09:21:55 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:21:55 -HTTP METHOD : GET
2019-05-14 09:21:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:21:55 -参数 : [userType]
2019-05-14 09:21:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:21:55 -==> Parameters: userType(String)
2019-05-14 09:21:55 -<==      Total: 4
2019-05-14 09:21:55 -耗时 : 7
2019-05-14 09:21:55 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:22:02 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-14 09:22:02 -HTTP METHOD : GET
2019-05-14 09:22:02 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-14 09:22:02 -参数 : []
2019-05-14 09:22:02 -耗时 : 1
2019-05-14 09:22:02 -返回值 : system/dept/deptTree
2019-05-14 09:22:02 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3]
2019-05-14 09:22:02 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-14 09:22:02 -HTTP METHOD : GET
2019-05-14 09:22:02 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-14 09:22:02 -参数 : []
2019-05-14 09:22:02 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-14 09:22:02 -==> Parameters: 
2019-05-14 09:22:02 -<==      Total: 3
2019-05-14 09:22:02 -耗时 : 122
2019-05-14 09:22:02 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-14 09:22:05 -请求地址 : http://localhost:8081/charts/tableWaterMM/tableWaterMM
2019-05-14 09:22:05 -HTTP METHOD : POST
2019-05-14 09:22:05 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-14 09:22:05 -参数 : [com.bootdo.moneyLog.vo.WaterLogVo@1a704ca, com.bootdo.water.vo.WaterVo@7afeb4a4]
2019-05-14 09:22:05 -==>  Preparing: SELECT DISTINCT water_price FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 09:22:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:22:05 -<==      Total: 1
2019-05-14 09:22:05 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 09:22:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:22:05 -<==      Total: 1
2019-05-14 09:22:05 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 09:22:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:22:05 -<==      Total: 1
2019-05-14 09:22:05 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 09:22:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:22:05 -<==      Total: 1
2019-05-14 09:22:05 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 09:22:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:22:05 -<==      Total: 1
2019-05-14 09:22:05 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 09:22:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:22:05 -<==      Total: 1
2019-05-14 09:22:05 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "1" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 09:22:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:22:05 -<==      Total: 1
2019-05-14 09:22:05 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE WATER_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 09:22:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:22:05 -<==      Total: 1
2019-05-14 09:22:05 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "1" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 09:22:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:22:05 -<==      Total: 1
2019-05-14 09:22:05 -==>  Preparing: SELECT COUNT(water_type = "1") FROM WATER WHERE `create_time` = ? and user_org = ? 
2019-05-14 09:22:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:22:05 -<==      Total: 1
2019-05-14 09:22:05 -==>  Preparing: SELECT ifnull(SUM(WATER_COST),0) FROM WATER WHERE water_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 09:22:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:22:05 -<==      Total: 1
2019-05-14 09:22:05 -==>  Preparing: SELECT DISTINCT water_price FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 09:22:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:22:05 -<==      Total: 1
2019-05-14 09:22:05 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE WATER_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 09:22:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:22:05 -<==      Total: 1
2019-05-14 09:22:05 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 09:22:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:22:05 -<==      Total: 1
2019-05-14 09:22:05 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE WATER_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 09:22:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:22:05 -<==      Total: 1
2019-05-14 09:22:05 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 09:22:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:22:05 -<==      Total: 1
2019-05-14 09:22:05 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE WATER_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 09:22:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:22:05 -<==      Total: 1
2019-05-14 09:22:05 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM >= 0),0) FROM WATER WHERE water_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 09:22:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:22:05 -<==      Total: 1
2019-05-14 09:22:05 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE WATER_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 09:22:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:22:05 -<==      Total: 1
2019-05-14 09:22:05 -==>  Preparing: SELECT ifnull(SUM(WATER_SUM < 0),0) FROM WATER WHERE water_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 09:22:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:22:05 -<==      Total: 1
2019-05-14 09:22:05 -==>  Preparing: SELECT COUNT(water_type = "2") FROM WATER WHERE `create_time` = ? and user_org = ? 
2019-05-14 09:22:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:22:05 -<==      Total: 1
2019-05-14 09:22:05 -==>  Preparing: SELECT ifnull(SUM(WATER_COST),0) FROM WATER WHERE water_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 09:22:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:22:05 -<==      Total: 1
2019-05-14 09:22:05 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-14 09:22:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:22:05 -<==      Total: 1
2019-05-14 09:22:05 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-14 09:22:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:22:05 -<==      Total: 1
2019-05-14 09:22:05 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-14 09:22:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:22:05 -<==      Total: 1
2019-05-14 09:22:05 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE WATER_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-14 09:22:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:22:05 -<==      Total: 1
2019-05-14 09:22:05 -耗时 : 168
2019-05-14 09:22:05 -返回值 : {LMWaterSumPre=1, CountPrehu=6, SWaterCountOwe=1, LSWaterSumOwe=0, CountOweyu=1, MWaterCountOwe=1, CountPreyu=3, SumS1WaterLog=20, SWaterSumOwe=0, LSWaterCountPre=1, CountLogyu=60, LCountPrehu=2, CountOwehu=2, MWaterCostSum=18, SWaterPrice=10, CountMWaterLog=1, MWaterPrice=6, MWaterCountPre=3, CountLoghu=2, LCountPreyu=1, SWaterSumPre=1, SWaterCountPre=3, CountAllyu=4, LMWaterCountPre=1, MWaterSumOwe=1, SumMWaterLog=40, LCountAllyu=2, LCountOwehu=2, CountAllhu=8, CountCostyu=28, Stotalhu=4, CountPrice=16, LCountAllhu=4, LMWaterCountOwe=1, LCountOweyu=1, MWaterCostCount=4, CountCosthu=8, SWaterCostSum=10, MWaterSumPre=2, Mtotalhu=4, Stotalyu=1, LStotalyu=0, LMtotalyu=2, LMtotalhu=2, CountS1WaterLog=1, LMWaterSumOwe=1, Mtotalyu=3, LStotalhu=2, LSWaterSumPre=0, LSWaterCountOwe=1, SWaterCostCount=4}
2019-05-14 09:22:18 -请求地址 : http://localhost:8081/charts/tableWaterMM/exportWaterMM
2019-05-14 09:22:18 -HTTP METHOD : GET
2019-05-14 09:22:18 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.exportWaterMM
2019-05-14 09:22:18 -参数 : [com.bootdo.water.vo.WaterVo@2277bff4, com.bootdo.moneyLog.vo.WaterLogVo@3d8a386a, org.apache.shiro.web.servlet.ShiroHttpServletResponse@f035714]
2019-05-14 09:22:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 09:22:18 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:22:18 -<==      Total: 3
2019-05-14 09:22:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` < 0 and `create_time` = ? and user_org = ? 
2019-05-14 09:22:18 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:22:18 -<==      Total: 1
2019-05-14 09:22:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `create_time` = ? and user_org = ? 
2019-05-14 09:22:18 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:22:18 -<==      Total: 4
2019-05-14 09:22:18 -耗时 : 578
2019-05-14 09:22:18 -返回值 : null
2019-05-14 09:25:34 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-14 09:25:34 -HTTP METHOD : GET
2019-05-14 09:25:34 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-14 09:25:34 -参数 : []
2019-05-14 09:25:34 -耗时 : 13
2019-05-14 09:25:34 -返回值 : charts/tableHeatMM
2019-05-14 09:25:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:25:35 -HTTP METHOD : GET
2019-05-14 09:25:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:25:35 -参数 : [userType]
2019-05-14 09:25:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:25:35 -==> Parameters: userType(String)
2019-05-14 09:25:35 -<==      Total: 4
2019-05-14 09:25:35 -耗时 : 6
2019-05-14 09:25:35 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:25:44 -请求地址 : http://localhost:8081/index
2019-05-14 09:25:44 -HTTP METHOD : GET
2019-05-14 09:25:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-14 09:25:44 -参数 : [{}]
2019-05-14 09:25:44 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-14 09:25:44 -==> Parameters: 1(Long)
2019-05-14 09:25:45 -<==      Total: 49
2019-05-14 09:25:45 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-14 09:25:45 -==> Parameters: 138(Long)
2019-05-14 09:25:45 -<==      Total: 1
2019-05-14 09:25:45 -耗时 : 24
2019-05-14 09:25:45 -返回值 : index_v1
2019-05-14 09:25:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 09:25:45 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 25(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-14 09:25:45.017(Timestamp)
2019-05-14 09:25:45 -请求地址 : http://localhost:8081/main
2019-05-14 09:25:45 -HTTP METHOD : GET
2019-05-14 09:25:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 09:25:45 -参数 : []
2019-05-14 09:25:45 -耗时 : 1
2019-05-14 09:25:45 -返回值 : main
2019-05-14 09:25:45 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-14 09:25:45 -HTTP METHOD : GET
2019-05-14 09:25:45 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-14 09:25:45 -参数 : []
2019-05-14 09:25:45 -<==    Updates: 1
2019-05-14 09:25:45 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-14 09:25:45 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-14 09:25:45 -<==      Total: 0
2019-05-14 09:25:45 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-14 09:25:45 -==> Parameters: 1(Long), 0(String)
2019-05-14 09:25:45 -<==      Total: 1
2019-05-14 09:25:45 -耗时 : 67
2019-05-14 09:25:45 -返回值 : com.bootdo.common.utils.PageUtils@1f328c41
2019-05-14 09:25:45 -请求地址 : http://localhost:8081/main
2019-05-14 09:25:45 -HTTP METHOD : GET
2019-05-14 09:25:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 09:25:45 -参数 : []
2019-05-14 09:25:45 -耗时 : 0
2019-05-14 09:25:45 -返回值 : main
2019-05-14 09:25:49 -请求地址 : http://localhost:8081/charts/countMM
2019-05-14 09:25:49 -HTTP METHOD : GET
2019-05-14 09:25:49 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-05-14 09:25:49 -参数 : []
2019-05-14 09:25:49 -耗时 : 12
2019-05-14 09:25:49 -返回值 : charts/countMM
2019-05-14 09:25:49 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:25:49 -HTTP METHOD : GET
2019-05-14 09:25:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:25:49 -参数 : [userType]
2019-05-14 09:25:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:25:49 -==> Parameters: userType(String)
2019-05-14 09:25:49 -<==      Total: 4
2019-05-14 09:25:49 -耗时 : 10
2019-05-14 09:25:49 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:25:51 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-14 09:25:51 -HTTP METHOD : GET
2019-05-14 09:25:51 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 09:25:51 -参数 : []
2019-05-14 09:25:51 -耗时 : 0
2019-05-14 09:25:51 -返回值 : charts/tableElecMM
2019-05-14 09:25:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:25:51 -HTTP METHOD : GET
2019-05-14 09:25:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:25:51 -参数 : [userType]
2019-05-14 09:25:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:25:51 -==> Parameters: userType(String)
2019-05-14 09:25:51 -<==      Total: 4
2019-05-14 09:25:51 -耗时 : 5
2019-05-14 09:25:51 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:25:53 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-14 09:25:53 -HTTP METHOD : GET
2019-05-14 09:25:53 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-14 09:25:53 -参数 : []
2019-05-14 09:25:53 -耗时 : 0
2019-05-14 09:25:53 -返回值 : charts/tableHeatMM
2019-05-14 09:25:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:25:53 -HTTP METHOD : GET
2019-05-14 09:25:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:25:53 -参数 : [userType]
2019-05-14 09:25:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:25:53 -==> Parameters: userType(String)
2019-05-14 09:25:53 -<==      Total: 4
2019-05-14 09:25:53 -耗时 : 3
2019-05-14 09:25:53 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:27:44 -请求地址 : http://localhost:8081/index
2019-05-14 09:27:44 -HTTP METHOD : GET
2019-05-14 09:27:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-14 09:27:44 -参数 : [{}]
2019-05-14 09:27:44 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-14 09:27:44 -==> Parameters: 1(Long)
2019-05-14 09:27:44 -<==      Total: 49
2019-05-14 09:27:44 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-14 09:27:44 -==> Parameters: 138(Long)
2019-05-14 09:27:44 -<==      Total: 1
2019-05-14 09:27:44 -耗时 : 24
2019-05-14 09:27:44 -返回值 : index_v1
2019-05-14 09:27:44 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 09:27:44 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 25(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-14 09:27:44.378(Timestamp)
2019-05-14 09:27:44 -请求地址 : http://localhost:8081/main
2019-05-14 09:27:44 -HTTP METHOD : GET
2019-05-14 09:27:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 09:27:44 -参数 : []
2019-05-14 09:27:44 -耗时 : 2
2019-05-14 09:27:44 -返回值 : main
2019-05-14 09:27:44 -<==    Updates: 1
2019-05-14 09:27:44 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-14 09:27:44 -HTTP METHOD : GET
2019-05-14 09:27:44 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-14 09:27:44 -参数 : []
2019-05-14 09:27:44 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-14 09:27:44 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-14 09:27:44 -<==      Total: 0
2019-05-14 09:27:44 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-14 09:27:44 -==> Parameters: 1(Long), 0(String)
2019-05-14 09:27:44 -<==      Total: 1
2019-05-14 09:27:44 -耗时 : 7
2019-05-14 09:27:44 -返回值 : com.bootdo.common.utils.PageUtils@4ee861c1
2019-05-14 09:27:44 -请求地址 : http://localhost:8081/main
2019-05-14 09:27:44 -HTTP METHOD : GET
2019-05-14 09:27:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 09:27:44 -参数 : []
2019-05-14 09:27:44 -耗时 : 0
2019-05-14 09:27:44 -返回值 : main
2019-05-14 09:27:47 -请求地址 : http://localhost:8081/charts/countMM
2019-05-14 09:27:47 -HTTP METHOD : GET
2019-05-14 09:27:47 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-05-14 09:27:47 -参数 : []
2019-05-14 09:27:47 -耗时 : 0
2019-05-14 09:27:47 -返回值 : charts/countMM
2019-05-14 09:27:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:27:47 -HTTP METHOD : GET
2019-05-14 09:27:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:27:47 -参数 : [userType]
2019-05-14 09:27:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:27:47 -==> Parameters: userType(String)
2019-05-14 09:27:47 -<==      Total: 4
2019-05-14 09:27:47 -耗时 : 4
2019-05-14 09:27:47 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:27:50 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-14 09:27:50 -HTTP METHOD : GET
2019-05-14 09:27:50 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 09:27:50 -参数 : []
2019-05-14 09:27:50 -耗时 : 0
2019-05-14 09:27:50 -返回值 : charts/tableElecMM
2019-05-14 09:27:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:27:50 -HTTP METHOD : GET
2019-05-14 09:27:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:27:50 -参数 : [userType]
2019-05-14 09:27:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:27:50 -==> Parameters: userType(String)
2019-05-14 09:27:50 -<==      Total: 4
2019-05-14 09:27:50 -耗时 : 8
2019-05-14 09:27:50 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:27:51 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-14 09:27:51 -HTTP METHOD : GET
2019-05-14 09:27:51 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-14 09:27:51 -参数 : []
2019-05-14 09:27:51 -耗时 : 1
2019-05-14 09:27:51 -返回值 : charts/tableHeatMM
2019-05-14 09:27:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:27:51 -HTTP METHOD : GET
2019-05-14 09:27:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:27:51 -参数 : [userType]
2019-05-14 09:27:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:27:51 -==> Parameters: userType(String)
2019-05-14 09:27:51 -<==      Total: 4
2019-05-14 09:27:51 -耗时 : 4
2019-05-14 09:27:51 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:27:55 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-14 09:27:55 -HTTP METHOD : GET
2019-05-14 09:27:55 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-14 09:27:55 -参数 : []
2019-05-14 09:27:55 -耗时 : 1
2019-05-14 09:27:55 -返回值 : charts/tableHeatMM
2019-05-14 09:27:55 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:27:55 -HTTP METHOD : GET
2019-05-14 09:27:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:27:55 -参数 : [userType]
2019-05-14 09:27:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:27:55 -==> Parameters: userType(String)
2019-05-14 09:27:55 -<==      Total: 4
2019-05-14 09:27:55 -耗时 : 5
2019-05-14 09:27:55 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:28:22 -请求地址 : http://localhost:8081/login;JSESSIONID=ba3ea68c-faea-4859-8dd6-eb71f7fd2851
2019-05-14 09:28:22 -HTTP METHOD : GET
2019-05-14 09:28:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-14 09:28:22 -参数 : [{}]
2019-05-14 09:28:22 -耗时 : 1
2019-05-14 09:28:22 -返回值 : login
2019-05-14 09:28:22 -请求地址 : http://localhost:8081/getVerify
2019-05-14 09:28:22 -HTTP METHOD : GET
2019-05-14 09:28:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-14 09:28:22 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@58707c1d, org.apache.shiro.web.servlet.ShiroHttpServletResponse@47ec921e]
2019-05-14 09:28:22 -4259
2019-05-14 09:28:22 -耗时 : 37
2019-05-14 09:28:22 -返回值 : null
2019-05-14 09:28:23 -请求地址 : http://localhost:8081/login
2019-05-14 09:28:23 -HTTP METHOD : GET
2019-05-14 09:28:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-14 09:28:23 -参数 : [{}]
2019-05-14 09:28:23 -耗时 : 1
2019-05-14 09:28:23 -返回值 : login
2019-05-14 09:28:28 -请求地址 : http://localhost:8081/login
2019-05-14 09:28:28 -HTTP METHOD : POST
2019-05-14 09:28:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-14 09:28:28 -参数 : [admin, 111111, 4259, org.apache.shiro.web.servlet.ShiroHttpServletRequest@692d9798]
2019-05-14 09:28:28 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-14 09:28:28 -==> Parameters: admin(String)
2019-05-14 09:28:28 -<==      Total: 1
2019-05-14 09:28:28 -耗时 : 13
2019-05-14 09:28:28 -返回值 : {msg=操作成功, code=0}
2019-05-14 09:28:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 09:28:28 -==> Parameters: 1(Long), admin(String), 登录(String), 14(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-14 09:28:28.198(Timestamp)
2019-05-14 09:28:28 -请求地址 : http://localhost:8081/index
2019-05-14 09:28:28 -HTTP METHOD : GET
2019-05-14 09:28:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-14 09:28:28 -参数 : [{}]
2019-05-14 09:28:28 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-14 09:28:28 -==> Parameters: 1(Long)
2019-05-14 09:28:28 -<==    Updates: 1
2019-05-14 09:28:28 -<==      Total: 49
2019-05-14 09:28:28 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-14 09:28:28 -==> Parameters: 138(Long)
2019-05-14 09:28:28 -<==      Total: 1
2019-05-14 09:28:28 -耗时 : 166
2019-05-14 09:28:28 -返回值 : index_v1
2019-05-14 09:28:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 09:28:28 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 166(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-14 09:28:28.415(Timestamp)
2019-05-14 09:28:28 -<==    Updates: 1
2019-05-14 09:28:28 -请求地址 : http://localhost:8081/main
2019-05-14 09:28:28 -HTTP METHOD : GET
2019-05-14 09:28:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 09:28:28 -参数 : []
2019-05-14 09:28:28 -耗时 : 1
2019-05-14 09:28:28 -返回值 : main
2019-05-14 09:28:28 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-14 09:28:28 -HTTP METHOD : GET
2019-05-14 09:28:28 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-14 09:28:28 -参数 : []
2019-05-14 09:28:28 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-14 09:28:28 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-14 09:28:29 -请求地址 : http://localhost:8081/main
2019-05-14 09:28:29 -HTTP METHOD : GET
2019-05-14 09:28:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 09:28:29 -参数 : []
2019-05-14 09:28:29 -耗时 : 1
2019-05-14 09:28:29 -返回值 : main
2019-05-14 09:28:29 -<==      Total: 0
2019-05-14 09:28:29 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-14 09:28:29 -==> Parameters: 1(Long), 0(String)
2019-05-14 09:28:29 -<==      Total: 1
2019-05-14 09:28:29 -耗时 : 355
2019-05-14 09:28:29 -返回值 : com.bootdo.common.utils.PageUtils@43566878
2019-05-14 09:28:36 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-14 09:28:36 -==> Parameters: 1(Long)
2019-05-14 09:28:36 -<==      Total: 93
2019-05-14 09:28:36 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-14 09:28:36 -HTTP METHOD : GET
2019-05-14 09:28:36 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-14 09:28:36 -参数 : []
2019-05-14 09:28:36 -耗时 : 9
2019-05-14 09:28:36 -返回值 : charts/tableElecYY
2019-05-14 09:28:37 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:28:37 -HTTP METHOD : GET
2019-05-14 09:28:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:28:37 -参数 : [userType]
2019-05-14 09:28:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:28:37 -==> Parameters: userType(String)
2019-05-14 09:28:37 -<==      Total: 4
2019-05-14 09:28:37 -耗时 : 26
2019-05-14 09:28:37 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:28:37 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-14 09:28:37 -HTTP METHOD : GET
2019-05-14 09:28:37 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-14 09:28:37 -参数 : []
2019-05-14 09:28:37 -耗时 : 8
2019-05-14 09:28:37 -返回值 : charts/tableHeatYY
2019-05-14 09:28:37 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:28:37 -HTTP METHOD : GET
2019-05-14 09:28:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:28:37 -参数 : [userType]
2019-05-14 09:28:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:28:37 -==> Parameters: userType(String)
2019-05-14 09:28:37 -<==      Total: 4
2019-05-14 09:28:37 -耗时 : 3
2019-05-14 09:28:37 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:28:38 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-14 09:28:38 -HTTP METHOD : GET
2019-05-14 09:28:38 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-14 09:28:38 -参数 : []
2019-05-14 09:28:38 -耗时 : 7
2019-05-14 09:28:38 -返回值 : charts/tableWaterYY
2019-05-14 09:28:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:28:38 -HTTP METHOD : GET
2019-05-14 09:28:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:28:38 -参数 : [userType]
2019-05-14 09:28:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:28:38 -==> Parameters: userType(String)
2019-05-14 09:28:38 -<==      Total: 4
2019-05-14 09:28:38 -耗时 : 5
2019-05-14 09:28:38 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:28:39 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-14 09:28:39 -HTTP METHOD : GET
2019-05-14 09:28:39 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-14 09:28:39 -参数 : []
2019-05-14 09:28:39 -耗时 : 1
2019-05-14 09:28:39 -返回值 : charts/tableHeatYY
2019-05-14 09:28:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:28:39 -HTTP METHOD : GET
2019-05-14 09:28:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:28:39 -参数 : [userType]
2019-05-14 09:28:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:28:39 -==> Parameters: userType(String)
2019-05-14 09:28:39 -<==      Total: 4
2019-05-14 09:28:39 -耗时 : 4
2019-05-14 09:28:39 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:28:40 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-14 09:28:40 -HTTP METHOD : GET
2019-05-14 09:28:40 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-14 09:28:40 -参数 : []
2019-05-14 09:28:40 -耗时 : 1
2019-05-14 09:28:40 -返回值 : charts/tableElecYY
2019-05-14 09:28:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:28:40 -HTTP METHOD : GET
2019-05-14 09:28:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:28:40 -参数 : [userType]
2019-05-14 09:28:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:28:40 -==> Parameters: userType(String)
2019-05-14 09:28:40 -<==      Total: 4
2019-05-14 09:28:40 -耗时 : 5
2019-05-14 09:28:40 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:28:41 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-14 09:28:41 -HTTP METHOD : GET
2019-05-14 09:28:41 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-14 09:28:41 -参数 : []
2019-05-14 09:28:41 -耗时 : 1
2019-05-14 09:28:41 -返回值 : charts/tableHeatYY
2019-05-14 09:28:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:28:41 -HTTP METHOD : GET
2019-05-14 09:28:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:28:41 -参数 : [userType]
2019-05-14 09:28:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:28:41 -==> Parameters: userType(String)
2019-05-14 09:28:41 -<==      Total: 4
2019-05-14 09:28:41 -耗时 : 4
2019-05-14 09:28:41 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:28:49 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-14 09:28:49 -HTTP METHOD : GET
2019-05-14 09:28:49 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-14 09:28:49 -参数 : []
2019-05-14 09:28:49 -耗时 : 1
2019-05-14 09:28:49 -返回值 : system/dept/deptTree
2019-05-14 09:28:50 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-14 09:28:50 -HTTP METHOD : GET
2019-05-14 09:28:50 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-14 09:28:50 -参数 : []
2019-05-14 09:28:50 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-14 09:28:50 -==> Parameters: 
2019-05-14 09:28:50 -<==      Total: 3
2019-05-14 09:28:50 -耗时 : 5
2019-05-14 09:28:50 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-14 09:29:56 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-14 09:29:56 -HTTP METHOD : GET
2019-05-14 09:29:56 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 09:29:56 -参数 : []
2019-05-14 09:29:56 -耗时 : 0
2019-05-14 09:29:56 -返回值 : charts/tableElecMM
2019-05-14 09:29:56 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:29:56 -HTTP METHOD : GET
2019-05-14 09:29:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:29:56 -参数 : [userType]
2019-05-14 09:29:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:29:56 -==> Parameters: userType(String)
2019-05-14 09:29:56 -<==      Total: 4
2019-05-14 09:29:56 -耗时 : 5
2019-05-14 09:29:56 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:29:58 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-05-14 09:29:58 -HTTP METHOD : GET
2019-05-14 09:29:58 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-14 09:29:58 -参数 : []
2019-05-14 09:29:58 -耗时 : 1
2019-05-14 09:29:58 -返回值 : charts/tableWaterMM
2019-05-14 09:29:58 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:29:58 -HTTP METHOD : GET
2019-05-14 09:29:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:29:58 -参数 : [userType]
2019-05-14 09:29:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:29:58 -==> Parameters: userType(String)
2019-05-14 09:29:58 -<==      Total: 4
2019-05-14 09:29:58 -耗时 : 5
2019-05-14 09:29:58 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:29:58 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-14 09:29:58 -HTTP METHOD : GET
2019-05-14 09:29:58 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-14 09:29:58 -参数 : []
2019-05-14 09:29:58 -耗时 : 1
2019-05-14 09:29:58 -返回值 : charts/tableHeatMM
2019-05-14 09:29:59 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:29:59 -HTTP METHOD : GET
2019-05-14 09:29:59 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:29:59 -参数 : [userType]
2019-05-14 09:29:59 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:29:59 -==> Parameters: userType(String)
2019-05-14 09:29:59 -<==      Total: 4
2019-05-14 09:29:59 -耗时 : 6
2019-05-14 09:29:59 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:30:01 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-14 09:30:01 -HTTP METHOD : GET
2019-05-14 09:30:01 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 09:30:01 -参数 : []
2019-05-14 09:30:01 -耗时 : 1
2019-05-14 09:30:01 -返回值 : charts/tableElecMM
2019-05-14 09:30:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:30:01 -HTTP METHOD : GET
2019-05-14 09:30:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:30:01 -参数 : [userType]
2019-05-14 09:30:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:30:01 -==> Parameters: userType(String)
2019-05-14 09:30:01 -<==      Total: 4
2019-05-14 09:30:01 -耗时 : 2
2019-05-14 09:30:01 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:30:02 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-14 09:30:02 -HTTP METHOD : GET
2019-05-14 09:30:02 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-14 09:30:02 -参数 : []
2019-05-14 09:30:02 -耗时 : 0
2019-05-14 09:30:02 -返回值 : charts/tableHeatMM
2019-05-14 09:30:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:30:03 -HTTP METHOD : GET
2019-05-14 09:30:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:30:03 -参数 : [userType]
2019-05-14 09:30:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:30:03 -==> Parameters: userType(String)
2019-05-14 09:30:03 -<==      Total: 4
2019-05-14 09:30:03 -耗时 : 3
2019-05-14 09:30:03 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:30:38 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-05-14 09:30:38 -HTTP METHOD : GET
2019-05-14 09:30:38 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-14 09:30:38 -参数 : []
2019-05-14 09:30:38 -耗时 : 0
2019-05-14 09:30:38 -返回值 : charts/tableWaterMM
2019-05-14 09:30:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:30:39 -HTTP METHOD : GET
2019-05-14 09:30:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:30:39 -参数 : [userType]
2019-05-14 09:30:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:30:39 -==> Parameters: userType(String)
2019-05-14 09:30:39 -<==      Total: 4
2019-05-14 09:30:39 -耗时 : 4
2019-05-14 09:30:39 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:30:39 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-14 09:30:39 -HTTP METHOD : GET
2019-05-14 09:30:39 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 09:30:39 -参数 : []
2019-05-14 09:30:39 -耗时 : 0
2019-05-14 09:30:39 -返回值 : charts/tableElecMM
2019-05-14 09:30:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:30:40 -HTTP METHOD : GET
2019-05-14 09:30:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:30:40 -参数 : [userType]
2019-05-14 09:30:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:30:40 -==> Parameters: userType(String)
2019-05-14 09:30:40 -<==      Total: 4
2019-05-14 09:30:40 -耗时 : 4
2019-05-14 09:30:40 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:30:40 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-14 09:30:40 -HTTP METHOD : GET
2019-05-14 09:30:40 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-14 09:30:40 -参数 : []
2019-05-14 09:30:40 -耗时 : 0
2019-05-14 09:30:40 -返回值 : charts/tableHeatMM
2019-05-14 09:30:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:30:40 -HTTP METHOD : GET
2019-05-14 09:30:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:30:40 -参数 : [userType]
2019-05-14 09:30:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:30:40 -==> Parameters: userType(String)
2019-05-14 09:30:40 -<==      Total: 4
2019-05-14 09:30:40 -耗时 : 7
2019-05-14 09:30:40 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:30:41 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-14 09:30:41 -HTTP METHOD : GET
2019-05-14 09:30:41 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 09:30:41 -参数 : []
2019-05-14 09:30:41 -耗时 : 0
2019-05-14 09:30:41 -返回值 : charts/tableElecMM
2019-05-14 09:30:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:30:41 -HTTP METHOD : GET
2019-05-14 09:30:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:30:41 -参数 : [userType]
2019-05-14 09:30:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:30:41 -==> Parameters: userType(String)
2019-05-14 09:30:41 -<==      Total: 4
2019-05-14 09:30:41 -耗时 : 3
2019-05-14 09:30:41 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:30:42 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-14 09:30:42 -HTTP METHOD : GET
2019-05-14 09:30:42 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-14 09:30:42 -参数 : []
2019-05-14 09:30:42 -耗时 : 0
2019-05-14 09:30:42 -返回值 : charts/tableHeatMM
2019-05-14 09:30:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:30:42 -HTTP METHOD : GET
2019-05-14 09:30:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:30:42 -参数 : [userType]
2019-05-14 09:30:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:30:42 -==> Parameters: userType(String)
2019-05-14 09:30:42 -<==      Total: 4
2019-05-14 09:30:42 -耗时 : 3
2019-05-14 09:30:42 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:30:43 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-05-14 09:30:43 -HTTP METHOD : GET
2019-05-14 09:30:43 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-14 09:30:43 -参数 : []
2019-05-14 09:30:43 -耗时 : 1
2019-05-14 09:30:43 -返回值 : charts/tableWaterMM
2019-05-14 09:30:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:30:43 -HTTP METHOD : GET
2019-05-14 09:30:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:30:43 -参数 : [userType]
2019-05-14 09:30:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:30:43 -==> Parameters: userType(String)
2019-05-14 09:30:43 -<==      Total: 4
2019-05-14 09:30:43 -耗时 : 4
2019-05-14 09:30:43 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:30:43 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-14 09:30:43 -HTTP METHOD : GET
2019-05-14 09:30:43 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-14 09:30:43 -参数 : []
2019-05-14 09:30:43 -耗时 : 0
2019-05-14 09:30:43 -返回值 : charts/tableHeatMM
2019-05-14 09:30:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:30:44 -HTTP METHOD : GET
2019-05-14 09:30:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:30:44 -参数 : [userType]
2019-05-14 09:30:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:30:44 -==> Parameters: userType(String)
2019-05-14 09:30:44 -<==      Total: 4
2019-05-14 09:30:44 -耗时 : 6
2019-05-14 09:30:44 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:30:44 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-14 09:30:44 -HTTP METHOD : GET
2019-05-14 09:30:44 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 09:30:44 -参数 : []
2019-05-14 09:30:44 -耗时 : 0
2019-05-14 09:30:44 -返回值 : charts/tableElecMM
2019-05-14 09:30:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:30:44 -HTTP METHOD : GET
2019-05-14 09:30:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:30:44 -参数 : [userType]
2019-05-14 09:30:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:30:44 -==> Parameters: userType(String)
2019-05-14 09:30:44 -<==      Total: 4
2019-05-14 09:30:44 -耗时 : 4
2019-05-14 09:30:44 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:30:45 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-14 09:30:45 -HTTP METHOD : GET
2019-05-14 09:30:45 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-14 09:30:45 -参数 : []
2019-05-14 09:30:45 -耗时 : 1
2019-05-14 09:30:45 -返回值 : charts/tableHeatMM
2019-05-14 09:30:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:30:45 -HTTP METHOD : GET
2019-05-14 09:30:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:30:45 -参数 : [userType]
2019-05-14 09:30:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:30:45 -==> Parameters: userType(String)
2019-05-14 09:30:45 -<==      Total: 4
2019-05-14 09:30:45 -耗时 : 3
2019-05-14 09:30:45 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:30:45 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-05-14 09:30:45 -HTTP METHOD : GET
2019-05-14 09:30:45 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-14 09:30:45 -参数 : []
2019-05-14 09:30:45 -耗时 : 0
2019-05-14 09:30:45 -返回值 : charts/tableWaterMM
2019-05-14 09:30:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:30:45 -HTTP METHOD : GET
2019-05-14 09:30:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:30:45 -参数 : [userType]
2019-05-14 09:30:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:30:45 -==> Parameters: userType(String)
2019-05-14 09:30:45 -<==      Total: 4
2019-05-14 09:30:45 -耗时 : 4
2019-05-14 09:30:45 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:30:46 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-14 09:30:46 -HTTP METHOD : GET
2019-05-14 09:30:46 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-14 09:30:46 -参数 : []
2019-05-14 09:30:46 -耗时 : 0
2019-05-14 09:30:46 -返回值 : charts/tableHeatMM
2019-05-14 09:30:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:30:46 -HTTP METHOD : GET
2019-05-14 09:30:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:30:46 -参数 : [userType]
2019-05-14 09:30:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:30:46 -==> Parameters: userType(String)
2019-05-14 09:30:46 -<==      Total: 4
2019-05-14 09:30:46 -耗时 : 5
2019-05-14 09:30:46 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:30:48 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-05-14 09:30:48 -HTTP METHOD : GET
2019-05-14 09:30:48 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-14 09:30:48 -参数 : []
2019-05-14 09:30:48 -耗时 : 1
2019-05-14 09:30:48 -返回值 : charts/tableWaterMM
2019-05-14 09:30:48 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:30:48 -HTTP METHOD : GET
2019-05-14 09:30:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:30:48 -参数 : [userType]
2019-05-14 09:30:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:30:48 -==> Parameters: userType(String)
2019-05-14 09:30:48 -<==      Total: 4
2019-05-14 09:30:48 -耗时 : 3
2019-05-14 09:30:48 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:30:48 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-14 09:30:48 -HTTP METHOD : GET
2019-05-14 09:30:48 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-14 09:30:48 -参数 : []
2019-05-14 09:30:48 -耗时 : 1
2019-05-14 09:30:48 -返回值 : charts/tableHeatMM
2019-05-14 09:30:49 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:30:49 -HTTP METHOD : GET
2019-05-14 09:30:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:30:49 -参数 : [userType]
2019-05-14 09:30:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:30:49 -==> Parameters: userType(String)
2019-05-14 09:30:49 -<==      Total: 4
2019-05-14 09:30:49 -耗时 : 4
2019-05-14 09:30:49 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:30:49 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-14 09:30:49 -HTTP METHOD : GET
2019-05-14 09:30:49 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 09:30:49 -参数 : []
2019-05-14 09:30:49 -耗时 : 1
2019-05-14 09:30:49 -返回值 : charts/tableElecMM
2019-05-14 09:30:49 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:30:49 -HTTP METHOD : GET
2019-05-14 09:30:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:30:49 -参数 : [userType]
2019-05-14 09:30:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:30:49 -==> Parameters: userType(String)
2019-05-14 09:30:49 -<==      Total: 4
2019-05-14 09:30:49 -耗时 : 2
2019-05-14 09:30:49 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:30:50 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-14 09:30:50 -HTTP METHOD : GET
2019-05-14 09:30:50 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-14 09:30:50 -参数 : []
2019-05-14 09:30:50 -耗时 : 0
2019-05-14 09:30:50 -返回值 : charts/tableHeatMM
2019-05-14 09:30:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:30:50 -HTTP METHOD : GET
2019-05-14 09:30:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:30:50 -参数 : [userType]
2019-05-14 09:30:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:30:50 -==> Parameters: userType(String)
2019-05-14 09:30:50 -<==      Total: 4
2019-05-14 09:30:50 -耗时 : 4
2019-05-14 09:30:50 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:31:31 -请求地址 : http://localhost:8081/index
2019-05-14 09:31:31 -HTTP METHOD : GET
2019-05-14 09:31:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-14 09:31:31 -参数 : [{}]
2019-05-14 09:31:31 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-14 09:31:31 -==> Parameters: 1(Long)
2019-05-14 09:31:31 -<==      Total: 49
2019-05-14 09:31:31 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-14 09:31:31 -==> Parameters: 138(Long)
2019-05-14 09:31:31 -<==      Total: 1
2019-05-14 09:31:31 -耗时 : 13
2019-05-14 09:31:31 -返回值 : index_v1
2019-05-14 09:31:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 09:31:31 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 13(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-14 09:31:31.385(Timestamp)
2019-05-14 09:31:31 -请求地址 : http://localhost:8081/main
2019-05-14 09:31:31 -HTTP METHOD : GET
2019-05-14 09:31:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 09:31:31 -参数 : []
2019-05-14 09:31:31 -耗时 : 0
2019-05-14 09:31:31 -返回值 : main
2019-05-14 09:31:31 -<==    Updates: 1
2019-05-14 09:31:31 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-14 09:31:31 -HTTP METHOD : GET
2019-05-14 09:31:31 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-14 09:31:31 -参数 : []
2019-05-14 09:31:31 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-14 09:31:31 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-14 09:31:31 -<==      Total: 0
2019-05-14 09:31:31 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-14 09:31:31 -==> Parameters: 1(Long), 0(String)
2019-05-14 09:31:31 -<==      Total: 1
2019-05-14 09:31:31 -耗时 : 20
2019-05-14 09:31:31 -返回值 : com.bootdo.common.utils.PageUtils@5026df18
2019-05-14 09:31:31 -请求地址 : http://localhost:8081/main
2019-05-14 09:31:31 -HTTP METHOD : GET
2019-05-14 09:31:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 09:31:31 -参数 : []
2019-05-14 09:31:31 -耗时 : 0
2019-05-14 09:31:31 -返回值 : main
2019-05-14 09:31:34 -请求地址 : http://localhost:8081/charts/countYY
2019-05-14 09:31:34 -HTTP METHOD : GET
2019-05-14 09:31:34 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-05-14 09:31:34 -参数 : []
2019-05-14 09:31:34 -耗时 : 0
2019-05-14 09:31:34 -返回值 : charts/countYY
2019-05-14 09:31:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:31:34 -HTTP METHOD : GET
2019-05-14 09:31:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:31:34 -参数 : [userType]
2019-05-14 09:31:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:31:34 -==> Parameters: userType(String)
2019-05-14 09:31:34 -<==      Total: 4
2019-05-14 09:31:34 -耗时 : 2
2019-05-14 09:31:34 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:31:36 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-14 09:31:36 -HTTP METHOD : GET
2019-05-14 09:31:36 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-14 09:31:36 -参数 : []
2019-05-14 09:31:36 -耗时 : 0
2019-05-14 09:31:36 -返回值 : charts/tableElecYY
2019-05-14 09:31:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:31:36 -HTTP METHOD : GET
2019-05-14 09:31:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:31:36 -参数 : [userType]
2019-05-14 09:31:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:31:36 -==> Parameters: userType(String)
2019-05-14 09:31:36 -<==      Total: 4
2019-05-14 09:31:36 -耗时 : 3
2019-05-14 09:31:36 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:31:37 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-14 09:31:37 -HTTP METHOD : GET
2019-05-14 09:31:37 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 09:31:37 -参数 : []
2019-05-14 09:31:37 -耗时 : 0
2019-05-14 09:31:37 -返回值 : charts/tableElecMM
2019-05-14 09:31:37 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:31:37 -HTTP METHOD : GET
2019-05-14 09:31:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:31:37 -参数 : [userType]
2019-05-14 09:31:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:31:37 -==> Parameters: userType(String)
2019-05-14 09:31:37 -<==      Total: 4
2019-05-14 09:31:37 -耗时 : 4
2019-05-14 09:31:37 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:31:38 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-14 09:31:38 -HTTP METHOD : GET
2019-05-14 09:31:38 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-14 09:31:38 -参数 : []
2019-05-14 09:31:38 -耗时 : 0
2019-05-14 09:31:38 -返回值 : charts/tableHeatMM
2019-05-14 09:31:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:31:38 -HTTP METHOD : GET
2019-05-14 09:31:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:31:38 -参数 : [userType]
2019-05-14 09:31:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:31:38 -==> Parameters: userType(String)
2019-05-14 09:31:38 -<==      Total: 4
2019-05-14 09:31:38 -耗时 : 3
2019-05-14 09:31:38 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:31:39 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-05-14 09:31:39 -HTTP METHOD : GET
2019-05-14 09:31:39 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-14 09:31:39 -参数 : []
2019-05-14 09:31:39 -耗时 : 0
2019-05-14 09:31:39 -返回值 : charts/tableWaterMM
2019-05-14 09:31:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:31:39 -HTTP METHOD : GET
2019-05-14 09:31:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:31:39 -参数 : [userType]
2019-05-14 09:31:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:31:39 -==> Parameters: userType(String)
2019-05-14 09:31:39 -<==      Total: 4
2019-05-14 09:31:39 -耗时 : 3
2019-05-14 09:31:39 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:31:40 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-14 09:31:40 -HTTP METHOD : GET
2019-05-14 09:31:40 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-14 09:31:40 -参数 : []
2019-05-14 09:31:40 -耗时 : 0
2019-05-14 09:31:40 -返回值 : charts/tableHeatMM
2019-05-14 09:31:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:31:40 -HTTP METHOD : GET
2019-05-14 09:31:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:31:40 -参数 : [userType]
2019-05-14 09:31:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:31:40 -==> Parameters: userType(String)
2019-05-14 09:31:40 -<==      Total: 4
2019-05-14 09:31:40 -耗时 : 3
2019-05-14 09:31:40 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:31:41 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-14 09:31:41 -HTTP METHOD : GET
2019-05-14 09:31:41 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 09:31:41 -参数 : []
2019-05-14 09:31:41 -耗时 : 0
2019-05-14 09:31:41 -返回值 : charts/tableElecMM
2019-05-14 09:31:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:31:41 -HTTP METHOD : GET
2019-05-14 09:31:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:31:41 -参数 : [userType]
2019-05-14 09:31:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:31:41 -==> Parameters: userType(String)
2019-05-14 09:31:41 -<==      Total: 4
2019-05-14 09:31:41 -耗时 : 4
2019-05-14 09:31:41 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:31:41 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-14 09:31:41 -HTTP METHOD : GET
2019-05-14 09:31:41 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-14 09:31:41 -参数 : []
2019-05-14 09:31:41 -耗时 : 1
2019-05-14 09:31:41 -返回值 : charts/tableHeatMM
2019-05-14 09:31:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:31:41 -HTTP METHOD : GET
2019-05-14 09:31:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:31:41 -参数 : [userType]
2019-05-14 09:31:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:31:41 -==> Parameters: userType(String)
2019-05-14 09:31:41 -<==      Total: 4
2019-05-14 09:31:41 -耗时 : 4
2019-05-14 09:31:41 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:31:42 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-05-14 09:31:42 -HTTP METHOD : GET
2019-05-14 09:31:42 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-14 09:31:42 -参数 : []
2019-05-14 09:31:42 -耗时 : 0
2019-05-14 09:31:42 -返回值 : charts/tableWaterMM
2019-05-14 09:31:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:31:42 -HTTP METHOD : GET
2019-05-14 09:31:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:31:42 -参数 : [userType]
2019-05-14 09:31:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:31:42 -==> Parameters: userType(String)
2019-05-14 09:31:42 -<==      Total: 4
2019-05-14 09:31:42 -耗时 : 4
2019-05-14 09:31:42 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:31:43 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-14 09:31:43 -HTTP METHOD : GET
2019-05-14 09:31:43 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-14 09:31:43 -参数 : []
2019-05-14 09:31:43 -耗时 : 0
2019-05-14 09:31:43 -返回值 : charts/tableHeatMM
2019-05-14 09:31:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:31:43 -HTTP METHOD : GET
2019-05-14 09:31:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:31:43 -参数 : [userType]
2019-05-14 09:31:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:31:43 -==> Parameters: userType(String)
2019-05-14 09:31:43 -<==      Total: 4
2019-05-14 09:31:43 -耗时 : 4
2019-05-14 09:31:43 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:31:43 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-14 09:31:43 -HTTP METHOD : GET
2019-05-14 09:31:43 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 09:31:43 -参数 : []
2019-05-14 09:31:43 -耗时 : 0
2019-05-14 09:31:43 -返回值 : charts/tableElecMM
2019-05-14 09:31:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:31:43 -HTTP METHOD : GET
2019-05-14 09:31:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:31:43 -参数 : [userType]
2019-05-14 09:31:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:31:43 -==> Parameters: userType(String)
2019-05-14 09:31:43 -<==      Total: 4
2019-05-14 09:31:43 -耗时 : 3
2019-05-14 09:31:43 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:31:44 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-14 09:31:44 -HTTP METHOD : GET
2019-05-14 09:31:44 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-14 09:31:44 -参数 : []
2019-05-14 09:31:44 -耗时 : 0
2019-05-14 09:31:44 -返回值 : charts/tableHeatMM
2019-05-14 09:31:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:31:44 -HTTP METHOD : GET
2019-05-14 09:31:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:31:44 -参数 : [userType]
2019-05-14 09:31:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:31:44 -==> Parameters: userType(String)
2019-05-14 09:31:44 -<==      Total: 4
2019-05-14 09:31:44 -耗时 : 3
2019-05-14 09:31:44 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:31:52 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-14 09:31:52 -HTTP METHOD : GET
2019-05-14 09:31:52 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 09:31:52 -参数 : []
2019-05-14 09:31:52 -耗时 : 0
2019-05-14 09:31:52 -返回值 : charts/tableElecMM
2019-05-14 09:31:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:31:53 -HTTP METHOD : GET
2019-05-14 09:31:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:31:53 -参数 : [userType]
2019-05-14 09:31:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:31:53 -==> Parameters: userType(String)
2019-05-14 09:31:53 -<==      Total: 4
2019-05-14 09:31:53 -耗时 : 5
2019-05-14 09:31:53 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:31:53 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-14 09:31:53 -HTTP METHOD : GET
2019-05-14 09:31:53 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-14 09:31:53 -参数 : []
2019-05-14 09:31:53 -耗时 : 0
2019-05-14 09:31:53 -返回值 : charts/tableHeatMM
2019-05-14 09:31:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:31:54 -HTTP METHOD : GET
2019-05-14 09:31:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:31:54 -参数 : [userType]
2019-05-14 09:31:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:31:54 -==> Parameters: userType(String)
2019-05-14 09:31:54 -<==      Total: 4
2019-05-14 09:31:54 -耗时 : 5
2019-05-14 09:31:54 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:31:57 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-14 09:31:57 -HTTP METHOD : GET
2019-05-14 09:31:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-14 09:31:57 -参数 : []
2019-05-14 09:31:57 -耗时 : 0
2019-05-14 09:31:57 -返回值 : system/dept/deptTree
2019-05-14 09:31:57 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-14 09:31:57 -HTTP METHOD : GET
2019-05-14 09:31:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-14 09:31:57 -参数 : []
2019-05-14 09:31:57 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-14 09:31:57 -==> Parameters: 
2019-05-14 09:31:57 -<==      Total: 3
2019-05-14 09:31:57 -耗时 : 3
2019-05-14 09:31:57 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-14 09:31:59 -请求地址 : http://localhost:8081/charts/tableHeatMM/tableHeatMM
2019-05-14 09:31:59 -HTTP METHOD : POST
2019-05-14 09:31:59 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-14 09:31:59 -参数 : [com.bootdo.heat.vo.HeatVo@2250ca60, com.bootdo.moneyLog.vo.HeatLogVo@69c642ee]
2019-05-14 09:31:59 -==>  Preparing: SELECT COUNT(heat_type = "1") FROM HEAT WHERE HEAT_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 09:31:59 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:31:59 -<==      Total: 1
2019-05-14 09:31:59 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "1" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 09:31:59 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:31:59 -<==      Total: 1
2019-05-14 09:31:59 -==>  Preparing: SELECT COUNT(heat_type = "1") FROM HEAT WHERE HEAT_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 09:31:59 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:31:59 -<==      Total: 1
2019-05-14 09:31:59 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "1" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 09:31:59 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:31:59 -<==      Total: 1
2019-05-14 09:31:59 -==>  Preparing: SELECT COUNT(heat_type = "1") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 09:31:59 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:31:59 -<==      Total: 1
2019-05-14 09:31:59 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 09:31:59 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:31:59 -<==      Total: 1
2019-05-14 09:31:59 -==>  Preparing: SELECT COUNT(heat_type = "1") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 09:31:59 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:31:59 -<==      Total: 1
2019-05-14 09:31:59 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 09:31:59 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:31:59 -<==      Total: 1
2019-05-14 09:31:59 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 09:31:59 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:31:59 -<==      Total: 1
2019-05-14 09:31:59 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 09:31:59 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:31:59 -<==      Total: 1
2019-05-14 09:31:59 -==>  Preparing: SELECT COUNT(heat_type = "1") FROM HEAT WHERE `create_time` = ? and user_org = ? 
2019-05-14 09:31:59 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:31:59 -<==      Total: 1
2019-05-14 09:31:59 -==>  Preparing: SELECT ifnull(SUM(HEAT_COST),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 09:31:59 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:31:59 -<==      Total: 1
2019-05-14 09:31:59 -==>  Preparing: SELECT COUNT(heat_type = "2") FROM HEAT WHERE HEAT_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 09:31:59 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:31:59 -<==      Total: 1
2019-05-14 09:31:59 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 09:31:59 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:31:59 -<==      Total: 1
2019-05-14 09:31:59 -==>  Preparing: SELECT COUNT(heat_type = "2") FROM HEAT WHERE HEAT_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 09:31:59 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:31:59 -<==      Total: 1
2019-05-14 09:31:59 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 09:31:59 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:31:59 -<==      Total: 1
2019-05-14 09:31:59 -==>  Preparing: SELECT COUNT(heat_type = "2") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 09:31:59 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:31:59 -<==      Total: 1
2019-05-14 09:31:59 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 09:31:59 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:31:59 -<==      Total: 1
2019-05-14 09:31:59 -==>  Preparing: SELECT COUNT(heat_type = "2") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 09:31:59 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:31:59 -<==      Total: 1
2019-05-14 09:31:59 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 09:31:59 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:31:59 -<==      Total: 1
2019-05-14 09:31:59 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 09:31:59 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:31:59 -<==      Total: 1
2019-05-14 09:31:59 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 09:31:59 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:31:59 -<==      Total: 0
2019-05-14 09:31:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 09:31:59 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableHeatMM/tableHeatMM(String), java.lang.NullPointerException(String), null, 2019-05-14 09:31:59.797(Timestamp)
2019-05-14 09:31:59 -null
java.lang.NullPointerException: null
	at com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(tableHeatMMController.java:75)
	at com.bootdo.charts.controller.tableHeatMMController$$FastClassBySpringCGLIB$$52df86fd.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor144.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableHeatMMController$$EnhancerBySpringCGLIB$$b82b2410.tableHeatMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-14 09:31:59 -<==    Updates: 1
2019-05-14 09:34:57 -请求地址 : http://localhost:8081/index
2019-05-14 09:34:57 -HTTP METHOD : GET
2019-05-14 09:34:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-14 09:34:57 -参数 : [{}]
2019-05-14 09:34:57 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-14 09:34:57 -==> Parameters: 1(Long)
2019-05-14 09:34:57 -<==      Total: 49
2019-05-14 09:34:57 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-14 09:34:57 -==> Parameters: 138(Long)
2019-05-14 09:34:57 -<==      Total: 1
2019-05-14 09:34:57 -耗时 : 20
2019-05-14 09:34:57 -返回值 : index_v1
2019-05-14 09:34:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 09:34:57 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 20(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-14 09:34:57.606(Timestamp)
2019-05-14 09:34:57 -请求地址 : http://localhost:8081/main
2019-05-14 09:34:57 -HTTP METHOD : GET
2019-05-14 09:34:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 09:34:57 -参数 : []
2019-05-14 09:34:57 -耗时 : 0
2019-05-14 09:34:57 -返回值 : main
2019-05-14 09:34:57 -<==    Updates: 1
2019-05-14 09:34:57 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-14 09:34:57 -HTTP METHOD : GET
2019-05-14 09:34:57 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-14 09:34:57 -参数 : []
2019-05-14 09:34:57 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-14 09:34:57 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-14 09:34:57 -<==      Total: 0
2019-05-14 09:34:57 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-14 09:34:57 -==> Parameters: 1(Long), 0(String)
2019-05-14 09:34:57 -<==      Total: 1
2019-05-14 09:34:57 -耗时 : 6
2019-05-14 09:34:57 -返回值 : com.bootdo.common.utils.PageUtils@1eebb4ee
2019-05-14 09:34:57 -请求地址 : http://localhost:8081/main
2019-05-14 09:34:57 -HTTP METHOD : GET
2019-05-14 09:34:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 09:34:57 -参数 : []
2019-05-14 09:34:57 -耗时 : 0
2019-05-14 09:34:57 -返回值 : main
2019-05-14 09:35:08 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-14 09:35:08 -HTTP METHOD : GET
2019-05-14 09:35:08 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 09:35:08 -参数 : []
2019-05-14 09:35:08 -耗时 : 0
2019-05-14 09:35:08 -返回值 : charts/tableElecMM
2019-05-14 09:35:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:35:08 -HTTP METHOD : GET
2019-05-14 09:35:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:35:08 -参数 : [userType]
2019-05-14 09:35:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:35:08 -==> Parameters: userType(String)
2019-05-14 09:35:08 -<==      Total: 4
2019-05-14 09:35:08 -耗时 : 4
2019-05-14 09:35:08 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:35:09 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-14 09:35:09 -HTTP METHOD : GET
2019-05-14 09:35:09 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-14 09:35:09 -参数 : []
2019-05-14 09:35:09 -耗时 : 0
2019-05-14 09:35:09 -返回值 : charts/tableHeatMM
2019-05-14 09:35:09 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:35:09 -HTTP METHOD : GET
2019-05-14 09:35:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:35:09 -参数 : [userType]
2019-05-14 09:35:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:35:09 -==> Parameters: userType(String)
2019-05-14 09:35:09 -<==      Total: 4
2019-05-14 09:35:09 -耗时 : 3
2019-05-14 09:35:09 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:35:14 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-14 09:35:14 -HTTP METHOD : GET
2019-05-14 09:35:14 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-14 09:35:14 -参数 : []
2019-05-14 09:35:14 -耗时 : 0
2019-05-14 09:35:14 -返回值 : system/dept/deptTree
2019-05-14 09:35:14 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-14 09:35:14 -HTTP METHOD : GET
2019-05-14 09:35:14 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-14 09:35:14 -参数 : []
2019-05-14 09:35:14 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-14 09:35:14 -==> Parameters: 
2019-05-14 09:35:14 -<==      Total: 3
2019-05-14 09:35:14 -耗时 : 4
2019-05-14 09:35:14 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-14 09:35:16 -请求地址 : http://localhost:8081/charts/tableHeatMM/tableHeatMM
2019-05-14 09:35:16 -HTTP METHOD : POST
2019-05-14 09:35:16 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-14 09:35:16 -参数 : [com.bootdo.heat.vo.HeatVo@e84ae44, com.bootdo.moneyLog.vo.HeatLogVo@683c6e93]
2019-05-14 09:35:16 -==>  Preparing: SELECT COUNT(heat_type = "1") FROM HEAT WHERE HEAT_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 09:35:16 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:35:16 -<==      Total: 1
2019-05-14 09:35:16 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "1" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 09:35:16 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:35:16 -<==      Total: 1
2019-05-14 09:35:16 -==>  Preparing: SELECT COUNT(heat_type = "1") FROM HEAT WHERE HEAT_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 09:35:16 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:35:16 -<==      Total: 1
2019-05-14 09:35:16 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "1" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 09:35:16 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:35:16 -<==      Total: 1
2019-05-14 09:35:16 -==>  Preparing: SELECT COUNT(heat_type = "1") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 09:35:16 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:35:16 -<==      Total: 1
2019-05-14 09:35:16 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 09:35:16 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:35:16 -<==      Total: 1
2019-05-14 09:35:16 -==>  Preparing: SELECT COUNT(heat_type = "1") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 09:35:16 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:35:16 -<==      Total: 1
2019-05-14 09:35:16 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 09:35:16 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:35:16 -<==      Total: 1
2019-05-14 09:35:16 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 09:35:16 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:35:16 -<==      Total: 1
2019-05-14 09:35:16 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 09:35:16 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:35:16 -<==      Total: 1
2019-05-14 09:35:16 -==>  Preparing: SELECT COUNT(heat_type = "1") FROM HEAT WHERE `create_time` = ? and user_org = ? 
2019-05-14 09:35:16 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:35:16 -<==      Total: 1
2019-05-14 09:35:16 -==>  Preparing: SELECT ifnull(SUM(HEAT_COST),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 09:35:16 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:35:16 -<==      Total: 1
2019-05-14 09:35:16 -==>  Preparing: SELECT COUNT(heat_type = "2") FROM HEAT WHERE HEAT_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 09:35:16 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:35:16 -<==      Total: 1
2019-05-14 09:35:16 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 09:35:16 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:35:16 -<==      Total: 1
2019-05-14 09:35:16 -==>  Preparing: SELECT COUNT(heat_type = "2") FROM HEAT WHERE HEAT_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 09:35:16 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:35:16 -<==      Total: 1
2019-05-14 09:35:16 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 09:35:16 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:35:16 -<==      Total: 1
2019-05-14 09:35:16 -==>  Preparing: SELECT COUNT(heat_type = "2") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 09:35:16 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:35:16 -<==      Total: 1
2019-05-14 09:35:16 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 09:35:16 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:35:16 -<==      Total: 1
2019-05-14 09:35:16 -==>  Preparing: SELECT COUNT(heat_type = "2") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 09:35:16 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:35:16 -<==      Total: 1
2019-05-14 09:35:16 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 09:35:16 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:35:16 -<==      Total: 1
2019-05-14 09:35:16 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 09:35:16 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:35:16 -<==      Total: 1
2019-05-14 09:35:16 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 09:35:16 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:35:16 -<==      Total: 1
2019-05-14 09:35:16 -==>  Preparing: SELECT COUNT(heat_type = "2") FROM HEAT WHERE `create_time` = ? and user_org = ? 
2019-05-14 09:35:16 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:35:16 -<==      Total: 1
2019-05-14 09:35:16 -==>  Preparing: SELECT ifnull(SUM(HEAT_COST),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 09:35:16 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:35:16 -<==      Total: 1
2019-05-14 09:35:16 -==>  Preparing: SELECT COUNT(heat_type = "3") FROM HEAT WHERE HEAT_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 09:35:16 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:35:16 -<==      Total: 1
2019-05-14 09:35:16 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "3" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 09:35:16 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:35:16 -<==      Total: 1
2019-05-14 09:35:16 -==>  Preparing: SELECT COUNT(heat_type = "3") FROM HEAT WHERE HEAT_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 09:35:16 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:35:16 -<==      Total: 1
2019-05-14 09:35:16 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "3" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 09:35:16 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:35:16 -<==      Total: 1
2019-05-14 09:35:16 -==>  Preparing: SELECT COUNT(heat_type = "3") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 09:35:16 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:35:16 -<==      Total: 1
2019-05-14 09:35:16 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 09:35:16 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:35:16 -<==      Total: 1
2019-05-14 09:35:16 -==>  Preparing: SELECT COUNT(heat_type = "3") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 09:35:16 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:35:16 -<==      Total: 1
2019-05-14 09:35:16 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 09:35:16 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:35:16 -<==      Total: 1
2019-05-14 09:35:16 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 09:35:16 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:35:16 -<==      Total: 1
2019-05-14 09:35:16 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 09:35:16 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:35:16 -<==      Total: 0
2019-05-14 09:35:16 -null
java.lang.NullPointerException: null
	at com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(tableHeatMMController.java:88)
	at com.bootdo.charts.controller.tableHeatMMController$$FastClassBySpringCGLIB$$52df86fd.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor144.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableHeatMMController$$EnhancerBySpringCGLIB$$b82b2410.tableHeatMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-14 09:35:16 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 09:35:16 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableHeatMM/tableHeatMM(String), java.lang.NullPointerException(String), null, 2019-05-14 09:35:16.478(Timestamp)
2019-05-14 09:35:16 -<==    Updates: 1
2019-05-14 09:36:15 -请求地址 : http://localhost:8081/index
2019-05-14 09:36:15 -HTTP METHOD : GET
2019-05-14 09:36:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-14 09:36:15 -参数 : [{}]
2019-05-14 09:36:15 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-14 09:36:15 -==> Parameters: 1(Long)
2019-05-14 09:36:15 -<==      Total: 49
2019-05-14 09:36:15 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-14 09:36:15 -==> Parameters: 138(Long)
2019-05-14 09:36:15 -<==      Total: 1
2019-05-14 09:36:15 -耗时 : 14
2019-05-14 09:36:15 -返回值 : index_v1
2019-05-14 09:36:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 09:36:15 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 14(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-14 09:36:15.332(Timestamp)
2019-05-14 09:36:15 -请求地址 : http://localhost:8081/main
2019-05-14 09:36:15 -HTTP METHOD : GET
2019-05-14 09:36:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 09:36:15 -参数 : []
2019-05-14 09:36:15 -耗时 : 1
2019-05-14 09:36:15 -返回值 : main
2019-05-14 09:36:15 -<==    Updates: 1
2019-05-14 09:36:15 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-14 09:36:15 -HTTP METHOD : GET
2019-05-14 09:36:15 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-14 09:36:15 -参数 : []
2019-05-14 09:36:15 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-14 09:36:15 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-14 09:36:15 -<==      Total: 0
2019-05-14 09:36:15 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-14 09:36:15 -==> Parameters: 1(Long), 0(String)
2019-05-14 09:36:15 -<==      Total: 1
2019-05-14 09:36:15 -耗时 : 7
2019-05-14 09:36:15 -返回值 : com.bootdo.common.utils.PageUtils@89f77fa
2019-05-14 09:36:15 -请求地址 : http://localhost:8081/main
2019-05-14 09:36:15 -HTTP METHOD : GET
2019-05-14 09:36:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 09:36:15 -参数 : []
2019-05-14 09:36:15 -耗时 : 0
2019-05-14 09:36:15 -返回值 : main
2019-05-14 09:36:18 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-14 09:36:18 -HTTP METHOD : GET
2019-05-14 09:36:18 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 09:36:18 -参数 : []
2019-05-14 09:36:18 -耗时 : 0
2019-05-14 09:36:18 -返回值 : charts/tableElecMM
2019-05-14 09:36:19 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:36:19 -HTTP METHOD : GET
2019-05-14 09:36:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:36:19 -参数 : [userType]
2019-05-14 09:36:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:36:19 -==> Parameters: userType(String)
2019-05-14 09:36:19 -<==      Total: 4
2019-05-14 09:36:19 -耗时 : 3
2019-05-14 09:36:19 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:36:19 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-14 09:36:19 -HTTP METHOD : GET
2019-05-14 09:36:19 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-14 09:36:19 -参数 : []
2019-05-14 09:36:19 -耗时 : 0
2019-05-14 09:36:19 -返回值 : charts/tableHeatMM
2019-05-14 09:36:19 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:36:19 -HTTP METHOD : GET
2019-05-14 09:36:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:36:19 -参数 : [userType]
2019-05-14 09:36:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:36:19 -==> Parameters: userType(String)
2019-05-14 09:36:19 -<==      Total: 4
2019-05-14 09:36:19 -耗时 : 4
2019-05-14 09:36:19 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:36:24 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-14 09:36:24 -HTTP METHOD : GET
2019-05-14 09:36:24 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-14 09:36:24 -参数 : []
2019-05-14 09:36:24 -耗时 : 1
2019-05-14 09:36:24 -返回值 : system/dept/deptTree
2019-05-14 09:36:24 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-14 09:36:24 -HTTP METHOD : GET
2019-05-14 09:36:24 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-14 09:36:24 -参数 : []
2019-05-14 09:36:24 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-14 09:36:24 -==> Parameters: 
2019-05-14 09:36:24 -<==      Total: 3
2019-05-14 09:36:24 -耗时 : 3
2019-05-14 09:36:24 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-14 09:36:26 -请求地址 : http://localhost:8081/charts/tableHeatMM/tableHeatMM
2019-05-14 09:36:26 -HTTP METHOD : POST
2019-05-14 09:36:26 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-14 09:36:26 -参数 : [com.bootdo.heat.vo.HeatVo@af001cc, com.bootdo.moneyLog.vo.HeatLogVo@21a5e883]
2019-05-14 09:36:26 -==>  Preparing: SELECT COUNT(heat_type = "1") FROM HEAT WHERE HEAT_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "1" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT COUNT(heat_type = "1") FROM HEAT WHERE HEAT_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "1" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT COUNT(heat_type = "1") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT COUNT(heat_type = "1") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT COUNT(heat_type = "1") FROM HEAT WHERE `create_time` = ? and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT ifnull(SUM(HEAT_COST),0) FROM HEAT WHERE heat_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT COUNT(heat_type = "2") FROM HEAT WHERE HEAT_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT COUNT(heat_type = "2") FROM HEAT WHERE HEAT_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT COUNT(heat_type = "2") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT COUNT(heat_type = "2") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT COUNT(heat_type = "2") FROM HEAT WHERE `create_time` = ? and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT ifnull(SUM(HEAT_COST),0) FROM HEAT WHERE heat_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT COUNT(heat_type = "3") FROM HEAT WHERE HEAT_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "3" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT COUNT(heat_type = "3") FROM HEAT WHERE HEAT_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "3" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT COUNT(heat_type = "3") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT COUNT(heat_type = "3") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT COUNT(heat_type = "3") FROM HEAT WHERE `create_time` = ? and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT ifnull(SUM(HEAT_COST),0) FROM HEAT WHERE heat_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT COUNT(heat_type = "4") FROM HEAT WHERE HEAT_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "4" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT COUNT(heat_type = "4") FROM HEAT WHERE HEAT_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "4" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT COUNT(heat_type = "4") FROM HEAT WHERE HEAT_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM >= 0),0) FROM HEAT WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT COUNT(heat_type = "4") FROM HEAT WHERE HEAT_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT ifnull(SUM(HEAT_SUM <0),0) FROM HEAT WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT ifnull(SUM(heat_area),0) FROM HEAT WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT DISTINCT heat_price FROM heat WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT COUNT(heat_type = "4") FROM HEAT WHERE `create_time` = ? and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT ifnull(SUM(HEAT_COST),0) FROM HEAT WHERE heat_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE HEAT_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-14 09:36:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:36:26 -<==      Total: 1
2019-05-14 09:36:26 -耗时 : 220
2019-05-14 09:36:26 -返回值 : {LGSHeatCountOwe=1, GSHeatCountPre=6, MHeatCostCount=7, GMHeatArea=1, SHeatCostCount=7, GSHeatSumPre=1, GMHeatCountPre=6, CountPrehu=24, MHeatCountPre=6, LGStotalhu=2, SumSHeatLog=40, LGMtotalhu=2, LGMHeatSumOwe=0, MHeatPrice=1, LGMHeatCountOwe=1, CountOweyu=1, SHeatPrice=2, GMHeatPrice=3, CountPreyu=6, SumGMHeatLog=80, CountLogyu=240, LSHeatCountOwe=1, LGSHeatSumPre=0, LCountPrehu=4, CountGSHeatLog=0, SHeatSumPre=2, GMHeatCountOwe=1, CountOwehu=4, GMtotalhu=7, LGSHeatCountPre=1, CountGMHeatLog=1, GStotalhu=7, LMHeatCountPre=1, LGMHeatCountPre=1, CountLoghu=4, GSHeatSumOwe=0, GSHeatPrice=4, LCountPreyu=1, MHeatSumOwe=1, SHeatCountPre=6, GSHeatCountOwe=1, GMtotalyu=1, LMHeatSumOwe=1, LSHeatSumPre=0, CountAllyu=7, LGMHeatSumPre=0, GStotalyu=1, LGMtotalyu=0, LGStotalyu=0, CountSHeatLog=1, LCountAllyu=2, LCountOwehu=4, GSHeatCostSum=1, MHeatCostSum=201, SHeatCostSum=2, CountAllhu=28, LSHeatCountPre=1, CountCostyu=205, MHeatArea=201, SHeatSumOwe=0, MHeatSumPre=2, GMHeatSumPre=1, LMHeatSumPre=1, Stotalhu=7, CountPrice=10, GMHeatCostCount=7, LCountAllhu=8, GMHeatCostSum=1, LCountOweyu=1, GSHeatCostCount=7, SumGSHeatLog=0, LSHeatSumOwe=0, CountCosthu=28, SHeatCountOwe=1, CountMHeatLog=2, Mtotalhu=7, Stotalyu=2, LStotalyu=0, LMtotalyu=2, CountArea=205, GMHeatSumOwe=0, LMtotalhu=2, GSHeatArea=1, SumMHeatLog=120, LMHeatCountOwe=1, SHeatArea=2, Mtotalyu=3, LStotalhu=2, MHeatCountOwe=1, LGSHeatSumOwe=0}
2019-05-14 09:38:25 -请求地址 : http://localhost:8081/charts/tableHeatMM/exportHeatMM
2019-05-14 09:38:25 -HTTP METHOD : GET
2019-05-14 09:38:25 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.exportHeatMM
2019-05-14 09:38:25 -参数 : [com.bootdo.heat.vo.HeatVo@674cf924, com.bootdo.moneyLog.vo.HeatLogVo@459bf109, org.apache.shiro.web.servlet.ShiroHttpServletResponse@256b326e]
2019-05-14 09:38:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE `heat_sum` >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 09:38:25 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:38:25 -<==      Total: 6
2019-05-14 09:38:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE `heat_sum` < 0 and `create_time` = ? and user_org = ? 
2019-05-14 09:38:25 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:38:25 -<==      Total: 1
2019-05-14 09:38:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE `create_time` = ? and user_org = ? 
2019-05-14 09:38:25 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 09:38:25 -<==      Total: 4
2019-05-14 09:38:25 -耗时 : 32
2019-05-14 09:38:25 -返回值 : null
2019-05-14 09:40:44 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-14 09:40:44 -==> Parameters: 1(Long)
2019-05-14 09:40:44 -<==      Total: 93
2019-05-14 09:40:44 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-14 09:40:44 -HTTP METHOD : GET
2019-05-14 09:40:44 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 09:40:44 -参数 : []
2019-05-14 09:40:44 -耗时 : 0
2019-05-14 09:40:44 -返回值 : charts/tableElecMM
2019-05-14 09:40:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 09:40:44 -HTTP METHOD : GET
2019-05-14 09:40:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 09:40:44 -参数 : [userType]
2019-05-14 09:40:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 09:40:44 -==> Parameters: userType(String)
2019-05-14 09:40:44 -<==      Total: 4
2019-05-14 09:40:44 -耗时 : 3
2019-05-14 09:40:44 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 09:41:08 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-14 09:41:08 -HTTP METHOD : GET
2019-05-14 09:41:08 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-14 09:41:08 -参数 : []
2019-05-14 09:41:08 -耗时 : 0
2019-05-14 09:41:08 -返回值 : system/dept/deptTree
2019-05-14 09:41:08 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-14 09:41:08 -HTTP METHOD : GET
2019-05-14 09:41:08 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-14 09:41:08 -参数 : []
2019-05-14 09:41:08 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-14 09:41:08 -==> Parameters: 
2019-05-14 09:41:08 -<==      Total: 3
2019-05-14 09:41:08 -耗时 : 6
2019-05-14 09:41:08 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-14 09:41:13 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-05-14 09:41:13 -HTTP METHOD : POST
2019-05-14 09:41:13 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 09:41:13 -参数 : [com.bootdo.elec.vo.ElecVo@5dbe3e2d, com.bootdo.moneyLog.vo.ElecLogVo@4724f04e]
2019-05-14 09:41:13 -Invalid bound statement (not found): com.bootdo.elec.dao.ElecDao.LMSElecCountPre
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.elec.dao.ElecDao.LMSElecCountPre
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy105.LMSElecCountPre(Unknown Source)
	at com.bootdo.elec.service.impl.ElecServiceImpl.LMSElecCountPre(ElecServiceImpl.java:494)
	at com.bootdo.charts.controller.tableElecMMController.tableElecMM(tableElecMMController.java:55)
	at com.bootdo.charts.controller.tableElecMMController$$FastClassBySpringCGLIB$$d3ed8d12.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor144.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableElecMMController$$EnhancerBySpringCGLIB$$773a2198.tableElecMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-14 09:41:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 09:41:13 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableElecMM/tableElecMM(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.elec.dao.ElecDao.LMSElecCountPre(String), null, 2019-05-14 09:41:13.32(Timestamp)
2019-05-14 09:41:13 -<==    Updates: 1
2019-05-14 09:52:02 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 7 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(7)-CONNECTED(7)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 81], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 13], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 433]
2019-05-14 10:03:38 -Starting BootdoApplication on PC-201905091110 with PID 12640 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-14 10:03:38 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-14 10:03:38 -The following profiles are active: dev
2019-05-14 10:03:38 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Tue May 14 10:03:38 CST 2019]; root of context hierarchy
2019-05-14 10:03:42 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-14 10:03:44 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1702bab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 10:03:45 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$f3c95a52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 10:03:46 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 10:03:47 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 10:03:47 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 10:03:47 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-14 10:03:47 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-14 10:03:47 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 10:03:47 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 10:03:47 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 10:03:47 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 10:03:48 -Tomcat initialized with port(s): 8081 (http)
2019-05-14 10:03:48 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-14 10:03:48 -Starting service [Tomcat]
2019-05-14 10:03:48 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-14 10:03:48 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-14 10:03:49 -Initializing Spring embedded WebApplicationContext
2019-05-14 10:03:49 -Root WebApplicationContext: initialization completed in 10586 ms
2019-05-14 10:03:50 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-14 10:03:50 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-14 10:03:50 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-14 10:03:50 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-14 10:03:50 -Filter xssFilter was not registered (disabled)
2019-05-14 10:03:50 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-14 10:03:50 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-14 10:03:50 -Servlet statViewServlet mapped to [/druid/*]
2019-05-14 10:03:50 -Servlet dispatcherServlet mapped to [/]
2019-05-14 10:04:01 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Tue May 14 10:03:38 CST 2019]; root of context hierarchy
2019-05-14 10:04:01 -Using default implementation for ThreadExecutor
2019-05-14 10:04:01 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-14 10:04:01 -Quartz Scheduler v.2.2.1 created.
2019-05-14 10:04:01 -RAMJobStore initialized.
2019-05-14 10:04:01 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-14 10:04:01 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-14 10:04:01 -Quartz scheduler version: 2.2.1
2019-05-14 10:04:01 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@3a0896b3
2019-05-14 10:04:02 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-14 10:04:02 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-14 10:04:05 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-14 10:04:05 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 10:04:05 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 10:04:05 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 10:04:05 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-14 10:04:05 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 10:04:05 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-14 10:04:05 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-14 10:04:05 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-14 10:04:05 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-14 10:04:05 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 10:04:05 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 10:04:05 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-14 10:04:05 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 10:04:05 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 10:04:05 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 10:04:05 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-14 10:04:05 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 10:04:05 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-14 10:04:05 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-14 10:04:05 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 10:04:05 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-14 10:04:05 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-14 10:04:05 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 10:04:05 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 10:04:05 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-14 10:04:05 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 10:04:05 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 10:04:05 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 10:04:05 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-14 10:04:05 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-05-14 10:04:05 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-14 10:04:05 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 10:04:05 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-14 10:04:05 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-14 10:04:05 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 10:04:05 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-14 10:04:05 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-14 10:04:05 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-14 10:04:05 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-14 10:04:05 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 10:04:05 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-14 10:04:05 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-14 10:04:05 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-14 10:04:05 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-14 10:04:05 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 10:04:05 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-14 10:04:05 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-14 10:04:05 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-14 10:04:05 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-14 10:04:05 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-14 10:04:05 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 10:04:05 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-14 10:04:05 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-14 10:04:05 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 10:04:05 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-14 10:04:05 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-14 10:04:05 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 10:04:05 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-14 10:04:05 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-14 10:04:05 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-14 10:04:05 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-14 10:04:05 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-14 10:04:05 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-14 10:04:05 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-14 10:04:05 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-14 10:04:05 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-14 10:04:05 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 10:04:05 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-14 10:04:05 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-14 10:04:05 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 10:04:05 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-14 10:04:05 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-14 10:04:05 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-14 10:04:05 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-14 10:04:05 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 10:04:05 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-14 10:04:05 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-14 10:04:05 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-14 10:04:05 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-14 10:04:05 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-14 10:04:05 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-14 10:04:05 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-14 10:04:05 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-14 10:04:05 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-14 10:04:05 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-14 10:04:05 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-14 10:04:05 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 10:04:05 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-14 10:04:05 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-14 10:04:05 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-14 10:04:05 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-14 10:04:05 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-14 10:04:05 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-14 10:04:05 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-14 10:04:05 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-14 10:04:05 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-14 10:04:05 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-14 10:04:05 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-14 10:04:05 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 10:04:05 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-14 10:04:05 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 10:04:05 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-14 10:04:05 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-14 10:04:05 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-14 10:04:05 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-14 10:04:05 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-14 10:04:05 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-14 10:04:05 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-14 10:04:05 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-14 10:04:05 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 10:04:05 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-14 10:04:05 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-14 10:04:05 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-14 10:04:05 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-14 10:04:05 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-14 10:04:05 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-14 10:04:05 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-14 10:04:05 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-14 10:04:05 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-14 10:04:05 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-14 10:04:05 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-14 10:04:05 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 10:04:05 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-14 10:04:05 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-14 10:04:05 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 10:04:05 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-14 10:04:05 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-14 10:04:05 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-14 10:04:05 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-14 10:04:05 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-14 10:04:05 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-14 10:04:05 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-14 10:04:05 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-14 10:04:05 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-14 10:04:05 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-14 10:04:05 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-14 10:04:05 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-14 10:04:05 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 10:04:05 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-14 10:04:05 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-14 10:04:05 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-14 10:04:05 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 10:04:05 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-14 10:04:05 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-14 10:04:05 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-14 10:04:05 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-14 10:04:05 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 10:04:05 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-14 10:04:05 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-14 10:04:05 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-14 10:04:05 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 10:04:05 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-14 10:04:05 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-14 10:04:05 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-14 10:04:05 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-14 10:04:05 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 10:04:05 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-14 10:04:05 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-14 10:04:05 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-14 10:04:05 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 10:04:05 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-14 10:04:05 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-14 10:04:05 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-14 10:04:05 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-14 10:04:05 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-14 10:04:05 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 10:04:05 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-14 10:04:05 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-14 10:04:05 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-14 10:04:05 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-14 10:04:05 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 10:04:05 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 10:04:05 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-14 10:04:05 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-14 10:04:05 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-14 10:04:05 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-14 10:04:05 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 10:04:05 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-14 10:04:05 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-14 10:04:05 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-14 10:04:05 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 10:04:05 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-14 10:04:05 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 10:04:05 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-14 10:04:05 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-14 10:04:05 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-14 10:04:05 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-14 10:04:05 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-14 10:04:05 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-14 10:04:05 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-14 10:04:05 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-14 10:04:05 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-14 10:04:05 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 10:04:05 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-14 10:04:05 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-14 10:04:05 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-14 10:04:05 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-14 10:04:05 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-14 10:04:05 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-14 10:04:05 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-14 10:04:05 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-14 10:04:05 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-14 10:04:05 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-14 10:04:05 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 10:04:05 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-14 10:04:05 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-14 10:04:05 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-14 10:04:05 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-14 10:04:05 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-14 10:04:05 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-14 10:04:05 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-14 10:04:05 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-14 10:04:05 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-14 10:04:05 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-14 10:04:05 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-14 10:04:05 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-14 10:04:05 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 10:04:05 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-14 10:04:05 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-14 10:04:05 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-14 10:04:05 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-14 10:04:05 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 10:04:05 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-14 10:04:05 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-14 10:04:05 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-14 10:04:05 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 10:04:05 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-14 10:04:05 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-14 10:04:05 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-14 10:04:05 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-14 10:04:05 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-14 10:04:05 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-14 10:04:05 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-14 10:04:05 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-14 10:04:05 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-14 10:04:05 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-14 10:04:05 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-14 10:04:05 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-14 10:04:05 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-14 10:04:05 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-14 10:04:05 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-14 10:04:05 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-14 10:04:05 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-14 10:04:05 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 10:04:05 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-14 10:04:05 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-14 10:04:05 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 10:04:05 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-14 10:04:05 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-14 10:04:05 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-14 10:04:05 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-14 10:04:05 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-14 10:04:05 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-14 10:04:05 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-14 10:04:05 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-14 10:04:05 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 10:04:05 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-14 10:04:05 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 10:04:05 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-14 10:04:05 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-14 10:04:05 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-14 10:04:05 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-14 10:04:05 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-14 10:04:05 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-14 10:04:05 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-14 10:04:05 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-14 10:04:05 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-14 10:04:06 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-14 10:04:06 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-14 10:04:06 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-14 10:04:07 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-14 10:04:07 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Tue May 14 10:03:38 CST 2019]; root of context hierarchy
2019-05-14 10:04:07 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-14 10:04:07 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-14 10:04:07 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-14 10:04:07 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-14 10:04:07 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-14 10:04:10 -Registering beans for JMX exposure on startup
2019-05-14 10:04:10 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-14 10:04:10 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-14 10:04:10 -Starting beans in phase 2147483647
2019-05-14 10:04:10 -Context refreshed
2019-05-14 10:04:10 -Found 1 custom documentation plugin(s)
2019-05-14 10:04:10 -Scanning for api listing references
2019-05-14 10:04:10 -Generating unique operation named: getCountDUsingPOST_1
2019-05-14 10:04:11 -Generating unique operation named: removeUsingPOST_1
2019-05-14 10:04:11 -Generating unique operation named: addUsingGET_1
2019-05-14 10:04:11 -Generating unique operation named: editUsingGET_1
2019-05-14 10:04:11 -Generating unique operation named: listUsingGET_1
2019-05-14 10:04:11 -Generating unique operation named: removeUsingPOST_2
2019-05-14 10:04:11 -Generating unique operation named: removeUsingPOST_3
2019-05-14 10:04:11 -Generating unique operation named: saveUsingPOST_1
2019-05-14 10:04:11 -Generating unique operation named: updateUsingGET_1
2019-05-14 10:04:11 -Generating unique operation named: updateUsingHEAD_1
2019-05-14 10:04:11 -Generating unique operation named: updateUsingPOST_1
2019-05-14 10:04:11 -Generating unique operation named: updateUsingPUT_1
2019-05-14 10:04:11 -Generating unique operation named: updateUsingPATCH_1
2019-05-14 10:04:11 -Generating unique operation named: updateUsingDELETE_1
2019-05-14 10:04:11 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-14 10:04:11 -Generating unique operation named: updateUsingTRACE_1
2019-05-14 10:04:11 -Generating unique operation named: addUsingGET_2
2019-05-14 10:04:11 -Generating unique operation named: editUsingGET_2
2019-05-14 10:04:11 -Generating unique operation named: listUsingGET_2
2019-05-14 10:04:11 -Generating unique operation named: removeUsingPOST_4
2019-05-14 10:04:11 -Generating unique operation named: removeUsingPOST_5
2019-05-14 10:04:11 -Generating unique operation named: saveUsingPOST_2
2019-05-14 10:04:11 -Generating unique operation named: updateUsingPOST_2
2019-05-14 10:04:11 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-14 10:04:11 -Generating unique operation named: addUsingGET_3
2019-05-14 10:04:11 -Generating unique operation named: editUsingGET_3
2019-05-14 10:04:11 -Generating unique operation named: listUsingGET_3
2019-05-14 10:04:11 -Generating unique operation named: removeUsingPOST_6
2019-05-14 10:04:11 -Generating unique operation named: removeUsingPOST_7
2019-05-14 10:04:11 -Generating unique operation named: saveUsingPOST_3
2019-05-14 10:04:11 -Generating unique operation named: updateUsingGET_2
2019-05-14 10:04:11 -Generating unique operation named: updateUsingHEAD_2
2019-05-14 10:04:11 -Generating unique operation named: updateUsingPOST_3
2019-05-14 10:04:11 -Generating unique operation named: updateUsingPUT_2
2019-05-14 10:04:11 -Generating unique operation named: updateUsingPATCH_2
2019-05-14 10:04:11 -Generating unique operation named: updateUsingDELETE_2
2019-05-14 10:04:11 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-14 10:04:11 -Generating unique operation named: updateUsingTRACE_2
2019-05-14 10:04:11 -Generating unique operation named: addUsingGET_4
2019-05-14 10:04:11 -Generating unique operation named: editUsingGET_4
2019-05-14 10:04:11 -Generating unique operation named: listUsingGET_4
2019-05-14 10:04:11 -Generating unique operation named: removeUsingPOST_8
2019-05-14 10:04:11 -Generating unique operation named: removeUsingPOST_9
2019-05-14 10:04:11 -Generating unique operation named: saveUsingPOST_4
2019-05-14 10:04:11 -Generating unique operation named: updateUsingGET_3
2019-05-14 10:04:11 -Generating unique operation named: updateUsingHEAD_3
2019-05-14 10:04:11 -Generating unique operation named: updateUsingPOST_4
2019-05-14 10:04:11 -Generating unique operation named: updateUsingPUT_3
2019-05-14 10:04:11 -Generating unique operation named: updateUsingPATCH_3
2019-05-14 10:04:11 -Generating unique operation named: updateUsingDELETE_3
2019-05-14 10:04:11 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-14 10:04:11 -Generating unique operation named: updateUsingTRACE_3
2019-05-14 10:04:11 -Generating unique operation named: ElecUsingGET_1
2019-05-14 10:04:11 -Generating unique operation named: addUsingGET_5
2019-05-14 10:04:11 -Generating unique operation named: editUsingGET_5
2019-05-14 10:04:11 -Generating unique operation named: listUsingGET_5
2019-05-14 10:04:11 -Generating unique operation named: removeUsingPOST_10
2019-05-14 10:04:11 -Generating unique operation named: removeUsingPOST_11
2019-05-14 10:04:11 -Generating unique operation named: saveUsingPOST_5
2019-05-14 10:04:11 -Generating unique operation named: updateUsingGET_4
2019-05-14 10:04:11 -Generating unique operation named: updateUsingHEAD_4
2019-05-14 10:04:11 -Generating unique operation named: updateUsingPOST_5
2019-05-14 10:04:11 -Generating unique operation named: updateUsingPUT_4
2019-05-14 10:04:11 -Generating unique operation named: updateUsingPATCH_4
2019-05-14 10:04:11 -Generating unique operation named: updateUsingDELETE_4
2019-05-14 10:04:11 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-14 10:04:11 -Generating unique operation named: updateUsingTRACE_4
2019-05-14 10:04:11 -Generating unique operation named: editUsingGET_6
2019-05-14 10:04:11 -Generating unique operation named: listUsingGET_6
2019-05-14 10:04:11 -Generating unique operation named: updateUsingPOST_6
2019-05-14 10:04:11 -Generating unique operation named: addUsingGET_6
2019-05-14 10:04:11 -Generating unique operation named: editUsingGET_7
2019-05-14 10:04:12 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-14 10:04:12 -Generating unique operation named: listUsingGET_7
2019-05-14 10:04:12 -Generating unique operation named: removeUsingPOST_12
2019-05-14 10:04:12 -Generating unique operation named: removeUsingPOST_13
2019-05-14 10:04:12 -Generating unique operation named: saveUsingPOST_6
2019-05-14 10:04:12 -Generating unique operation named: updateUsingGET_5
2019-05-14 10:04:12 -Generating unique operation named: updateUsingHEAD_5
2019-05-14 10:04:12 -Generating unique operation named: updateUsingPOST_7
2019-05-14 10:04:12 -Generating unique operation named: updateUsingPUT_5
2019-05-14 10:04:12 -Generating unique operation named: updateUsingPATCH_5
2019-05-14 10:04:12 -Generating unique operation named: updateUsingDELETE_5
2019-05-14 10:04:12 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-14 10:04:12 -Generating unique operation named: updateUsingTRACE_5
2019-05-14 10:04:12 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-14 10:04:12 -Generating unique operation named: addUsingGET_7
2019-05-14 10:04:12 -Generating unique operation named: editUsingGET_8
2019-05-14 10:04:12 -Generating unique operation named: listUsingGET_8
2019-05-14 10:04:12 -Generating unique operation named: removeUsingPOST_14
2019-05-14 10:04:12 -Generating unique operation named: removeUsingPOST_15
2019-05-14 10:04:12 -Generating unique operation named: saveUsingPOST_7
2019-05-14 10:04:12 -Generating unique operation named: updateUsingGET_6
2019-05-14 10:04:12 -Generating unique operation named: updateUsingHEAD_6
2019-05-14 10:04:12 -Generating unique operation named: updateUsingPOST_8
2019-05-14 10:04:12 -Generating unique operation named: updateUsingPUT_6
2019-05-14 10:04:12 -Generating unique operation named: updateUsingPATCH_6
2019-05-14 10:04:12 -Generating unique operation named: updateUsingDELETE_6
2019-05-14 10:04:12 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-14 10:04:12 -Generating unique operation named: updateUsingTRACE_6
2019-05-14 10:04:12 -Generating unique operation named: addUsingGET_8
2019-05-14 10:04:12 -Generating unique operation named: editUsingGET_9
2019-05-14 10:04:12 -Generating unique operation named: listUsingGET_9
2019-05-14 10:04:12 -Generating unique operation named: removeUsingPOST_16
2019-05-14 10:04:12 -Generating unique operation named: removeUsingPOST_17
2019-05-14 10:04:12 -Generating unique operation named: saveUsingPOST_8
2019-05-14 10:04:12 -Generating unique operation named: updateUsingGET_7
2019-05-14 10:04:12 -Generating unique operation named: updateUsingHEAD_7
2019-05-14 10:04:12 -Generating unique operation named: updateUsingPOST_9
2019-05-14 10:04:12 -Generating unique operation named: updateUsingPUT_7
2019-05-14 10:04:12 -Generating unique operation named: updateUsingPATCH_7
2019-05-14 10:04:12 -Generating unique operation named: updateUsingDELETE_7
2019-05-14 10:04:12 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-14 10:04:12 -Generating unique operation named: updateUsingTRACE_7
2019-05-14 10:04:12 -Generating unique operation named: addUsingGET_9
2019-05-14 10:04:12 -Generating unique operation named: editUsingGET_10
2019-05-14 10:04:12 -Generating unique operation named: infoUsingGET_1
2019-05-14 10:04:12 -Generating unique operation named: infoUsingHEAD_1
2019-05-14 10:04:12 -Generating unique operation named: infoUsingPOST_1
2019-05-14 10:04:12 -Generating unique operation named: infoUsingPUT_1
2019-05-14 10:04:12 -Generating unique operation named: infoUsingPATCH_1
2019-05-14 10:04:12 -Generating unique operation named: infoUsingDELETE_1
2019-05-14 10:04:12 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-14 10:04:12 -Generating unique operation named: infoUsingTRACE_1
2019-05-14 10:04:12 -Generating unique operation named: listUsingGET_10
2019-05-14 10:04:12 -Generating unique operation named: removeUsingPOST_18
2019-05-14 10:04:12 -Generating unique operation named: removeUsingPOST_19
2019-05-14 10:04:12 -Generating unique operation named: saveUsingPOST_9
2019-05-14 10:04:12 -Generating unique operation named: updateUsingPOST_10
2019-05-14 10:04:12 -Generating unique operation named: listUsingGET_11
2019-05-14 10:04:12 -Generating unique operation named: removeUsingPOST_20
2019-05-14 10:04:12 -Generating unique operation named: welcomeUsingGET_1
2019-05-14 10:04:12 -Generating unique operation named: addUsingGET_10
2019-05-14 10:04:12 -Generating unique operation named: editUsingGET_11
2019-05-14 10:04:12 -Generating unique operation named: listUsingGET_12
2019-05-14 10:04:12 -Generating unique operation named: removeUsingPOST_21
2019-05-14 10:04:12 -Generating unique operation named: saveUsingPOST_10
2019-05-14 10:04:12 -Generating unique operation named: treeUsingGET_1
2019-05-14 10:04:12 -Generating unique operation named: treeUsingGET_2
2019-05-14 10:04:12 -Generating unique operation named: updateUsingPOST_11
2019-05-14 10:04:12 -Generating unique operation named: addUsingGET_11
2019-05-14 10:04:12 -Generating unique operation named: editUsingGET_12
2019-05-14 10:04:12 -Generating unique operation named: listUsingGET_13
2019-05-14 10:04:12 -Generating unique operation named: removeUsingPOST_22
2019-05-14 10:04:12 -Generating unique operation named: removeUsingPOST_23
2019-05-14 10:04:12 -Generating unique operation named: saveUsingPOST_11
2019-05-14 10:04:12 -Generating unique operation named: updateUsingGET_8
2019-05-14 10:04:12 -Generating unique operation named: updateUsingHEAD_8
2019-05-14 10:04:12 -Generating unique operation named: updateUsingPOST_12
2019-05-14 10:04:12 -Generating unique operation named: updateUsingPUT_8
2019-05-14 10:04:12 -Generating unique operation named: updateUsingPATCH_8
2019-05-14 10:04:12 -Generating unique operation named: updateUsingDELETE_8
2019-05-14 10:04:12 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-14 10:04:12 -Generating unique operation named: updateUsingTRACE_8
2019-05-14 10:04:12 -Generating unique operation named: addUsingGET_12
2019-05-14 10:04:12 -Generating unique operation named: editUsingGET_13
2019-05-14 10:04:12 -Generating unique operation named: listUsingGET_14
2019-05-14 10:04:12 -Generating unique operation named: removeUsingPOST_24
2019-05-14 10:04:12 -Generating unique operation named: removeUsingPOST_25
2019-05-14 10:04:12 -Generating unique operation named: saveUsingPOST_12
2019-05-14 10:04:12 -Generating unique operation named: updateUsingGET_9
2019-05-14 10:04:12 -Generating unique operation named: updateUsingHEAD_9
2019-05-14 10:04:12 -Generating unique operation named: updateUsingPOST_13
2019-05-14 10:04:12 -Generating unique operation named: updateUsingPUT_9
2019-05-14 10:04:12 -Generating unique operation named: updateUsingPATCH_9
2019-05-14 10:04:12 -Generating unique operation named: updateUsingDELETE_9
2019-05-14 10:04:12 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-14 10:04:12 -Generating unique operation named: updateUsingTRACE_9
2019-05-14 10:04:12 -Generating unique operation named: addUsingGET_13
2019-05-14 10:04:12 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-14 10:04:12 -Generating unique operation named: editUsingGET_14
2019-05-14 10:04:12 -Generating unique operation named: listUsingGET_15
2019-05-14 10:04:12 -Generating unique operation named: saveUsingPOST_13
2019-05-14 10:04:13 -Generating unique operation named: saveUsingPOST_14
2019-05-14 10:04:13 -Generating unique operation named: updateUsingPOST_14
2019-05-14 10:04:13 -Generating unique operation named: listUsingGET_16
2019-05-14 10:04:13 -Generating unique operation named: listUsingHEAD_1
2019-05-14 10:04:13 -Generating unique operation named: listUsingPOST_1
2019-05-14 10:04:13 -Generating unique operation named: listUsingPUT_1
2019-05-14 10:04:13 -Generating unique operation named: listUsingPATCH_1
2019-05-14 10:04:13 -Generating unique operation named: listUsingDELETE_1
2019-05-14 10:04:13 -Generating unique operation named: listUsingOPTIONS_1
2019-05-14 10:04:13 -Generating unique operation named: listUsingTRACE_1
2019-05-14 10:04:13 -Generating unique operation named: countDDUsingGET_1
2019-05-14 10:04:13 -Generating unique operation named: exportDDUsingGET_1
2019-05-14 10:04:13 -Generating unique operation named: getCountYYUsingPOST_1
2019-05-14 10:04:13 -Generating unique operation named: getCountMMUsingPOST_1
2019-05-14 10:04:13 -Generating unique operation named: addUsingGET_14
2019-05-14 10:04:13 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-14 10:04:13 -Generating unique operation named: editUsingGET_15
2019-05-14 10:04:13 -Generating unique operation named: listUsingGET_17
2019-05-14 10:04:13 -Generating unique operation named: removeUsingPOST_26
2019-05-14 10:04:13 -Generating unique operation named: saveUsingPOST_15
2019-05-14 10:04:13 -Generating unique operation named: treeUsingGET_3
2019-05-14 10:04:13 -Generating unique operation named: treeViewUsingGET_1
2019-05-14 10:04:13 -Generating unique operation named: updateUsingPOST_15
2019-05-14 10:04:13 -Generating unique operation named: addUsingGET_15
2019-05-14 10:04:13 -Generating unique operation named: editUsingGET_16
2019-05-14 10:04:13 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-14 10:04:13 -Generating unique operation named: listUsingGET_18
2019-05-14 10:04:13 -Generating unique operation named: removeUsingPOST_27
2019-05-14 10:04:13 -Generating unique operation named: removeUsingPOST_28
2019-05-14 10:04:13 -Generating unique operation named: saveUsingPOST_16
2019-05-14 10:04:13 -Generating unique operation named: updateUsingGET_10
2019-05-14 10:04:13 -Generating unique operation named: updateUsingHEAD_10
2019-05-14 10:04:13 -Generating unique operation named: updateUsingPOST_16
2019-05-14 10:04:13 -Generating unique operation named: updateUsingPUT_10
2019-05-14 10:04:13 -Generating unique operation named: updateUsingPATCH_10
2019-05-14 10:04:13 -Generating unique operation named: updateUsingDELETE_10
2019-05-14 10:04:13 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-14 10:04:13 -Generating unique operation named: updateUsingTRACE_10
2019-05-14 10:04:13 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-14 10:04:13 -Generating unique operation named: addUsingGET_16
2019-05-14 10:04:13 -Generating unique operation named: editUsingGET_17
2019-05-14 10:04:13 -Generating unique operation named: listUsingGET_19
2019-05-14 10:04:13 -Generating unique operation named: removeUsingPOST_29
2019-05-14 10:04:13 -Generating unique operation named: removeUsingPOST_30
2019-05-14 10:04:13 -Generating unique operation named: saveUsingPOST_17
2019-05-14 10:04:13 -Generating unique operation named: updateUsingGET_11
2019-05-14 10:04:13 -Generating unique operation named: updateUsingHEAD_11
2019-05-14 10:04:13 -Generating unique operation named: updateUsingPOST_17
2019-05-14 10:04:13 -Generating unique operation named: updateUsingPUT_11
2019-05-14 10:04:13 -Generating unique operation named: updateUsingPATCH_11
2019-05-14 10:04:13 -Generating unique operation named: updateUsingDELETE_11
2019-05-14 10:04:13 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-14 10:04:13 -Generating unique operation named: updateUsingTRACE_11
2019-05-14 10:04:13 -Generating unique operation named: addUsingGET_17
2019-05-14 10:04:13 -Generating unique operation named: editUsingGET_18
2019-05-14 10:04:13 -Generating unique operation named: listUsingGET_20
2019-05-14 10:04:13 -Generating unique operation named: removeUsingPOST_31
2019-05-14 10:04:13 -Generating unique operation named: removeUsingPOST_32
2019-05-14 10:04:13 -Generating unique operation named: saveUsingPOST_18
2019-05-14 10:04:13 -Generating unique operation named: updateUsingGET_12
2019-05-14 10:04:13 -Generating unique operation named: updateUsingHEAD_12
2019-05-14 10:04:13 -Generating unique operation named: updateUsingPOST_18
2019-05-14 10:04:13 -Generating unique operation named: updateUsingPUT_12
2019-05-14 10:04:13 -Generating unique operation named: updateUsingPATCH_12
2019-05-14 10:04:13 -Generating unique operation named: updateUsingDELETE_12
2019-05-14 10:04:13 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-14 10:04:13 -Generating unique operation named: updateUsingTRACE_12
2019-05-14 10:04:13 -Starting Quartz Scheduler now
2019-05-14 10:04:13 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-14 10:04:13 -Starting...
2019-05-14 10:04:13 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-14 10:04:13 -Started.
2019-05-14 10:04:13 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-14 10:04:13 -Using a shared selector for servlet write/read
2019-05-14 10:04:13 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-14 10:04:13 -Started BootdoApplication in 36.555 seconds (JVM running for 37.403)
2019-05-14 10:04:13 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-14 10:04:14 -==> Parameters: 
2019-05-14 10:04:14 -<==      Total: 1
2019-05-14 10:05:06 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-14 10:05:29 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-14 10:05:29 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-14 10:05:29 -FrameworkServlet 'dispatcherServlet': initialization completed in 132 ms
2019-05-14 10:05:29 -Enabling session validation scheduler...
2019-05-14 10:05:29 -请求地址 : http://localhost:8081/login;JSESSIONID=3ea9cf11-1dba-45f4-a8d7-20cc5dbff1a6
2019-05-14 10:05:29 -HTTP METHOD : GET
2019-05-14 10:05:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-14 10:05:29 -参数 : [{}]
2019-05-14 10:05:29 -耗时 : 6
2019-05-14 10:05:29 -返回值 : login
2019-05-14 10:05:31 -请求地址 : http://localhost:8081/getVerify
2019-05-14 10:05:31 -HTTP METHOD : GET
2019-05-14 10:05:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-14 10:05:31 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@12327851, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1cf59467]
2019-05-14 10:05:35 -9248
2019-05-14 10:05:36 -耗时 : 5234
2019-05-14 10:05:36 -返回值 : null
2019-05-14 10:05:42 -请求地址 : http://localhost:8081/login
2019-05-14 10:05:42 -HTTP METHOD : POST
2019-05-14 10:05:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-14 10:05:42 -参数 : [admin, 111111, 9248, org.apache.shiro.web.servlet.ShiroHttpServletRequest@690b557]
2019-05-14 10:05:42 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-14 10:05:42 -==> Parameters: admin(String)
2019-05-14 10:05:42 -<==      Total: 1
2019-05-14 10:05:42 -耗时 : 121
2019-05-14 10:05:42 -返回值 : {msg=操作成功, code=0}
2019-05-14 10:05:42 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-14 10:05:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 10:05:42 -==> Parameters: 1(Long), admin(String), 登录(String), 121(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-14 10:05:42.666(Timestamp)
2019-05-14 10:05:42 -请求地址 : http://localhost:8081/index
2019-05-14 10:05:42 -HTTP METHOD : GET
2019-05-14 10:05:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-14 10:05:42 -参数 : [{}]
2019-05-14 10:05:42 -<==    Updates: 1
2019-05-14 10:05:42 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-14 10:05:43 -==> Parameters: 1(Long)
2019-05-14 10:05:43 -<==      Total: 49
2019-05-14 10:05:43 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-14 10:05:43 -==> Parameters: 138(Long)
2019-05-14 10:05:43 -<==      Total: 1
2019-05-14 10:05:43 -耗时 : 423
2019-05-14 10:05:43 -返回值 : index_v1
2019-05-14 10:05:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 10:05:43 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 423(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-14 10:05:43.207(Timestamp)
2019-05-14 10:05:43 -请求地址 : http://localhost:8081/main
2019-05-14 10:05:43 -HTTP METHOD : GET
2019-05-14 10:05:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 10:05:43 -参数 : []
2019-05-14 10:05:43 -耗时 : 0
2019-05-14 10:05:43 -返回值 : main
2019-05-14 10:05:43 -<==    Updates: 1
2019-05-14 10:05:43 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-14 10:05:43 -HTTP METHOD : GET
2019-05-14 10:05:43 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-14 10:05:43 -参数 : []
2019-05-14 10:05:43 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-14 10:05:43 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-14 10:05:43 -<==      Total: 0
2019-05-14 10:05:43 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-14 10:05:43 -==> Parameters: 1(Long), 0(String)
2019-05-14 10:05:43 -<==      Total: 1
2019-05-14 10:05:43 -耗时 : 50
2019-05-14 10:05:43 -返回值 : com.bootdo.common.utils.PageUtils@4b73d661
2019-05-14 10:05:43 -请求地址 : http://localhost:8081/main
2019-05-14 10:05:43 -HTTP METHOD : GET
2019-05-14 10:05:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 10:05:43 -参数 : []
2019-05-14 10:05:43 -耗时 : 0
2019-05-14 10:05:43 -返回值 : main
2019-05-14 10:05:54 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-14 10:05:54 -==> Parameters: 1(Long)
2019-05-14 10:05:54 -<==      Total: 93
2019-05-14 10:05:54 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-14 10:05:54 -HTTP METHOD : GET
2019-05-14 10:05:54 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 10:05:54 -参数 : []
2019-05-14 10:05:54 -耗时 : 10
2019-05-14 10:05:54 -返回值 : charts/tableElecMM
2019-05-14 10:05:55 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 10:05:55 -HTTP METHOD : GET
2019-05-14 10:05:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 10:05:55 -参数 : [userType]
2019-05-14 10:05:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 10:05:55 -==> Parameters: userType(String)
2019-05-14 10:05:55 -<==      Total: 4
2019-05-14 10:05:55 -耗时 : 41
2019-05-14 10:05:55 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 10:06:00 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-14 10:06:00 -HTTP METHOD : GET
2019-05-14 10:06:00 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-14 10:06:00 -参数 : []
2019-05-14 10:06:00 -耗时 : 0
2019-05-14 10:06:00 -返回值 : system/dept/deptTree
2019-05-14 10:06:01 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-14 10:06:01 -HTTP METHOD : GET
2019-05-14 10:06:01 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-14 10:06:01 -参数 : []
2019-05-14 10:06:01 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-14 10:06:01 -==> Parameters: 
2019-05-14 10:06:01 -<==      Total: 3
2019-05-14 10:06:01 -耗时 : 48
2019-05-14 10:06:01 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-14 10:06:05 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-05-14 10:06:05 -HTTP METHOD : POST
2019-05-14 10:06:05 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 10:06:05 -参数 : [com.bootdo.elec.vo.ElecVo@17081e51, com.bootdo.moneyLog.vo.ElecLogVo@5a1f1655]
2019-05-14 10:06:05 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:06:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:06:05 -<==      Total: 1
2019-05-14 10:06:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:06:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:06:05 -<==      Total: 1
2019-05-14 10:06:05 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:06:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:06:05 -<==      Total: 1
2019-05-14 10:06:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:06:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:06:05 -<==      Total: 1
2019-05-14 10:06:05 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:06:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:06:05 -<==      Total: 1
2019-05-14 10:06:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:06:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:06:05 -<==      Total: 1
2019-05-14 10:06:05 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:06:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:06:05 -<==      Total: 1
2019-05-14 10:06:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:06:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:06:05 -<==      Total: 1
2019-05-14 10:06:05 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:06:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:06:05 -<==      Total: 1
2019-05-14 10:06:05 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:06:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:06:05 -<==      Total: 1
2019-05-14 10:06:05 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:06:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:06:05 -<==      Total: 1
2019-05-14 10:06:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:06:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:06:05 -<==      Total: 1
2019-05-14 10:06:05 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:06:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:06:05 -<==      Total: 1
2019-05-14 10:06:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:06:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:06:05 -<==      Total: 1
2019-05-14 10:06:05 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:06:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:06:05 -<==      Total: 1
2019-05-14 10:06:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:06:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:06:05 -<==      Total: 1
2019-05-14 10:06:05 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:06:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:06:05 -<==      Total: 1
2019-05-14 10:06:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:06:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:06:05 -<==      Total: 1
2019-05-14 10:06:05 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:06:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:06:05 -<==      Total: 1
2019-05-14 10:06:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:06:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:06:05 -<==      Total: 1
2019-05-14 10:06:05 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:06:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:06:05 -<==      Total: 1
2019-05-14 10:06:05 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:06:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:06:05 -<==      Total: 1
2019-05-14 10:06:05 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:06:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:06:05 -<==      Total: 1
2019-05-14 10:06:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:06:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:06:05 -<==      Total: 1
2019-05-14 10:06:05 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:06:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:06:05 -<==      Total: 1
2019-05-14 10:06:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:06:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:06:05 -<==      Total: 1
2019-05-14 10:06:05 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:06:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:06:05 -<==      Total: 1
2019-05-14 10:06:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:06:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:06:05 -<==      Total: 1
2019-05-14 10:06:05 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:06:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:06:05 -<==      Total: 1
2019-05-14 10:06:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:06:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:06:05 -<==      Total: 1
2019-05-14 10:06:05 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:06:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:06:05 -<==      Total: 1
2019-05-14 10:06:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:06:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:06:05 -<==      Total: 1
2019-05-14 10:06:05 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:06:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:06:05 -<==      Total: 1
2019-05-14 10:06:05 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:06:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:06:05 -<==      Total: 1
2019-05-14 10:06:05 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:06:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:06:05 -<==      Total: 1
2019-05-14 10:06:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:06:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:06:05 -<==      Total: 1
2019-05-14 10:06:05 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:06:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:06:05 -<==      Total: 1
2019-05-14 10:06:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:06:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:06:05 -<==      Total: 1
2019-05-14 10:06:05 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:06:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:06:05 -<==      Total: 1
2019-05-14 10:06:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:06:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:06:05 -<==      Total: 1
2019-05-14 10:06:05 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:06:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:06:05 -<==      Total: 1
2019-05-14 10:06:05 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:06:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:06:05 -<==      Total: 0
2019-05-14 10:06:05 -null
java.lang.NullPointerException: null
	at com.bootdo.charts.controller.tableElecMMController.tableElecMM(tableElecMMController.java:104)
	at com.bootdo.charts.controller.tableElecMMController$$FastClassBySpringCGLIB$$d3ed8d12.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableElecMMController$$EnhancerBySpringCGLIB$$45029e3d.tableElecMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-14 10:06:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 10:06:05 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableElecMM/tableElecMM(String), java.lang.NullPointerException(String), null, 2019-05-14 10:06:05.614(Timestamp)
2019-05-14 10:06:05 -<==    Updates: 1
2019-05-14 10:23:21 -请求地址 : http://localhost:8081/index
2019-05-14 10:23:21 -HTTP METHOD : GET
2019-05-14 10:23:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-14 10:23:21 -参数 : [{}]
2019-05-14 10:23:21 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-14 10:23:21 -==> Parameters: 1(Long)
2019-05-14 10:23:21 -<==      Total: 49
2019-05-14 10:23:21 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-14 10:23:21 -==> Parameters: 138(Long)
2019-05-14 10:23:21 -<==      Total: 1
2019-05-14 10:23:21 -耗时 : 27
2019-05-14 10:23:21 -返回值 : index_v1
2019-05-14 10:23:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 10:23:21 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-14 10:23:21.054(Timestamp)
2019-05-14 10:23:21 -请求地址 : http://localhost:8081/main
2019-05-14 10:23:21 -HTTP METHOD : GET
2019-05-14 10:23:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 10:23:21 -参数 : []
2019-05-14 10:23:21 -耗时 : 0
2019-05-14 10:23:21 -返回值 : main
2019-05-14 10:23:21 -<==    Updates: 1
2019-05-14 10:23:21 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-14 10:23:21 -HTTP METHOD : GET
2019-05-14 10:23:21 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-14 10:23:21 -参数 : []
2019-05-14 10:23:21 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-14 10:23:21 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-14 10:23:21 -<==      Total: 0
2019-05-14 10:23:21 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-14 10:23:21 -==> Parameters: 1(Long), 0(String)
2019-05-14 10:23:21 -<==      Total: 1
2019-05-14 10:23:21 -耗时 : 6
2019-05-14 10:23:21 -返回值 : com.bootdo.common.utils.PageUtils@623f3a5b
2019-05-14 10:23:21 -请求地址 : http://localhost:8081/main
2019-05-14 10:23:21 -HTTP METHOD : GET
2019-05-14 10:23:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 10:23:21 -参数 : []
2019-05-14 10:23:21 -耗时 : 1
2019-05-14 10:23:21 -返回值 : main
2019-05-14 10:23:25 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-14 10:23:25 -==> Parameters: 1(Long)
2019-05-14 10:23:25 -<==      Total: 93
2019-05-14 10:23:25 -请求地址 : http://localhost:8081/charts/countYY
2019-05-14 10:23:25 -HTTP METHOD : GET
2019-05-14 10:23:25 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-05-14 10:23:25 -参数 : []
2019-05-14 10:23:25 -耗时 : 0
2019-05-14 10:23:25 -返回值 : charts/countYY
2019-05-14 10:23:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 10:23:25 -HTTP METHOD : GET
2019-05-14 10:23:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 10:23:25 -参数 : [userType]
2019-05-14 10:23:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 10:23:25 -==> Parameters: userType(String)
2019-05-14 10:23:25 -<==      Total: 4
2019-05-14 10:23:25 -耗时 : 4
2019-05-14 10:23:25 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 10:23:27 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-14 10:23:27 -HTTP METHOD : GET
2019-05-14 10:23:27 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-14 10:23:27 -参数 : []
2019-05-14 10:23:27 -耗时 : 8
2019-05-14 10:23:27 -返回值 : charts/tableElecYY
2019-05-14 10:23:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 10:23:27 -HTTP METHOD : GET
2019-05-14 10:23:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 10:23:27 -参数 : [userType]
2019-05-14 10:23:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 10:23:27 -==> Parameters: userType(String)
2019-05-14 10:23:27 -<==      Total: 4
2019-05-14 10:23:27 -耗时 : 4
2019-05-14 10:23:27 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 10:23:34 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-14 10:23:34 -HTTP METHOD : GET
2019-05-14 10:23:34 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-14 10:23:34 -参数 : []
2019-05-14 10:23:34 -耗时 : 0
2019-05-14 10:23:34 -返回值 : system/dept/deptTree
2019-05-14 10:23:34 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-14 10:23:34 -HTTP METHOD : GET
2019-05-14 10:23:34 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-14 10:23:34 -参数 : []
2019-05-14 10:23:34 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-14 10:23:34 -==> Parameters: 
2019-05-14 10:23:34 -<==      Total: 3
2019-05-14 10:23:34 -耗时 : 3
2019-05-14 10:23:34 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-14 10:23:49 -请求地址 : http://localhost:8081/index
2019-05-14 10:23:49 -HTTP METHOD : GET
2019-05-14 10:23:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-14 10:23:49 -参数 : [{}]
2019-05-14 10:23:49 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-14 10:23:49 -==> Parameters: 1(Long)
2019-05-14 10:23:49 -<==      Total: 49
2019-05-14 10:23:49 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-14 10:23:49 -==> Parameters: 138(Long)
2019-05-14 10:23:49 -<==      Total: 1
2019-05-14 10:23:49 -耗时 : 27
2019-05-14 10:23:49 -返回值 : index_v1
2019-05-14 10:23:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 10:23:49 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-14 10:23:49.354(Timestamp)
2019-05-14 10:23:49 -请求地址 : http://localhost:8081/main
2019-05-14 10:23:49 -HTTP METHOD : GET
2019-05-14 10:23:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 10:23:49 -参数 : []
2019-05-14 10:23:49 -耗时 : 0
2019-05-14 10:23:49 -返回值 : main
2019-05-14 10:23:49 -<==    Updates: 1
2019-05-14 10:23:49 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-14 10:23:49 -HTTP METHOD : GET
2019-05-14 10:23:49 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-14 10:23:49 -参数 : []
2019-05-14 10:23:49 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-14 10:23:49 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-14 10:23:49 -<==      Total: 0
2019-05-14 10:23:49 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-14 10:23:49 -==> Parameters: 1(Long), 0(String)
2019-05-14 10:23:49 -<==      Total: 1
2019-05-14 10:23:49 -耗时 : 8
2019-05-14 10:23:49 -返回值 : com.bootdo.common.utils.PageUtils@101d9ba9
2019-05-14 10:23:49 -请求地址 : http://localhost:8081/main
2019-05-14 10:23:49 -HTTP METHOD : GET
2019-05-14 10:23:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 10:23:49 -参数 : []
2019-05-14 10:23:49 -耗时 : 0
2019-05-14 10:23:49 -返回值 : main
2019-05-14 10:23:52 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-14 10:23:52 -HTTP METHOD : GET
2019-05-14 10:23:52 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 10:23:52 -参数 : []
2019-05-14 10:23:52 -耗时 : 0
2019-05-14 10:23:52 -返回值 : charts/tableElecMM
2019-05-14 10:23:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 10:23:53 -HTTP METHOD : GET
2019-05-14 10:23:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 10:23:53 -参数 : [userType]
2019-05-14 10:23:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 10:23:53 -==> Parameters: userType(String)
2019-05-14 10:23:53 -<==      Total: 4
2019-05-14 10:23:53 -耗时 : 7
2019-05-14 10:23:53 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 10:24:00 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-14 10:24:00 -HTTP METHOD : GET
2019-05-14 10:24:00 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-14 10:24:00 -参数 : []
2019-05-14 10:24:00 -耗时 : 1
2019-05-14 10:24:00 -返回值 : system/dept/deptTree
2019-05-14 10:24:00 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-14 10:24:00 -HTTP METHOD : GET
2019-05-14 10:24:00 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-14 10:24:00 -参数 : []
2019-05-14 10:24:00 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-14 10:24:00 -==> Parameters: 
2019-05-14 10:24:00 -<==      Total: 3
2019-05-14 10:24:00 -耗时 : 5
2019-05-14 10:24:00 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-14 10:24:05 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-05-14 10:24:05 -HTTP METHOD : POST
2019-05-14 10:24:05 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 10:24:05 -参数 : [com.bootdo.elec.vo.ElecVo@7f864db4, com.bootdo.moneyLog.vo.ElecLogVo@6de2d209]
2019-05-14 10:24:05 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:24:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:24:05 -<==      Total: 1
2019-05-14 10:24:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:24:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:24:05 -<==      Total: 1
2019-05-14 10:24:05 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:24:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:24:05 -<==      Total: 1
2019-05-14 10:24:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:24:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:24:05 -<==      Total: 1
2019-05-14 10:24:05 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:24:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:24:05 -<==      Total: 1
2019-05-14 10:24:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:24:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:24:05 -<==      Total: 1
2019-05-14 10:24:05 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:24:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:24:05 -<==      Total: 1
2019-05-14 10:24:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:24:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:24:05 -<==      Total: 1
2019-05-14 10:24:05 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:24:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:24:05 -<==      Total: 1
2019-05-14 10:24:05 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:24:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:24:05 -<==      Total: 1
2019-05-14 10:24:05 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:24:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:24:05 -<==      Total: 1
2019-05-14 10:24:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:24:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:24:05 -<==      Total: 1
2019-05-14 10:24:05 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:24:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:24:05 -<==      Total: 1
2019-05-14 10:24:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:24:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:24:05 -<==      Total: 1
2019-05-14 10:24:05 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:24:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:24:05 -<==      Total: 1
2019-05-14 10:24:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:24:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:24:05 -<==      Total: 1
2019-05-14 10:24:05 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:24:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:24:05 -<==      Total: 1
2019-05-14 10:24:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:24:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:24:05 -<==      Total: 1
2019-05-14 10:24:05 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:24:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:24:05 -<==      Total: 1
2019-05-14 10:24:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:24:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:24:05 -<==      Total: 1
2019-05-14 10:24:05 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:24:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:24:05 -<==      Total: 1
2019-05-14 10:24:05 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:24:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:24:05 -<==      Total: 1
2019-05-14 10:24:05 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:24:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:24:05 -<==      Total: 1
2019-05-14 10:24:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:24:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:24:05 -<==      Total: 1
2019-05-14 10:24:05 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:24:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:24:05 -<==      Total: 1
2019-05-14 10:24:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:24:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:24:05 -<==      Total: 1
2019-05-14 10:24:05 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:24:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:24:05 -<==      Total: 1
2019-05-14 10:24:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:24:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:24:05 -<==      Total: 1
2019-05-14 10:24:05 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:24:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:24:05 -<==      Total: 1
2019-05-14 10:24:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:24:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:24:05 -<==      Total: 1
2019-05-14 10:24:05 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:24:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:24:05 -<==      Total: 1
2019-05-14 10:24:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:24:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:24:05 -<==      Total: 1
2019-05-14 10:24:05 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:24:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:24:05 -<==      Total: 1
2019-05-14 10:24:05 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:24:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:24:05 -<==      Total: 1
2019-05-14 10:24:05 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:24:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:24:05 -<==      Total: 1
2019-05-14 10:24:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:24:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:24:05 -<==      Total: 1
2019-05-14 10:24:05 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:24:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:24:05 -<==      Total: 1
2019-05-14 10:24:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:24:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:24:05 -<==      Total: 1
2019-05-14 10:24:05 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:24:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:24:05 -<==      Total: 1
2019-05-14 10:24:05 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:24:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:24:05 -<==      Total: 1
2019-05-14 10:24:05 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:24:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:24:05 -<==      Total: 1
2019-05-14 10:24:05 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:24:05 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:24:05 -<==      Total: 0
2019-05-14 10:24:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 10:24:05 -null
java.lang.NullPointerException: null
	at com.bootdo.charts.controller.tableElecMMController.tableElecMM(tableElecMMController.java:104)
	at com.bootdo.charts.controller.tableElecMMController$$FastClassBySpringCGLIB$$d3ed8d12.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor142.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableElecMMController$$EnhancerBySpringCGLIB$$45029e3d.tableElecMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-14 10:24:05 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableElecMM/tableElecMM(String), java.lang.NullPointerException(String), null, 2019-05-14 10:24:05.274(Timestamp)
2019-05-14 10:24:05 -<==    Updates: 1
2019-05-14 10:24:49 -请求地址 : http://localhost:8081/index
2019-05-14 10:24:49 -HTTP METHOD : GET
2019-05-14 10:24:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-14 10:24:49 -参数 : [{}]
2019-05-14 10:24:49 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-14 10:24:49 -==> Parameters: 1(Long)
2019-05-14 10:24:49 -<==      Total: 49
2019-05-14 10:24:49 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-14 10:24:49 -==> Parameters: 138(Long)
2019-05-14 10:24:49 -<==      Total: 1
2019-05-14 10:24:49 -耗时 : 19
2019-05-14 10:24:49 -返回值 : index_v1
2019-05-14 10:24:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 10:24:49 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-14 10:24:49.981(Timestamp)
2019-05-14 10:24:50 -请求地址 : http://localhost:8081/main
2019-05-14 10:24:50 -HTTP METHOD : GET
2019-05-14 10:24:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 10:24:50 -参数 : []
2019-05-14 10:24:50 -耗时 : 1
2019-05-14 10:24:50 -返回值 : main
2019-05-14 10:24:50 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-14 10:24:50 -HTTP METHOD : GET
2019-05-14 10:24:50 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-14 10:24:50 -参数 : []
2019-05-14 10:24:50 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-14 10:24:50 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-14 10:24:50 -请求地址 : http://localhost:8081/main
2019-05-14 10:24:50 -HTTP METHOD : GET
2019-05-14 10:24:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 10:24:50 -参数 : []
2019-05-14 10:24:50 -耗时 : 1
2019-05-14 10:24:50 -返回值 : main
2019-05-14 10:24:50 -<==    Updates: 1
2019-05-14 10:24:50 -<==      Total: 0
2019-05-14 10:24:50 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-14 10:24:50 -==> Parameters: 1(Long), 0(String)
2019-05-14 10:24:50 -<==      Total: 1
2019-05-14 10:24:50 -耗时 : 177
2019-05-14 10:24:50 -返回值 : com.bootdo.common.utils.PageUtils@503e82b6
2019-05-14 10:25:35 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-14 10:25:35 -HTTP METHOD : GET
2019-05-14 10:25:35 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 10:25:35 -参数 : []
2019-05-14 10:25:35 -耗时 : 1
2019-05-14 10:25:35 -返回值 : charts/tableElecMM
2019-05-14 10:25:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 10:25:35 -HTTP METHOD : GET
2019-05-14 10:25:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 10:25:35 -参数 : [userType]
2019-05-14 10:25:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 10:25:35 -==> Parameters: userType(String)
2019-05-14 10:25:35 -<==      Total: 4
2019-05-14 10:25:35 -耗时 : 43
2019-05-14 10:25:35 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 10:25:42 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-14 10:25:42 -HTTP METHOD : GET
2019-05-14 10:25:42 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-14 10:25:42 -参数 : []
2019-05-14 10:25:42 -耗时 : 0
2019-05-14 10:25:42 -返回值 : system/dept/deptTree
2019-05-14 10:25:42 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-14 10:25:42 -HTTP METHOD : GET
2019-05-14 10:25:42 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-14 10:25:42 -参数 : []
2019-05-14 10:25:42 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-14 10:25:42 -==> Parameters: 
2019-05-14 10:25:42 -<==      Total: 3
2019-05-14 10:25:42 -耗时 : 3
2019-05-14 10:25:42 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-14 10:25:46 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-05-14 10:25:46 -HTTP METHOD : POST
2019-05-14 10:25:46 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 10:25:46 -参数 : [com.bootdo.elec.vo.ElecVo@165b3ea6, com.bootdo.moneyLog.vo.ElecLogVo@24ebf084]
2019-05-14 10:25:46 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:25:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:25:46 -<==      Total: 1
2019-05-14 10:25:46 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:25:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:25:46 -<==      Total: 1
2019-05-14 10:25:46 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:25:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:25:46 -<==      Total: 1
2019-05-14 10:25:46 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:25:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:25:46 -<==      Total: 1
2019-05-14 10:25:46 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:25:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:25:46 -<==      Total: 1
2019-05-14 10:25:46 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:25:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:25:46 -<==      Total: 1
2019-05-14 10:25:46 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:25:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:25:46 -<==      Total: 1
2019-05-14 10:25:46 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:25:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:25:46 -<==      Total: 1
2019-05-14 10:25:46 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:25:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:25:46 -<==      Total: 1
2019-05-14 10:25:46 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:25:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:25:46 -<==      Total: 1
2019-05-14 10:25:46 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:25:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:25:46 -<==      Total: 1
2019-05-14 10:25:46 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:25:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:25:46 -<==      Total: 1
2019-05-14 10:25:46 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:25:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:25:46 -<==      Total: 1
2019-05-14 10:25:46 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:25:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:25:46 -<==      Total: 1
2019-05-14 10:25:46 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:25:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:25:46 -<==      Total: 1
2019-05-14 10:25:46 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:25:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:25:46 -<==      Total: 1
2019-05-14 10:25:46 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:25:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:25:46 -<==      Total: 1
2019-05-14 10:25:46 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:25:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:25:46 -<==      Total: 1
2019-05-14 10:25:46 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:25:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:25:46 -<==      Total: 1
2019-05-14 10:25:46 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:25:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:25:46 -<==      Total: 1
2019-05-14 10:25:46 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:25:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:25:46 -<==      Total: 1
2019-05-14 10:25:46 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:25:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:25:46 -<==      Total: 1
2019-05-14 10:25:46 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:25:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:25:46 -<==      Total: 1
2019-05-14 10:25:46 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:25:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:25:46 -<==      Total: 1
2019-05-14 10:25:46 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:25:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:25:46 -<==      Total: 1
2019-05-14 10:25:46 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:25:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:25:46 -<==      Total: 1
2019-05-14 10:25:46 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:25:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:25:46 -<==      Total: 1
2019-05-14 10:25:46 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:25:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:25:46 -<==      Total: 1
2019-05-14 10:25:46 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:25:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:25:46 -<==      Total: 1
2019-05-14 10:25:46 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:25:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:25:46 -<==      Total: 1
2019-05-14 10:25:46 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:25:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:25:46 -<==      Total: 1
2019-05-14 10:25:46 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:25:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:25:46 -<==      Total: 1
2019-05-14 10:25:46 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:25:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:25:46 -<==      Total: 1
2019-05-14 10:25:46 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:25:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:25:46 -<==      Total: 1
2019-05-14 10:25:46 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:25:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:25:46 -<==      Total: 1
2019-05-14 10:25:46 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:25:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:25:46 -<==      Total: 1
2019-05-14 10:25:46 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:25:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:25:46 -<==      Total: 1
2019-05-14 10:25:46 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:25:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:25:46 -<==      Total: 1
2019-05-14 10:25:46 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:25:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:25:46 -<==      Total: 1
2019-05-14 10:25:46 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:25:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:25:46 -<==      Total: 1
2019-05-14 10:25:46 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:25:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:25:46 -<==      Total: 1
2019-05-14 10:25:46 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:25:46 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:25:46 -<==      Total: 0
2019-05-14 10:25:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 10:25:46 -null
java.lang.NullPointerException: null
	at com.bootdo.charts.controller.tableElecMMController.tableElecMM(tableElecMMController.java:104)
	at com.bootdo.charts.controller.tableElecMMController$$FastClassBySpringCGLIB$$d3ed8d12.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor142.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableElecMMController$$EnhancerBySpringCGLIB$$45029e3d.tableElecMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-14 10:25:46 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableElecMM/tableElecMM(String), java.lang.NullPointerException(String), null, 2019-05-14 10:25:46.144(Timestamp)
2019-05-14 10:25:46 -<==    Updates: 1
2019-05-14 10:27:16 -请求地址 : http://localhost:8081/index
2019-05-14 10:27:16 -HTTP METHOD : GET
2019-05-14 10:27:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-14 10:27:16 -参数 : [{}]
2019-05-14 10:27:16 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-14 10:27:16 -==> Parameters: 1(Long)
2019-05-14 10:27:16 -<==      Total: 49
2019-05-14 10:27:16 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-14 10:27:16 -==> Parameters: 138(Long)
2019-05-14 10:27:16 -<==      Total: 1
2019-05-14 10:27:16 -耗时 : 106
2019-05-14 10:27:16 -返回值 : index_v1
2019-05-14 10:27:16 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 10:27:16 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 107(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-14 10:27:16.466(Timestamp)
2019-05-14 10:27:16 -<==    Updates: 1
2019-05-14 10:27:16 -请求地址 : http://localhost:8081/main
2019-05-14 10:27:16 -HTTP METHOD : GET
2019-05-14 10:27:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 10:27:16 -参数 : []
2019-05-14 10:27:16 -耗时 : 0
2019-05-14 10:27:16 -返回值 : main
2019-05-14 10:27:16 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-14 10:27:16 -HTTP METHOD : GET
2019-05-14 10:27:16 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-14 10:27:16 -参数 : []
2019-05-14 10:27:16 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-14 10:27:16 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-14 10:27:16 -<==      Total: 0
2019-05-14 10:27:16 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-14 10:27:16 -==> Parameters: 1(Long), 0(String)
2019-05-14 10:27:16 -<==      Total: 1
2019-05-14 10:27:16 -耗时 : 9
2019-05-14 10:27:16 -返回值 : com.bootdo.common.utils.PageUtils@6985c595
2019-05-14 10:27:16 -请求地址 : http://localhost:8081/main
2019-05-14 10:27:16 -HTTP METHOD : GET
2019-05-14 10:27:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 10:27:16 -参数 : []
2019-05-14 10:27:16 -耗时 : 0
2019-05-14 10:27:16 -返回值 : main
2019-05-14 10:27:19 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-14 10:27:19 -HTTP METHOD : GET
2019-05-14 10:27:19 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 10:27:19 -参数 : []
2019-05-14 10:27:19 -耗时 : 1
2019-05-14 10:27:19 -返回值 : charts/tableElecMM
2019-05-14 10:27:19 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 10:27:19 -HTTP METHOD : GET
2019-05-14 10:27:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 10:27:19 -参数 : [userType]
2019-05-14 10:27:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 10:27:19 -==> Parameters: userType(String)
2019-05-14 10:27:19 -<==      Total: 4
2019-05-14 10:27:19 -耗时 : 4
2019-05-14 10:27:19 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 10:27:25 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-14 10:27:25 -HTTP METHOD : GET
2019-05-14 10:27:25 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-14 10:27:25 -参数 : []
2019-05-14 10:27:25 -耗时 : 1
2019-05-14 10:27:25 -返回值 : system/dept/deptTree
2019-05-14 10:27:25 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-14 10:27:25 -HTTP METHOD : GET
2019-05-14 10:27:25 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-14 10:27:25 -参数 : []
2019-05-14 10:27:25 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-14 10:27:25 -==> Parameters: 
2019-05-14 10:27:25 -<==      Total: 3
2019-05-14 10:27:25 -耗时 : 2
2019-05-14 10:27:25 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-14 10:27:29 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-05-14 10:27:29 -HTTP METHOD : POST
2019-05-14 10:27:29 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 10:27:29 -参数 : [com.bootdo.elec.vo.ElecVo@3b19bf08, com.bootdo.moneyLog.vo.ElecLogVo@a0ecd04]
2019-05-14 10:27:29 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 1
2019-05-14 10:27:29 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:27:29 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:27:29 -<==      Total: 0
2019-05-14 10:27:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 10:27:29 -null
java.lang.NullPointerException: null
	at com.bootdo.charts.controller.tableElecMMController.tableElecMM(tableElecMMController.java:122)
	at com.bootdo.charts.controller.tableElecMMController$$FastClassBySpringCGLIB$$d3ed8d12.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor142.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableElecMMController$$EnhancerBySpringCGLIB$$45029e3d.tableElecMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-14 10:27:29 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableElecMM/tableElecMM(String), java.lang.NullPointerException(String), null, 2019-05-14 10:27:29.29(Timestamp)
2019-05-14 10:27:29 -<==    Updates: 1
2019-05-14 10:30:12 -请求地址 : http://localhost:8081/index
2019-05-14 10:30:12 -HTTP METHOD : GET
2019-05-14 10:30:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-14 10:30:12 -参数 : [{}]
2019-05-14 10:30:12 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-14 10:30:12 -==> Parameters: 1(Long)
2019-05-14 10:30:12 -<==      Total: 49
2019-05-14 10:30:12 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-14 10:30:12 -==> Parameters: 138(Long)
2019-05-14 10:30:12 -<==      Total: 1
2019-05-14 10:30:12 -耗时 : 23
2019-05-14 10:30:12 -返回值 : index_v1
2019-05-14 10:30:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 10:30:12 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-14 10:30:12.636(Timestamp)
2019-05-14 10:30:12 -<==    Updates: 1
2019-05-14 10:30:12 -请求地址 : http://localhost:8081/main
2019-05-14 10:30:12 -HTTP METHOD : GET
2019-05-14 10:30:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 10:30:12 -参数 : []
2019-05-14 10:30:12 -耗时 : 1
2019-05-14 10:30:12 -返回值 : main
2019-05-14 10:30:12 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-14 10:30:12 -HTTP METHOD : GET
2019-05-14 10:30:12 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-14 10:30:12 -参数 : []
2019-05-14 10:30:12 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-14 10:30:12 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-14 10:30:12 -<==      Total: 0
2019-05-14 10:30:12 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-14 10:30:12 -==> Parameters: 1(Long), 0(String)
2019-05-14 10:30:12 -<==      Total: 1
2019-05-14 10:30:12 -耗时 : 9
2019-05-14 10:30:12 -返回值 : com.bootdo.common.utils.PageUtils@7e22ec80
2019-05-14 10:30:12 -请求地址 : http://localhost:8081/main
2019-05-14 10:30:12 -HTTP METHOD : GET
2019-05-14 10:30:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 10:30:12 -参数 : []
2019-05-14 10:30:12 -耗时 : 0
2019-05-14 10:30:12 -返回值 : main
2019-05-14 10:30:16 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-14 10:30:16 -HTTP METHOD : GET
2019-05-14 10:30:16 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 10:30:16 -参数 : []
2019-05-14 10:30:16 -耗时 : 0
2019-05-14 10:30:16 -返回值 : charts/tableElecMM
2019-05-14 10:30:16 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 10:30:16 -HTTP METHOD : GET
2019-05-14 10:30:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 10:30:16 -参数 : [userType]
2019-05-14 10:30:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 10:30:16 -==> Parameters: userType(String)
2019-05-14 10:30:16 -<==      Total: 4
2019-05-14 10:30:16 -耗时 : 3
2019-05-14 10:30:16 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 10:30:23 -请求地址 : http://localhost:8081/index
2019-05-14 10:30:23 -HTTP METHOD : GET
2019-05-14 10:30:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-14 10:30:23 -参数 : [{}]
2019-05-14 10:30:23 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-14 10:30:23 -==> Parameters: 1(Long)
2019-05-14 10:30:23 -<==      Total: 49
2019-05-14 10:30:23 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-14 10:30:23 -==> Parameters: 138(Long)
2019-05-14 10:30:23 -<==      Total: 1
2019-05-14 10:30:23 -耗时 : 18
2019-05-14 10:30:23 -返回值 : index_v1
2019-05-14 10:30:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 10:30:23 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 18(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-14 10:30:23.114(Timestamp)
2019-05-14 10:30:23 -请求地址 : http://localhost:8081/main
2019-05-14 10:30:23 -HTTP METHOD : GET
2019-05-14 10:30:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 10:30:23 -参数 : []
2019-05-14 10:30:23 -<==    Updates: 1
2019-05-14 10:30:23 -耗时 : 0
2019-05-14 10:30:23 -返回值 : main
2019-05-14 10:30:23 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-14 10:30:23 -HTTP METHOD : GET
2019-05-14 10:30:23 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-14 10:30:23 -参数 : []
2019-05-14 10:30:23 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-14 10:30:23 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-14 10:30:23 -<==      Total: 0
2019-05-14 10:30:23 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-14 10:30:23 -==> Parameters: 1(Long), 0(String)
2019-05-14 10:30:23 -<==      Total: 1
2019-05-14 10:30:23 -耗时 : 5
2019-05-14 10:30:23 -返回值 : com.bootdo.common.utils.PageUtils@de46447
2019-05-14 10:30:23 -请求地址 : http://localhost:8081/main
2019-05-14 10:30:23 -HTTP METHOD : GET
2019-05-14 10:30:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 10:30:23 -参数 : []
2019-05-14 10:30:23 -耗时 : 0
2019-05-14 10:30:23 -返回值 : main
2019-05-14 10:30:28 -请求地址 : http://localhost:8081/water/waterInto
2019-05-14 10:30:28 -HTTP METHOD : GET
2019-05-14 10:30:28 -CLASS_METHOD : com.bootdo.water.controller.WaterIntoController.WaterInto
2019-05-14 10:30:28 -参数 : []
2019-05-14 10:30:28 -耗时 : 1
2019-05-14 10:30:28 -返回值 : water/waterInto/waterInto
2019-05-14 10:30:29 -请求地址 : http://localhost:8081/water/water
2019-05-14 10:30:29 -HTTP METHOD : GET
2019-05-14 10:30:29 -CLASS_METHOD : com.bootdo.water.controller.WaterController.Water
2019-05-14 10:30:29 -参数 : []
2019-05-14 10:30:29 -耗时 : 0
2019-05-14 10:30:29 -返回值 : water/water/water
2019-05-14 10:30:29 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-05-14 10:30:29 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 10:30:29 -HTTP METHOD : GET
2019-05-14 10:30:29 -HTTP METHOD : GET
2019-05-14 10:30:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 10:30:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 10:30:29 -参数 : [waterType]
2019-05-14 10:30:29 -参数 : [userType]
2019-05-14 10:30:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 10:30:29 -==> Parameters: waterType(String)
2019-05-14 10:30:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 10:30:29 -==> Parameters: userType(String)
2019-05-14 10:30:29 -<==      Total: 2
2019-05-14 10:30:29 -耗时 : 4
2019-05-14 10:30:29 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 10:30:29 -<==      Total: 4
2019-05-14 10:30:29 -耗时 : 4
2019-05-14 10:30:29 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 10:30:29 -请求地址 : http://localhost:8081/water/water/list
2019-05-14 10:30:29 -HTTP METHOD : GET
2019-05-14 10:30:29 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-05-14 10:30:29 -参数 : [{limit=3, offset=0, userType=, waterType=, userOrg=, userId=, createTime=, queryType=1}]
2019-05-14 10:30:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_cost`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water order by id asc limit ?, ? 
2019-05-14 10:30:29 -==> Parameters: 0(Integer), 3(Integer)
2019-05-14 10:30:29 -<==      Total: 3
2019-05-14 10:30:29 -==>  Preparing: select count(*) from water 
2019-05-14 10:30:29 -==> Parameters: 
2019-05-14 10:30:29 -<==      Total: 1
2019-05-14 10:30:29 -耗时 : 62
2019-05-14 10:30:29 -返回值 : com.bootdo.common.utils.PageUtils@65eb9fe5
2019-05-14 10:30:34 -请求地址 : http://localhost:8081/index
2019-05-14 10:30:34 -HTTP METHOD : GET
2019-05-14 10:30:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-14 10:30:34 -参数 : [{}]
2019-05-14 10:30:34 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-14 10:30:34 -==> Parameters: 1(Long)
2019-05-14 10:30:34 -<==      Total: 49
2019-05-14 10:30:34 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-14 10:30:34 -==> Parameters: 138(Long)
2019-05-14 10:30:34 -<==      Total: 1
2019-05-14 10:30:34 -耗时 : 69
2019-05-14 10:30:34 -返回值 : index_v1
2019-05-14 10:30:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 10:30:34 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 69(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-14 10:30:34.169(Timestamp)
2019-05-14 10:30:34 -<==    Updates: 1
2019-05-14 10:30:34 -请求地址 : http://localhost:8081/main
2019-05-14 10:30:34 -HTTP METHOD : GET
2019-05-14 10:30:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 10:30:34 -参数 : []
2019-05-14 10:30:34 -耗时 : 0
2019-05-14 10:30:34 -返回值 : main
2019-05-14 10:30:34 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-14 10:30:34 -HTTP METHOD : GET
2019-05-14 10:30:34 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-14 10:30:34 -参数 : []
2019-05-14 10:30:34 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-14 10:30:34 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-14 10:30:34 -<==      Total: 0
2019-05-14 10:30:34 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-14 10:30:34 -==> Parameters: 1(Long), 0(String)
2019-05-14 10:30:34 -<==      Total: 1
2019-05-14 10:30:34 -耗时 : 6
2019-05-14 10:30:34 -返回值 : com.bootdo.common.utils.PageUtils@4486a2ad
2019-05-14 10:30:34 -请求地址 : http://localhost:8081/main
2019-05-14 10:30:34 -HTTP METHOD : GET
2019-05-14 10:30:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 10:30:34 -参数 : []
2019-05-14 10:30:34 -耗时 : 0
2019-05-14 10:30:34 -返回值 : main
2019-05-14 10:30:52 -Starting BootdoApplication on PC-201905091110 with PID 12548 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-14 10:30:52 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-14 10:30:52 -The following profiles are active: dev
2019-05-14 10:30:53 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Tue May 14 10:30:53 CST 2019]; root of context hierarchy
2019-05-14 10:30:56 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-14 10:30:58 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bb3b3035] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 10:30:58 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$ad945edc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 10:30:59 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 10:31:00 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 10:31:00 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 10:31:00 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-14 10:31:00 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-14 10:31:00 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 10:31:00 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 10:31:00 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 10:31:00 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 10:31:01 -Tomcat initialized with port(s): 8081 (http)
2019-05-14 10:31:01 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-14 10:31:01 -Starting service [Tomcat]
2019-05-14 10:31:01 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-14 10:31:01 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-14 10:31:01 -Initializing Spring embedded WebApplicationContext
2019-05-14 10:31:01 -Root WebApplicationContext: initialization completed in 8416 ms
2019-05-14 10:31:02 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-14 10:31:02 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-14 10:31:02 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-14 10:31:02 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-14 10:31:02 -Filter xssFilter was not registered (disabled)
2019-05-14 10:31:02 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-14 10:31:02 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-14 10:31:02 -Servlet statViewServlet mapped to [/druid/*]
2019-05-14 10:31:02 -Servlet dispatcherServlet mapped to [/]
2019-05-14 10:31:13 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Tue May 14 10:30:53 CST 2019]; root of context hierarchy
2019-05-14 10:31:14 -Using default implementation for ThreadExecutor
2019-05-14 10:31:14 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-14 10:31:14 -Quartz Scheduler v.2.2.1 created.
2019-05-14 10:31:14 -RAMJobStore initialized.
2019-05-14 10:31:14 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-14 10:31:14 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-14 10:31:14 -Quartz scheduler version: 2.2.1
2019-05-14 10:31:14 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@50a7c72b
2019-05-14 10:31:15 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-14 10:31:15 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-14 10:31:18 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-14 10:31:18 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 10:31:18 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 10:31:18 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-14 10:31:18 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 10:31:18 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 10:31:18 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-14 10:31:18 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-14 10:31:18 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-14 10:31:18 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 10:31:18 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-14 10:31:18 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 10:31:18 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 10:31:18 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 10:31:18 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-14 10:31:18 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-14 10:31:18 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 10:31:18 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 10:31:18 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-14 10:31:18 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-14 10:31:18 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 10:31:18 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-14 10:31:18 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-14 10:31:18 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 10:31:18 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 10:31:18 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-14 10:31:18 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 10:31:18 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 10:31:18 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 10:31:18 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-14 10:31:18 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 10:31:18 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-14 10:31:18 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-05-14 10:31:18 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-14 10:31:18 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-14 10:31:18 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 10:31:18 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-14 10:31:18 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-14 10:31:18 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-14 10:31:18 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-14 10:31:18 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 10:31:18 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-14 10:31:18 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-14 10:31:18 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 10:31:18 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-14 10:31:18 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-14 10:31:18 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-14 10:31:18 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-14 10:31:18 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-14 10:31:18 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-14 10:31:18 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-14 10:31:18 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 10:31:18 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-14 10:31:18 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-14 10:31:18 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 10:31:18 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-14 10:31:18 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-14 10:31:18 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 10:31:18 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-14 10:31:18 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-14 10:31:18 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-14 10:31:18 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-14 10:31:18 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-14 10:31:18 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-14 10:31:18 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-14 10:31:18 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-14 10:31:18 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-14 10:31:18 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 10:31:18 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-14 10:31:18 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-14 10:31:18 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 10:31:18 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-14 10:31:18 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-14 10:31:18 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-14 10:31:18 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-14 10:31:18 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 10:31:18 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-14 10:31:18 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-14 10:31:18 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-14 10:31:18 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-14 10:31:18 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-14 10:31:18 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-14 10:31:18 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-14 10:31:18 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-14 10:31:18 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-14 10:31:18 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-14 10:31:18 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-14 10:31:18 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 10:31:18 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-14 10:31:18 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-14 10:31:18 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-14 10:31:18 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-14 10:31:18 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-14 10:31:18 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-14 10:31:18 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-14 10:31:18 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-14 10:31:18 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-14 10:31:18 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-14 10:31:18 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-14 10:31:18 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 10:31:18 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-14 10:31:18 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 10:31:18 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-14 10:31:18 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-14 10:31:18 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-14 10:31:18 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-14 10:31:18 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-14 10:31:18 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-14 10:31:18 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-14 10:31:18 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-14 10:31:18 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 10:31:18 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-14 10:31:18 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-14 10:31:18 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-14 10:31:18 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-14 10:31:18 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-14 10:31:18 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-14 10:31:18 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-14 10:31:18 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-14 10:31:18 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-14 10:31:18 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-14 10:31:18 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-14 10:31:18 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 10:31:18 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-14 10:31:18 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 10:31:18 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-14 10:31:18 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-14 10:31:18 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-14 10:31:18 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-14 10:31:18 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-14 10:31:18 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-14 10:31:18 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-14 10:31:18 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-14 10:31:18 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-14 10:31:18 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-14 10:31:18 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-14 10:31:18 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-14 10:31:18 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-14 10:31:18 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 10:31:18 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-14 10:31:18 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 10:31:18 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-14 10:31:18 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-14 10:31:18 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-14 10:31:18 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-14 10:31:18 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-14 10:31:18 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-14 10:31:18 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 10:31:18 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-14 10:31:18 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 10:31:18 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-14 10:31:18 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-14 10:31:18 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-14 10:31:18 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-14 10:31:18 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-14 10:31:18 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-14 10:31:18 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 10:31:18 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-14 10:31:18 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 10:31:18 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-14 10:31:18 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-14 10:31:18 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-14 10:31:18 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-14 10:31:18 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-14 10:31:18 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-14 10:31:18 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-14 10:31:18 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 10:31:18 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-14 10:31:18 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-14 10:31:18 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 10:31:18 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 10:31:18 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-14 10:31:18 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-14 10:31:18 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-14 10:31:18 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-14 10:31:18 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-14 10:31:18 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-14 10:31:18 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 10:31:18 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-14 10:31:18 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 10:31:18 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-14 10:31:18 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-14 10:31:18 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-14 10:31:18 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 10:31:18 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-14 10:31:18 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-14 10:31:18 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-14 10:31:18 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-14 10:31:18 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-14 10:31:18 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-14 10:31:18 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-14 10:31:18 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 10:31:18 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-14 10:31:18 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-14 10:31:18 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-14 10:31:18 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-14 10:31:18 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-14 10:31:18 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-14 10:31:18 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-14 10:31:18 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-14 10:31:18 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-14 10:31:18 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-14 10:31:18 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-14 10:31:18 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-14 10:31:18 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 10:31:18 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-14 10:31:18 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-14 10:31:18 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-14 10:31:18 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-14 10:31:18 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-14 10:31:18 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-14 10:31:18 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-14 10:31:18 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-14 10:31:18 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-14 10:31:18 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-14 10:31:18 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-14 10:31:18 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-14 10:31:18 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 10:31:18 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-14 10:31:18 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-14 10:31:18 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-14 10:31:18 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-14 10:31:18 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 10:31:18 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-14 10:31:18 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-14 10:31:18 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-14 10:31:18 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 10:31:18 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-14 10:31:18 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-14 10:31:18 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-14 10:31:18 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-14 10:31:18 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-14 10:31:18 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-14 10:31:18 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-14 10:31:18 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-14 10:31:18 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-14 10:31:18 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-14 10:31:18 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-14 10:31:18 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-14 10:31:18 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-14 10:31:18 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-14 10:31:18 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-14 10:31:18 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-14 10:31:18 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-14 10:31:18 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 10:31:18 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-14 10:31:18 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 10:31:18 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-14 10:31:18 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-14 10:31:18 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-14 10:31:18 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-14 10:31:18 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-14 10:31:18 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-14 10:31:18 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-14 10:31:18 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-14 10:31:18 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-14 10:31:18 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 10:31:18 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-14 10:31:18 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 10:31:18 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-14 10:31:18 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-14 10:31:18 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-14 10:31:18 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-14 10:31:18 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-14 10:31:18 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-14 10:31:18 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-14 10:31:18 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-14 10:31:18 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-14 10:31:19 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-14 10:31:20 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-14 10:31:20 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-14 10:31:20 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-14 10:31:21 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Tue May 14 10:30:53 CST 2019]; root of context hierarchy
2019-05-14 10:31:21 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-14 10:31:21 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-14 10:31:21 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-14 10:31:21 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-14 10:31:21 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-14 10:31:24 -Registering beans for JMX exposure on startup
2019-05-14 10:31:24 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-14 10:31:24 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-14 10:31:24 -Starting beans in phase 2147483647
2019-05-14 10:31:24 -Context refreshed
2019-05-14 10:31:24 -Found 1 custom documentation plugin(s)
2019-05-14 10:31:24 -Scanning for api listing references
2019-05-14 10:31:25 -Generating unique operation named: getCountDUsingPOST_1
2019-05-14 10:31:25 -Generating unique operation named: removeUsingPOST_1
2019-05-14 10:31:25 -Generating unique operation named: addUsingGET_1
2019-05-14 10:31:25 -Generating unique operation named: editUsingGET_1
2019-05-14 10:31:25 -Generating unique operation named: listUsingGET_1
2019-05-14 10:31:25 -Generating unique operation named: removeUsingPOST_2
2019-05-14 10:31:25 -Generating unique operation named: removeUsingPOST_3
2019-05-14 10:31:25 -Generating unique operation named: saveUsingPOST_1
2019-05-14 10:31:25 -Generating unique operation named: updateUsingGET_1
2019-05-14 10:31:25 -Generating unique operation named: updateUsingHEAD_1
2019-05-14 10:31:25 -Generating unique operation named: updateUsingPOST_1
2019-05-14 10:31:25 -Generating unique operation named: updateUsingPUT_1
2019-05-14 10:31:25 -Generating unique operation named: updateUsingPATCH_1
2019-05-14 10:31:25 -Generating unique operation named: updateUsingDELETE_1
2019-05-14 10:31:25 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-14 10:31:25 -Generating unique operation named: updateUsingTRACE_1
2019-05-14 10:31:25 -Generating unique operation named: addUsingGET_2
2019-05-14 10:31:25 -Generating unique operation named: editUsingGET_2
2019-05-14 10:31:25 -Generating unique operation named: listUsingGET_2
2019-05-14 10:31:25 -Generating unique operation named: removeUsingPOST_4
2019-05-14 10:31:25 -Generating unique operation named: removeUsingPOST_5
2019-05-14 10:31:25 -Generating unique operation named: saveUsingPOST_2
2019-05-14 10:31:25 -Generating unique operation named: updateUsingPOST_2
2019-05-14 10:31:25 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-14 10:31:25 -Generating unique operation named: addUsingGET_3
2019-05-14 10:31:25 -Generating unique operation named: editUsingGET_3
2019-05-14 10:31:25 -Generating unique operation named: listUsingGET_3
2019-05-14 10:31:25 -Generating unique operation named: removeUsingPOST_6
2019-05-14 10:31:25 -Generating unique operation named: removeUsingPOST_7
2019-05-14 10:31:25 -Generating unique operation named: saveUsingPOST_3
2019-05-14 10:31:25 -Generating unique operation named: updateUsingGET_2
2019-05-14 10:31:25 -Generating unique operation named: updateUsingHEAD_2
2019-05-14 10:31:25 -Generating unique operation named: updateUsingPOST_3
2019-05-14 10:31:25 -Generating unique operation named: updateUsingPUT_2
2019-05-14 10:31:25 -Generating unique operation named: updateUsingPATCH_2
2019-05-14 10:31:25 -Generating unique operation named: updateUsingDELETE_2
2019-05-14 10:31:25 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-14 10:31:25 -Generating unique operation named: updateUsingTRACE_2
2019-05-14 10:31:25 -Generating unique operation named: addUsingGET_4
2019-05-14 10:31:25 -Generating unique operation named: editUsingGET_4
2019-05-14 10:31:25 -Generating unique operation named: listUsingGET_4
2019-05-14 10:31:25 -Generating unique operation named: removeUsingPOST_8
2019-05-14 10:31:25 -Generating unique operation named: removeUsingPOST_9
2019-05-14 10:31:25 -Generating unique operation named: saveUsingPOST_4
2019-05-14 10:31:25 -Generating unique operation named: updateUsingGET_3
2019-05-14 10:31:25 -Generating unique operation named: updateUsingHEAD_3
2019-05-14 10:31:25 -Generating unique operation named: updateUsingPOST_4
2019-05-14 10:31:25 -Generating unique operation named: updateUsingPUT_3
2019-05-14 10:31:25 -Generating unique operation named: updateUsingPATCH_3
2019-05-14 10:31:25 -Generating unique operation named: updateUsingDELETE_3
2019-05-14 10:31:25 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-14 10:31:25 -Generating unique operation named: updateUsingTRACE_3
2019-05-14 10:31:25 -Generating unique operation named: ElecUsingGET_1
2019-05-14 10:31:25 -Generating unique operation named: addUsingGET_5
2019-05-14 10:31:25 -Generating unique operation named: editUsingGET_5
2019-05-14 10:31:26 -Generating unique operation named: listUsingGET_5
2019-05-14 10:31:26 -Generating unique operation named: removeUsingPOST_10
2019-05-14 10:31:26 -Generating unique operation named: removeUsingPOST_11
2019-05-14 10:31:26 -Generating unique operation named: saveUsingPOST_5
2019-05-14 10:31:26 -Generating unique operation named: updateUsingGET_4
2019-05-14 10:31:26 -Generating unique operation named: updateUsingHEAD_4
2019-05-14 10:31:26 -Generating unique operation named: updateUsingPOST_5
2019-05-14 10:31:26 -Generating unique operation named: updateUsingPUT_4
2019-05-14 10:31:26 -Generating unique operation named: updateUsingPATCH_4
2019-05-14 10:31:26 -Generating unique operation named: updateUsingDELETE_4
2019-05-14 10:31:26 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-14 10:31:26 -Generating unique operation named: updateUsingTRACE_4
2019-05-14 10:31:26 -Generating unique operation named: editUsingGET_6
2019-05-14 10:31:26 -Generating unique operation named: listUsingGET_6
2019-05-14 10:31:26 -Generating unique operation named: updateUsingPOST_6
2019-05-14 10:31:26 -Generating unique operation named: addUsingGET_6
2019-05-14 10:31:26 -Generating unique operation named: editUsingGET_7
2019-05-14 10:31:26 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-14 10:31:26 -Generating unique operation named: listUsingGET_7
2019-05-14 10:31:26 -Generating unique operation named: removeUsingPOST_12
2019-05-14 10:31:26 -Generating unique operation named: removeUsingPOST_13
2019-05-14 10:31:26 -Generating unique operation named: saveUsingPOST_6
2019-05-14 10:31:26 -Generating unique operation named: updateUsingGET_5
2019-05-14 10:31:26 -Generating unique operation named: updateUsingHEAD_5
2019-05-14 10:31:26 -Generating unique operation named: updateUsingPOST_7
2019-05-14 10:31:26 -Generating unique operation named: updateUsingPUT_5
2019-05-14 10:31:26 -Generating unique operation named: updateUsingPATCH_5
2019-05-14 10:31:26 -Generating unique operation named: updateUsingDELETE_5
2019-05-14 10:31:26 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-14 10:31:26 -Generating unique operation named: updateUsingTRACE_5
2019-05-14 10:31:26 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-14 10:31:26 -Generating unique operation named: addUsingGET_7
2019-05-14 10:31:26 -Generating unique operation named: editUsingGET_8
2019-05-14 10:31:26 -Generating unique operation named: listUsingGET_8
2019-05-14 10:31:26 -Generating unique operation named: removeUsingPOST_14
2019-05-14 10:31:26 -Generating unique operation named: removeUsingPOST_15
2019-05-14 10:31:26 -Generating unique operation named: saveUsingPOST_7
2019-05-14 10:31:26 -Generating unique operation named: updateUsingGET_6
2019-05-14 10:31:26 -Generating unique operation named: updateUsingHEAD_6
2019-05-14 10:31:26 -Generating unique operation named: updateUsingPOST_8
2019-05-14 10:31:26 -Generating unique operation named: updateUsingPUT_6
2019-05-14 10:31:26 -Generating unique operation named: updateUsingPATCH_6
2019-05-14 10:31:26 -Generating unique operation named: updateUsingDELETE_6
2019-05-14 10:31:26 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-14 10:31:26 -Generating unique operation named: updateUsingTRACE_6
2019-05-14 10:31:26 -Generating unique operation named: addUsingGET_8
2019-05-14 10:31:26 -Generating unique operation named: editUsingGET_9
2019-05-14 10:31:26 -Generating unique operation named: listUsingGET_9
2019-05-14 10:31:26 -Generating unique operation named: removeUsingPOST_16
2019-05-14 10:31:26 -Generating unique operation named: removeUsingPOST_17
2019-05-14 10:31:26 -Generating unique operation named: saveUsingPOST_8
2019-05-14 10:31:26 -Generating unique operation named: updateUsingGET_7
2019-05-14 10:31:26 -Generating unique operation named: updateUsingHEAD_7
2019-05-14 10:31:26 -Generating unique operation named: updateUsingPOST_9
2019-05-14 10:31:26 -Generating unique operation named: updateUsingPUT_7
2019-05-14 10:31:26 -Generating unique operation named: updateUsingPATCH_7
2019-05-14 10:31:26 -Generating unique operation named: updateUsingDELETE_7
2019-05-14 10:31:26 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-14 10:31:26 -Generating unique operation named: updateUsingTRACE_7
2019-05-14 10:31:26 -Generating unique operation named: addUsingGET_9
2019-05-14 10:31:26 -Generating unique operation named: editUsingGET_10
2019-05-14 10:31:26 -Generating unique operation named: infoUsingGET_1
2019-05-14 10:31:26 -Generating unique operation named: infoUsingHEAD_1
2019-05-14 10:31:26 -Generating unique operation named: infoUsingPOST_1
2019-05-14 10:31:26 -Generating unique operation named: infoUsingPUT_1
2019-05-14 10:31:26 -Generating unique operation named: infoUsingPATCH_1
2019-05-14 10:31:26 -Generating unique operation named: infoUsingDELETE_1
2019-05-14 10:31:26 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-14 10:31:26 -Generating unique operation named: infoUsingTRACE_1
2019-05-14 10:31:26 -Generating unique operation named: listUsingGET_10
2019-05-14 10:31:26 -Generating unique operation named: removeUsingPOST_18
2019-05-14 10:31:26 -Generating unique operation named: removeUsingPOST_19
2019-05-14 10:31:26 -Generating unique operation named: saveUsingPOST_9
2019-05-14 10:31:26 -Generating unique operation named: updateUsingPOST_10
2019-05-14 10:31:27 -Generating unique operation named: listUsingGET_11
2019-05-14 10:31:27 -Generating unique operation named: removeUsingPOST_20
2019-05-14 10:31:27 -Generating unique operation named: welcomeUsingGET_1
2019-05-14 10:31:27 -Generating unique operation named: addUsingGET_10
2019-05-14 10:31:27 -Generating unique operation named: editUsingGET_11
2019-05-14 10:31:27 -Generating unique operation named: listUsingGET_12
2019-05-14 10:31:27 -Generating unique operation named: removeUsingPOST_21
2019-05-14 10:31:27 -Generating unique operation named: saveUsingPOST_10
2019-05-14 10:31:27 -Generating unique operation named: treeUsingGET_1
2019-05-14 10:31:27 -Generating unique operation named: treeUsingGET_2
2019-05-14 10:31:27 -Generating unique operation named: updateUsingPOST_11
2019-05-14 10:31:27 -Generating unique operation named: addUsingGET_11
2019-05-14 10:31:27 -Generating unique operation named: editUsingGET_12
2019-05-14 10:31:27 -Generating unique operation named: listUsingGET_13
2019-05-14 10:31:27 -Generating unique operation named: removeUsingPOST_22
2019-05-14 10:31:27 -Generating unique operation named: removeUsingPOST_23
2019-05-14 10:31:27 -Generating unique operation named: saveUsingPOST_11
2019-05-14 10:31:27 -Generating unique operation named: updateUsingGET_8
2019-05-14 10:31:27 -Generating unique operation named: updateUsingHEAD_8
2019-05-14 10:31:27 -Generating unique operation named: updateUsingPOST_12
2019-05-14 10:31:27 -Generating unique operation named: updateUsingPUT_8
2019-05-14 10:31:27 -Generating unique operation named: updateUsingPATCH_8
2019-05-14 10:31:27 -Generating unique operation named: updateUsingDELETE_8
2019-05-14 10:31:27 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-14 10:31:27 -Generating unique operation named: updateUsingTRACE_8
2019-05-14 10:31:27 -Generating unique operation named: addUsingGET_12
2019-05-14 10:31:27 -Generating unique operation named: editUsingGET_13
2019-05-14 10:31:27 -Generating unique operation named: listUsingGET_14
2019-05-14 10:31:27 -Generating unique operation named: removeUsingPOST_24
2019-05-14 10:31:27 -Generating unique operation named: removeUsingPOST_25
2019-05-14 10:31:27 -Generating unique operation named: saveUsingPOST_12
2019-05-14 10:31:27 -Generating unique operation named: updateUsingGET_9
2019-05-14 10:31:27 -Generating unique operation named: updateUsingHEAD_9
2019-05-14 10:31:27 -Generating unique operation named: updateUsingPOST_13
2019-05-14 10:31:27 -Generating unique operation named: updateUsingPUT_9
2019-05-14 10:31:27 -Generating unique operation named: updateUsingPATCH_9
2019-05-14 10:31:27 -Generating unique operation named: updateUsingDELETE_9
2019-05-14 10:31:27 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-14 10:31:27 -Generating unique operation named: updateUsingTRACE_9
2019-05-14 10:31:27 -Generating unique operation named: addUsingGET_13
2019-05-14 10:31:27 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-14 10:31:27 -Generating unique operation named: editUsingGET_14
2019-05-14 10:31:27 -Generating unique operation named: listUsingGET_15
2019-05-14 10:31:27 -Generating unique operation named: saveUsingPOST_13
2019-05-14 10:31:27 -Generating unique operation named: saveUsingPOST_14
2019-05-14 10:31:27 -Generating unique operation named: updateUsingPOST_14
2019-05-14 10:31:27 -Generating unique operation named: listUsingGET_16
2019-05-14 10:31:27 -Generating unique operation named: listUsingHEAD_1
2019-05-14 10:31:27 -Generating unique operation named: listUsingPOST_1
2019-05-14 10:31:27 -Generating unique operation named: listUsingPUT_1
2019-05-14 10:31:27 -Generating unique operation named: listUsingPATCH_1
2019-05-14 10:31:27 -Generating unique operation named: listUsingDELETE_1
2019-05-14 10:31:27 -Generating unique operation named: listUsingOPTIONS_1
2019-05-14 10:31:27 -Generating unique operation named: listUsingTRACE_1
2019-05-14 10:31:27 -Generating unique operation named: countDDUsingGET_1
2019-05-14 10:31:27 -Generating unique operation named: exportDDUsingGET_1
2019-05-14 10:31:27 -Generating unique operation named: getCountYYUsingPOST_1
2019-05-14 10:31:27 -Generating unique operation named: getCountMMUsingPOST_1
2019-05-14 10:31:27 -Generating unique operation named: addUsingGET_14
2019-05-14 10:31:27 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-14 10:31:27 -Generating unique operation named: editUsingGET_15
2019-05-14 10:31:27 -Generating unique operation named: listUsingGET_17
2019-05-14 10:31:27 -Generating unique operation named: removeUsingPOST_26
2019-05-14 10:31:27 -Generating unique operation named: saveUsingPOST_15
2019-05-14 10:31:27 -Generating unique operation named: treeUsingGET_3
2019-05-14 10:31:27 -Generating unique operation named: treeViewUsingGET_1
2019-05-14 10:31:27 -Generating unique operation named: updateUsingPOST_15
2019-05-14 10:31:28 -Generating unique operation named: addUsingGET_15
2019-05-14 10:31:28 -Generating unique operation named: editUsingGET_16
2019-05-14 10:31:28 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-14 10:31:28 -Generating unique operation named: listUsingGET_18
2019-05-14 10:31:28 -Generating unique operation named: removeUsingPOST_27
2019-05-14 10:31:28 -Generating unique operation named: removeUsingPOST_28
2019-05-14 10:31:28 -Generating unique operation named: saveUsingPOST_16
2019-05-14 10:31:28 -Generating unique operation named: updateUsingGET_10
2019-05-14 10:31:28 -Generating unique operation named: updateUsingHEAD_10
2019-05-14 10:31:28 -Generating unique operation named: updateUsingPOST_16
2019-05-14 10:31:28 -Generating unique operation named: updateUsingPUT_10
2019-05-14 10:31:28 -Generating unique operation named: updateUsingPATCH_10
2019-05-14 10:31:28 -Generating unique operation named: updateUsingDELETE_10
2019-05-14 10:31:28 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-14 10:31:28 -Generating unique operation named: updateUsingTRACE_10
2019-05-14 10:31:28 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-14 10:31:28 -Generating unique operation named: addUsingGET_16
2019-05-14 10:31:28 -Generating unique operation named: editUsingGET_17
2019-05-14 10:31:28 -Generating unique operation named: listUsingGET_19
2019-05-14 10:31:28 -Generating unique operation named: removeUsingPOST_29
2019-05-14 10:31:28 -Generating unique operation named: removeUsingPOST_30
2019-05-14 10:31:28 -Generating unique operation named: saveUsingPOST_17
2019-05-14 10:31:28 -Generating unique operation named: updateUsingGET_11
2019-05-14 10:31:28 -Generating unique operation named: updateUsingHEAD_11
2019-05-14 10:31:28 -Generating unique operation named: updateUsingPOST_17
2019-05-14 10:31:28 -Generating unique operation named: updateUsingPUT_11
2019-05-14 10:31:28 -Generating unique operation named: updateUsingPATCH_11
2019-05-14 10:31:28 -Generating unique operation named: updateUsingDELETE_11
2019-05-14 10:31:28 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-14 10:31:28 -Generating unique operation named: updateUsingTRACE_11
2019-05-14 10:31:28 -Generating unique operation named: addUsingGET_17
2019-05-14 10:31:28 -Generating unique operation named: editUsingGET_18
2019-05-14 10:31:28 -Generating unique operation named: listUsingGET_20
2019-05-14 10:31:28 -Generating unique operation named: removeUsingPOST_31
2019-05-14 10:31:28 -Generating unique operation named: removeUsingPOST_32
2019-05-14 10:31:28 -Generating unique operation named: saveUsingPOST_18
2019-05-14 10:31:28 -Generating unique operation named: updateUsingGET_12
2019-05-14 10:31:28 -Generating unique operation named: updateUsingHEAD_12
2019-05-14 10:31:28 -Generating unique operation named: updateUsingPOST_18
2019-05-14 10:31:28 -Generating unique operation named: updateUsingPUT_12
2019-05-14 10:31:28 -Generating unique operation named: updateUsingPATCH_12
2019-05-14 10:31:28 -Generating unique operation named: updateUsingDELETE_12
2019-05-14 10:31:28 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-14 10:31:28 -Generating unique operation named: updateUsingTRACE_12
2019-05-14 10:31:28 -Starting Quartz Scheduler now
2019-05-14 10:31:28 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-14 10:31:28 -Starting...
2019-05-14 10:31:28 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-14 10:31:28 -Started.
2019-05-14 10:31:28 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-14 10:31:28 -Using a shared selector for servlet write/read
2019-05-14 10:31:28 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-14 10:31:28 -Started BootdoApplication in 36.678 seconds (JVM running for 37.484)
2019-05-14 10:31:28 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-14 10:31:28 -==> Parameters: 
2019-05-14 10:31:28 -<==      Total: 1
2019-05-14 10:32:02 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-14 10:32:02 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-14 10:32:03 -FrameworkServlet 'dispatcherServlet': initialization completed in 83 ms
2019-05-14 10:32:03 -Enabling session validation scheduler...
2019-05-14 10:32:03 -请求地址 : http://localhost:8081/login;JSESSIONID=433be609-c6b5-4461-94a0-37d8133ead55
2019-05-14 10:32:03 -HTTP METHOD : GET
2019-05-14 10:32:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-14 10:32:03 -参数 : [{}]
2019-05-14 10:32:03 -耗时 : 3
2019-05-14 10:32:03 -返回值 : login
2019-05-14 10:32:04 -请求地址 : http://localhost:8081/getVerify
2019-05-14 10:32:04 -HTTP METHOD : GET
2019-05-14 10:32:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-14 10:32:04 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@3bb0b071, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6deccc67]
2019-05-14 10:32:07 -0491
2019-05-14 10:32:07 -耗时 : 2475
2019-05-14 10:32:07 -返回值 : null
2019-05-14 10:32:12 -请求地址 : http://localhost:8081/login
2019-05-14 10:32:12 -HTTP METHOD : POST
2019-05-14 10:32:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-14 10:32:12 -参数 : [admin, 111111, 0491, org.apache.shiro.web.servlet.ShiroHttpServletRequest@319f422]
2019-05-14 10:32:12 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-14 10:32:12 -==> Parameters: admin(String)
2019-05-14 10:32:13 -<==      Total: 1
2019-05-14 10:32:13 -耗时 : 113
2019-05-14 10:32:13 -返回值 : {msg=操作成功, code=0}
2019-05-14 10:32:13 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-14 10:32:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 10:32:13 -==> Parameters: 1(Long), admin(String), 登录(String), 113(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-14 10:32:13.111(Timestamp)
2019-05-14 10:32:13 -请求地址 : http://localhost:8081/index
2019-05-14 10:32:13 -HTTP METHOD : GET
2019-05-14 10:32:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-14 10:32:13 -参数 : [{}]
2019-05-14 10:32:13 -<==    Updates: 1
2019-05-14 10:32:13 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-14 10:32:13 -==> Parameters: 1(Long)
2019-05-14 10:32:13 -<==      Total: 49
2019-05-14 10:32:13 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-14 10:32:13 -==> Parameters: 138(Long)
2019-05-14 10:32:13 -<==      Total: 1
2019-05-14 10:32:13 -耗时 : 131
2019-05-14 10:32:13 -返回值 : index_v1
2019-05-14 10:32:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 10:32:13 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 132(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-14 10:32:13.367(Timestamp)
2019-05-14 10:32:13 -<==    Updates: 1
2019-05-14 10:32:13 -请求地址 : http://localhost:8081/main
2019-05-14 10:32:13 -HTTP METHOD : GET
2019-05-14 10:32:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 10:32:13 -参数 : []
2019-05-14 10:32:13 -耗时 : 1
2019-05-14 10:32:13 -返回值 : main
2019-05-14 10:32:13 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-14 10:32:13 -HTTP METHOD : GET
2019-05-14 10:32:13 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-14 10:32:13 -参数 : []
2019-05-14 10:32:13 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-14 10:32:13 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-14 10:32:13 -<==      Total: 0
2019-05-14 10:32:13 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-14 10:32:13 -==> Parameters: 1(Long), 0(String)
2019-05-14 10:32:13 -<==      Total: 1
2019-05-14 10:32:13 -耗时 : 47
2019-05-14 10:32:13 -返回值 : com.bootdo.common.utils.PageUtils@846323a
2019-05-14 10:32:13 -请求地址 : http://localhost:8081/main
2019-05-14 10:32:13 -HTTP METHOD : GET
2019-05-14 10:32:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 10:32:13 -参数 : []
2019-05-14 10:32:13 -耗时 : 0
2019-05-14 10:32:13 -返回值 : main
2019-05-14 10:32:20 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2]
2019-05-14 10:32:25 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-14 10:32:25 -==> Parameters: 1(Long)
2019-05-14 10:32:25 -<==      Total: 93
2019-05-14 10:32:25 -请求地址 : http://localhost:8081/elec/elec
2019-05-14 10:32:25 -HTTP METHOD : GET
2019-05-14 10:32:25 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-05-14 10:32:25 -参数 : []
2019-05-14 10:32:25 -耗时 : 0
2019-05-14 10:32:25 -返回值 : elec/elec/elec
2019-05-14 10:32:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 10:32:26 -HTTP METHOD : GET
2019-05-14 10:32:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 10:32:26 -参数 : [userType]
2019-05-14 10:32:26 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-14 10:32:26 -HTTP METHOD : GET
2019-05-14 10:32:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 10:32:26 -参数 : [elecType]
2019-05-14 10:32:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 10:32:26 -==> Parameters: elecType(String)
2019-05-14 10:32:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 10:32:26 -==> Parameters: userType(String)
2019-05-14 10:32:26 -<==      Total: 4
2019-05-14 10:32:26 -耗时 : 25
2019-05-14 10:32:26 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 10:32:26 -<==      Total: 11
2019-05-14 10:32:26 -耗时 : 38
2019-05-14 10:32:26 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 10:32:26 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-14 10:32:26 -HTTP METHOD : GET
2019-05-14 10:32:26 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-14 10:32:26 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@6d294357]
2019-05-14 10:32:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`wx`,`yh`,`remark` from elec order by id asc limit ?, ? 
2019-05-14 10:32:26 -==> Parameters: 0(Integer), 10(Integer)
2019-05-14 10:32:26 -<==      Total: 10
2019-05-14 10:32:26 -==>  Preparing: select count(*) from elec 
2019-05-14 10:32:26 -==> Parameters: 
2019-05-14 10:32:26 -<==      Total: 1
2019-05-14 10:32:26 -耗时 : 43
2019-05-14 10:32:26 -返回值 : com.bootdo.common.utils.PageUtils@250ab2f8
2019-05-14 10:32:38 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-14 10:32:38 -HTTP METHOD : GET
2019-05-14 10:32:38 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 10:32:38 -参数 : []
2019-05-14 10:32:38 -耗时 : 13
2019-05-14 10:32:38 -返回值 : charts/tableElecMM
2019-05-14 10:32:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 10:32:39 -HTTP METHOD : GET
2019-05-14 10:32:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 10:32:39 -参数 : [userType]
2019-05-14 10:32:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 10:32:39 -==> Parameters: userType(String)
2019-05-14 10:32:39 -<==      Total: 4
2019-05-14 10:32:39 -耗时 : 8
2019-05-14 10:32:39 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 10:32:48 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-14 10:32:48 -HTTP METHOD : GET
2019-05-14 10:32:48 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-14 10:32:48 -参数 : []
2019-05-14 10:32:48 -耗时 : 0
2019-05-14 10:32:48 -返回值 : system/dept/deptTree
2019-05-14 10:32:48 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-14 10:32:48 -HTTP METHOD : GET
2019-05-14 10:32:48 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-14 10:32:48 -参数 : []
2019-05-14 10:32:48 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-14 10:32:48 -==> Parameters: 
2019-05-14 10:32:48 -<==      Total: 3
2019-05-14 10:32:48 -耗时 : 20
2019-05-14 10:32:48 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-14 10:32:55 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-05-14 10:32:55 -HTTP METHOD : POST
2019-05-14 10:32:55 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 10:32:55 -参数 : [com.bootdo.elec.vo.ElecVo@6a1c744c, com.bootdo.moneyLog.vo.ElecLogVo@2c99390d]
2019-05-14 10:32:55 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 1
2019-05-14 10:32:55 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:32:55 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:32:55 -<==      Total: 0
2019-05-14 10:32:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 10:32:55 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/charts/tableElecMM/tableElecMM(String), java.lang.NullPointerException(String), null, 2019-05-14 10:32:55.255(Timestamp)
2019-05-14 10:32:55 -null
java.lang.NullPointerException: null
	at com.bootdo.charts.controller.tableElecMMController.tableElecMM(tableElecMMController.java:122)
	at com.bootdo.charts.controller.tableElecMMController$$FastClassBySpringCGLIB$$d3ed8d12.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.charts.controller.tableElecMMController$$EnhancerBySpringCGLIB$$773a2198.tableElecMM(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-14 10:32:55 -<==    Updates: 1
2019-05-14 10:34:48 -请求地址 : http://localhost:8081/index
2019-05-14 10:34:48 -HTTP METHOD : GET
2019-05-14 10:34:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-14 10:34:48 -参数 : [{}]
2019-05-14 10:34:48 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-14 10:34:48 -==> Parameters: 1(Long)
2019-05-14 10:34:48 -<==      Total: 49
2019-05-14 10:34:48 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-14 10:34:48 -==> Parameters: 138(Long)
2019-05-14 10:34:48 -<==      Total: 1
2019-05-14 10:34:48 -耗时 : 27
2019-05-14 10:34:48 -返回值 : index_v1
2019-05-14 10:34:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 10:34:49 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-14 10:34:49.002(Timestamp)
2019-05-14 10:34:49 -请求地址 : http://localhost:8081/main
2019-05-14 10:34:49 -HTTP METHOD : GET
2019-05-14 10:34:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 10:34:49 -参数 : []
2019-05-14 10:34:49 -耗时 : 1
2019-05-14 10:34:49 -返回值 : main
2019-05-14 10:34:49 -<==    Updates: 1
2019-05-14 10:34:49 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-14 10:34:49 -HTTP METHOD : GET
2019-05-14 10:34:49 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-14 10:34:49 -参数 : []
2019-05-14 10:34:49 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-14 10:34:49 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-14 10:34:49 -<==      Total: 0
2019-05-14 10:34:49 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-14 10:34:49 -==> Parameters: 1(Long), 0(String)
2019-05-14 10:34:49 -<==      Total: 1
2019-05-14 10:34:49 -耗时 : 9
2019-05-14 10:34:49 -返回值 : com.bootdo.common.utils.PageUtils@691e34b0
2019-05-14 10:34:49 -请求地址 : http://localhost:8081/main
2019-05-14 10:34:49 -HTTP METHOD : GET
2019-05-14 10:34:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 10:34:49 -参数 : []
2019-05-14 10:34:49 -耗时 : 0
2019-05-14 10:34:49 -返回值 : main
2019-05-14 10:34:52 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-14 10:34:52 -HTTP METHOD : GET
2019-05-14 10:34:52 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 10:34:52 -参数 : []
2019-05-14 10:34:52 -耗时 : 0
2019-05-14 10:34:52 -返回值 : charts/tableElecMM
2019-05-14 10:34:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 10:34:52 -HTTP METHOD : GET
2019-05-14 10:34:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 10:34:52 -参数 : [userType]
2019-05-14 10:34:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 10:34:52 -==> Parameters: userType(String)
2019-05-14 10:34:52 -<==      Total: 4
2019-05-14 10:34:52 -耗时 : 5
2019-05-14 10:34:52 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 10:34:57 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-14 10:34:57 -HTTP METHOD : GET
2019-05-14 10:34:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-14 10:34:57 -参数 : []
2019-05-14 10:34:57 -耗时 : 0
2019-05-14 10:34:57 -返回值 : system/dept/deptTree
2019-05-14 10:34:57 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-14 10:34:57 -HTTP METHOD : GET
2019-05-14 10:34:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-14 10:34:57 -参数 : []
2019-05-14 10:34:57 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-14 10:34:57 -==> Parameters: 
2019-05-14 10:34:57 -<==      Total: 3
2019-05-14 10:34:57 -耗时 : 4
2019-05-14 10:34:57 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-14 10:35:01 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-05-14 10:35:01 -HTTP METHOD : POST
2019-05-14 10:35:01 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 10:35:01 -参数 : [com.bootdo.elec.vo.ElecVo@7950a37f, com.bootdo.moneyLog.vo.ElecLogVo@64698595]
2019-05-14 10:35:01 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(ifnull(ifnull(COUNT(ID),0),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:01 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:01 -<==      Total: 1
2019-05-14 10:35:01 -耗时 : 435
2019-05-14 10:35:01 -返回值 : {ZElecSumPre=1, SumG1ElecLog=80, SElecSumPre=1, SumG2ElecLog=70, CountWSElecLog=1, CountPrehu=99, CountAmount=206, MStotalhu=11, CountWMElecLog=1, SElecPrice=1, G1ElecAmount=100, WSElecPrice=1, WSElecAmount=0, MElecAmount=1, SumG3ElecLog=90, MMElecCostCount=11, CountPreyu=9, CountSElecLog=0, MMElecAmount=1, CountZElecLog=0, MElecPrice=1, MStotalyu=1, SElecCostSum=0, SumSElecLog=0, G1totalhu=11, G3totalhu=11, ZElecSumOwe=0, ZElecAmount=1, G3ElecCostSum=1, WMElecPrice=1, MMtotalhu=11, ZElecPrice=1, SElecCostCount=11, MElecCostSum=1, SumMElecLog=152, G1totalyu=1, G3totalyu=1, MSElecSumOwe=0, WGElecPrice=1, SumMMElecLog=0, SElecSumOwe=0, SElecAmount=0, SumMSElecLog=0, MElecCountPre=9, WSElecSumOwe=0, WMElecSumPre=1, CountMMElecLog=0, G1ElecPrice=1, G3ElecAmount=1, WGElecAmount=0, CountMElecLog=3, SElecCountPre=9, G1ElecSumOwe=0, MMtotalyu=1, WMElecAmount=1, ZElecCostSum=1, MElecCountOwe=2, Mtotalhu=11, G2totalhu=11, WStotalhu=11, G3ElecCountOwe=2, G2ElecCountOwe=2, G3ElecCostCount=11, WSElecSumPre=1, G1ElecCountOwe=2, SElecCountOwe=2, WSElecCostSum=0, Mtotalyu=1, WMElecSumOwe=0, G2totalyu=1, G1ElecSumPre=1, CountG2ElecLog=1, CountG3ElecLog=1, WMtotalyu=1, WGtotalhu=11, SumWSElecLog=80, CountG1ElecLog=1, ZElecCountOwe=2, SumWMElecLog=60, WGElecCostCount=11, G3ElecSumPre=0, G1ElecCostSum=100, WGtotalyu=1, G1ElecCostCount=11, WStotalyu=1, CountOweyu=2, MElecCostCount=11, WGElecCountPre=9, MSElecCostSum=1, WGElecSumOwe=0, WMElecCostSum=1, G2ElecPrice=1, CountLogyu=542, CountOwehu=22, G3ElecSumOwe=1, ZElecCostCount=11, MSElecCostCount=11, CountMSElecLog=0, Ztotalyu=1, G1ElecCountPre=9, G2ElecCountPre=9, WGElecSumPre=1, WGElecCountOwe=2, CountLoghu=9, MMElecPrice=1, ZElecCountPre=9, G3ElecPrice=1, CountAllyu=11, G3ElecCountPre=9, MSElecAmount=1, WGElecCostSum=0, Ztotalhu=11, WMElecCountOwe=2, MMElecCountOwe=2, CountAllhu=121, CountCostyu=206, Stotalhu=11, CountPrice=11, MSElecPrice=1, MSElecCountPre=9, G2ElecSumPre=1, WSElecCountOwe=2, MElecSumOwe=1, G2ElecCostSum=100, CountCosthu=121, MMElecSumOwe=0, WSElecCountPre=9, MMElecCountPre=9, Stotalyu=1, CountWGElecLog=1, MSElecSumPre=1, WSElecCostCount=11, SumZElecLog=0, SumWGElecLog=10, G2ElecCostCount=11, WMElecCountPre=9, G2ElecAmount=100, MSElecCountOwe=2, WMtotalhu=11, MElecSumPre=0, MMElecSumPre=1, MMElecCostSum=1, G2ElecSumOwe=0, WMElecCostCount=11}
2019-05-14 10:35:39 -请求地址 : http://localhost:8081/index
2019-05-14 10:35:39 -HTTP METHOD : GET
2019-05-14 10:35:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-14 10:35:39 -参数 : [{}]
2019-05-14 10:35:39 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-14 10:35:39 -==> Parameters: 1(Long)
2019-05-14 10:35:39 -<==      Total: 49
2019-05-14 10:35:39 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-14 10:35:39 -==> Parameters: 138(Long)
2019-05-14 10:35:39 -<==      Total: 1
2019-05-14 10:35:39 -耗时 : 25
2019-05-14 10:35:39 -返回值 : index_v1
2019-05-14 10:35:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 10:35:39 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 25(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-14 10:35:39.128(Timestamp)
2019-05-14 10:35:39 -请求地址 : http://localhost:8081/main
2019-05-14 10:35:39 -HTTP METHOD : GET
2019-05-14 10:35:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 10:35:39 -参数 : []
2019-05-14 10:35:39 -耗时 : 0
2019-05-14 10:35:39 -返回值 : main
2019-05-14 10:35:39 -<==    Updates: 1
2019-05-14 10:35:39 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-14 10:35:39 -HTTP METHOD : GET
2019-05-14 10:35:39 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-14 10:35:39 -参数 : []
2019-05-14 10:35:39 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-14 10:35:39 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-14 10:35:39 -<==      Total: 0
2019-05-14 10:35:39 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-14 10:35:39 -==> Parameters: 1(Long), 0(String)
2019-05-14 10:35:39 -<==      Total: 1
2019-05-14 10:35:39 -耗时 : 7
2019-05-14 10:35:39 -返回值 : com.bootdo.common.utils.PageUtils@67b7f7bd
2019-05-14 10:35:39 -请求地址 : http://localhost:8081/main
2019-05-14 10:35:39 -HTTP METHOD : GET
2019-05-14 10:35:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 10:35:39 -参数 : []
2019-05-14 10:35:39 -耗时 : 1
2019-05-14 10:35:39 -返回值 : main
2019-05-14 10:35:42 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-14 10:35:42 -HTTP METHOD : GET
2019-05-14 10:35:42 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 10:35:42 -参数 : []
2019-05-14 10:35:42 -耗时 : 0
2019-05-14 10:35:42 -返回值 : charts/tableElecMM
2019-05-14 10:35:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 10:35:42 -HTTP METHOD : GET
2019-05-14 10:35:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 10:35:42 -参数 : [userType]
2019-05-14 10:35:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 10:35:42 -==> Parameters: userType(String)
2019-05-14 10:35:42 -<==      Total: 4
2019-05-14 10:35:42 -耗时 : 5
2019-05-14 10:35:42 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 10:35:47 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-14 10:35:47 -HTTP METHOD : GET
2019-05-14 10:35:47 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-14 10:35:47 -参数 : []
2019-05-14 10:35:47 -耗时 : 1
2019-05-14 10:35:47 -返回值 : system/dept/deptTree
2019-05-14 10:35:47 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-14 10:35:47 -HTTP METHOD : GET
2019-05-14 10:35:47 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-14 10:35:47 -参数 : []
2019-05-14 10:35:47 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-14 10:35:47 -==> Parameters: 
2019-05-14 10:35:47 -<==      Total: 3
2019-05-14 10:35:47 -耗时 : 5
2019-05-14 10:35:47 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-14 10:35:51 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-05-14 10:35:51 -HTTP METHOD : POST
2019-05-14 10:35:51 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 10:35:51 -参数 : [com.bootdo.elec.vo.ElecVo@52e5203, com.bootdo.moneyLog.vo.ElecLogVo@531a79a9]
2019-05-14 10:35:51 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(ifnull(ifnull(COUNT(ID),0),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:35:51 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:35:51 -<==      Total: 1
2019-05-14 10:35:51 -耗时 : 361
2019-05-14 10:35:51 -返回值 : {ZElecSumPre=1, SumG1ElecLog=80, SElecSumPre=1, SumG2ElecLog=70, CountWSElecLog=1, CountPrehu=99, CountAmount=206, MStotalhu=11, CountWMElecLog=1, SElecPrice=1, G1ElecAmount=100, WSElecPrice=1, WSElecAmount=0, MElecAmount=1, SumG3ElecLog=90, MMElecCostCount=11, CountPreyu=9, CountSElecLog=0, MMElecAmount=1, CountZElecLog=0, MElecPrice=1, MStotalyu=1, SElecCostSum=0, SumSElecLog=0, G1totalhu=11, G3totalhu=11, ZElecSumOwe=0, ZElecAmount=1, G3ElecCostSum=1, WMElecPrice=1, MMtotalhu=11, ZElecPrice=1, SElecCostCount=11, MElecCostSum=1, SumMElecLog=152, G1totalyu=1, G3totalyu=1, MSElecSumOwe=0, WGElecPrice=1, SumMMElecLog=0, SElecSumOwe=0, SElecAmount=0, SumMSElecLog=0, MElecCountPre=9, WSElecSumOwe=0, WMElecSumPre=1, CountMMElecLog=0, G1ElecPrice=1, G3ElecAmount=1, WGElecAmount=0, CountMElecLog=3, SElecCountPre=9, G1ElecSumOwe=0, MMtotalyu=1, WMElecAmount=1, ZElecCostSum=1, MElecCountOwe=2, Mtotalhu=11, G2totalhu=11, WStotalhu=11, G3ElecCountOwe=2, G2ElecCountOwe=2, G3ElecCostCount=11, WSElecSumPre=1, G1ElecCountOwe=2, SElecCountOwe=2, WSElecCostSum=0, Mtotalyu=1, WMElecSumOwe=0, G2totalyu=1, G1ElecSumPre=1, CountG2ElecLog=1, CountG3ElecLog=1, WMtotalyu=1, WGtotalhu=11, SumWSElecLog=80, CountG1ElecLog=1, ZElecCountOwe=2, SumWMElecLog=60, WGElecCostCount=11, G3ElecSumPre=0, G1ElecCostSum=100, WGtotalyu=1, G1ElecCostCount=11, WStotalyu=1, CountOweyu=2, MElecCostCount=11, WGElecCountPre=9, MSElecCostSum=1, WGElecSumOwe=0, WMElecCostSum=1, G2ElecPrice=1, CountLogyu=542, CountOwehu=22, G3ElecSumOwe=1, ZElecCostCount=11, MSElecCostCount=11, CountMSElecLog=0, Ztotalyu=1, G1ElecCountPre=9, G2ElecCountPre=9, WGElecSumPre=1, WGElecCountOwe=2, CountLoghu=9, MMElecPrice=1, ZElecCountPre=9, G3ElecPrice=1, CountAllyu=11, G3ElecCountPre=9, MSElecAmount=1, WGElecCostSum=0, Ztotalhu=11, WMElecCountOwe=2, MMElecCountOwe=2, CountAllhu=121, CountCostyu=206, Stotalhu=11, CountPrice=11, MSElecPrice=1, MSElecCountPre=9, G2ElecSumPre=1, WSElecCountOwe=2, MElecSumOwe=1, G2ElecCostSum=100, CountCosthu=121, MMElecSumOwe=0, WSElecCountPre=9, MMElecCountPre=9, Stotalyu=1, CountWGElecLog=1, MSElecSumPre=1, WSElecCostCount=11, SumZElecLog=0, SumWGElecLog=10, G2ElecCostCount=11, WMElecCountPre=9, G2ElecAmount=100, MSElecCountOwe=2, WMtotalhu=11, MElecSumPre=0, MMElecSumPre=1, MMElecCostSum=1, G2ElecSumOwe=0, WMElecCostCount=11}
2019-05-14 10:37:13 -请求地址 : http://localhost:8081/index
2019-05-14 10:37:13 -HTTP METHOD : GET
2019-05-14 10:37:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-14 10:37:13 -参数 : [{}]
2019-05-14 10:37:13 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-14 10:37:13 -==> Parameters: 1(Long)
2019-05-14 10:37:13 -<==      Total: 49
2019-05-14 10:37:13 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-14 10:37:13 -==> Parameters: 138(Long)
2019-05-14 10:37:13 -<==      Total: 1
2019-05-14 10:37:13 -耗时 : 25
2019-05-14 10:37:13 -返回值 : index_v1
2019-05-14 10:37:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 10:37:13 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 25(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-14 10:37:13.191(Timestamp)
2019-05-14 10:37:13 -请求地址 : http://localhost:8081/main
2019-05-14 10:37:13 -HTTP METHOD : GET
2019-05-14 10:37:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 10:37:13 -参数 : []
2019-05-14 10:37:13 -耗时 : 1
2019-05-14 10:37:13 -返回值 : main
2019-05-14 10:37:13 -<==    Updates: 1
2019-05-14 10:37:13 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-14 10:37:13 -HTTP METHOD : GET
2019-05-14 10:37:13 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-14 10:37:13 -参数 : []
2019-05-14 10:37:13 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-14 10:37:13 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-14 10:37:13 -<==      Total: 0
2019-05-14 10:37:13 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-14 10:37:13 -==> Parameters: 1(Long), 0(String)
2019-05-14 10:37:13 -<==      Total: 1
2019-05-14 10:37:13 -耗时 : 7
2019-05-14 10:37:13 -返回值 : com.bootdo.common.utils.PageUtils@6fe520ad
2019-05-14 10:37:13 -请求地址 : http://localhost:8081/main
2019-05-14 10:37:13 -HTTP METHOD : GET
2019-05-14 10:37:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 10:37:13 -参数 : []
2019-05-14 10:37:13 -耗时 : 0
2019-05-14 10:37:13 -返回值 : main
2019-05-14 10:37:15 -请求地址 : http://localhost:8081/charts/countMM
2019-05-14 10:37:15 -HTTP METHOD : GET
2019-05-14 10:37:15 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-05-14 10:37:15 -参数 : []
2019-05-14 10:37:15 -耗时 : 13
2019-05-14 10:37:15 -返回值 : charts/countMM
2019-05-14 10:37:16 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 10:37:16 -HTTP METHOD : GET
2019-05-14 10:37:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 10:37:16 -参数 : [userType]
2019-05-14 10:37:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 10:37:16 -==> Parameters: userType(String)
2019-05-14 10:37:16 -<==      Total: 4
2019-05-14 10:37:16 -耗时 : 3
2019-05-14 10:37:16 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 10:37:18 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-14 10:37:18 -HTTP METHOD : GET
2019-05-14 10:37:18 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 10:37:18 -参数 : []
2019-05-14 10:37:18 -耗时 : 0
2019-05-14 10:37:18 -返回值 : charts/tableElecMM
2019-05-14 10:37:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 10:37:18 -HTTP METHOD : GET
2019-05-14 10:37:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 10:37:18 -参数 : [userType]
2019-05-14 10:37:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 10:37:18 -==> Parameters: userType(String)
2019-05-14 10:37:18 -<==      Total: 4
2019-05-14 10:37:18 -耗时 : 4
2019-05-14 10:37:18 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 10:37:22 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-14 10:37:22 -HTTP METHOD : GET
2019-05-14 10:37:22 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-14 10:37:22 -参数 : []
2019-05-14 10:37:22 -耗时 : 0
2019-05-14 10:37:22 -返回值 : system/dept/deptTree
2019-05-14 10:37:23 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-14 10:37:23 -HTTP METHOD : GET
2019-05-14 10:37:23 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-14 10:37:23 -参数 : []
2019-05-14 10:37:23 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-14 10:37:23 -==> Parameters: 
2019-05-14 10:37:23 -<==      Total: 3
2019-05-14 10:37:23 -耗时 : 3
2019-05-14 10:37:23 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-14 10:37:25 -请求地址 : http://localhost:8081/charts/tableElecMM/exportElecMM
2019-05-14 10:37:25 -HTTP METHOD : GET
2019-05-14 10:37:25 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.exportElecMM
2019-05-14 10:37:25 -参数 : [com.bootdo.elec.vo.ElecVo@4dd36, com.bootdo.moneyLog.vo.ElecLogVo@3393f3bc, org.apache.shiro.web.servlet.ShiroHttpServletResponse@36d6f712]
2019-05-14 10:37:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`wx`,`yh`,`remark` from elec WHERE `elec_sum` >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:37:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:37:26 -<==      Total: 9
2019-05-14 10:37:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`wx`,`yh`,`remark` from elec WHERE `elec_sum` < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:37:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:37:26 -<==      Total: 2
2019-05-14 10:37:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:37:26 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:37:26 -<==      Total: 9
2019-05-14 10:37:26 -耗时 : 1124
2019-05-14 10:37:26 -返回值 : null
2019-05-14 10:42:15 -请求地址 : http://localhost:8081/index
2019-05-14 10:42:15 -HTTP METHOD : GET
2019-05-14 10:42:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-14 10:42:15 -参数 : [{}]
2019-05-14 10:42:15 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-14 10:42:15 -==> Parameters: 1(Long)
2019-05-14 10:42:15 -<==      Total: 49
2019-05-14 10:42:15 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-14 10:42:15 -==> Parameters: 138(Long)
2019-05-14 10:42:15 -<==      Total: 1
2019-05-14 10:42:15 -耗时 : 20
2019-05-14 10:42:15 -返回值 : index_v1
2019-05-14 10:42:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 10:42:15 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 20(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-14 10:42:15.132(Timestamp)
2019-05-14 10:42:15 -<==    Updates: 1
2019-05-14 10:42:15 -请求地址 : http://localhost:8081/main
2019-05-14 10:42:15 -HTTP METHOD : GET
2019-05-14 10:42:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 10:42:15 -参数 : []
2019-05-14 10:42:15 -耗时 : 1
2019-05-14 10:42:15 -返回值 : main
2019-05-14 10:42:15 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-14 10:42:15 -HTTP METHOD : GET
2019-05-14 10:42:15 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-14 10:42:15 -参数 : []
2019-05-14 10:42:15 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-14 10:42:15 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-14 10:42:15 -<==      Total: 0
2019-05-14 10:42:15 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-14 10:42:15 -==> Parameters: 1(Long), 0(String)
2019-05-14 10:42:15 -<==      Total: 1
2019-05-14 10:42:15 -耗时 : 5
2019-05-14 10:42:15 -返回值 : com.bootdo.common.utils.PageUtils@682af218
2019-05-14 10:42:15 -请求地址 : http://localhost:8081/main
2019-05-14 10:42:15 -HTTP METHOD : GET
2019-05-14 10:42:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 10:42:15 -参数 : []
2019-05-14 10:42:15 -耗时 : 1
2019-05-14 10:42:15 -返回值 : main
2019-05-14 10:42:19 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-14 10:42:19 -HTTP METHOD : GET
2019-05-14 10:42:19 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 10:42:19 -参数 : []
2019-05-14 10:42:19 -耗时 : 1
2019-05-14 10:42:19 -返回值 : charts/tableElecMM
2019-05-14 10:42:20 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 10:42:20 -HTTP METHOD : GET
2019-05-14 10:42:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 10:42:20 -参数 : [userType]
2019-05-14 10:42:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 10:42:20 -==> Parameters: userType(String)
2019-05-14 10:42:20 -<==      Total: 4
2019-05-14 10:42:20 -耗时 : 4
2019-05-14 10:42:20 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 10:42:24 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-14 10:42:24 -HTTP METHOD : GET
2019-05-14 10:42:24 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-14 10:42:24 -参数 : []
2019-05-14 10:42:24 -耗时 : 1
2019-05-14 10:42:24 -返回值 : system/dept/deptTree
2019-05-14 10:42:24 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-14 10:42:24 -HTTP METHOD : GET
2019-05-14 10:42:24 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-14 10:42:24 -参数 : []
2019-05-14 10:42:24 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-14 10:42:24 -==> Parameters: 
2019-05-14 10:42:24 -<==      Total: 3
2019-05-14 10:42:24 -耗时 : 2
2019-05-14 10:42:24 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-14 10:42:37 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-05-14 10:42:37 -HTTP METHOD : POST
2019-05-14 10:42:37 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 10:42:37 -参数 : [com.bootdo.elec.vo.ElecVo@74ba7983, com.bootdo.moneyLog.vo.ElecLogVo@c937948]
2019-05-14 10:42:37 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(ifnull(ifnull(COUNT(ID),0),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:42:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:42:37 -<==      Total: 1
2019-05-14 10:42:37 -耗时 : 281
2019-05-14 10:42:37 -返回值 : {ZElecSumPre=1, SumG1ElecLog=80, SElecSumPre=1, SumG2ElecLog=70, CountWSElecLog=1, CountPrehu=99, CountAmount=206, MStotalhu=11, CountWMElecLog=1, SElecPrice=1, G1ElecAmount=100, WSElecPrice=1, WSElecAmount=0, MElecAmount=1, SumG3ElecLog=90, MMElecCostCount=11, CountPreyu=9, CountSElecLog=0, MMElecAmount=1, CountZElecLog=0, MElecPrice=1, MStotalyu=1, SElecCostSum=0, SumSElecLog=0, G1totalhu=11, G3totalhu=11, ZElecSumOwe=0, ZElecAmount=1, G3ElecCostSum=1, WMElecPrice=1, MMtotalhu=11, ZElecPrice=1, SElecCostCount=11, MElecCostSum=1, SumMElecLog=152, G1totalyu=1, G3totalyu=1, MSElecSumOwe=0, WGElecPrice=1, SumMMElecLog=0, SElecSumOwe=0, SElecAmount=0, SumMSElecLog=0, MElecCountPre=9, WSElecSumOwe=0, WMElecSumPre=1, CountMMElecLog=0, G1ElecPrice=1, G3ElecAmount=1, WGElecAmount=0, CountMElecLog=3, SElecCountPre=9, G1ElecSumOwe=0, MMtotalyu=1, WMElecAmount=1, ZElecCostSum=1, MElecCountOwe=2, Mtotalhu=11, G2totalhu=11, WStotalhu=11, G3ElecCountOwe=2, G2ElecCountOwe=2, G3ElecCostCount=11, WSElecSumPre=1, G1ElecCountOwe=2, SElecCountOwe=2, WSElecCostSum=0, Mtotalyu=1, WMElecSumOwe=0, G2totalyu=1, G1ElecSumPre=1, CountG2ElecLog=1, CountG3ElecLog=1, WMtotalyu=1, WGtotalhu=11, SumWSElecLog=80, CountG1ElecLog=1, ZElecCountOwe=2, SumWMElecLog=60, WGElecCostCount=11, G3ElecSumPre=0, G1ElecCostSum=100, WGtotalyu=1, G1ElecCostCount=11, WStotalyu=1, CountOweyu=2, MElecCostCount=11, WGElecCountPre=9, MSElecCostSum=1, WGElecSumOwe=0, WMElecCostSum=1, G2ElecPrice=1, CountLogyu=542, CountOwehu=22, G3ElecSumOwe=1, ZElecCostCount=11, MSElecCostCount=11, CountMSElecLog=0, Ztotalyu=1, G1ElecCountPre=9, G2ElecCountPre=9, WGElecSumPre=1, WGElecCountOwe=2, CountLoghu=9, MMElecPrice=1, ZElecCountPre=9, G3ElecPrice=1, CountAllyu=11, G3ElecCountPre=9, MSElecAmount=1, WGElecCostSum=0, Ztotalhu=11, WMElecCountOwe=2, MMElecCountOwe=2, CountAllhu=121, CountCostyu=206, Stotalhu=11, CountPrice=11, MSElecPrice=1, MSElecCountPre=9, G2ElecSumPre=1, WSElecCountOwe=2, MElecSumOwe=1, G2ElecCostSum=100, CountCosthu=121, MMElecSumOwe=0, WSElecCountPre=9, MMElecCountPre=9, Stotalyu=1, CountWGElecLog=1, MSElecSumPre=1, WSElecCostCount=11, SumZElecLog=0, SumWGElecLog=10, G2ElecCostCount=11, WMElecCountPre=9, G2ElecAmount=100, MSElecCountOwe=2, WMtotalhu=11, MElecSumPre=0, MMElecSumPre=1, MMElecCostSum=1, G2ElecSumOwe=0, WMElecCostCount=11}
2019-05-14 10:42:45 -请求地址 : http://localhost:8081/index
2019-05-14 10:42:45 -HTTP METHOD : GET
2019-05-14 10:42:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-14 10:42:45 -参数 : [{}]
2019-05-14 10:42:45 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-14 10:42:45 -==> Parameters: 1(Long)
2019-05-14 10:42:45 -<==      Total: 49
2019-05-14 10:42:45 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-14 10:42:45 -==> Parameters: 138(Long)
2019-05-14 10:42:45 -<==      Total: 1
2019-05-14 10:42:45 -耗时 : 17
2019-05-14 10:42:45 -返回值 : index_v1
2019-05-14 10:42:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 10:42:45 -请求地址 : http://localhost:8081/main
2019-05-14 10:42:45 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-14 10:42:45.03(Timestamp)
2019-05-14 10:42:45 -HTTP METHOD : GET
2019-05-14 10:42:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 10:42:45 -参数 : []
2019-05-14 10:42:45 -耗时 : 4
2019-05-14 10:42:45 -返回值 : main
2019-05-14 10:42:45 -<==    Updates: 1
2019-05-14 10:42:45 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-14 10:42:45 -HTTP METHOD : GET
2019-05-14 10:42:45 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-14 10:42:45 -参数 : []
2019-05-14 10:42:45 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-14 10:42:45 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-14 10:42:45 -<==      Total: 0
2019-05-14 10:42:45 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-14 10:42:45 -==> Parameters: 1(Long), 0(String)
2019-05-14 10:42:45 -<==      Total: 1
2019-05-14 10:42:45 -耗时 : 6
2019-05-14 10:42:45 -返回值 : com.bootdo.common.utils.PageUtils@3ea4f612
2019-05-14 10:42:45 -请求地址 : http://localhost:8081/main
2019-05-14 10:42:45 -HTTP METHOD : GET
2019-05-14 10:42:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 10:42:45 -参数 : []
2019-05-14 10:42:45 -耗时 : 1
2019-05-14 10:42:45 -返回值 : main
2019-05-14 10:48:18 -请求地址 : http://localhost:8081/index
2019-05-14 10:48:18 -HTTP METHOD : GET
2019-05-14 10:48:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-14 10:48:18 -参数 : [{}]
2019-05-14 10:48:18 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-14 10:48:18 -==> Parameters: 1(Long)
2019-05-14 10:48:18 -<==      Total: 49
2019-05-14 10:48:18 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-14 10:48:18 -==> Parameters: 138(Long)
2019-05-14 10:48:18 -<==      Total: 1
2019-05-14 10:48:18 -耗时 : 17
2019-05-14 10:48:18 -返回值 : index_v1
2019-05-14 10:48:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 10:48:18 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 18(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-14 10:48:18.64(Timestamp)
2019-05-14 10:48:18 -<==    Updates: 1
2019-05-14 10:48:18 -请求地址 : http://localhost:8081/main
2019-05-14 10:48:18 -HTTP METHOD : GET
2019-05-14 10:48:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 10:48:18 -参数 : []
2019-05-14 10:48:18 -耗时 : 2
2019-05-14 10:48:18 -返回值 : main
2019-05-14 10:48:18 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-14 10:48:18 -HTTP METHOD : GET
2019-05-14 10:48:18 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-14 10:48:18 -参数 : []
2019-05-14 10:48:18 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-14 10:48:18 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-14 10:48:18 -<==      Total: 0
2019-05-14 10:48:18 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-14 10:48:18 -==> Parameters: 1(Long), 0(String)
2019-05-14 10:48:18 -<==      Total: 1
2019-05-14 10:48:18 -耗时 : 6
2019-05-14 10:48:18 -返回值 : com.bootdo.common.utils.PageUtils@3295a9d4
2019-05-14 10:48:18 -请求地址 : http://localhost:8081/main
2019-05-14 10:48:18 -HTTP METHOD : GET
2019-05-14 10:48:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 10:48:18 -参数 : []
2019-05-14 10:48:18 -耗时 : 1
2019-05-14 10:48:18 -返回值 : main
2019-05-14 10:48:22 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-14 10:48:22 -==> Parameters: 1(Long)
2019-05-14 10:48:22 -<==      Total: 93
2019-05-14 10:48:22 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-14 10:48:22 -HTTP METHOD : GET
2019-05-14 10:48:22 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 10:48:22 -参数 : []
2019-05-14 10:48:22 -耗时 : 1
2019-05-14 10:48:22 -返回值 : charts/tableElecMM
2019-05-14 10:48:22 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 10:48:22 -HTTP METHOD : GET
2019-05-14 10:48:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 10:48:22 -参数 : [userType]
2019-05-14 10:48:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 10:48:22 -==> Parameters: userType(String)
2019-05-14 10:48:22 -<==      Total: 4
2019-05-14 10:48:22 -耗时 : 4
2019-05-14 10:48:22 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 10:48:28 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-14 10:48:28 -HTTP METHOD : GET
2019-05-14 10:48:28 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-14 10:48:28 -参数 : []
2019-05-14 10:48:28 -耗时 : 0
2019-05-14 10:48:28 -返回值 : system/dept/deptTree
2019-05-14 10:48:28 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-14 10:48:28 -HTTP METHOD : GET
2019-05-14 10:48:28 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-14 10:48:28 -参数 : []
2019-05-14 10:48:28 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-14 10:48:28 -==> Parameters: 
2019-05-14 10:48:28 -<==      Total: 3
2019-05-14 10:48:28 -耗时 : 5
2019-05-14 10:48:28 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-14 10:49:39 -请求地址 : http://localhost:8081/index
2019-05-14 10:49:39 -HTTP METHOD : GET
2019-05-14 10:49:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-14 10:49:39 -参数 : [{}]
2019-05-14 10:49:39 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-14 10:49:39 -==> Parameters: 1(Long)
2019-05-14 10:49:39 -<==      Total: 49
2019-05-14 10:49:39 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-14 10:49:39 -==> Parameters: 138(Long)
2019-05-14 10:49:39 -<==      Total: 1
2019-05-14 10:49:39 -耗时 : 15
2019-05-14 10:49:39 -返回值 : index_v1
2019-05-14 10:49:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 10:49:39 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 15(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-14 10:49:39.147(Timestamp)
2019-05-14 10:49:39 -<==    Updates: 1
2019-05-14 10:49:39 -请求地址 : http://localhost:8081/main
2019-05-14 10:49:39 -HTTP METHOD : GET
2019-05-14 10:49:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 10:49:39 -参数 : []
2019-05-14 10:49:39 -耗时 : 0
2019-05-14 10:49:39 -返回值 : main
2019-05-14 10:49:39 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-14 10:49:39 -HTTP METHOD : GET
2019-05-14 10:49:39 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-14 10:49:39 -参数 : []
2019-05-14 10:49:39 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-14 10:49:39 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-14 10:49:39 -<==      Total: 0
2019-05-14 10:49:39 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-14 10:49:39 -==> Parameters: 1(Long), 0(String)
2019-05-14 10:49:39 -<==      Total: 1
2019-05-14 10:49:39 -耗时 : 11
2019-05-14 10:49:39 -返回值 : com.bootdo.common.utils.PageUtils@15681505
2019-05-14 10:49:39 -请求地址 : http://localhost:8081/main
2019-05-14 10:49:39 -HTTP METHOD : GET
2019-05-14 10:49:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 10:49:39 -参数 : []
2019-05-14 10:49:39 -耗时 : 1
2019-05-14 10:49:39 -返回值 : main
2019-05-14 10:49:44 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-14 10:49:44 -HTTP METHOD : GET
2019-05-14 10:49:44 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 10:49:44 -参数 : []
2019-05-14 10:49:44 -耗时 : 0
2019-05-14 10:49:44 -返回值 : charts/tableElecMM
2019-05-14 10:49:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 10:49:44 -HTTP METHOD : GET
2019-05-14 10:49:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 10:49:44 -参数 : [userType]
2019-05-14 10:49:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 10:49:44 -==> Parameters: userType(String)
2019-05-14 10:49:44 -<==      Total: 4
2019-05-14 10:49:44 -耗时 : 4
2019-05-14 10:49:44 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 10:49:49 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-14 10:49:49 -HTTP METHOD : GET
2019-05-14 10:49:49 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-14 10:49:49 -参数 : []
2019-05-14 10:49:49 -耗时 : 0
2019-05-14 10:49:49 -返回值 : system/dept/deptTree
2019-05-14 10:49:49 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-14 10:49:49 -HTTP METHOD : GET
2019-05-14 10:49:49 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-14 10:49:49 -参数 : []
2019-05-14 10:49:49 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-14 10:49:49 -==> Parameters: 
2019-05-14 10:49:49 -<==      Total: 3
2019-05-14 10:49:49 -耗时 : 3
2019-05-14 10:49:49 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-14 10:49:54 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-05-14 10:49:54 -HTTP METHOD : POST
2019-05-14 10:49:54 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 10:49:54 -参数 : [com.bootdo.elec.vo.ElecVo@44de1526, com.bootdo.moneyLog.vo.ElecLogVo@6573a7f1]
2019-05-14 10:49:54 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(ifnull(ifnull(COUNT(ID),0),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:54 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:54 -<==      Total: 1
2019-05-14 10:49:54 -耗时 : 348
2019-05-14 10:49:54 -返回值 : {ZElecSumPre=1, SumG1ElecLog=80, SElecSumPre=1, SumG2ElecLog=70, CountWSElecLog=1, CountPrehu=99, CountAmount=206, MStotalhu=11, CountWMElecLog=1, SElecPrice=1, G1ElecAmount=100, WSElecPrice=1, WSElecAmount=0, MElecAmount=1, SumG3ElecLog=90, MMElecCostCount=11, CountPreyu=9, CountSElecLog=0, MMElecAmount=1, CountZElecLog=0, MElecPrice=1, MStotalyu=1, SElecCostSum=0, SumSElecLog=0, G1totalhu=11, G3totalhu=11, ZElecSumOwe=0, ZElecAmount=1, G3ElecCostSum=1, WMElecPrice=1, MMtotalhu=11, ZElecPrice=1, SElecCostCount=11, MElecCostSum=1, SumMElecLog=152, G1totalyu=1, G3totalyu=1, MSElecSumOwe=0, WGElecPrice=1, SumMMElecLog=0, SElecSumOwe=0, SElecAmount=0, SumMSElecLog=0, MElecCountPre=9, WSElecSumOwe=0, WMElecSumPre=1, CountMMElecLog=0, G1ElecPrice=1, G3ElecAmount=1, WGElecAmount=0, CountMElecLog=3, SElecCountPre=9, G1ElecSumOwe=0, MMtotalyu=1, WMElecAmount=1, ZElecCostSum=1, MElecCountOwe=2, Mtotalhu=11, G2totalhu=11, WStotalhu=11, G3ElecCountOwe=2, G2ElecCountOwe=2, G3ElecCostCount=11, WSElecSumPre=1, G1ElecCountOwe=2, SElecCountOwe=2, WSElecCostSum=0, Mtotalyu=1, WMElecSumOwe=0, G2totalyu=1, G1ElecSumPre=1, CountG2ElecLog=1, CountG3ElecLog=1, WMtotalyu=1, WGtotalhu=11, SumWSElecLog=80, CountG1ElecLog=1, ZElecCountOwe=2, SumWMElecLog=60, WGElecCostCount=11, G3ElecSumPre=0, G1ElecCostSum=100, WGtotalyu=1, G1ElecCostCount=11, WStotalyu=1, CountOweyu=2, MElecCostCount=11, WGElecCountPre=9, MSElecCostSum=1, WGElecSumOwe=0, WMElecCostSum=1, G2ElecPrice=1, CountLogyu=542, CountOwehu=22, G3ElecSumOwe=1, ZElecCostCount=11, MSElecCostCount=11, CountMSElecLog=0, Ztotalyu=1, G1ElecCountPre=9, G2ElecCountPre=9, WGElecSumPre=1, WGElecCountOwe=2, CountLoghu=9, MMElecPrice=1, ZElecCountPre=9, G3ElecPrice=1, CountAllyu=11, G3ElecCountPre=9, MSElecAmount=1, WGElecCostSum=0, Ztotalhu=11, WMElecCountOwe=2, MMElecCountOwe=2, CountAllhu=121, CountCostyu=206, Stotalhu=11, CountPrice=11, MSElecPrice=1, MSElecCountPre=9, G2ElecSumPre=1, WSElecCountOwe=2, MElecSumOwe=1, G2ElecCostSum=100, CountCosthu=121, MMElecSumOwe=0, WSElecCountPre=9, MMElecCountPre=9, Stotalyu=1, CountWGElecLog=1, MSElecSumPre=1, WSElecCostCount=11, SumZElecLog=0, SumWGElecLog=10, G2ElecCostCount=11, WMElecCountPre=9, G2ElecAmount=100, MSElecCountOwe=2, WMtotalhu=11, MElecSumPre=0, MMElecSumPre=1, MMElecCostSum=1, G2ElecSumOwe=0, WMElecCostCount=11}
2019-05-14 10:49:57 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-05-14 10:49:57 -HTTP METHOD : POST
2019-05-14 10:49:57 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 10:49:57 -参数 : [com.bootdo.elec.vo.ElecVo@1d3e3fec, com.bootdo.moneyLog.vo.ElecLogVo@5f08f44a]
2019-05-14 10:49:57 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(ifnull(ifnull(COUNT(ID),0),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:49:57 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:49:57 -<==      Total: 1
2019-05-14 10:49:57 -耗时 : 438
2019-05-14 10:49:57 -返回值 : {ZElecSumPre=1, SumG1ElecLog=80, SElecSumPre=1, SumG2ElecLog=70, CountWSElecLog=1, CountPrehu=99, CountAmount=206, MStotalhu=11, CountWMElecLog=1, SElecPrice=1, G1ElecAmount=100, WSElecPrice=1, WSElecAmount=0, MElecAmount=1, SumG3ElecLog=90, MMElecCostCount=11, CountPreyu=9, CountSElecLog=0, MMElecAmount=1, CountZElecLog=0, MElecPrice=1, MStotalyu=1, SElecCostSum=0, SumSElecLog=0, G1totalhu=11, G3totalhu=11, ZElecSumOwe=0, ZElecAmount=1, G3ElecCostSum=1, WMElecPrice=1, MMtotalhu=11, ZElecPrice=1, SElecCostCount=11, MElecCostSum=1, SumMElecLog=152, G1totalyu=1, G3totalyu=1, MSElecSumOwe=0, WGElecPrice=1, SumMMElecLog=0, SElecSumOwe=0, SElecAmount=0, SumMSElecLog=0, MElecCountPre=9, WSElecSumOwe=0, WMElecSumPre=1, CountMMElecLog=0, G1ElecPrice=1, G3ElecAmount=1, WGElecAmount=0, CountMElecLog=3, SElecCountPre=9, G1ElecSumOwe=0, MMtotalyu=1, WMElecAmount=1, ZElecCostSum=1, MElecCountOwe=2, Mtotalhu=11, G2totalhu=11, WStotalhu=11, G3ElecCountOwe=2, G2ElecCountOwe=2, G3ElecCostCount=11, WSElecSumPre=1, G1ElecCountOwe=2, SElecCountOwe=2, WSElecCostSum=0, Mtotalyu=1, WMElecSumOwe=0, G2totalyu=1, G1ElecSumPre=1, CountG2ElecLog=1, CountG3ElecLog=1, WMtotalyu=1, WGtotalhu=11, SumWSElecLog=80, CountG1ElecLog=1, ZElecCountOwe=2, SumWMElecLog=60, WGElecCostCount=11, G3ElecSumPre=0, G1ElecCostSum=100, WGtotalyu=1, G1ElecCostCount=11, WStotalyu=1, CountOweyu=2, MElecCostCount=11, WGElecCountPre=9, MSElecCostSum=1, WGElecSumOwe=0, WMElecCostSum=1, G2ElecPrice=1, CountLogyu=542, CountOwehu=22, G3ElecSumOwe=1, ZElecCostCount=11, MSElecCostCount=11, CountMSElecLog=0, Ztotalyu=1, G1ElecCountPre=9, G2ElecCountPre=9, WGElecSumPre=1, WGElecCountOwe=2, CountLoghu=9, MMElecPrice=1, ZElecCountPre=9, G3ElecPrice=1, CountAllyu=11, G3ElecCountPre=9, MSElecAmount=1, WGElecCostSum=0, Ztotalhu=11, WMElecCountOwe=2, MMElecCountOwe=2, CountAllhu=121, CountCostyu=206, Stotalhu=11, CountPrice=11, MSElecPrice=1, MSElecCountPre=9, G2ElecSumPre=1, WSElecCountOwe=2, MElecSumOwe=1, G2ElecCostSum=100, CountCosthu=121, MMElecSumOwe=0, WSElecCountPre=9, MMElecCountPre=9, Stotalyu=1, CountWGElecLog=1, MSElecSumPre=1, WSElecCostCount=11, SumZElecLog=0, SumWGElecLog=10, G2ElecCostCount=11, WMElecCountPre=9, G2ElecAmount=100, MSElecCountOwe=2, WMtotalhu=11, MElecSumPre=0, MMElecSumPre=1, MMElecCostSum=1, G2ElecSumOwe=0, WMElecCostCount=11}
2019-05-14 10:50:00 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-05-14 10:50:00 -HTTP METHOD : POST
2019-05-14 10:50:00 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 10:50:00 -参数 : [com.bootdo.elec.vo.ElecVo@62887870, com.bootdo.moneyLog.vo.ElecLogVo@45dba73b]
2019-05-14 10:50:00 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(ifnull(ifnull(COUNT(ID),0),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:50:00 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:50:00 -<==      Total: 1
2019-05-14 10:50:00 -耗时 : 239
2019-05-14 10:50:00 -返回值 : {ZElecSumPre=1, SumG1ElecLog=80, SElecSumPre=1, SumG2ElecLog=70, CountWSElecLog=1, CountPrehu=99, CountAmount=206, MStotalhu=11, CountWMElecLog=1, SElecPrice=1, G1ElecAmount=100, WSElecPrice=1, WSElecAmount=0, MElecAmount=1, SumG3ElecLog=90, MMElecCostCount=11, CountPreyu=9, CountSElecLog=0, MMElecAmount=1, CountZElecLog=0, MElecPrice=1, MStotalyu=1, SElecCostSum=0, SumSElecLog=0, G1totalhu=11, G3totalhu=11, ZElecSumOwe=0, ZElecAmount=1, G3ElecCostSum=1, WMElecPrice=1, MMtotalhu=11, ZElecPrice=1, SElecCostCount=11, MElecCostSum=1, SumMElecLog=152, G1totalyu=1, G3totalyu=1, MSElecSumOwe=0, WGElecPrice=1, SumMMElecLog=0, SElecSumOwe=0, SElecAmount=0, SumMSElecLog=0, MElecCountPre=9, WSElecSumOwe=0, WMElecSumPre=1, CountMMElecLog=0, G1ElecPrice=1, G3ElecAmount=1, WGElecAmount=0, CountMElecLog=3, SElecCountPre=9, G1ElecSumOwe=0, MMtotalyu=1, WMElecAmount=1, ZElecCostSum=1, MElecCountOwe=2, Mtotalhu=11, G2totalhu=11, WStotalhu=11, G3ElecCountOwe=2, G2ElecCountOwe=2, G3ElecCostCount=11, WSElecSumPre=1, G1ElecCountOwe=2, SElecCountOwe=2, WSElecCostSum=0, Mtotalyu=1, WMElecSumOwe=0, G2totalyu=1, G1ElecSumPre=1, CountG2ElecLog=1, CountG3ElecLog=1, WMtotalyu=1, WGtotalhu=11, SumWSElecLog=80, CountG1ElecLog=1, ZElecCountOwe=2, SumWMElecLog=60, WGElecCostCount=11, G3ElecSumPre=0, G1ElecCostSum=100, WGtotalyu=1, G1ElecCostCount=11, WStotalyu=1, CountOweyu=2, MElecCostCount=11, WGElecCountPre=9, MSElecCostSum=1, WGElecSumOwe=0, WMElecCostSum=1, G2ElecPrice=1, CountLogyu=542, CountOwehu=22, G3ElecSumOwe=1, ZElecCostCount=11, MSElecCostCount=11, CountMSElecLog=0, Ztotalyu=1, G1ElecCountPre=9, G2ElecCountPre=9, WGElecSumPre=1, WGElecCountOwe=2, CountLoghu=9, MMElecPrice=1, ZElecCountPre=9, G3ElecPrice=1, CountAllyu=11, G3ElecCountPre=9, MSElecAmount=1, WGElecCostSum=0, Ztotalhu=11, WMElecCountOwe=2, MMElecCountOwe=2, CountAllhu=121, CountCostyu=206, Stotalhu=11, CountPrice=11, MSElecPrice=1, MSElecCountPre=9, G2ElecSumPre=1, WSElecCountOwe=2, MElecSumOwe=1, G2ElecCostSum=100, CountCosthu=121, MMElecSumOwe=0, WSElecCountPre=9, MMElecCountPre=9, Stotalyu=1, CountWGElecLog=1, MSElecSumPre=1, WSElecCostCount=11, SumZElecLog=0, SumWGElecLog=10, G2ElecCostCount=11, WMElecCountPre=9, G2ElecAmount=100, MSElecCountOwe=2, WMtotalhu=11, MElecSumPre=0, MMElecSumPre=1, MMElecCostSum=1, G2ElecSumOwe=0, WMElecCostCount=11}
2019-05-14 10:50:51 -请求地址 : http://localhost:8081/index
2019-05-14 10:50:51 -HTTP METHOD : GET
2019-05-14 10:50:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-14 10:50:51 -参数 : [{}]
2019-05-14 10:50:51 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-14 10:50:51 -==> Parameters: 1(Long)
2019-05-14 10:50:51 -<==      Total: 49
2019-05-14 10:50:51 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-14 10:50:51 -==> Parameters: 138(Long)
2019-05-14 10:50:51 -<==      Total: 1
2019-05-14 10:50:51 -耗时 : 14
2019-05-14 10:50:51 -返回值 : index_v1
2019-05-14 10:50:51 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 10:50:51 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 14(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-14 10:50:51.221(Timestamp)
2019-05-14 10:50:51 -<==    Updates: 1
2019-05-14 10:50:51 -请求地址 : http://localhost:8081/main
2019-05-14 10:50:51 -HTTP METHOD : GET
2019-05-14 10:50:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 10:50:51 -参数 : []
2019-05-14 10:50:51 -耗时 : 0
2019-05-14 10:50:51 -返回值 : main
2019-05-14 10:50:51 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-14 10:50:51 -HTTP METHOD : GET
2019-05-14 10:50:51 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-14 10:50:51 -参数 : []
2019-05-14 10:50:51 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-14 10:50:51 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-14 10:50:51 -<==      Total: 0
2019-05-14 10:50:51 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-14 10:50:51 -==> Parameters: 1(Long), 0(String)
2019-05-14 10:50:51 -<==      Total: 1
2019-05-14 10:50:51 -耗时 : 7
2019-05-14 10:50:51 -返回值 : com.bootdo.common.utils.PageUtils@669bce3d
2019-05-14 10:50:51 -请求地址 : http://localhost:8081/main
2019-05-14 10:50:51 -HTTP METHOD : GET
2019-05-14 10:50:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 10:50:51 -参数 : []
2019-05-14 10:50:51 -耗时 : 0
2019-05-14 10:50:51 -返回值 : main
2019-05-14 10:50:57 -请求地址 : http://localhost:8081/charts/countMM
2019-05-14 10:50:57 -HTTP METHOD : GET
2019-05-14 10:50:57 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-05-14 10:50:57 -参数 : []
2019-05-14 10:50:57 -耗时 : 0
2019-05-14 10:50:57 -返回值 : charts/countMM
2019-05-14 10:50:58 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 10:50:58 -HTTP METHOD : GET
2019-05-14 10:50:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 10:50:58 -参数 : [userType]
2019-05-14 10:50:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 10:50:58 -==> Parameters: userType(String)
2019-05-14 10:50:58 -<==      Total: 4
2019-05-14 10:50:58 -耗时 : 3
2019-05-14 10:50:58 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 10:51:00 -请求地址 : http://localhost:8081/charts/countYY
2019-05-14 10:51:00 -HTTP METHOD : GET
2019-05-14 10:51:00 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-05-14 10:51:00 -参数 : []
2019-05-14 10:51:00 -耗时 : 1
2019-05-14 10:51:00 -返回值 : charts/countYY
2019-05-14 10:51:00 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 10:51:00 -HTTP METHOD : GET
2019-05-14 10:51:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 10:51:00 -参数 : [userType]
2019-05-14 10:51:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 10:51:00 -==> Parameters: userType(String)
2019-05-14 10:51:00 -<==      Total: 4
2019-05-14 10:51:00 -耗时 : 3
2019-05-14 10:51:00 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 10:51:01 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-14 10:51:01 -HTTP METHOD : GET
2019-05-14 10:51:01 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 10:51:01 -参数 : []
2019-05-14 10:51:01 -耗时 : 0
2019-05-14 10:51:01 -返回值 : charts/tableElecMM
2019-05-14 10:51:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 10:51:01 -HTTP METHOD : GET
2019-05-14 10:51:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 10:51:01 -参数 : [userType]
2019-05-14 10:51:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 10:51:01 -==> Parameters: userType(String)
2019-05-14 10:51:01 -<==      Total: 4
2019-05-14 10:51:01 -耗时 : 3
2019-05-14 10:51:01 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 10:51:02 -请求地址 : http://localhost:8081/index
2019-05-14 10:51:02 -HTTP METHOD : GET
2019-05-14 10:51:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-14 10:51:02 -参数 : [{}]
2019-05-14 10:51:02 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-14 10:51:02 -==> Parameters: 1(Long)
2019-05-14 10:51:02 -<==      Total: 49
2019-05-14 10:51:02 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-14 10:51:02 -==> Parameters: 138(Long)
2019-05-14 10:51:02 -<==      Total: 1
2019-05-14 10:51:02 -耗时 : 13
2019-05-14 10:51:02 -返回值 : index_v1
2019-05-14 10:51:02 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 10:51:02 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 14(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-14 10:51:02.328(Timestamp)
2019-05-14 10:51:02 -<==    Updates: 1
2019-05-14 10:51:02 -请求地址 : http://localhost:8081/main
2019-05-14 10:51:02 -HTTP METHOD : GET
2019-05-14 10:51:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 10:51:02 -参数 : []
2019-05-14 10:51:02 -耗时 : 0
2019-05-14 10:51:02 -返回值 : main
2019-05-14 10:51:02 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-14 10:51:02 -HTTP METHOD : GET
2019-05-14 10:51:02 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-14 10:51:02 -参数 : []
2019-05-14 10:51:02 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-14 10:51:02 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-14 10:51:02 -<==      Total: 0
2019-05-14 10:51:02 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-14 10:51:02 -==> Parameters: 1(Long), 0(String)
2019-05-14 10:51:02 -<==      Total: 1
2019-05-14 10:51:02 -耗时 : 4
2019-05-14 10:51:02 -返回值 : com.bootdo.common.utils.PageUtils@5664c1c2
2019-05-14 10:51:02 -请求地址 : http://localhost:8081/main
2019-05-14 10:51:02 -HTTP METHOD : GET
2019-05-14 10:51:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 10:51:02 -参数 : []
2019-05-14 10:51:02 -耗时 : 0
2019-05-14 10:51:02 -返回值 : main
2019-05-14 10:51:05 -请求地址 : http://localhost:8081/index
2019-05-14 10:51:05 -HTTP METHOD : GET
2019-05-14 10:51:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-14 10:51:05 -参数 : [{}]
2019-05-14 10:51:05 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-14 10:51:05 -==> Parameters: 1(Long)
2019-05-14 10:51:05 -<==      Total: 49
2019-05-14 10:51:05 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-14 10:51:05 -==> Parameters: 138(Long)
2019-05-14 10:51:05 -<==      Total: 1
2019-05-14 10:51:05 -耗时 : 12
2019-05-14 10:51:05 -返回值 : index_v1
2019-05-14 10:51:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 10:51:05 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 12(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-14 10:51:05.604(Timestamp)
2019-05-14 10:51:05 -请求地址 : http://localhost:8081/main
2019-05-14 10:51:05 -HTTP METHOD : GET
2019-05-14 10:51:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 10:51:05 -参数 : []
2019-05-14 10:51:05 -耗时 : 0
2019-05-14 10:51:05 -返回值 : main
2019-05-14 10:51:05 -<==    Updates: 1
2019-05-14 10:51:05 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-14 10:51:05 -HTTP METHOD : GET
2019-05-14 10:51:05 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-14 10:51:05 -参数 : []
2019-05-14 10:51:05 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-14 10:51:05 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-14 10:51:05 -<==      Total: 0
2019-05-14 10:51:05 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-14 10:51:05 -==> Parameters: 1(Long), 0(String)
2019-05-14 10:51:05 -<==      Total: 1
2019-05-14 10:51:05 -耗时 : 4
2019-05-14 10:51:05 -返回值 : com.bootdo.common.utils.PageUtils@449a9aa0
2019-05-14 10:51:05 -请求地址 : http://localhost:8081/main
2019-05-14 10:51:05 -HTTP METHOD : GET
2019-05-14 10:51:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 10:51:05 -参数 : []
2019-05-14 10:51:05 -耗时 : 1
2019-05-14 10:51:05 -返回值 : main
2019-05-14 10:51:13 -请求地址 : http://localhost:8081/index
2019-05-14 10:51:13 -HTTP METHOD : GET
2019-05-14 10:51:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-14 10:51:13 -参数 : [{}]
2019-05-14 10:51:13 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-14 10:51:13 -==> Parameters: 1(Long)
2019-05-14 10:51:13 -<==      Total: 49
2019-05-14 10:51:13 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-14 10:51:13 -==> Parameters: 138(Long)
2019-05-14 10:51:13 -<==      Total: 1
2019-05-14 10:51:13 -耗时 : 11
2019-05-14 10:51:13 -返回值 : index_v1
2019-05-14 10:51:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 10:51:13 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 11(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-14 10:51:13.729(Timestamp)
2019-05-14 10:51:13 -请求地址 : http://localhost:8081/main
2019-05-14 10:51:13 -HTTP METHOD : GET
2019-05-14 10:51:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 10:51:13 -参数 : []
2019-05-14 10:51:13 -耗时 : 0
2019-05-14 10:51:13 -返回值 : main
2019-05-14 10:51:13 -<==    Updates: 1
2019-05-14 10:51:13 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-14 10:51:13 -HTTP METHOD : GET
2019-05-14 10:51:13 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-14 10:51:13 -参数 : []
2019-05-14 10:51:13 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-14 10:51:13 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-14 10:51:13 -<==      Total: 0
2019-05-14 10:51:13 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-14 10:51:13 -==> Parameters: 1(Long), 0(String)
2019-05-14 10:51:13 -<==      Total: 1
2019-05-14 10:51:13 -耗时 : 3
2019-05-14 10:51:13 -返回值 : com.bootdo.common.utils.PageUtils@50d85e47
2019-05-14 10:51:13 -请求地址 : http://localhost:8081/main
2019-05-14 10:51:13 -HTTP METHOD : GET
2019-05-14 10:51:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 10:51:13 -参数 : []
2019-05-14 10:51:13 -耗时 : 1
2019-05-14 10:51:13 -返回值 : main
2019-05-14 10:51:18 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-14 10:51:18 -HTTP METHOD : GET
2019-05-14 10:51:18 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 10:51:18 -参数 : []
2019-05-14 10:51:18 -耗时 : 0
2019-05-14 10:51:18 -返回值 : charts/tableElecMM
2019-05-14 10:51:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 10:51:18 -HTTP METHOD : GET
2019-05-14 10:51:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 10:51:18 -参数 : [userType]
2019-05-14 10:51:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 10:51:18 -==> Parameters: userType(String)
2019-05-14 10:51:18 -<==      Total: 4
2019-05-14 10:51:18 -耗时 : 3
2019-05-14 10:51:18 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 10:51:25 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-14 10:51:25 -HTTP METHOD : GET
2019-05-14 10:51:25 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-14 10:51:25 -参数 : []
2019-05-14 10:51:25 -耗时 : 0
2019-05-14 10:51:25 -返回值 : system/dept/deptTree
2019-05-14 10:51:26 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-14 10:51:26 -HTTP METHOD : GET
2019-05-14 10:51:26 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-14 10:51:26 -参数 : []
2019-05-14 10:51:26 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-14 10:51:26 -==> Parameters: 
2019-05-14 10:51:26 -<==      Total: 3
2019-05-14 10:51:26 -耗时 : 2
2019-05-14 10:51:26 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-14 10:51:32 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-05-14 10:51:32 -HTTP METHOD : POST
2019-05-14 10:51:32 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 10:51:32 -参数 : [com.bootdo.elec.vo.ElecVo@30e43f8e, com.bootdo.moneyLog.vo.ElecLogVo@31f66013]
2019-05-14 10:51:32 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(ifnull(ifnull(COUNT(ID),0),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:51:32 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:51:32 -<==      Total: 1
2019-05-14 10:51:32 -耗时 : 195
2019-05-14 10:51:32 -返回值 : {ZElecSumPre=1, SumG1ElecLog=80, SElecSumPre=1, SumG2ElecLog=70, CountWSElecLog=1, CountPrehu=99, CountAmount=206, MStotalhu=11, CountWMElecLog=1, SElecPrice=1, G1ElecAmount=100, WSElecPrice=1, WSElecAmount=0, MElecAmount=1, SumG3ElecLog=90, MMElecCostCount=11, CountPreyu=9, CountSElecLog=0, MMElecAmount=1, CountZElecLog=0, MElecPrice=1, MStotalyu=1, SElecCostSum=0, SumSElecLog=0, G1totalhu=11, G3totalhu=11, ZElecSumOwe=0, ZElecAmount=1, G3ElecCostSum=1, WMElecPrice=1, MMtotalhu=11, ZElecPrice=1, SElecCostCount=11, MElecCostSum=1, SumMElecLog=152, G1totalyu=1, G3totalyu=1, MSElecSumOwe=0, WGElecPrice=1, SumMMElecLog=0, SElecSumOwe=0, SElecAmount=0, SumMSElecLog=0, MElecCountPre=9, WSElecSumOwe=0, WMElecSumPre=1, CountMMElecLog=0, G1ElecPrice=1, G3ElecAmount=1, WGElecAmount=0, CountMElecLog=3, SElecCountPre=9, G1ElecSumOwe=0, MMtotalyu=1, WMElecAmount=1, ZElecCostSum=1, MElecCountOwe=2, Mtotalhu=11, G2totalhu=11, WStotalhu=11, G3ElecCountOwe=2, G2ElecCountOwe=2, G3ElecCostCount=11, WSElecSumPre=1, G1ElecCountOwe=2, SElecCountOwe=2, WSElecCostSum=0, Mtotalyu=1, WMElecSumOwe=0, G2totalyu=1, G1ElecSumPre=1, CountG2ElecLog=1, CountG3ElecLog=1, WMtotalyu=1, WGtotalhu=11, SumWSElecLog=80, CountG1ElecLog=1, ZElecCountOwe=2, SumWMElecLog=60, WGElecCostCount=11, G3ElecSumPre=0, G1ElecCostSum=100, WGtotalyu=1, G1ElecCostCount=11, WStotalyu=1, CountOweyu=2, MElecCostCount=11, WGElecCountPre=9, MSElecCostSum=1, WGElecSumOwe=0, WMElecCostSum=1, G2ElecPrice=1, CountLogyu=542, CountOwehu=22, G3ElecSumOwe=1, ZElecCostCount=11, MSElecCostCount=11, CountMSElecLog=0, Ztotalyu=1, G1ElecCountPre=9, G2ElecCountPre=9, WGElecSumPre=1, WGElecCountOwe=2, CountLoghu=9, MMElecPrice=1, ZElecCountPre=9, G3ElecPrice=1, CountAllyu=11, G3ElecCountPre=9, MSElecAmount=1, WGElecCostSum=0, Ztotalhu=11, WMElecCountOwe=2, MMElecCountOwe=2, CountAllhu=121, CountCostyu=206, Stotalhu=11, CountPrice=11, MSElecPrice=1, MSElecCountPre=9, G2ElecSumPre=1, WSElecCountOwe=2, MElecSumOwe=1, G2ElecCostSum=100, CountCosthu=121, MMElecSumOwe=0, WSElecCountPre=9, MMElecCountPre=9, Stotalyu=1, CountWGElecLog=1, MSElecSumPre=1, WSElecCostCount=11, SumZElecLog=0, SumWGElecLog=10, G2ElecCostCount=11, WMElecCountPre=9, G2ElecAmount=100, MSElecCountOwe=2, WMtotalhu=11, MElecSumPre=0, MMElecSumPre=1, MMElecCostSum=1, G2ElecSumOwe=0, WMElecCostCount=11}
2019-05-14 10:51:52 -请求地址 : http://localhost:8081/index
2019-05-14 10:51:52 -HTTP METHOD : GET
2019-05-14 10:51:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-14 10:51:52 -参数 : [{}]
2019-05-14 10:51:52 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-14 10:51:52 -==> Parameters: 1(Long)
2019-05-14 10:51:52 -<==      Total: 49
2019-05-14 10:51:52 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-14 10:51:52 -==> Parameters: 138(Long)
2019-05-14 10:51:52 -<==      Total: 1
2019-05-14 10:51:52 -耗时 : 12
2019-05-14 10:51:52 -返回值 : index_v1
2019-05-14 10:51:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 10:51:52 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 12(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-14 10:51:52.253(Timestamp)
2019-05-14 10:51:52 -请求地址 : http://localhost:8081/main
2019-05-14 10:51:52 -HTTP METHOD : GET
2019-05-14 10:51:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 10:51:52 -参数 : []
2019-05-14 10:51:52 -耗时 : 0
2019-05-14 10:51:52 -返回值 : main
2019-05-14 10:51:52 -<==    Updates: 1
2019-05-14 10:51:52 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-14 10:51:52 -HTTP METHOD : GET
2019-05-14 10:51:52 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-14 10:51:52 -参数 : []
2019-05-14 10:51:52 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-14 10:51:52 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-14 10:51:52 -<==      Total: 0
2019-05-14 10:51:52 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-14 10:51:52 -==> Parameters: 1(Long), 0(String)
2019-05-14 10:51:52 -<==      Total: 1
2019-05-14 10:51:52 -耗时 : 3
2019-05-14 10:51:52 -返回值 : com.bootdo.common.utils.PageUtils@2bc2ae95
2019-05-14 10:51:52 -请求地址 : http://localhost:8081/main
2019-05-14 10:51:52 -HTTP METHOD : GET
2019-05-14 10:51:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 10:51:52 -参数 : []
2019-05-14 10:51:52 -耗时 : 1
2019-05-14 10:51:52 -返回值 : main
2019-05-14 10:51:56 -请求地址 : http://localhost:8081/charts/countYY
2019-05-14 10:51:56 -HTTP METHOD : GET
2019-05-14 10:51:56 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-05-14 10:51:56 -参数 : []
2019-05-14 10:51:56 -耗时 : 0
2019-05-14 10:51:56 -返回值 : charts/countYY
2019-05-14 10:51:56 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 10:51:56 -HTTP METHOD : GET
2019-05-14 10:51:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 10:51:56 -参数 : [userType]
2019-05-14 10:51:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 10:51:56 -==> Parameters: userType(String)
2019-05-14 10:51:56 -<==      Total: 4
2019-05-14 10:51:56 -耗时 : 2
2019-05-14 10:51:56 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 10:51:58 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-14 10:51:58 -HTTP METHOD : GET
2019-05-14 10:51:58 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 10:51:58 -参数 : []
2019-05-14 10:51:58 -耗时 : 0
2019-05-14 10:51:58 -返回值 : charts/tableElecMM
2019-05-14 10:51:58 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 10:51:58 -HTTP METHOD : GET
2019-05-14 10:51:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 10:51:58 -参数 : [userType]
2019-05-14 10:51:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 10:51:58 -==> Parameters: userType(String)
2019-05-14 10:51:58 -<==      Total: 4
2019-05-14 10:51:58 -耗时 : 2
2019-05-14 10:51:58 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 10:52:03 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-14 10:52:03 -HTTP METHOD : GET
2019-05-14 10:52:03 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-14 10:52:03 -参数 : []
2019-05-14 10:52:03 -耗时 : 1
2019-05-14 10:52:03 -返回值 : system/dept/deptTree
2019-05-14 10:52:03 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-14 10:52:03 -HTTP METHOD : GET
2019-05-14 10:52:03 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-14 10:52:03 -参数 : []
2019-05-14 10:52:03 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-14 10:52:03 -==> Parameters: 
2019-05-14 10:52:03 -<==      Total: 3
2019-05-14 10:52:03 -耗时 : 3
2019-05-14 10:52:03 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-14 10:52:08 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-05-14 10:52:08 -HTTP METHOD : POST
2019-05-14 10:52:08 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 10:52:08 -参数 : [com.bootdo.elec.vo.ElecVo@3cbf2385, com.bootdo.moneyLog.vo.ElecLogVo@774afffc]
2019-05-14 10:52:08 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(ifnull(ifnull(COUNT(ID),0),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:08 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:08 -<==      Total: 1
2019-05-14 10:52:08 -耗时 : 208
2019-05-14 10:52:08 -返回值 : {ZElecSumPre=1, SumG1ElecLog=80, SElecSumPre=1, SumG2ElecLog=70, CountWSElecLog=1, CountPrehu=99, CountAmount=206, MStotalhu=11, CountWMElecLog=1, SElecPrice=1, G1ElecAmount=100, WSElecPrice=1, WSElecAmount=0, MElecAmount=1, SumG3ElecLog=90, MMElecCostCount=11, CountPreyu=9, CountSElecLog=0, MMElecAmount=1, CountZElecLog=0, MElecPrice=1, MStotalyu=1, SElecCostSum=0, SumSElecLog=0, G1totalhu=11, G3totalhu=11, ZElecSumOwe=0, ZElecAmount=1, G3ElecCostSum=1, WMElecPrice=1, MMtotalhu=11, ZElecPrice=1, SElecCostCount=11, MElecCostSum=1, SumMElecLog=152, G1totalyu=1, G3totalyu=1, MSElecSumOwe=0, WGElecPrice=1, SumMMElecLog=0, SElecSumOwe=0, SElecAmount=0, SumMSElecLog=0, MElecCountPre=9, WSElecSumOwe=0, WMElecSumPre=1, CountMMElecLog=0, G1ElecPrice=1, G3ElecAmount=1, WGElecAmount=0, CountMElecLog=3, SElecCountPre=9, G1ElecSumOwe=0, MMtotalyu=1, WMElecAmount=1, ZElecCostSum=1, MElecCountOwe=2, Mtotalhu=11, G2totalhu=11, WStotalhu=11, G3ElecCountOwe=2, G2ElecCountOwe=2, G3ElecCostCount=11, WSElecSumPre=1, G1ElecCountOwe=2, SElecCountOwe=2, WSElecCostSum=0, Mtotalyu=1, WMElecSumOwe=0, G2totalyu=1, G1ElecSumPre=1, CountG2ElecLog=1, CountG3ElecLog=1, WMtotalyu=1, WGtotalhu=11, SumWSElecLog=80, CountG1ElecLog=1, ZElecCountOwe=2, SumWMElecLog=60, WGElecCostCount=11, G3ElecSumPre=0, G1ElecCostSum=100, WGtotalyu=1, G1ElecCostCount=11, WStotalyu=1, CountOweyu=2, MElecCostCount=11, WGElecCountPre=9, MSElecCostSum=1, WGElecSumOwe=0, WMElecCostSum=1, G2ElecPrice=1, CountLogyu=542, CountOwehu=22, G3ElecSumOwe=1, ZElecCostCount=11, MSElecCostCount=11, CountMSElecLog=0, Ztotalyu=1, G1ElecCountPre=9, G2ElecCountPre=9, WGElecSumPre=1, WGElecCountOwe=2, CountLoghu=9, MMElecPrice=1, ZElecCountPre=9, G3ElecPrice=1, CountAllyu=11, G3ElecCountPre=9, MSElecAmount=1, WGElecCostSum=0, Ztotalhu=11, WMElecCountOwe=2, MMElecCountOwe=2, CountAllhu=121, CountCostyu=206, Stotalhu=11, CountPrice=11, MSElecPrice=1, MSElecCountPre=9, G2ElecSumPre=1, WSElecCountOwe=2, MElecSumOwe=1, G2ElecCostSum=100, CountCosthu=121, MMElecSumOwe=0, WSElecCountPre=9, MMElecCountPre=9, Stotalyu=1, CountWGElecLog=1, MSElecSumPre=1, WSElecCostCount=11, SumZElecLog=0, SumWGElecLog=10, G2ElecCostCount=11, WMElecCountPre=9, G2ElecAmount=100, MSElecCountOwe=2, WMtotalhu=11, MElecSumPre=0, MMElecSumPre=1, MMElecCostSum=1, G2ElecSumOwe=0, WMElecCostCount=11}
2019-05-14 10:52:10 -请求地址 : http://localhost:8081/getVerify
2019-05-14 10:52:10 -HTTP METHOD : GET
2019-05-14 10:52:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-14 10:52:10 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7eefb078, org.apache.shiro.web.servlet.ShiroHttpServletResponse@205ae503]
2019-05-14 10:52:10 -7211
2019-05-14 10:52:10 -耗时 : 10
2019-05-14 10:52:10 -返回值 : null
2019-05-14 10:52:17 -请求地址 : http://localhost:8081/login
2019-05-14 10:52:17 -HTTP METHOD : POST
2019-05-14 10:52:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-14 10:52:17 -参数 : [admin, 111111, 7211, org.apache.shiro.web.servlet.ShiroHttpServletRequest@a42b9a0]
2019-05-14 10:52:17 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-14 10:52:17 -==> Parameters: admin(String)
2019-05-14 10:52:17 -<==      Total: 1
2019-05-14 10:52:17 -耗时 : 34
2019-05-14 10:52:17 -返回值 : {msg=操作成功, code=0}
2019-05-14 10:52:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 10:52:17 -==> Parameters: 1(Long), admin(String), 登录(String), 34(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-14 10:52:17.11(Timestamp)
2019-05-14 10:52:17 -请求地址 : http://localhost:8081/index
2019-05-14 10:52:17 -HTTP METHOD : GET
2019-05-14 10:52:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-14 10:52:17 -参数 : [{}]
2019-05-14 10:52:17 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-14 10:52:17 -==> Parameters: 1(Long)
2019-05-14 10:52:17 -<==    Updates: 1
2019-05-14 10:52:17 -<==      Total: 49
2019-05-14 10:52:17 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-14 10:52:17 -==> Parameters: 138(Long)
2019-05-14 10:52:17 -<==      Total: 1
2019-05-14 10:52:17 -耗时 : 68
2019-05-14 10:52:17 -返回值 : index_v1
2019-05-14 10:52:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 10:52:17 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 68(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-14 10:52:17.197(Timestamp)
2019-05-14 10:52:17 -请求地址 : http://localhost:8081/main
2019-05-14 10:52:17 -HTTP METHOD : GET
2019-05-14 10:52:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 10:52:17 -<==    Updates: 1
2019-05-14 10:52:17 -参数 : []
2019-05-14 10:52:17 -耗时 : 0
2019-05-14 10:52:17 -返回值 : main
2019-05-14 10:52:17 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-14 10:52:17 -HTTP METHOD : GET
2019-05-14 10:52:17 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-14 10:52:17 -参数 : []
2019-05-14 10:52:17 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-14 10:52:17 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-14 10:52:17 -<==      Total: 0
2019-05-14 10:52:17 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-14 10:52:17 -==> Parameters: 1(Long), 0(String)
2019-05-14 10:52:17 -<==      Total: 1
2019-05-14 10:52:17 -耗时 : 4
2019-05-14 10:52:17 -返回值 : com.bootdo.common.utils.PageUtils@51ad8519
2019-05-14 10:52:17 -请求地址 : http://localhost:8081/main
2019-05-14 10:52:17 -HTTP METHOD : GET
2019-05-14 10:52:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 10:52:17 -参数 : []
2019-05-14 10:52:17 -耗时 : 0
2019-05-14 10:52:17 -返回值 : main
2019-05-14 10:52:19 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-14 10:52:19 -==> Parameters: 1(Long)
2019-05-14 10:52:19 -<==      Total: 93
2019-05-14 10:52:19 -请求地址 : http://localhost:8081/charts/countMM
2019-05-14 10:52:19 -HTTP METHOD : GET
2019-05-14 10:52:19 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-05-14 10:52:19 -参数 : []
2019-05-14 10:52:19 -耗时 : 0
2019-05-14 10:52:19 -返回值 : charts/countMM
2019-05-14 10:52:19 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 10:52:19 -HTTP METHOD : GET
2019-05-14 10:52:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 10:52:19 -参数 : [userType]
2019-05-14 10:52:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 10:52:19 -==> Parameters: userType(String)
2019-05-14 10:52:19 -<==      Total: 4
2019-05-14 10:52:19 -耗时 : 4
2019-05-14 10:52:19 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 10:52:21 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-14 10:52:21 -HTTP METHOD : GET
2019-05-14 10:52:21 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 10:52:21 -参数 : []
2019-05-14 10:52:21 -耗时 : 1
2019-05-14 10:52:21 -返回值 : charts/tableElecMM
2019-05-14 10:52:21 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 10:52:21 -HTTP METHOD : GET
2019-05-14 10:52:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 10:52:21 -参数 : [userType]
2019-05-14 10:52:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 10:52:21 -==> Parameters: userType(String)
2019-05-14 10:52:21 -<==      Total: 4
2019-05-14 10:52:21 -耗时 : 2
2019-05-14 10:52:21 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 10:52:32 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-14 10:52:32 -HTTP METHOD : GET
2019-05-14 10:52:32 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-14 10:52:32 -参数 : []
2019-05-14 10:52:32 -耗时 : 0
2019-05-14 10:52:32 -返回值 : system/dept/deptTree
2019-05-14 10:52:32 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-14 10:52:32 -HTTP METHOD : GET
2019-05-14 10:52:32 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-14 10:52:32 -参数 : []
2019-05-14 10:52:32 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-14 10:52:32 -==> Parameters: 
2019-05-14 10:52:32 -<==      Total: 3
2019-05-14 10:52:32 -耗时 : 17
2019-05-14 10:52:32 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-14 10:52:36 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-05-14 10:52:36 -HTTP METHOD : POST
2019-05-14 10:52:36 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 10:52:36 -参数 : [com.bootdo.elec.vo.ElecVo@756daf05, com.bootdo.moneyLog.vo.ElecLogVo@35d5d9cc]
2019-05-14 10:52:36 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:36 -<==      Total: 1
2019-05-14 10:52:36 -==>  Preparing: SELECT ifnull(ifnull(ifnull(COUNT(ID),0),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:36 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:37 -<==      Total: 1
2019-05-14 10:52:37 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:37 -<==      Total: 1
2019-05-14 10:52:37 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:37 -<==      Total: 1
2019-05-14 10:52:37 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:37 -<==      Total: 1
2019-05-14 10:52:37 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:37 -<==      Total: 1
2019-05-14 10:52:37 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:37 -<==      Total: 1
2019-05-14 10:52:37 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:37 -<==      Total: 1
2019-05-14 10:52:37 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:37 -<==      Total: 1
2019-05-14 10:52:37 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:37 -<==      Total: 1
2019-05-14 10:52:37 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:37 -<==      Total: 1
2019-05-14 10:52:37 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:37 -<==      Total: 1
2019-05-14 10:52:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:37 -<==      Total: 1
2019-05-14 10:52:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:37 -<==      Total: 1
2019-05-14 10:52:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:37 -<==      Total: 1
2019-05-14 10:52:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:37 -<==      Total: 1
2019-05-14 10:52:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:37 -<==      Total: 1
2019-05-14 10:52:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:37 -<==      Total: 1
2019-05-14 10:52:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:37 -<==      Total: 1
2019-05-14 10:52:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:37 -<==      Total: 1
2019-05-14 10:52:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:37 -<==      Total: 1
2019-05-14 10:52:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:37 -<==      Total: 1
2019-05-14 10:52:37 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:52:37 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:52:37 -<==      Total: 1
2019-05-14 10:52:37 -耗时 : 271
2019-05-14 10:52:37 -返回值 : {ZElecSumPre=1, SumG1ElecLog=80, SElecSumPre=1, SumG2ElecLog=70, CountWSElecLog=1, CountPrehu=99, CountAmount=206, MStotalhu=11, CountWMElecLog=1, SElecPrice=1, G1ElecAmount=100, WSElecPrice=1, WSElecAmount=0, MElecAmount=1, SumG3ElecLog=90, MMElecCostCount=11, CountPreyu=9, CountSElecLog=0, MMElecAmount=1, CountZElecLog=0, MElecPrice=1, MStotalyu=1, SElecCostSum=0, SumSElecLog=0, G1totalhu=11, G3totalhu=11, ZElecSumOwe=0, ZElecAmount=1, G3ElecCostSum=1, WMElecPrice=1, MMtotalhu=11, ZElecPrice=1, SElecCostCount=11, MElecCostSum=1, SumMElecLog=152, G1totalyu=1, G3totalyu=1, MSElecSumOwe=0, WGElecPrice=1, SumMMElecLog=0, SElecSumOwe=0, SElecAmount=0, SumMSElecLog=0, MElecCountPre=9, WSElecSumOwe=0, WMElecSumPre=1, CountMMElecLog=0, G1ElecPrice=1, G3ElecAmount=1, WGElecAmount=0, CountMElecLog=3, SElecCountPre=9, G1ElecSumOwe=0, MMtotalyu=1, WMElecAmount=1, ZElecCostSum=1, MElecCountOwe=2, Mtotalhu=11, G2totalhu=11, WStotalhu=11, G3ElecCountOwe=2, G2ElecCountOwe=2, G3ElecCostCount=11, WSElecSumPre=1, G1ElecCountOwe=2, SElecCountOwe=2, WSElecCostSum=0, Mtotalyu=1, WMElecSumOwe=0, G2totalyu=1, G1ElecSumPre=1, CountG2ElecLog=1, CountG3ElecLog=1, WMtotalyu=1, WGtotalhu=11, SumWSElecLog=80, CountG1ElecLog=1, ZElecCountOwe=2, SumWMElecLog=60, WGElecCostCount=11, G3ElecSumPre=0, G1ElecCostSum=100, WGtotalyu=1, G1ElecCostCount=11, WStotalyu=1, CountOweyu=2, MElecCostCount=11, WGElecCountPre=9, MSElecCostSum=1, WGElecSumOwe=0, WMElecCostSum=1, G2ElecPrice=1, CountLogyu=542, CountOwehu=22, G3ElecSumOwe=1, ZElecCostCount=11, MSElecCostCount=11, CountMSElecLog=0, Ztotalyu=1, G1ElecCountPre=9, G2ElecCountPre=9, WGElecSumPre=1, WGElecCountOwe=2, CountLoghu=9, MMElecPrice=1, ZElecCountPre=9, G3ElecPrice=1, CountAllyu=11, G3ElecCountPre=9, MSElecAmount=1, WGElecCostSum=0, Ztotalhu=11, WMElecCountOwe=2, MMElecCountOwe=2, CountAllhu=121, CountCostyu=206, Stotalhu=11, CountPrice=11, MSElecPrice=1, MSElecCountPre=9, G2ElecSumPre=1, WSElecCountOwe=2, MElecSumOwe=1, G2ElecCostSum=100, CountCosthu=121, MMElecSumOwe=0, WSElecCountPre=9, MMElecCountPre=9, Stotalyu=1, CountWGElecLog=1, MSElecSumPre=1, WSElecCostCount=11, SumZElecLog=0, SumWGElecLog=10, G2ElecCostCount=11, WMElecCountPre=9, G2ElecAmount=100, MSElecCountOwe=2, WMtotalhu=11, MElecSumPre=0, MMElecSumPre=1, MMElecCostSum=1, G2ElecSumOwe=0, WMElecCostCount=11}
2019-05-14 10:53:31 -请求地址 : http://localhost:8081/index
2019-05-14 10:53:31 -HTTP METHOD : GET
2019-05-14 10:53:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-14 10:53:31 -参数 : [{}]
2019-05-14 10:53:31 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-14 10:53:31 -==> Parameters: 1(Long)
2019-05-14 10:53:31 -<==      Total: 49
2019-05-14 10:53:31 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-14 10:53:31 -==> Parameters: 138(Long)
2019-05-14 10:53:31 -<==      Total: 1
2019-05-14 10:53:31 -耗时 : 13
2019-05-14 10:53:31 -返回值 : index_v1
2019-05-14 10:53:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 10:53:31 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 13(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-14 10:53:31.968(Timestamp)
2019-05-14 10:53:32 -<==    Updates: 1
2019-05-14 10:53:32 -请求地址 : http://localhost:8081/main
2019-05-14 10:53:32 -HTTP METHOD : GET
2019-05-14 10:53:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 10:53:32 -参数 : []
2019-05-14 10:53:32 -耗时 : 1
2019-05-14 10:53:32 -返回值 : main
2019-05-14 10:53:32 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-14 10:53:32 -HTTP METHOD : GET
2019-05-14 10:53:32 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-14 10:53:32 -参数 : []
2019-05-14 10:53:32 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-14 10:53:32 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-14 10:53:32 -<==      Total: 0
2019-05-14 10:53:32 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-14 10:53:32 -==> Parameters: 1(Long), 0(String)
2019-05-14 10:53:32 -<==      Total: 1
2019-05-14 10:53:32 -耗时 : 5
2019-05-14 10:53:32 -返回值 : com.bootdo.common.utils.PageUtils@5136379d
2019-05-14 10:53:32 -请求地址 : http://localhost:8081/main
2019-05-14 10:53:32 -HTTP METHOD : GET
2019-05-14 10:53:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 10:53:32 -参数 : []
2019-05-14 10:53:32 -耗时 : 1
2019-05-14 10:53:32 -返回值 : main
2019-05-14 10:53:38 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-14 10:53:38 -HTTP METHOD : GET
2019-05-14 10:53:38 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 10:53:38 -参数 : []
2019-05-14 10:53:38 -耗时 : 0
2019-05-14 10:53:38 -返回值 : charts/tableElecMM
2019-05-14 10:53:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 10:53:38 -HTTP METHOD : GET
2019-05-14 10:53:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 10:53:38 -参数 : [userType]
2019-05-14 10:53:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 10:53:38 -==> Parameters: userType(String)
2019-05-14 10:53:38 -<==      Total: 4
2019-05-14 10:53:38 -耗时 : 3
2019-05-14 10:53:38 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 10:53:43 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-14 10:53:43 -HTTP METHOD : GET
2019-05-14 10:53:43 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-14 10:53:43 -参数 : []
2019-05-14 10:53:43 -耗时 : 1
2019-05-14 10:53:43 -返回值 : system/dept/deptTree
2019-05-14 10:53:44 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-14 10:53:44 -HTTP METHOD : GET
2019-05-14 10:53:44 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-14 10:53:44 -参数 : []
2019-05-14 10:53:44 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-14 10:53:44 -==> Parameters: 
2019-05-14 10:53:44 -<==      Total: 3
2019-05-14 10:53:44 -耗时 : 3
2019-05-14 10:53:44 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-14 10:53:49 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-05-14 10:53:49 -HTTP METHOD : POST
2019-05-14 10:53:49 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 10:53:49 -参数 : [com.bootdo.elec.vo.ElecVo@58361cc5, com.bootdo.moneyLog.vo.ElecLogVo@51e36ef7]
2019-05-14 10:53:49 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:49 -<==      Total: 1
2019-05-14 10:53:49 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:53:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:50 -<==      Total: 1
2019-05-14 10:53:50 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:50 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:50 -<==      Total: 1
2019-05-14 10:53:50 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:53:50 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:50 -<==      Total: 1
2019-05-14 10:53:50 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:50 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:50 -<==      Total: 1
2019-05-14 10:53:50 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:53:50 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:50 -<==      Total: 1
2019-05-14 10:53:50 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:50 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:50 -<==      Total: 1
2019-05-14 10:53:50 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:50 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:50 -<==      Total: 1
2019-05-14 10:53:50 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:50 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:50 -<==      Total: 1
2019-05-14 10:53:50 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:53:50 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:50 -<==      Total: 1
2019-05-14 10:53:50 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:50 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:50 -<==      Total: 1
2019-05-14 10:53:50 -==>  Preparing: SELECT ifnull(ifnull(ifnull(COUNT(ID),0),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:50 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:50 -<==      Total: 1
2019-05-14 10:53:50 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:50 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:50 -<==      Total: 1
2019-05-14 10:53:50 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:50 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:50 -<==      Total: 1
2019-05-14 10:53:50 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:50 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:50 -<==      Total: 1
2019-05-14 10:53:50 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:50 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:50 -<==      Total: 1
2019-05-14 10:53:50 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:50 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:50 -<==      Total: 1
2019-05-14 10:53:50 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:50 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:50 -<==      Total: 1
2019-05-14 10:53:50 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:50 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:50 -<==      Total: 1
2019-05-14 10:53:50 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:50 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:50 -<==      Total: 1
2019-05-14 10:53:50 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:50 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:50 -<==      Total: 1
2019-05-14 10:53:50 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:50 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:50 -<==      Total: 1
2019-05-14 10:53:50 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:50 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:50 -<==      Total: 1
2019-05-14 10:53:50 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:50 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:50 -<==      Total: 1
2019-05-14 10:53:50 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:50 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:50 -<==      Total: 1
2019-05-14 10:53:50 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:50 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:50 -<==      Total: 1
2019-05-14 10:53:50 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:50 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:50 -<==      Total: 1
2019-05-14 10:53:50 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:50 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:50 -<==      Total: 1
2019-05-14 10:53:50 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:50 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:50 -<==      Total: 1
2019-05-14 10:53:50 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:50 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:50 -<==      Total: 1
2019-05-14 10:53:50 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:50 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:50 -<==      Total: 1
2019-05-14 10:53:50 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:50 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:50 -<==      Total: 1
2019-05-14 10:53:50 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:53:50 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:53:50 -<==      Total: 1
2019-05-14 10:53:50 -耗时 : 219
2019-05-14 10:53:50 -返回值 : {ZElecSumPre=1, SumG1ElecLog=80, SElecSumPre=1, SumG2ElecLog=70, CountWSElecLog=1, CountPrehu=99, CountAmount=206, MStotalhu=11, CountWMElecLog=1, SElecPrice=1, G1ElecAmount=100, WSElecPrice=1, WSElecAmount=0, MElecAmount=1, SumG3ElecLog=90, MMElecCostCount=11, CountPreyu=9, CountSElecLog=0, MMElecAmount=1, CountZElecLog=0, MElecPrice=1, MStotalyu=1, SElecCostSum=0, SumSElecLog=0, G1totalhu=11, G3totalhu=11, ZElecSumOwe=0, ZElecAmount=1, G3ElecCostSum=1, WMElecPrice=1, MMtotalhu=11, ZElecPrice=1, SElecCostCount=11, MElecCostSum=1, SumMElecLog=152, G1totalyu=1, G3totalyu=1, MSElecSumOwe=0, WGElecPrice=1, SumMMElecLog=0, SElecSumOwe=0, SElecAmount=0, SumMSElecLog=0, MElecCountPre=9, WSElecSumOwe=0, WMElecSumPre=1, CountMMElecLog=0, G1ElecPrice=1, G3ElecAmount=1, WGElecAmount=0, CountMElecLog=3, SElecCountPre=9, G1ElecSumOwe=0, MMtotalyu=1, WMElecAmount=1, ZElecCostSum=1, MElecCountOwe=2, Mtotalhu=11, G2totalhu=11, WStotalhu=11, G3ElecCountOwe=2, G2ElecCountOwe=2, G3ElecCostCount=11, WSElecSumPre=1, G1ElecCountOwe=2, SElecCountOwe=2, WSElecCostSum=0, Mtotalyu=1, WMElecSumOwe=0, G2totalyu=1, G1ElecSumPre=1, CountG2ElecLog=1, CountG3ElecLog=1, WMtotalyu=1, WGtotalhu=11, SumWSElecLog=80, CountG1ElecLog=1, ZElecCountOwe=2, SumWMElecLog=60, WGElecCostCount=11, G3ElecSumPre=0, G1ElecCostSum=100, WGtotalyu=1, G1ElecCostCount=11, WStotalyu=1, CountOweyu=2, MElecCostCount=11, WGElecCountPre=9, MSElecCostSum=1, WGElecSumOwe=0, WMElecCostSum=1, G2ElecPrice=1, CountLogyu=542, CountOwehu=22, G3ElecSumOwe=1, ZElecCostCount=11, MSElecCostCount=11, CountMSElecLog=0, Ztotalyu=1, G1ElecCountPre=9, G2ElecCountPre=9, WGElecSumPre=1, WGElecCountOwe=2, CountLoghu=9, MMElecPrice=1, ZElecCountPre=9, G3ElecPrice=1, CountAllyu=11, G3ElecCountPre=9, MSElecAmount=1, WGElecCostSum=0, Ztotalhu=11, WMElecCountOwe=2, MMElecCountOwe=2, CountAllhu=121, CountCostyu=206, Stotalhu=11, CountPrice=11, MSElecPrice=1, MSElecCountPre=9, G2ElecSumPre=1, WSElecCountOwe=2, MElecSumOwe=1, G2ElecCostSum=100, CountCosthu=121, MMElecSumOwe=0, WSElecCountPre=9, MMElecCountPre=9, Stotalyu=1, CountWGElecLog=1, MSElecSumPre=1, WSElecCostCount=11, SumZElecLog=0, SumWGElecLog=10, G2ElecCostCount=11, WMElecCountPre=9, G2ElecAmount=100, MSElecCountOwe=2, WMtotalhu=11, MElecSumPre=0, MMElecSumPre=1, MMElecCostSum=1, G2ElecSumOwe=0, WMElecCostCount=11}
2019-05-14 10:53:52 -请求地址 : http://localhost:8081/getVerify
2019-05-14 10:53:52 -HTTP METHOD : GET
2019-05-14 10:53:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-14 10:53:52 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5dde1bb4, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6066c85b]
2019-05-14 10:53:52 -5750
2019-05-14 10:53:52 -耗时 : 28
2019-05-14 10:53:52 -返回值 : null
2019-05-14 10:54:04 -请求地址 : http://localhost:8081/login
2019-05-14 10:54:04 -HTTP METHOD : POST
2019-05-14 10:54:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-14 10:54:04 -参数 : [admin, 111111, 5750, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6ad5b942]
2019-05-14 10:54:04 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-14 10:54:04 -==> Parameters: admin(String)
2019-05-14 10:54:04 -<==      Total: 1
2019-05-14 10:54:04 -耗时 : 4
2019-05-14 10:54:04 -返回值 : {msg=操作成功, code=0}
2019-05-14 10:54:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 10:54:04 -==> Parameters: 1(Long), admin(String), 登录(String), 5(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-14 10:54:04.093(Timestamp)
2019-05-14 10:54:04 -请求地址 : http://localhost:8081/index
2019-05-14 10:54:04 -HTTP METHOD : GET
2019-05-14 10:54:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-14 10:54:04 -参数 : [{}]
2019-05-14 10:54:04 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-14 10:54:04 -==> Parameters: 1(Long)
2019-05-14 10:54:04 -<==      Total: 49
2019-05-14 10:54:04 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-14 10:54:04 -==> Parameters: 138(Long)
2019-05-14 10:54:04 -<==      Total: 1
2019-05-14 10:54:04 -耗时 : 19
2019-05-14 10:54:04 -返回值 : index_v1
2019-05-14 10:54:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 10:54:04 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-14 10:54:04.136(Timestamp)
2019-05-14 10:54:04 -请求地址 : http://localhost:8081/main
2019-05-14 10:54:04 -HTTP METHOD : GET
2019-05-14 10:54:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 10:54:04 -参数 : []
2019-05-14 10:54:04 -耗时 : 0
2019-05-14 10:54:04 -返回值 : main
2019-05-14 10:54:04 -<==    Updates: 1
2019-05-14 10:54:04 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-14 10:54:04 -HTTP METHOD : GET
2019-05-14 10:54:04 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-14 10:54:04 -参数 : []
2019-05-14 10:54:04 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-14 10:54:04 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-14 10:54:04 -<==      Total: 0
2019-05-14 10:54:04 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-14 10:54:04 -==> Parameters: 1(Long), 0(String)
2019-05-14 10:54:04 -<==      Total: 1
2019-05-14 10:54:04 -耗时 : 4
2019-05-14 10:54:04 -返回值 : com.bootdo.common.utils.PageUtils@75636b63
2019-05-14 10:54:04 -<==    Updates: 1
2019-05-14 10:54:04 -请求地址 : http://localhost:8081/main
2019-05-14 10:54:04 -HTTP METHOD : GET
2019-05-14 10:54:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 10:54:04 -参数 : []
2019-05-14 10:54:04 -耗时 : 0
2019-05-14 10:54:04 -返回值 : main
2019-05-14 10:55:34 -请求地址 : http://localhost:8081/index
2019-05-14 10:55:34 -HTTP METHOD : GET
2019-05-14 10:55:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-14 10:55:34 -参数 : [{}]
2019-05-14 10:55:34 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-14 10:55:34 -==> Parameters: 1(Long)
2019-05-14 10:55:34 -<==      Total: 49
2019-05-14 10:55:34 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-14 10:55:34 -==> Parameters: 138(Long)
2019-05-14 10:55:34 -<==      Total: 1
2019-05-14 10:55:34 -耗时 : 10
2019-05-14 10:55:34 -返回值 : index_v1
2019-05-14 10:55:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 10:55:34 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 10(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-14 10:55:34.537(Timestamp)
2019-05-14 10:55:34 -请求地址 : http://localhost:8081/main
2019-05-14 10:55:34 -HTTP METHOD : GET
2019-05-14 10:55:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 10:55:34 -参数 : []
2019-05-14 10:55:34 -耗时 : 0
2019-05-14 10:55:34 -返回值 : main
2019-05-14 10:55:34 -<==    Updates: 1
2019-05-14 10:55:34 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-14 10:55:34 -HTTP METHOD : GET
2019-05-14 10:55:34 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-14 10:55:34 -参数 : []
2019-05-14 10:55:34 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-14 10:55:34 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-14 10:55:34 -<==      Total: 0
2019-05-14 10:55:34 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-14 10:55:34 -==> Parameters: 1(Long), 0(String)
2019-05-14 10:55:34 -<==      Total: 1
2019-05-14 10:55:34 -耗时 : 18
2019-05-14 10:55:34 -返回值 : com.bootdo.common.utils.PageUtils@393adf46
2019-05-14 10:55:34 -请求地址 : http://localhost:8081/main
2019-05-14 10:55:34 -HTTP METHOD : GET
2019-05-14 10:55:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 10:55:34 -参数 : []
2019-05-14 10:55:34 -耗时 : 1
2019-05-14 10:55:34 -返回值 : main
2019-05-14 10:55:38 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-14 10:55:38 -==> Parameters: 1(Long)
2019-05-14 10:55:38 -<==      Total: 93
2019-05-14 10:55:38 -请求地址 : http://localhost:8081/charts/countMM
2019-05-14 10:55:38 -HTTP METHOD : GET
2019-05-14 10:55:38 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-05-14 10:55:38 -参数 : []
2019-05-14 10:55:38 -耗时 : 0
2019-05-14 10:55:38 -返回值 : charts/countMM
2019-05-14 10:55:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 10:55:38 -HTTP METHOD : GET
2019-05-14 10:55:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 10:55:38 -参数 : [userType]
2019-05-14 10:55:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 10:55:38 -==> Parameters: userType(String)
2019-05-14 10:55:38 -<==      Total: 4
2019-05-14 10:55:38 -耗时 : 2
2019-05-14 10:55:38 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 10:55:40 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-14 10:55:40 -HTTP METHOD : GET
2019-05-14 10:55:40 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 10:55:40 -参数 : []
2019-05-14 10:55:40 -耗时 : 0
2019-05-14 10:55:40 -返回值 : charts/tableElecMM
2019-05-14 10:55:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 10:55:40 -HTTP METHOD : GET
2019-05-14 10:55:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 10:55:40 -参数 : [userType]
2019-05-14 10:55:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 10:55:40 -==> Parameters: userType(String)
2019-05-14 10:55:40 -<==      Total: 4
2019-05-14 10:55:40 -耗时 : 3
2019-05-14 10:55:40 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 10:55:44 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-14 10:55:44 -HTTP METHOD : GET
2019-05-14 10:55:44 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-14 10:55:44 -参数 : []
2019-05-14 10:55:44 -耗时 : 0
2019-05-14 10:55:44 -返回值 : system/dept/deptTree
2019-05-14 10:55:44 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-14 10:55:44 -HTTP METHOD : GET
2019-05-14 10:55:44 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-14 10:55:44 -参数 : []
2019-05-14 10:55:44 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-14 10:55:44 -==> Parameters: 
2019-05-14 10:55:44 -<==      Total: 3
2019-05-14 10:55:44 -耗时 : 1
2019-05-14 10:55:44 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-14 10:55:49 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-05-14 10:55:49 -HTTP METHOD : POST
2019-05-14 10:55:49 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 10:55:49 -参数 : [com.bootdo.elec.vo.ElecVo@2644ddaa, com.bootdo.moneyLog.vo.ElecLogVo@8a2865b]
2019-05-14 10:55:49 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(ifnull(ifnull(COUNT(ID),0),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-14 10:55:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 10:55:49 -<==      Total: 1
2019-05-14 10:55:49 -耗时 : 174
2019-05-14 10:55:49 -返回值 : {ZElecSumPre=1, SumG1ElecLog=80, SElecSumPre=1, SumG2ElecLog=70, CountWSElecLog=1, CountPrehu=99, CountAmount=206, MStotalhu=11, CountWMElecLog=1, SElecPrice=1, G1ElecAmount=100, WSElecPrice=1, WSElecAmount=0, MElecAmount=1, SumG3ElecLog=90, MMElecCostCount=11, CountPreyu=9, CountSElecLog=0, MMElecAmount=1, CountZElecLog=0, MElecPrice=1, MStotalyu=1, SElecCostSum=0, SumSElecLog=0, G1totalhu=11, G3totalhu=11, ZElecSumOwe=0, ZElecAmount=1, G3ElecCostSum=1, WMElecPrice=1, MMtotalhu=11, ZElecPrice=1, SElecCostCount=11, MElecCostSum=1, SumMElecLog=152, G1totalyu=1, G3totalyu=1, MSElecSumOwe=0, WGElecPrice=1, SumMMElecLog=0, SElecSumOwe=0, SElecAmount=0, SumMSElecLog=0, MElecCountPre=9, WSElecSumOwe=0, WMElecSumPre=1, CountMMElecLog=0, G1ElecPrice=1, G3ElecAmount=1, WGElecAmount=0, CountMElecLog=3, SElecCountPre=9, G1ElecSumOwe=0, MMtotalyu=1, WMElecAmount=1, ZElecCostSum=1, MElecCountOwe=2, Mtotalhu=11, G2totalhu=11, WStotalhu=11, G3ElecCountOwe=2, G2ElecCountOwe=2, G3ElecCostCount=11, WSElecSumPre=1, G1ElecCountOwe=2, SElecCountOwe=2, WSElecCostSum=0, Mtotalyu=1, WMElecSumOwe=0, G2totalyu=1, G1ElecSumPre=1, CountG2ElecLog=1, CountG3ElecLog=1, WMtotalyu=1, WGtotalhu=11, SumWSElecLog=80, CountG1ElecLog=1, ZElecCountOwe=2, SumWMElecLog=60, WGElecCostCount=11, G3ElecSumPre=0, G1ElecCostSum=100, WGtotalyu=1, G1ElecCostCount=11, WStotalyu=1, CountOweyu=2, MElecCostCount=11, WGElecCountPre=9, MSElecCostSum=1, WGElecSumOwe=0, WMElecCostSum=1, G2ElecPrice=1, CountLogyu=542, CountOwehu=22, G3ElecSumOwe=1, ZElecCostCount=11, MSElecCostCount=11, CountMSElecLog=0, Ztotalyu=1, G1ElecCountPre=9, G2ElecCountPre=9, WGElecSumPre=1, WGElecCountOwe=2, CountLoghu=9, MMElecPrice=1, ZElecCountPre=9, G3ElecPrice=1, CountAllyu=11, G3ElecCountPre=9, MSElecAmount=1, WGElecCostSum=0, Ztotalhu=11, WMElecCountOwe=2, MMElecCountOwe=2, CountAllhu=121, CountCostyu=206, Stotalhu=11, CountPrice=11, MSElecPrice=1, MSElecCountPre=9, G2ElecSumPre=1, WSElecCountOwe=2, MElecSumOwe=1, G2ElecCostSum=100, CountCosthu=121, MMElecSumOwe=0, WSElecCountPre=9, MMElecCountPre=9, Stotalyu=1, CountWGElecLog=1, MSElecSumPre=1, WSElecCostCount=11, SumZElecLog=0, SumWGElecLog=10, G2ElecCostCount=11, WMElecCountPre=9, G2ElecAmount=100, MSElecCountOwe=2, WMtotalhu=11, MElecSumPre=0, MMElecSumPre=1, MMElecCostSum=1, G2ElecSumOwe=0, WMElecCostCount=11}
2019-05-14 10:57:34 -请求地址 : http://localhost:8081/index
2019-05-14 10:57:34 -HTTP METHOD : GET
2019-05-14 10:57:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-14 10:57:34 -参数 : [{}]
2019-05-14 10:57:34 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-14 10:57:34 -==> Parameters: 1(Long)
2019-05-14 10:57:34 -<==      Total: 49
2019-05-14 10:57:34 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-14 10:57:34 -==> Parameters: 138(Long)
2019-05-14 10:57:34 -<==      Total: 1
2019-05-14 10:57:34 -耗时 : 12
2019-05-14 10:57:34 -返回值 : index_v1
2019-05-14 10:57:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 10:57:34 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 12(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-14 10:57:34.991(Timestamp)
2019-05-14 10:57:35 -请求地址 : http://localhost:8081/main
2019-05-14 10:57:35 -HTTP METHOD : GET
2019-05-14 10:57:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 10:57:35 -参数 : []
2019-05-14 10:57:35 -耗时 : 0
2019-05-14 10:57:35 -返回值 : main
2019-05-14 10:57:35 -<==    Updates: 1
2019-05-14 10:57:35 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-14 10:57:35 -HTTP METHOD : GET
2019-05-14 10:57:35 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-14 10:57:35 -参数 : []
2019-05-14 10:57:35 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-14 10:57:35 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-14 10:57:35 -<==      Total: 0
2019-05-14 10:57:35 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-14 10:57:35 -==> Parameters: 1(Long), 0(String)
2019-05-14 10:57:35 -<==      Total: 1
2019-05-14 10:57:35 -耗时 : 6
2019-05-14 10:57:35 -返回值 : com.bootdo.common.utils.PageUtils@2559f8a6
2019-05-14 10:57:35 -请求地址 : http://localhost:8081/main
2019-05-14 10:57:35 -HTTP METHOD : GET
2019-05-14 10:57:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 10:57:35 -参数 : []
2019-05-14 10:57:35 -耗时 : 0
2019-05-14 10:57:35 -返回值 : main
2019-05-14 10:59:10 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-05-14 10:59:10 -HTTP METHOD : GET
2019-05-14 10:59:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-05-14 10:59:10 -参数 : []
2019-05-14 10:59:10 -耗时 : 1
2019-05-14 10:59:10 -返回值 : /moneyLog/elecLog/elecLog
2019-05-14 10:59:10 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 10:59:10 -HTTP METHOD : GET
2019-05-14 10:59:10 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 10:59:10 -参数 : [userType]
2019-05-14 10:59:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 10:59:10 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-14 10:59:10 -HTTP METHOD : GET
2019-05-14 10:59:10 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 10:59:10 -参数 : [elecType]
2019-05-14 10:59:10 -==> Parameters: userType(String)
2019-05-14 10:59:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 10:59:10 -==> Parameters: elecType(String)
2019-05-14 10:59:10 -<==      Total: 4
2019-05-14 10:59:10 -耗时 : 3
2019-05-14 10:59:10 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 10:59:10 -<==      Total: 11
2019-05-14 10:59:10 -耗时 : 3
2019-05-14 10:59:10 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 10:59:10 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-14 10:59:10 -HTTP METHOD : GET
2019-05-14 10:59:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-14 10:59:10 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-05-14 10:59:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-05-14 10:59:10 -==> Parameters: 0(Integer), 10(Integer)
2019-05-14 10:59:10 -<==      Total: 10
2019-05-14 10:59:10 -==>  Preparing: select count(*) from elec_log 
2019-05-14 10:59:10 -==> Parameters: 
2019-05-14 10:59:10 -<==      Total: 1
2019-05-14 10:59:10 -耗时 : 23
2019-05-14 10:59:10 -返回值 : com.bootdo.common.utils.PageUtils@3af790ef
2019-05-14 10:59:11 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-05-14 10:59:11 -HTTP METHOD : GET
2019-05-14 10:59:11 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-05-14 10:59:11 -参数 : []
2019-05-14 10:59:11 -耗时 : 0
2019-05-14 10:59:11 -返回值 : /moneyList/moneyList
2019-05-14 10:59:15 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-14 10:59:15 -HTTP METHOD : GET
2019-05-14 10:59:15 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-14 10:59:15 -参数 : []
2019-05-14 10:59:15 -耗时 : 1
2019-05-14 10:59:15 -返回值 : system/dept/deptTree
2019-05-14 10:59:15 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-14 10:59:15 -HTTP METHOD : GET
2019-05-14 10:59:15 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-14 10:59:15 -参数 : []
2019-05-14 10:59:15 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-14 10:59:15 -==> Parameters: 
2019-05-14 10:59:15 -<==      Total: 3
2019-05-14 10:59:15 -耗时 : 2
2019-05-14 10:59:15 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-14 10:59:18 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-05-14 10:59:18 -HTTP METHOD : POST
2019-05-14 10:59:18 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-05-14 10:59:18 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@1614a2d6]
2019-05-14 10:59:18 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-05-14 10:59:18 -==> Parameters: 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String)
2019-05-14 10:59:18 -<==      Total: 3
2019-05-14 10:59:18 -耗时 : 170
2019-05-14 10:59:18 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@7c436117, com.bootdo.moneyList.damain.MoneyListDO@49b80daa, com.bootdo.moneyList.damain.MoneyListDO@e8c4ff7]
2019-05-14 10:59:23 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-05-14 10:59:23 -HTTP METHOD : POST
2019-05-14 10:59:23 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-05-14 10:59:23 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@38a7942d]
2019-05-14 10:59:23 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-05-14 10:59:23 -==> Parameters: 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String)
2019-05-14 10:59:23 -<==      Total: 3
2019-05-14 10:59:23 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? 
2019-05-14 10:59:23 -==> Parameters: 1-0001(String), 2019-03(String), 2(String)
2019-05-14 10:59:23 -<==      Total: 0
2019-05-14 10:59:23 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? 
2019-05-14 10:59:23 -==> Parameters: 1-0001(String), 2019-03(String), 2(String)
2019-05-14 10:59:23 -<==      Total: 1
2019-05-14 10:59:23 -==>  Preparing: select wa.water_price,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? 
2019-05-14 10:59:23 -==> Parameters: 1-0001(String), 2019-03(String), 2(String)
2019-05-14 10:59:23 -<==      Total: 1
2019-05-14 10:59:23 -==>  Preparing: update heat set heat_sum = heat_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-05-14 10:59:23 -==> Parameters: 1(String), A(String), 2019-03(String), 2(String), 1-0001(String)
2019-05-14 10:59:23 -<==    Updates: 1
2019-05-14 10:59:23 -==>  Preparing: insert into heat_log ( `user_id`, `user_name`, `user_type`, `user_org`, `heat_type`, `heat_money`, `heat_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 10:59:23 -==> Parameters: 1-0001(String), null, A(String), 2(String), 1(String), 1(BigDecimal), 2019-05-14 10:59:23.829(Timestamp), 2019-03(String), 1(Long), 2019-05-14 10:59:23.829(Timestamp), 1(Long), null
2019-05-14 10:59:24 -{conn-10001, pstmt-21501} execute error. insert into heat_log
		(	
			`user_id`, 
			`user_name`, 
			`user_type`, 
			`user_org`, 
			`heat_type`, 
			`heat_money`, 
			`heat_date`, 
			`create_time`, 
			`create_by`, 
			`update_time`, 
			`update_by`, 
			`remark`
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'user_name' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy173.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor217.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.save(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.save(HeatLogServiceImpl.java:47)
	at com.bootdo.moneyList.controller.MoneyListController.updateMoney(MoneyListController.java:298)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor144.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$98e7aef6.updateMoney(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-14 10:59:24 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-05-14 10:59:24 -SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2019-05-14 10:59:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 10:59:24 -
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'user_name' cannot be null
### The error may involve com.bootdo.moneyLog.dao.HeatLogDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into heat_log   (     `user_id`,     `user_name`,     `user_type`,     `user_org`,     `heat_type`,     `heat_money`,     `heat_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'user_name' cannot be null
; ]; Column 'user_name' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'user_name' cannot be null
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'user_name' cannot be null
### The error may involve com.bootdo.moneyLog.dao.HeatLogDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into heat_log   (     `user_id`,     `user_name`,     `user_type`,     `user_org`,     `heat_type`,     `heat_money`,     `heat_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'user_name' cannot be null
; ]; Column 'user_name' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'user_name' cannot be null
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:87)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.save(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.save(HeatLogServiceImpl.java:47)
	at com.bootdo.moneyList.controller.MoneyListController.updateMoney(MoneyListController.java:298)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor144.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$98e7aef6.updateMoney(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'user_name' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy173.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor217.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
2019-05-14 10:59:24 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/updateMoney(String), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'user_name' cannot be null
### The error may involve com.bootdo.moneyLog.dao.HeatLogDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into heat_log   (     `user_id`,     `user_name`,     `user_type`,     `user_org`,     `heat_type`,     `heat_money`,     `heat_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'user_name' cannot be null
; ]; Column 'user_name' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'user_name' cannot be null(String), null, 2019-05-14 10:59:24.296(Timestamp)
2019-05-14 10:59:24 -<==    Updates: 1
2019-05-14 10:59:33 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-05-14 10:59:33 -HTTP METHOD : POST
2019-05-14 10:59:33 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-05-14 10:59:33 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@215530a1]
2019-05-14 10:59:33 -==>  Preparing: select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type as moneyType, elec_price as userPrice, elec_amount as userArea, elec_cost as userCost, elec_Sum as userSum from ELEC WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type as moneyType, heat_price as userPrice, heat_area as userArea, heat_cost as userCost, heat_Sum as userSum from heat WHERE create_time = ? and user_org = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, user_type, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type as moneyType, water_price as userPrice, water_price as userArea, water_price as userCost, water_Sum as userSum from water WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-05-14 10:59:33 -==> Parameters: 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String), 2019-03(String), 2(String), 1-0001(String)
2019-05-14 10:59:33 -<==      Total: 3
2019-05-14 10:59:33 -==>  Preparing: select el.start,el.end,el.hu,el.elec_amount,el.elec_cost,el.elec_price,el.elec_sum from elec el WHERE el.user_Id = ? and el.create_time = ? and el.user_org = ? 
2019-05-14 10:59:33 -==> Parameters: 1-0001(String), 2019-03(String), 2(String)
2019-05-14 10:59:33 -<==      Total: 0
2019-05-14 10:59:33 -==>  Preparing: select he.heat_area, he.heat_cost, he.heat_price, he.heat_sum from heat he WHERE he.user_Id = ? and he.create_time = ? and he.user_org = ? 
2019-05-14 10:59:33 -==> Parameters: 1-0001(String), 2019-03(String), 2(String)
2019-05-14 10:59:33 -<==      Total: 1
2019-05-14 10:59:33 -==>  Preparing: select wa.water_price,wa.water_sum from water wa WHERE wa.user_Id = ? and wa.create_time = ? and wa.user_org = ? 
2019-05-14 10:59:33 -==> Parameters: 1-0001(String), 2019-03(String), 2(String)
2019-05-14 10:59:33 -<==      Total: 1
2019-05-14 10:59:33 -==>  Preparing: update heat set heat_sum = heat_sum + ?,user_type=? WHERE create_time = ? and user_org = ? and user_Id = ? 
2019-05-14 10:59:33 -==> Parameters: 20(String), A(String), 2019-03(String), 2(String), 1-0001(String)
2019-05-14 10:59:34 -<==    Updates: 1
2019-05-14 10:59:34 -==>  Preparing: insert into heat_log ( `user_id`, `user_name`, `user_type`, `user_org`, `heat_type`, `heat_money`, `heat_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 10:59:34 -==> Parameters: 1-0001(String), null, A(String), 2(String), 1(String), 20(BigDecimal), 2019-05-14 10:59:33.918(Timestamp), 2019-03(String), 1(Long), 2019-05-14 10:59:33.918(Timestamp), 1(Long), null
2019-05-14 10:59:34 -{conn-10001, pstmt-21502} execute error. insert into heat_log
		(	
			`user_id`, 
			`user_name`, 
			`user_type`, 
			`user_org`, 
			`heat_type`, 
			`heat_money`, 
			`heat_date`, 
			`create_time`, 
			`create_by`, 
			`update_time`, 
			`update_by`, 
			`remark`
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'user_name' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy173.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor217.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.save(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.save(HeatLogServiceImpl.java:47)
	at com.bootdo.moneyList.controller.MoneyListController.updateMoney(MoneyListController.java:298)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor144.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$98e7aef6.updateMoney(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-14 10:59:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 10:59:34 -
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'user_name' cannot be null
### The error may involve com.bootdo.moneyLog.dao.HeatLogDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into heat_log   (     `user_id`,     `user_name`,     `user_type`,     `user_org`,     `heat_type`,     `heat_money`,     `heat_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'user_name' cannot be null
; ]; Column 'user_name' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'user_name' cannot be null
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'user_name' cannot be null
### The error may involve com.bootdo.moneyLog.dao.HeatLogDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into heat_log   (     `user_id`,     `user_name`,     `user_type`,     `user_org`,     `heat_type`,     `heat_money`,     `heat_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'user_name' cannot be null
; ]; Column 'user_name' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'user_name' cannot be null
	at org.springframework.jdbc.support.SQLExceptionSubclassTranslator.doTranslate(SQLExceptionSubclassTranslator.java:87)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.save(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.save(HeatLogServiceImpl.java:47)
	at com.bootdo.moneyList.controller.MoneyListController.updateMoney(MoneyListController.java:298)
	at com.bootdo.moneyList.controller.MoneyListController$$FastClassBySpringCGLIB$$8f8aea1c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor144.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListController$$EnhancerBySpringCGLIB$$98e7aef6.updateMoney(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'user_name' cannot be null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy173.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor217.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
2019-05-14 10:59:34 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyList/updateMoney(String), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'user_name' cannot be null
### The error may involve com.bootdo.moneyLog.dao.HeatLogDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into heat_log   (     `user_id`,     `user_name`,     `user_type`,     `user_org`,     `heat_type`,     `heat_money`,     `heat_date`,     `create_time`,     `create_by`,     `update_time`,     `update_by`,     `remark`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'user_name' cannot be null
; ]; Column 'user_name' cannot be null; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Column 'user_name' cannot be null(String), null, 2019-05-14 10:59:34.018(Timestamp)
2019-05-14 10:59:34 -<==    Updates: 1
2019-05-14 11:02:20 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 18 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(18)-CONNECTED(18)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 213], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 35], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 425]
2019-05-14 11:06:10 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-14 11:06:10 -==> Parameters: 1(Long)
2019-05-14 11:06:10 -<==      Total: 93
2019-05-14 11:06:10 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-05-14 11:06:10 -HTTP METHOD : GET
2019-05-14 11:06:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-05-14 11:06:10 -参数 : []
2019-05-14 11:06:10 -耗时 : 0
2019-05-14 11:06:10 -返回值 : /moneyLog/heatLog/heatLog
2019-05-14 11:06:10 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-14 11:06:10 -HTTP METHOD : GET
2019-05-14 11:06:10 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 11:06:10 -参数 : [heatType]
2019-05-14 11:06:10 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 11:06:10 -HTTP METHOD : GET
2019-05-14 11:06:10 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 11:06:10 -参数 : [userType]
2019-05-14 11:06:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 11:06:10 -==> Parameters: heatType(String)
2019-05-14 11:06:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 11:06:10 -==> Parameters: userType(String)
2019-05-14 11:06:10 -<==      Total: 4
2019-05-14 11:06:10 -<==      Total: 4
2019-05-14 11:06:10 -耗时 : 2
2019-05-14 11:06:10 -耗时 : 2
2019-05-14 11:06:10 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 11:06:10 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 11:06:10 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-14 11:06:10 -HTTP METHOD : GET
2019-05-14 11:06:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-14 11:06:10 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-05-14 11:06:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-05-14 11:06:10 -==> Parameters: 0(Integer), 10(Integer)
2019-05-14 11:06:10 -<==      Total: 6
2019-05-14 11:06:10 -==>  Preparing: select count(*) from heat_log 
2019-05-14 11:06:10 -==> Parameters: 
2019-05-14 11:06:10 -<==      Total: 1
2019-05-14 11:06:10 -耗时 : 38
2019-05-14 11:06:10 -返回值 : com.bootdo.common.utils.PageUtils@153b7f8b
2019-05-14 11:06:10 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-05-14 11:06:10 -HTTP METHOD : GET
2019-05-14 11:06:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-05-14 11:06:10 -参数 : []
2019-05-14 11:06:10 -耗时 : 0
2019-05-14 11:06:10 -返回值 : /moneyLog/waterLog/waterLog
2019-05-14 11:06:10 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 11:06:10 -HTTP METHOD : GET
2019-05-14 11:06:10 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 11:06:10 -参数 : [userType]
2019-05-14 11:06:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 11:06:10 -==> Parameters: userType(String)
2019-05-14 11:06:10 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-05-14 11:06:10 -HTTP METHOD : GET
2019-05-14 11:06:10 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 11:06:10 -参数 : [waterType]
2019-05-14 11:06:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 11:06:10 -==> Parameters: waterType(String)
2019-05-14 11:06:10 -<==      Total: 4
2019-05-14 11:06:10 -耗时 : 2
2019-05-14 11:06:10 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 11:06:10 -<==      Total: 2
2019-05-14 11:06:10 -耗时 : 2
2019-05-14 11:06:10 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 11:06:10 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-14 11:06:10 -HTTP METHOD : GET
2019-05-14 11:06:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-14 11:06:10 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-05-14 11:06:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-05-14 11:06:10 -==> Parameters: 0(Integer), 10(Integer)
2019-05-14 11:06:11 -<==      Total: 6
2019-05-14 11:06:11 -==>  Preparing: select count(*) from water_log 
2019-05-14 11:06:11 -==> Parameters: 
2019-05-14 11:06:11 -<==      Total: 1
2019-05-14 11:06:11 -耗时 : 50
2019-05-14 11:06:11 -返回值 : com.bootdo.common.utils.PageUtils@693ac6b1
2019-05-14 11:06:11 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-05-14 11:06:11 -HTTP METHOD : GET
2019-05-14 11:06:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-05-14 11:06:11 -参数 : []
2019-05-14 11:06:11 -耗时 : 0
2019-05-14 11:06:11 -返回值 : /moneyLog/heatLog/heatLog
2019-05-14 11:06:11 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-14 11:06:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 11:06:11 -HTTP METHOD : GET
2019-05-14 11:06:11 -HTTP METHOD : GET
2019-05-14 11:06:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 11:06:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 11:06:11 -参数 : [heatType]
2019-05-14 11:06:11 -参数 : [userType]
2019-05-14 11:06:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 11:06:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 11:06:11 -==> Parameters: userType(String)
2019-05-14 11:06:11 -==> Parameters: heatType(String)
2019-05-14 11:06:11 -<==      Total: 4
2019-05-14 11:06:11 -<==      Total: 4
2019-05-14 11:06:11 -耗时 : 2
2019-05-14 11:06:11 -耗时 : 2
2019-05-14 11:06:11 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 11:06:11 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 11:06:11 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-14 11:06:11 -HTTP METHOD : GET
2019-05-14 11:06:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-14 11:06:11 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-05-14 11:06:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-05-14 11:06:11 -==> Parameters: 0(Integer), 10(Integer)
2019-05-14 11:06:11 -<==      Total: 6
2019-05-14 11:06:11 -==>  Preparing: select count(*) from heat_log 
2019-05-14 11:06:11 -==> Parameters: 
2019-05-14 11:06:11 -<==      Total: 1
2019-05-14 11:06:11 -耗时 : 29
2019-05-14 11:06:11 -返回值 : com.bootdo.common.utils.PageUtils@500cf8d5
2019-05-14 11:06:11 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-05-14 11:06:11 -HTTP METHOD : GET
2019-05-14 11:06:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-05-14 11:06:11 -参数 : []
2019-05-14 11:06:11 -耗时 : 0
2019-05-14 11:06:11 -返回值 : /moneyLog/elecLog/elecLog
2019-05-14 11:06:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 11:06:11 -HTTP METHOD : GET
2019-05-14 11:06:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 11:06:11 -参数 : [userType]
2019-05-14 11:06:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 11:06:11 -==> Parameters: userType(String)
2019-05-14 11:06:11 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-14 11:06:11 -HTTP METHOD : GET
2019-05-14 11:06:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 11:06:11 -参数 : [elecType]
2019-05-14 11:06:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 11:06:11 -==> Parameters: elecType(String)
2019-05-14 11:06:11 -<==      Total: 4
2019-05-14 11:06:11 -耗时 : 2
2019-05-14 11:06:11 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 11:06:11 -<==      Total: 11
2019-05-14 11:06:11 -耗时 : 3
2019-05-14 11:06:11 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 11:06:11 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-14 11:06:11 -HTTP METHOD : GET
2019-05-14 11:06:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-14 11:06:11 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-05-14 11:06:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-05-14 11:06:11 -==> Parameters: 0(Integer), 10(Integer)
2019-05-14 11:06:11 -<==      Total: 10
2019-05-14 11:06:11 -==>  Preparing: select count(*) from elec_log 
2019-05-14 11:06:11 -==> Parameters: 
2019-05-14 11:06:11 -<==      Total: 1
2019-05-14 11:06:11 -耗时 : 5
2019-05-14 11:06:11 -返回值 : com.bootdo.common.utils.PageUtils@14ef15ee
2019-05-14 11:06:12 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-05-14 11:06:12 -HTTP METHOD : GET
2019-05-14 11:06:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-05-14 11:06:12 -参数 : []
2019-05-14 11:06:12 -耗时 : 1
2019-05-14 11:06:12 -返回值 : /moneyLog/heatLog/heatLog
2019-05-14 11:06:12 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 11:06:12 -HTTP METHOD : GET
2019-05-14 11:06:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 11:06:12 -参数 : [userType]
2019-05-14 11:06:12 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-14 11:06:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 11:06:12 -HTTP METHOD : GET
2019-05-14 11:06:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 11:06:12 -参数 : [heatType]
2019-05-14 11:06:12 -==> Parameters: userType(String)
2019-05-14 11:06:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 11:06:12 -==> Parameters: heatType(String)
2019-05-14 11:06:12 -<==      Total: 4
2019-05-14 11:06:12 -耗时 : 3
2019-05-14 11:06:12 -<==      Total: 4
2019-05-14 11:06:12 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 11:06:12 -耗时 : 3
2019-05-14 11:06:12 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 11:06:12 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-14 11:06:12 -HTTP METHOD : GET
2019-05-14 11:06:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-14 11:06:12 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-05-14 11:06:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-05-14 11:06:12 -==> Parameters: 0(Integer), 10(Integer)
2019-05-14 11:06:12 -<==      Total: 6
2019-05-14 11:06:12 -==>  Preparing: select count(*) from heat_log 
2019-05-14 11:06:12 -==> Parameters: 
2019-05-14 11:06:12 -<==      Total: 1
2019-05-14 11:06:12 -耗时 : 11
2019-05-14 11:06:12 -返回值 : com.bootdo.common.utils.PageUtils@1686838f
2019-05-14 11:06:12 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-05-14 11:06:12 -HTTP METHOD : GET
2019-05-14 11:06:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-05-14 11:06:12 -参数 : []
2019-05-14 11:06:12 -耗时 : 1
2019-05-14 11:06:12 -返回值 : /moneyLog/waterLog/waterLog
2019-05-14 11:06:12 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-05-14 11:06:12 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 11:06:12 -HTTP METHOD : GET
2019-05-14 11:06:12 -HTTP METHOD : GET
2019-05-14 11:06:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 11:06:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 11:06:12 -参数 : [waterType]
2019-05-14 11:06:12 -参数 : [userType]
2019-05-14 11:06:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 11:06:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 11:06:12 -==> Parameters: waterType(String)
2019-05-14 11:06:12 -==> Parameters: userType(String)
2019-05-14 11:06:12 -<==      Total: 2
2019-05-14 11:06:12 -<==      Total: 4
2019-05-14 11:06:12 -耗时 : 3
2019-05-14 11:06:12 -耗时 : 3
2019-05-14 11:06:12 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 11:06:12 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 11:06:12 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-14 11:06:12 -HTTP METHOD : GET
2019-05-14 11:06:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-14 11:06:12 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-05-14 11:06:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-05-14 11:06:12 -==> Parameters: 0(Integer), 10(Integer)
2019-05-14 11:06:12 -<==      Total: 6
2019-05-14 11:06:12 -==>  Preparing: select count(*) from water_log 
2019-05-14 11:06:12 -==> Parameters: 
2019-05-14 11:06:12 -<==      Total: 1
2019-05-14 11:06:12 -耗时 : 72
2019-05-14 11:06:12 -返回值 : com.bootdo.common.utils.PageUtils@700d119f
2019-05-14 11:06:13 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-05-14 11:06:13 -HTTP METHOD : GET
2019-05-14 11:06:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-05-14 11:06:13 -参数 : []
2019-05-14 11:06:13 -耗时 : 0
2019-05-14 11:06:13 -返回值 : /moneyLog/heatLog/heatLog
2019-05-14 11:06:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 11:06:13 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-14 11:06:13 -HTTP METHOD : GET
2019-05-14 11:06:13 -HTTP METHOD : GET
2019-05-14 11:06:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 11:06:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 11:06:13 -参数 : [userType]
2019-05-14 11:06:13 -参数 : [heatType]
2019-05-14 11:06:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 11:06:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 11:06:13 -==> Parameters: userType(String)
2019-05-14 11:06:13 -==> Parameters: heatType(String)
2019-05-14 11:06:13 -<==      Total: 4
2019-05-14 11:06:13 -<==      Total: 4
2019-05-14 11:06:13 -耗时 : 2
2019-05-14 11:06:13 -耗时 : 2
2019-05-14 11:06:13 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 11:06:13 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 11:06:13 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-14 11:06:13 -HTTP METHOD : GET
2019-05-14 11:06:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-14 11:06:13 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-05-14 11:06:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-05-14 11:06:13 -==> Parameters: 0(Integer), 10(Integer)
2019-05-14 11:06:13 -<==      Total: 6
2019-05-14 11:06:13 -==>  Preparing: select count(*) from heat_log 
2019-05-14 11:06:13 -==> Parameters: 
2019-05-14 11:06:13 -<==      Total: 1
2019-05-14 11:06:13 -耗时 : 3
2019-05-14 11:06:13 -返回值 : com.bootdo.common.utils.PageUtils@7d77d03c
2019-05-14 11:06:13 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-05-14 11:06:13 -HTTP METHOD : GET
2019-05-14 11:06:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-05-14 11:06:13 -参数 : []
2019-05-14 11:06:13 -耗时 : 0
2019-05-14 11:06:13 -返回值 : /moneyLog/elecLog/elecLog
2019-05-14 11:06:13 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-14 11:06:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 11:06:13 -HTTP METHOD : GET
2019-05-14 11:06:13 -HTTP METHOD : GET
2019-05-14 11:06:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 11:06:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 11:06:13 -参数 : [elecType]
2019-05-14 11:06:13 -参数 : [userType]
2019-05-14 11:06:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 11:06:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 11:06:13 -==> Parameters: elecType(String)
2019-05-14 11:06:13 -==> Parameters: userType(String)
2019-05-14 11:06:13 -<==      Total: 4
2019-05-14 11:06:13 -耗时 : 2
2019-05-14 11:06:13 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 11:06:13 -<==      Total: 11
2019-05-14 11:06:13 -耗时 : 2
2019-05-14 11:06:13 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 11:06:13 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-14 11:06:13 -HTTP METHOD : GET
2019-05-14 11:06:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-14 11:06:13 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-05-14 11:06:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-05-14 11:06:13 -==> Parameters: 0(Integer), 10(Integer)
2019-05-14 11:06:13 -<==      Total: 10
2019-05-14 11:06:13 -==>  Preparing: select count(*) from elec_log 
2019-05-14 11:06:13 -==> Parameters: 
2019-05-14 11:06:13 -<==      Total: 1
2019-05-14 11:06:13 -耗时 : 4
2019-05-14 11:06:13 -返回值 : com.bootdo.common.utils.PageUtils@35f09874
2019-05-14 11:06:14 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-05-14 11:06:14 -HTTP METHOD : GET
2019-05-14 11:06:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-05-14 11:06:14 -参数 : []
2019-05-14 11:06:14 -耗时 : 1
2019-05-14 11:06:14 -返回值 : /moneyLog/heatLog/heatLog
2019-05-14 11:06:14 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 11:06:14 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-14 11:06:14 -HTTP METHOD : GET
2019-05-14 11:06:14 -HTTP METHOD : GET
2019-05-14 11:06:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 11:06:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 11:06:14 -参数 : [userType]
2019-05-14 11:06:14 -参数 : [heatType]
2019-05-14 11:06:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 11:06:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 11:06:14 -==> Parameters: userType(String)
2019-05-14 11:06:14 -==> Parameters: heatType(String)
2019-05-14 11:06:14 -<==      Total: 4
2019-05-14 11:06:14 -<==      Total: 4
2019-05-14 11:06:14 -耗时 : 3
2019-05-14 11:06:14 -耗时 : 3
2019-05-14 11:06:14 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 11:06:14 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 11:06:14 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-14 11:06:14 -HTTP METHOD : GET
2019-05-14 11:06:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-14 11:06:14 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-05-14 11:06:14 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-05-14 11:06:14 -==> Parameters: 0(Integer), 10(Integer)
2019-05-14 11:06:14 -<==      Total: 6
2019-05-14 11:06:14 -==>  Preparing: select count(*) from heat_log 
2019-05-14 11:06:14 -==> Parameters: 
2019-05-14 11:06:14 -<==      Total: 1
2019-05-14 11:06:14 -耗时 : 3
2019-05-14 11:06:14 -返回值 : com.bootdo.common.utils.PageUtils@2fbaa878
2019-05-14 11:06:14 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-05-14 11:06:14 -HTTP METHOD : GET
2019-05-14 11:06:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-05-14 11:06:14 -参数 : []
2019-05-14 11:06:14 -耗时 : 0
2019-05-14 11:06:14 -返回值 : /moneyLog/waterLog/waterLog
2019-05-14 11:06:14 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 11:06:14 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-05-14 11:06:14 -HTTP METHOD : GET
2019-05-14 11:06:14 -HTTP METHOD : GET
2019-05-14 11:06:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 11:06:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 11:06:14 -参数 : [userType]
2019-05-14 11:06:14 -参数 : [waterType]
2019-05-14 11:06:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 11:06:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 11:06:14 -==> Parameters: waterType(String)
2019-05-14 11:06:14 -==> Parameters: userType(String)
2019-05-14 11:06:14 -<==      Total: 4
2019-05-14 11:06:14 -<==      Total: 2
2019-05-14 11:06:14 -耗时 : 3
2019-05-14 11:06:14 -耗时 : 3
2019-05-14 11:06:14 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 11:06:14 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 11:06:14 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-14 11:06:14 -HTTP METHOD : GET
2019-05-14 11:06:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-14 11:06:14 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-05-14 11:06:14 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-05-14 11:06:14 -==> Parameters: 0(Integer), 10(Integer)
2019-05-14 11:06:14 -<==      Total: 6
2019-05-14 11:06:14 -==>  Preparing: select count(*) from water_log 
2019-05-14 11:06:14 -==> Parameters: 
2019-05-14 11:06:14 -<==      Total: 1
2019-05-14 11:06:14 -耗时 : 10
2019-05-14 11:06:14 -返回值 : com.bootdo.common.utils.PageUtils@57998494
2019-05-14 11:06:14 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-05-14 11:06:14 -HTTP METHOD : GET
2019-05-14 11:06:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-05-14 11:06:14 -参数 : []
2019-05-14 11:06:14 -耗时 : 0
2019-05-14 11:06:14 -返回值 : /moneyLog/heatLog/heatLog
2019-05-14 11:06:14 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-14 11:06:14 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 11:06:14 -HTTP METHOD : GET
2019-05-14 11:06:14 -HTTP METHOD : GET
2019-05-14 11:06:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 11:06:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 11:06:14 -参数 : [heatType]
2019-05-14 11:06:14 -参数 : [userType]
2019-05-14 11:06:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 11:06:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 11:06:14 -==> Parameters: userType(String)
2019-05-14 11:06:14 -==> Parameters: heatType(String)
2019-05-14 11:06:14 -<==      Total: 4
2019-05-14 11:06:14 -<==      Total: 4
2019-05-14 11:06:14 -耗时 : 2
2019-05-14 11:06:14 -耗时 : 2
2019-05-14 11:06:14 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 11:06:14 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 11:06:14 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-14 11:06:14 -HTTP METHOD : GET
2019-05-14 11:06:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-14 11:06:14 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-05-14 11:06:14 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-05-14 11:06:14 -==> Parameters: 0(Integer), 10(Integer)
2019-05-14 11:06:14 -<==      Total: 6
2019-05-14 11:06:14 -==>  Preparing: select count(*) from heat_log 
2019-05-14 11:06:14 -==> Parameters: 
2019-05-14 11:06:14 -<==      Total: 1
2019-05-14 11:06:14 -耗时 : 4
2019-05-14 11:06:14 -返回值 : com.bootdo.common.utils.PageUtils@338733e0
2019-05-14 11:06:15 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-05-14 11:06:15 -HTTP METHOD : GET
2019-05-14 11:06:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-05-14 11:06:15 -参数 : []
2019-05-14 11:06:15 -耗时 : 1
2019-05-14 11:06:15 -返回值 : /moneyLog/elecLog/elecLog
2019-05-14 11:06:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 11:06:15 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-14 11:06:15 -HTTP METHOD : GET
2019-05-14 11:06:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 11:06:15 -HTTP METHOD : GET
2019-05-14 11:06:15 -参数 : [userType]
2019-05-14 11:06:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 11:06:15 -参数 : [elecType]
2019-05-14 11:06:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 11:06:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 11:06:15 -==> Parameters: elecType(String)
2019-05-14 11:06:15 -==> Parameters: userType(String)
2019-05-14 11:06:15 -<==      Total: 4
2019-05-14 11:06:15 -<==      Total: 11
2019-05-14 11:06:15 -耗时 : 3
2019-05-14 11:06:15 -耗时 : 3
2019-05-14 11:06:15 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 11:06:15 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 11:06:15 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-14 11:06:15 -HTTP METHOD : GET
2019-05-14 11:06:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-14 11:06:15 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-05-14 11:06:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-05-14 11:06:15 -==> Parameters: 0(Integer), 10(Integer)
2019-05-14 11:06:15 -<==      Total: 10
2019-05-14 11:06:15 -==>  Preparing: select count(*) from elec_log 
2019-05-14 11:06:15 -==> Parameters: 
2019-05-14 11:06:15 -<==      Total: 1
2019-05-14 11:06:15 -耗时 : 5
2019-05-14 11:06:15 -返回值 : com.bootdo.common.utils.PageUtils@45f1437a
2019-05-14 11:06:16 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-05-14 11:06:16 -HTTP METHOD : GET
2019-05-14 11:06:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-05-14 11:06:16 -参数 : []
2019-05-14 11:06:16 -耗时 : 0
2019-05-14 11:06:16 -返回值 : /moneyLog/heatLog/heatLog
2019-05-14 11:06:16 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-14 11:06:16 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 11:06:16 -HTTP METHOD : GET
2019-05-14 11:06:16 -HTTP METHOD : GET
2019-05-14 11:06:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 11:06:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 11:06:16 -参数 : [heatType]
2019-05-14 11:06:16 -参数 : [userType]
2019-05-14 11:06:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 11:06:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 11:06:16 -==> Parameters: userType(String)
2019-05-14 11:06:16 -==> Parameters: heatType(String)
2019-05-14 11:06:16 -<==      Total: 4
2019-05-14 11:06:16 -<==      Total: 4
2019-05-14 11:06:16 -耗时 : 2
2019-05-14 11:06:16 -耗时 : 2
2019-05-14 11:06:16 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 11:06:16 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 11:06:16 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-14 11:06:16 -HTTP METHOD : GET
2019-05-14 11:06:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-14 11:06:16 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-05-14 11:06:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-05-14 11:06:16 -==> Parameters: 0(Integer), 10(Integer)
2019-05-14 11:06:16 -<==      Total: 6
2019-05-14 11:06:16 -==>  Preparing: select count(*) from heat_log 
2019-05-14 11:06:16 -==> Parameters: 
2019-05-14 11:06:16 -<==      Total: 1
2019-05-14 11:06:16 -耗时 : 4
2019-05-14 11:06:16 -返回值 : com.bootdo.common.utils.PageUtils@36d0eb5
2019-05-14 11:06:16 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-05-14 11:06:16 -HTTP METHOD : GET
2019-05-14 11:06:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-05-14 11:06:16 -参数 : []
2019-05-14 11:06:16 -耗时 : 0
2019-05-14 11:06:16 -返回值 : /moneyLog/waterLog/waterLog
2019-05-14 11:06:16 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 11:06:16 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-05-14 11:06:16 -HTTP METHOD : GET
2019-05-14 11:06:16 -HTTP METHOD : GET
2019-05-14 11:06:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 11:06:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 11:06:16 -参数 : [userType]
2019-05-14 11:06:16 -参数 : [waterType]
2019-05-14 11:06:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 11:06:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 11:06:16 -==> Parameters: userType(String)
2019-05-14 11:06:16 -==> Parameters: waterType(String)
2019-05-14 11:06:16 -<==      Total: 4
2019-05-14 11:06:16 -<==      Total: 2
2019-05-14 11:06:16 -耗时 : 2
2019-05-14 11:06:16 -耗时 : 2
2019-05-14 11:06:16 -返回值 : [DictDO{id=128, name='民用水', value='1', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='2', type='waterType', description='水费性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 11:06:16 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 11:06:16 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-05-14 11:06:16 -HTTP METHOD : GET
2019-05-14 11:06:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-05-14 11:06:16 -参数 : [{limit=10, offset=0, userType=, waterType=, userOrg=, userId=, waterDate=}]
2019-05-14 11:06:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-05-14 11:06:16 -==> Parameters: 0(Integer), 10(Integer)
2019-05-14 11:06:16 -<==      Total: 6
2019-05-14 11:06:16 -==>  Preparing: select count(*) from water_log 
2019-05-14 11:06:16 -==> Parameters: 
2019-05-14 11:06:16 -<==      Total: 1
2019-05-14 11:06:16 -耗时 : 4
2019-05-14 11:06:16 -返回值 : com.bootdo.common.utils.PageUtils@18133278
2019-05-14 11:06:16 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-05-14 11:06:16 -HTTP METHOD : GET
2019-05-14 11:06:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-05-14 11:06:16 -参数 : []
2019-05-14 11:06:16 -耗时 : 0
2019-05-14 11:06:16 -返回值 : /moneyLog/heatLog/heatLog
2019-05-14 11:06:17 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-14 11:06:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 11:06:17 -HTTP METHOD : GET
2019-05-14 11:06:17 -HTTP METHOD : GET
2019-05-14 11:06:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 11:06:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 11:06:17 -参数 : [heatType]
2019-05-14 11:06:17 -参数 : [userType]
2019-05-14 11:06:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 11:06:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 11:06:17 -==> Parameters: heatType(String)
2019-05-14 11:06:17 -==> Parameters: userType(String)
2019-05-14 11:06:17 -<==      Total: 4
2019-05-14 11:06:17 -<==      Total: 4
2019-05-14 11:06:17 -耗时 : 2
2019-05-14 11:06:17 -耗时 : 2
2019-05-14 11:06:17 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 11:06:17 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 11:06:17 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-14 11:06:17 -HTTP METHOD : GET
2019-05-14 11:06:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-14 11:06:17 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-05-14 11:06:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-05-14 11:06:17 -==> Parameters: 0(Integer), 10(Integer)
2019-05-14 11:06:17 -<==      Total: 6
2019-05-14 11:06:17 -==>  Preparing: select count(*) from heat_log 
2019-05-14 11:06:17 -==> Parameters: 
2019-05-14 11:06:17 -<==      Total: 1
2019-05-14 11:06:17 -耗时 : 5
2019-05-14 11:06:17 -返回值 : com.bootdo.common.utils.PageUtils@595ba294
2019-05-14 11:06:17 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-05-14 11:06:17 -HTTP METHOD : GET
2019-05-14 11:06:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-05-14 11:06:17 -参数 : []
2019-05-14 11:06:17 -耗时 : 0
2019-05-14 11:06:17 -返回值 : /moneyLog/elecLog/elecLog
2019-05-14 11:06:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 11:06:17 -HTTP METHOD : GET
2019-05-14 11:06:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 11:06:17 -参数 : [userType]
2019-05-14 11:06:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 11:06:17 -==> Parameters: userType(String)
2019-05-14 11:06:17 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-14 11:06:17 -HTTP METHOD : GET
2019-05-14 11:06:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 11:06:17 -参数 : [elecType]
2019-05-14 11:06:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 11:06:17 -==> Parameters: elecType(String)
2019-05-14 11:06:17 -<==      Total: 4
2019-05-14 11:06:17 -耗时 : 3
2019-05-14 11:06:17 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 11:06:17 -<==      Total: 11
2019-05-14 11:06:17 -耗时 : 2
2019-05-14 11:06:17 -返回值 : [DictDO{id=152, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=151, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=150, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=149, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=148, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=147, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=146, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=139, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=137, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 11:06:17 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-14 11:06:17 -HTTP METHOD : GET
2019-05-14 11:06:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-14 11:06:17 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-05-14 11:06:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-05-14 11:06:17 -==> Parameters: 0(Integer), 10(Integer)
2019-05-14 11:06:17 -<==      Total: 10
2019-05-14 11:06:17 -==>  Preparing: select count(*) from elec_log 
2019-05-14 11:06:17 -==> Parameters: 
2019-05-14 11:06:17 -<==      Total: 1
2019-05-14 11:06:17 -耗时 : 4
2019-05-14 11:06:17 -返回值 : com.bootdo.common.utils.PageUtils@7b7ec3ce
2019-05-14 11:06:17 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-05-14 11:06:17 -HTTP METHOD : GET
2019-05-14 11:06:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-05-14 11:06:17 -参数 : []
2019-05-14 11:06:17 -耗时 : 1
2019-05-14 11:06:17 -返回值 : /moneyLog/heatLog/heatLog
2019-05-14 11:06:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 11:06:17 -HTTP METHOD : GET
2019-05-14 11:06:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 11:06:17 -参数 : [userType]
2019-05-14 11:06:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 11:06:17 -==> Parameters: userType(String)
2019-05-14 11:06:17 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-14 11:06:17 -HTTP METHOD : GET
2019-05-14 11:06:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 11:06:17 -参数 : [heatType]
2019-05-14 11:06:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 11:06:17 -==> Parameters: heatType(String)
2019-05-14 11:06:17 -<==      Total: 4
2019-05-14 11:06:17 -耗时 : 4
2019-05-14 11:06:17 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 11:06:17 -<==      Total: 4
2019-05-14 11:06:17 -耗时 : 4
2019-05-14 11:06:17 -返回值 : [DictDO{id=154, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=153, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 11:06:17 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-05-14 11:06:17 -HTTP METHOD : GET
2019-05-14 11:06:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-05-14 11:06:17 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, heatDate=}]
2019-05-14 11:06:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-05-14 11:06:17 -==> Parameters: 0(Integer), 10(Integer)
2019-05-14 11:06:17 -<==      Total: 6
2019-05-14 11:06:17 -==>  Preparing: select count(*) from heat_log 
2019-05-14 11:06:17 -==> Parameters: 
2019-05-14 11:06:17 -<==      Total: 1
2019-05-14 11:06:17 -耗时 : 4
2019-05-14 11:06:17 -返回值 : com.bootdo.common.utils.PageUtils@73b383ae
2019-05-14 11:12:53 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-14 11:12:53 -HTTP METHOD : GET
2019-05-14 11:12:53 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 11:12:53 -参数 : []
2019-05-14 11:12:53 -耗时 : 0
2019-05-14 11:12:53 -返回值 : charts/tableElecMM
2019-05-14 11:12:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 11:12:53 -HTTP METHOD : GET
2019-05-14 11:12:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 11:12:53 -参数 : [userType]
2019-05-14 11:12:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 11:12:53 -==> Parameters: userType(String)
2019-05-14 11:12:53 -<==      Total: 4
2019-05-14 11:12:53 -耗时 : 6
2019-05-14 11:12:53 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 11:13:50 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-14 11:13:50 -HTTP METHOD : GET
2019-05-14 11:13:50 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-14 11:13:50 -参数 : []
2019-05-14 11:13:50 -耗时 : 72
2019-05-14 11:13:50 -返回值 : charts/tableHeatMM
2019-05-14 11:13:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 11:13:50 -HTTP METHOD : GET
2019-05-14 11:13:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 11:13:50 -参数 : [userType]
2019-05-14 11:13:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 11:13:50 -==> Parameters: userType(String)
2019-05-14 11:13:50 -<==      Total: 4
2019-05-14 11:13:50 -耗时 : 2
2019-05-14 11:13:50 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 11:13:51 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-05-14 11:13:51 -HTTP METHOD : GET
2019-05-14 11:13:51 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-14 11:13:51 -参数 : []
2019-05-14 11:13:51 -耗时 : 9
2019-05-14 11:13:51 -返回值 : charts/tableWaterMM
2019-05-14 11:13:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 11:13:51 -HTTP METHOD : GET
2019-05-14 11:13:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 11:13:51 -参数 : [userType]
2019-05-14 11:13:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 11:13:51 -==> Parameters: userType(String)
2019-05-14 11:13:51 -<==      Total: 4
2019-05-14 11:13:51 -耗时 : 5
2019-05-14 11:13:51 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 11:13:51 -请求地址 : http://localhost:8081/charts/tableHeatMM
2019-05-14 11:13:51 -HTTP METHOD : GET
2019-05-14 11:13:51 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatMMController.tableHeatMM
2019-05-14 11:13:51 -参数 : []
2019-05-14 11:13:51 -耗时 : 0
2019-05-14 11:13:51 -返回值 : charts/tableHeatMM
2019-05-14 11:13:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 11:13:52 -HTTP METHOD : GET
2019-05-14 11:13:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 11:13:52 -参数 : [userType]
2019-05-14 11:13:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 11:13:52 -==> Parameters: userType(String)
2019-05-14 11:13:52 -<==      Total: 4
2019-05-14 11:13:52 -耗时 : 3
2019-05-14 11:13:52 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 11:13:52 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-14 11:13:52 -HTTP METHOD : GET
2019-05-14 11:13:52 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 11:13:52 -参数 : []
2019-05-14 11:13:52 -耗时 : 0
2019-05-14 11:13:52 -返回值 : charts/tableElecMM
2019-05-14 11:13:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 11:13:52 -HTTP METHOD : GET
2019-05-14 11:13:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 11:13:52 -参数 : [userType]
2019-05-14 11:13:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 11:13:52 -==> Parameters: userType(String)
2019-05-14 11:13:52 -<==      Total: 4
2019-05-14 11:13:52 -耗时 : 2
2019-05-14 11:13:52 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 11:13:53 -请求地址 : http://localhost:8081/charts/tableWaterMM
2019-05-14 11:13:53 -HTTP METHOD : GET
2019-05-14 11:13:53 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterMMController.tableWaterMM
2019-05-14 11:13:53 -参数 : []
2019-05-14 11:13:53 -耗时 : 0
2019-05-14 11:13:53 -返回值 : charts/tableWaterMM
2019-05-14 11:13:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 11:13:53 -HTTP METHOD : GET
2019-05-14 11:13:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 11:13:53 -参数 : [userType]
2019-05-14 11:13:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 11:13:53 -==> Parameters: userType(String)
2019-05-14 11:13:53 -<==      Total: 4
2019-05-14 11:13:53 -耗时 : 1
2019-05-14 11:13:53 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 11:17:21 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-14 11:17:21 -==> Parameters: 1(Long)
2019-05-14 11:17:21 -<==      Total: 93
2019-05-14 11:17:21 -请求地址 : http://localhost:8081/elec/elecPrice
2019-05-14 11:17:21 -HTTP METHOD : GET
2019-05-14 11:17:21 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.ElecPrice
2019-05-14 11:17:21 -参数 : []
2019-05-14 11:17:21 -耗时 : 0
2019-05-14 11:17:21 -返回值 : elec/elecPrice/elecPrice
2019-05-14 11:17:21 -请求地址 : http://localhost:8081/elec/elecPrice/list
2019-05-14 11:17:21 -HTTP METHOD : GET
2019-05-14 11:17:21 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.list
2019-05-14 11:17:21 -参数 : [{limit=10, offset=0}]
2019-05-14 11:17:21 -==>  Preparing: select `id`,`elec_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName,`m_elec`,`s_elec`,`g1_elec`,`g2_elec`,`g3_elec`,`wm_elec`, `ws_elec`,`wg_elec`,`mm_elec`, `ms_elec`,`z_elec`,`create_time`, `create_by`, `update_time`, `update_by`,`remark` from elec_price order by id asc limit ?, ? 
2019-05-14 11:17:21 -==> Parameters: 0(Integer), 10(Integer)
2019-05-14 11:17:21 -<==      Total: 2
2019-05-14 11:17:21 -==>  Preparing: select count(*) from elec_price 
2019-05-14 11:17:21 -==> Parameters: 
2019-05-14 11:17:21 -<==      Total: 1
2019-05-14 11:17:21 -耗时 : 185
2019-05-14 11:17:21 -返回值 : com.bootdo.common.utils.PageUtils@20849128
2019-05-14 11:17:27 -请求地址 : http://localhost:8081/water/waterPrice
2019-05-14 11:17:27 -HTTP METHOD : GET
2019-05-14 11:17:27 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.WaterPrice
2019-05-14 11:17:27 -参数 : []
2019-05-14 11:17:27 -耗时 : 0
2019-05-14 11:17:27 -返回值 : water/waterPrice/waterPrice
2019-05-14 11:17:27 -请求地址 : http://localhost:8081/water/waterPrice/list
2019-05-14 11:17:27 -HTTP METHOD : GET
2019-05-14 11:17:27 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.list
2019-05-14 11:17:27 -参数 : [{limit=10, offset=0}]
2019-05-14 11:17:27 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price order by id asc limit ?, ? 
2019-05-14 11:17:27 -==> Parameters: 0(Integer), 10(Integer)
2019-05-14 11:17:28 -<==      Total: 2
2019-05-14 11:17:28 -==>  Preparing: select count(*) from water_price 
2019-05-14 11:17:28 -==> Parameters: 
2019-05-14 11:17:28 -<==      Total: 1
2019-05-14 11:17:28 -耗时 : 94
2019-05-14 11:17:28 -返回值 : com.bootdo.common.utils.PageUtils@688ca5a0
2019-05-14 11:17:29 -请求地址 : http://localhost:8081/water/waterPrice/edit/2
2019-05-14 11:17:29 -HTTP METHOD : GET
2019-05-14 11:17:29 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.edit
2019-05-14 11:17:29 -参数 : [2, {}]
2019-05-14 11:17:29 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price where id = ? 
2019-05-14 11:17:29 -==> Parameters: 2(Long)
2019-05-14 11:17:29 -<==      Total: 1
2019-05-14 11:17:29 -耗时 : 3
2019-05-14 11:17:29 -返回值 : water/waterPrice/edit
2019-05-14 11:23:55 -请求地址 : http://localhost:8081/water/waterPrice/update
2019-05-14 11:23:55 -HTTP METHOD : POST
2019-05-14 11:23:55 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.update
2019-05-14 11:23:55 -参数 : [com.bootdo.water.domain.WaterPriceDO@62604228]
2019-05-14 11:23:55 -==>  Preparing: update water_price SET `water_org` = ?, `m_water` = ?, `s1_water` = ?, `s2_water` = ?, `s3_water` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-05-14 11:23:55 -==> Parameters: 3(String), 5(BigDecimal), 10(BigDecimal), 20(BigDecimal), 30(BigDecimal), 2019-05-14 11:23:55.435(Timestamp), 1(Long), (String), 2(Long)
2019-05-14 11:23:55 -<==    Updates: 1
2019-05-14 11:23:55 -耗时 : 97
2019-05-14 11:23:55 -返回值 : {msg=操作成功, code=0}
2019-05-14 11:23:55 -请求地址 : http://localhost:8081/water/waterPrice/list
2019-05-14 11:23:55 -HTTP METHOD : GET
2019-05-14 11:23:55 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.list
2019-05-14 11:23:55 -参数 : [{limit=10, offset=0}]
2019-05-14 11:23:55 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price order by id asc limit ?, ? 
2019-05-14 11:23:55 -==> Parameters: 0(Integer), 10(Integer)
2019-05-14 11:23:55 -<==      Total: 2
2019-05-14 11:23:55 -==>  Preparing: select count(*) from water_price 
2019-05-14 11:23:55 -==> Parameters: 
2019-05-14 11:23:55 -<==      Total: 1
2019-05-14 11:23:55 -耗时 : 8
2019-05-14 11:23:55 -返回值 : com.bootdo.common.utils.PageUtils@650c5600
2019-05-14 11:32:03 -Validating all active sessions...
2019-05-14 11:32:03 -Finished session validation.  No sessions were stopped.
2019-05-14 11:32:20 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 18 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(18)-CONNECTED(18)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 213], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 35], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 858]
2019-05-14 11:35:29 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-14 11:35:29 -==> Parameters: 1(Long)
2019-05-14 11:35:29 -<==      Total: 93
2019-05-14 11:35:29 -请求地址 : http://localhost:8081/water/waterPrice/edit/1
2019-05-14 11:35:29 -HTTP METHOD : GET
2019-05-14 11:35:29 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.edit
2019-05-14 11:35:29 -参数 : [1, {}]
2019-05-14 11:35:29 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price where id = ? 
2019-05-14 11:35:29 -==> Parameters: 1(Long)
2019-05-14 11:35:29 -<==      Total: 1
2019-05-14 11:35:29 -耗时 : 3
2019-05-14 11:35:29 -返回值 : water/waterPrice/edit
2019-05-14 12:02:20 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 18 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(18)-CONNECTED(18)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 213], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 35], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1291]
2019-05-14 12:32:03 -Validating all active sessions...
2019-05-14 12:32:03 -Finished session validation.  [1] sessions were stopped.
2019-05-14 12:32:20 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 18 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(18)-CONNECTED(18)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 213], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 35], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1724]
2019-05-14 13:02:20 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 18 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(18)-CONNECTED(18)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 213], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 35], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2157]
2019-05-14 13:32:03 -Validating all active sessions...
2019-05-14 13:32:03 -Finished session validation.  No sessions were stopped.
2019-05-14 13:32:20 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 18 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(18)-CONNECTED(18)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 213], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 35], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2590]
2019-05-14 14:02:20 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 18 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(18)-CONNECTED(18)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 213], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 35], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3023]
2019-05-14 14:32:03 -Validating all active sessions...
2019-05-14 14:32:03 -Finished session validation.  No sessions were stopped.
2019-05-14 14:32:20 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 18 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(18)-CONNECTED(18)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 213], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 35], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3456]
2019-05-14 14:38:29 -请求地址 : http://localhost:8081/login;JSESSIONID=82508a50-7534-4e59-b1db-3d842a1d9cda
2019-05-14 14:38:29 -HTTP METHOD : GET
2019-05-14 14:38:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-14 14:38:29 -参数 : [{}]
2019-05-14 14:38:29 -耗时 : 1
2019-05-14 14:38:29 -返回值 : login
2019-05-14 14:38:30 -请求地址 : http://localhost:8081/getVerify
2019-05-14 14:38:30 -HTTP METHOD : GET
2019-05-14 14:38:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-14 14:38:30 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@47838fb3, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2a77596a]
2019-05-14 14:38:30 -7774
2019-05-14 14:38:30 -耗时 : 12
2019-05-14 14:38:30 -返回值 : null
2019-05-14 14:38:30 -请求地址 : http://localhost:8081/login
2019-05-14 14:38:30 -HTTP METHOD : GET
2019-05-14 14:38:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-14 14:38:30 -参数 : [{}]
2019-05-14 14:38:30 -耗时 : 1
2019-05-14 14:38:30 -返回值 : login
2019-05-14 14:38:40 -请求地址 : http://localhost:8081/login
2019-05-14 14:38:40 -HTTP METHOD : POST
2019-05-14 14:38:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-14 14:38:40 -参数 : [admin, 111111, 7774, org.apache.shiro.web.servlet.ShiroHttpServletRequest@67f4a690]
2019-05-14 14:38:40 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-14 14:38:40 -==> Parameters: admin(String)
2019-05-14 14:38:40 -<==      Total: 1
2019-05-14 14:38:40 -耗时 : 19
2019-05-14 14:38:40 -返回值 : {msg=操作成功, code=0}
2019-05-14 14:38:40 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 14:38:40 -==> Parameters: 1(Long), admin(String), 登录(String), 19(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-14 14:38:40.319(Timestamp)
2019-05-14 14:38:40 -请求地址 : http://localhost:8081/index
2019-05-14 14:38:40 -HTTP METHOD : GET
2019-05-14 14:38:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-14 14:38:40 -参数 : [{}]
2019-05-14 14:38:40 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-14 14:38:40 -==> Parameters: 1(Long)
2019-05-14 14:38:40 -<==      Total: 49
2019-05-14 14:38:40 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-14 14:38:40 -==> Parameters: 138(Long)
2019-05-14 14:38:40 -<==      Total: 1
2019-05-14 14:38:40 -耗时 : 19
2019-05-14 14:38:40 -返回值 : index_v1
2019-05-14 14:38:40 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 14:38:40 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-14 14:38:40.399(Timestamp)
2019-05-14 14:38:40 -<==    Updates: 1
2019-05-14 14:38:40 -<==    Updates: 1
2019-05-14 14:38:40 -请求地址 : http://localhost:8081/main
2019-05-14 14:38:40 -HTTP METHOD : GET
2019-05-14 14:38:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 14:38:40 -参数 : []
2019-05-14 14:38:40 -耗时 : 0
2019-05-14 14:38:40 -返回值 : main
2019-05-14 14:38:42 -请求地址 : http://localhost:8081/main
2019-05-14 14:38:42 -HTTP METHOD : GET
2019-05-14 14:38:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 14:38:42 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-14 14:38:42 -参数 : []
2019-05-14 14:38:42 -耗时 : 1
2019-05-14 14:38:42 -HTTP METHOD : GET
2019-05-14 14:38:42 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-14 14:38:42 -返回值 : main
2019-05-14 14:38:42 -参数 : []
2019-05-14 14:38:42 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-14 14:38:42 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-14 14:38:42 -<==      Total: 0
2019-05-14 14:38:42 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-14 14:38:42 -==> Parameters: 1(Long), 0(String)
2019-05-14 14:38:42 -<==      Total: 1
2019-05-14 14:38:42 -耗时 : 4
2019-05-14 14:38:42 -返回值 : com.bootdo.common.utils.PageUtils@2981991a
2019-05-14 14:38:53 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-14 14:38:53 -==> Parameters: 1(Long)
2019-05-14 14:38:53 -<==      Total: 93
2019-05-14 14:38:53 -请求地址 : http://localhost:8081/print/print
2019-05-14 14:38:53 -HTTP METHOD : GET
2019-05-14 14:38:53 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-05-14 14:38:53 -参数 : []
2019-05-14 14:38:53 -耗时 : 6
2019-05-14 14:38:53 -返回值 : print/print/print
2019-05-14 14:38:54 -请求地址 : http://localhost:8081/print/print/list
2019-05-14 14:38:54 -HTTP METHOD : GET
2019-05-14 14:38:54 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-05-14 14:38:54 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-05-14 14:38:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 14:38:54 -HTTP METHOD : GET
2019-05-14 14:38:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 14:38:54 -参数 : [userType]
2019-05-14 14:38:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 14:38:54 -==> Parameters: userType(String)
2019-05-14 14:38:54 -<==      Total: 4
2019-05-14 14:38:54 -耗时 : 3
2019-05-14 14:38:54 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 14:38:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-05-14 14:38:54 -==> Parameters: 0(Integer), 10(Integer)
2019-05-14 14:38:54 -<==      Total: 6
2019-05-14 14:38:54 -==>  Preparing: select count(*) from print 
2019-05-14 14:38:54 -==> Parameters: 
2019-05-14 14:38:54 -<==      Total: 1
2019-05-14 14:38:54 -耗时 : 258
2019-05-14 14:38:54 -返回值 : com.bootdo.common.utils.PageUtils@28815cb4
2019-05-14 14:38:58 -请求地址 : http://localhost:8081/print/print/printEdit/1
2019-05-14 14:38:58 -HTTP METHOD : GET
2019-05-14 14:38:58 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printEdit
2019-05-14 14:38:58 -参数 : [1, {}]
2019-05-14 14:38:58 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-05-14 14:38:58 -==> Parameters: 1(Long)
2019-05-14 14:38:58 -<==      Total: 1
2019-05-14 14:38:58 -耗时 : 3
2019-05-14 14:38:58 -返回值 : print/print/printEdit
2019-05-14 14:48:29 -Starting BootdoApplication on PC-201905091110 with PID 2704 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-14 14:48:29 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-14 14:48:29 -The following profiles are active: dev
2019-05-14 14:48:29 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Tue May 14 14:48:29 CST 2019]; root of context hierarchy
2019-05-14 14:48:32 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-14 14:48:35 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ca90b5a4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 14:48:35 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$bce9e44b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 14:48:38 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 14:48:39 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 14:48:39 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 14:48:39 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-14 14:48:39 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-14 14:48:39 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 14:48:39 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 14:48:39 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 14:48:39 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 14:48:42 -Tomcat initialized with port(s): 8081 (http)
2019-05-14 14:48:42 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-14 14:48:42 -Starting service [Tomcat]
2019-05-14 14:48:42 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-14 14:48:42 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-14 14:48:42 -Initializing Spring embedded WebApplicationContext
2019-05-14 14:48:42 -Root WebApplicationContext: initialization completed in 13279 ms
2019-05-14 14:48:43 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-14 14:48:43 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-14 14:48:43 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-14 14:48:43 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-14 14:48:43 -Filter xssFilter was not registered (disabled)
2019-05-14 14:48:43 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-14 14:48:43 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-14 14:48:43 -Servlet statViewServlet mapped to [/druid/*]
2019-05-14 14:48:43 -Servlet dispatcherServlet mapped to [/]
2019-05-14 14:48:52 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Tue May 14 14:48:29 CST 2019]; root of context hierarchy
2019-05-14 14:48:53 -Using default implementation for ThreadExecutor
2019-05-14 14:48:54 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-14 14:48:54 -Quartz Scheduler v.2.2.1 created.
2019-05-14 14:48:54 -RAMJobStore initialized.
2019-05-14 14:48:54 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-14 14:48:54 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-14 14:48:54 -Quartz scheduler version: 2.2.1
2019-05-14 14:48:54 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@4e5c8ef3
2019-05-14 14:48:57 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-14 14:48:58 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-14 14:49:02 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 14:49:02 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 14:49:02 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-14 14:49:02 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-14 14:49:02 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 14:49:02 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 14:49:02 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-14 14:49:02 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-14 14:49:02 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-14 14:49:02 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-14 14:49:02 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 14:49:02 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 14:49:02 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 14:49:02 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 14:49:02 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-14 14:49:02 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 14:49:02 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-14 14:49:02 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 14:49:02 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-14 14:49:02 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-14 14:49:02 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 14:49:02 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-14 14:49:02 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-14 14:49:02 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 14:49:02 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 14:49:02 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-14 14:49:02 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 14:49:02 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 14:49:02 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-14 14:49:02 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 14:49:02 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-05-14 14:49:02 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-14 14:49:02 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 14:49:02 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 14:49:02 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-14 14:49:02 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-14 14:49:02 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-14 14:49:02 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-14 14:49:02 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-14 14:49:02 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-14 14:49:02 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 14:49:02 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-14 14:49:02 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-14 14:49:02 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-14 14:49:02 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-14 14:49:02 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 14:49:02 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-14 14:49:02 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-14 14:49:02 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-14 14:49:02 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-14 14:49:02 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-14 14:49:02 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 14:49:02 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-14 14:49:02 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-14 14:49:02 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-14 14:49:02 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 14:49:02 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-14 14:49:02 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 14:49:02 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-14 14:49:02 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-14 14:49:02 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-14 14:49:02 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-14 14:49:02 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-14 14:49:02 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-14 14:49:02 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-14 14:49:02 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-14 14:49:02 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-14 14:49:02 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 14:49:02 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-14 14:49:02 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-14 14:49:02 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 14:49:02 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-14 14:49:02 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-14 14:49:02 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-14 14:49:02 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-14 14:49:02 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 14:49:02 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-14 14:49:02 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-14 14:49:02 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-14 14:49:02 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-14 14:49:02 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-14 14:49:02 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-14 14:49:02 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-14 14:49:02 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-14 14:49:02 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-14 14:49:02 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-14 14:49:02 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-14 14:49:02 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 14:49:02 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-14 14:49:02 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-14 14:49:02 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-14 14:49:02 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-14 14:49:02 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-14 14:49:02 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-14 14:49:02 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-14 14:49:02 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-14 14:49:02 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-14 14:49:02 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-14 14:49:02 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-14 14:49:02 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 14:49:02 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-14 14:49:02 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 14:49:02 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-14 14:49:02 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-14 14:49:02 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-14 14:49:02 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-14 14:49:02 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-14 14:49:02 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-14 14:49:02 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-14 14:49:02 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-14 14:49:02 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 14:49:02 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-14 14:49:02 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-14 14:49:02 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-14 14:49:02 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-14 14:49:02 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-14 14:49:02 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-14 14:49:02 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-14 14:49:02 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-14 14:49:02 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-14 14:49:02 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-14 14:49:02 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-14 14:49:02 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 14:49:02 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-14 14:49:02 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 14:49:02 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-14 14:49:02 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-14 14:49:02 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-14 14:49:02 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-14 14:49:02 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-14 14:49:02 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-14 14:49:02 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-14 14:49:02 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-14 14:49:02 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-14 14:49:02 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-14 14:49:02 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-14 14:49:02 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-14 14:49:02 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-14 14:49:02 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 14:49:02 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-14 14:49:02 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 14:49:02 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-14 14:49:02 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-14 14:49:02 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-14 14:49:02 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-14 14:49:02 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-14 14:49:02 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-14 14:49:02 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 14:49:02 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-14 14:49:02 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 14:49:02 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-14 14:49:02 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-14 14:49:02 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-14 14:49:02 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-14 14:49:02 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-14 14:49:02 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-14 14:49:02 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 14:49:02 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-14 14:49:02 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 14:49:02 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-14 14:49:02 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-14 14:49:02 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-14 14:49:02 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-14 14:49:02 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-14 14:49:02 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-14 14:49:02 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-14 14:49:02 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 14:49:02 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-14 14:49:02 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-14 14:49:02 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 14:49:02 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-14 14:49:02 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 14:49:02 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-14 14:49:02 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-14 14:49:02 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-14 14:49:02 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-14 14:49:02 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-14 14:49:02 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 14:49:02 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-14 14:49:02 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 14:49:02 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-14 14:49:02 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 14:49:02 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-14 14:49:02 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-14 14:49:02 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-14 14:49:02 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-14 14:49:02 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-14 14:49:02 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-14 14:49:02 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-14 14:49:02 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-14 14:49:02 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-14 14:49:02 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-14 14:49:02 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-14 14:49:02 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 14:49:02 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-14 14:49:02 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-14 14:49:02 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-14 14:49:02 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-14 14:49:02 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-14 14:49:02 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-14 14:49:02 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-14 14:49:02 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-14 14:49:02 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-14 14:49:02 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-14 14:49:02 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 14:49:02 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-14 14:49:02 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-14 14:49:02 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-14 14:49:02 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-14 14:49:02 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-14 14:49:02 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-14 14:49:02 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-14 14:49:02 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-14 14:49:02 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-14 14:49:02 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-14 14:49:02 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-14 14:49:02 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-14 14:49:02 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 14:49:02 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-14 14:49:02 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-14 14:49:02 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-14 14:49:02 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-14 14:49:02 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 14:49:02 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-14 14:49:02 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-14 14:49:02 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-14 14:49:02 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 14:49:02 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-14 14:49:02 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-14 14:49:02 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-14 14:49:02 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-14 14:49:02 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-14 14:49:02 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-14 14:49:02 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-14 14:49:02 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-14 14:49:02 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-14 14:49:02 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-14 14:49:02 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-14 14:49:02 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-14 14:49:02 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-14 14:49:02 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-14 14:49:02 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-14 14:49:02 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-14 14:49:02 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-14 14:49:02 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 14:49:02 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-14 14:49:02 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-14 14:49:02 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 14:49:02 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-14 14:49:02 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-14 14:49:02 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-14 14:49:02 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-14 14:49:02 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-14 14:49:02 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-14 14:49:02 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-14 14:49:02 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-14 14:49:02 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 14:49:02 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-14 14:49:02 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-14 14:49:02 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 14:49:02 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-14 14:49:02 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-14 14:49:02 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-14 14:49:02 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-14 14:49:02 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-14 14:49:02 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-14 14:49:02 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-14 14:49:02 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-14 14:49:02 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-14 14:49:02 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-14 14:49:02 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-14 14:49:03 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-14 14:49:03 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Tue May 14 14:48:29 CST 2019]; root of context hierarchy
2019-05-14 14:49:03 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-14 14:49:03 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-14 14:49:03 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-14 14:49:03 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-14 14:49:04 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-14 14:49:06 -Registering beans for JMX exposure on startup
2019-05-14 14:49:06 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-14 14:49:06 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-14 14:49:06 -Starting beans in phase 2147483647
2019-05-14 14:49:06 -Context refreshed
2019-05-14 14:49:07 -Found 1 custom documentation plugin(s)
2019-05-14 14:49:07 -Scanning for api listing references
2019-05-14 14:49:08 -Generating unique operation named: getCountDUsingPOST_1
2019-05-14 14:49:08 -Generating unique operation named: removeUsingPOST_1
2019-05-14 14:49:08 -Generating unique operation named: addUsingGET_1
2019-05-14 14:49:08 -Generating unique operation named: editUsingGET_1
2019-05-14 14:49:08 -Generating unique operation named: listUsingGET_1
2019-05-14 14:49:08 -Generating unique operation named: removeUsingPOST_2
2019-05-14 14:49:08 -Generating unique operation named: removeUsingPOST_3
2019-05-14 14:49:08 -Generating unique operation named: saveUsingPOST_1
2019-05-14 14:49:08 -Generating unique operation named: updateUsingGET_1
2019-05-14 14:49:08 -Generating unique operation named: updateUsingHEAD_1
2019-05-14 14:49:08 -Generating unique operation named: updateUsingPOST_1
2019-05-14 14:49:08 -Generating unique operation named: updateUsingPUT_1
2019-05-14 14:49:08 -Generating unique operation named: updateUsingPATCH_1
2019-05-14 14:49:08 -Generating unique operation named: updateUsingDELETE_1
2019-05-14 14:49:08 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-14 14:49:08 -Generating unique operation named: updateUsingTRACE_1
2019-05-14 14:49:08 -Generating unique operation named: addUsingGET_2
2019-05-14 14:49:08 -Generating unique operation named: editUsingGET_2
2019-05-14 14:49:08 -Generating unique operation named: listUsingGET_2
2019-05-14 14:49:08 -Generating unique operation named: removeUsingPOST_4
2019-05-14 14:49:08 -Generating unique operation named: removeUsingPOST_5
2019-05-14 14:49:08 -Generating unique operation named: saveUsingPOST_2
2019-05-14 14:49:08 -Generating unique operation named: updateUsingPOST_2
2019-05-14 14:49:08 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-14 14:49:08 -Generating unique operation named: addUsingGET_3
2019-05-14 14:49:08 -Generating unique operation named: editUsingGET_3
2019-05-14 14:49:08 -Generating unique operation named: listUsingGET_3
2019-05-14 14:49:08 -Generating unique operation named: removeUsingPOST_6
2019-05-14 14:49:08 -Generating unique operation named: removeUsingPOST_7
2019-05-14 14:49:08 -Generating unique operation named: saveUsingPOST_3
2019-05-14 14:49:08 -Generating unique operation named: updateUsingGET_2
2019-05-14 14:49:08 -Generating unique operation named: updateUsingHEAD_2
2019-05-14 14:49:08 -Generating unique operation named: updateUsingPOST_3
2019-05-14 14:49:08 -Generating unique operation named: updateUsingPUT_2
2019-05-14 14:49:08 -Generating unique operation named: updateUsingPATCH_2
2019-05-14 14:49:08 -Generating unique operation named: updateUsingDELETE_2
2019-05-14 14:49:08 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-14 14:49:08 -Generating unique operation named: updateUsingTRACE_2
2019-05-14 14:49:08 -Generating unique operation named: addUsingGET_4
2019-05-14 14:49:08 -Generating unique operation named: editUsingGET_4
2019-05-14 14:49:08 -Generating unique operation named: listUsingGET_4
2019-05-14 14:49:08 -Generating unique operation named: removeUsingPOST_8
2019-05-14 14:49:08 -Generating unique operation named: removeUsingPOST_9
2019-05-14 14:49:08 -Generating unique operation named: saveUsingPOST_4
2019-05-14 14:49:08 -Generating unique operation named: updateUsingGET_3
2019-05-14 14:49:08 -Generating unique operation named: updateUsingHEAD_3
2019-05-14 14:49:08 -Generating unique operation named: updateUsingPOST_4
2019-05-14 14:49:08 -Generating unique operation named: updateUsingPUT_3
2019-05-14 14:49:08 -Generating unique operation named: updateUsingPATCH_3
2019-05-14 14:49:08 -Generating unique operation named: updateUsingDELETE_3
2019-05-14 14:49:08 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-14 14:49:08 -Generating unique operation named: updateUsingTRACE_3
2019-05-14 14:49:08 -Generating unique operation named: ElecUsingGET_1
2019-05-14 14:49:08 -Generating unique operation named: addUsingGET_5
2019-05-14 14:49:08 -Generating unique operation named: editUsingGET_5
2019-05-14 14:49:09 -Generating unique operation named: listUsingGET_5
2019-05-14 14:49:09 -Generating unique operation named: removeUsingPOST_10
2019-05-14 14:49:09 -Generating unique operation named: removeUsingPOST_11
2019-05-14 14:49:09 -Generating unique operation named: saveUsingPOST_5
2019-05-14 14:49:09 -Generating unique operation named: updateUsingGET_4
2019-05-14 14:49:09 -Generating unique operation named: updateUsingHEAD_4
2019-05-14 14:49:09 -Generating unique operation named: updateUsingPOST_5
2019-05-14 14:49:09 -Generating unique operation named: updateUsingPUT_4
2019-05-14 14:49:09 -Generating unique operation named: updateUsingPATCH_4
2019-05-14 14:49:09 -Generating unique operation named: updateUsingDELETE_4
2019-05-14 14:49:09 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-14 14:49:09 -Generating unique operation named: updateUsingTRACE_4
2019-05-14 14:49:09 -Generating unique operation named: editUsingGET_6
2019-05-14 14:49:09 -Generating unique operation named: listUsingGET_6
2019-05-14 14:49:09 -Generating unique operation named: updateUsingPOST_6
2019-05-14 14:49:09 -Generating unique operation named: addUsingGET_6
2019-05-14 14:49:09 -Generating unique operation named: editUsingGET_7
2019-05-14 14:49:09 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-14 14:49:09 -Generating unique operation named: listUsingGET_7
2019-05-14 14:49:09 -Generating unique operation named: removeUsingPOST_12
2019-05-14 14:49:09 -Generating unique operation named: removeUsingPOST_13
2019-05-14 14:49:09 -Generating unique operation named: saveUsingPOST_6
2019-05-14 14:49:09 -Generating unique operation named: updateUsingGET_5
2019-05-14 14:49:09 -Generating unique operation named: updateUsingHEAD_5
2019-05-14 14:49:09 -Generating unique operation named: updateUsingPOST_7
2019-05-14 14:49:09 -Generating unique operation named: updateUsingPUT_5
2019-05-14 14:49:09 -Generating unique operation named: updateUsingPATCH_5
2019-05-14 14:49:09 -Generating unique operation named: updateUsingDELETE_5
2019-05-14 14:49:09 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-14 14:49:09 -Generating unique operation named: updateUsingTRACE_5
2019-05-14 14:49:09 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-14 14:49:09 -Generating unique operation named: addUsingGET_7
2019-05-14 14:49:09 -Generating unique operation named: editUsingGET_8
2019-05-14 14:49:09 -Generating unique operation named: listUsingGET_8
2019-05-14 14:49:09 -Generating unique operation named: removeUsingPOST_14
2019-05-14 14:49:09 -Generating unique operation named: removeUsingPOST_15
2019-05-14 14:49:09 -Generating unique operation named: saveUsingPOST_7
2019-05-14 14:49:09 -Generating unique operation named: updateUsingGET_6
2019-05-14 14:49:09 -Generating unique operation named: updateUsingHEAD_6
2019-05-14 14:49:09 -Generating unique operation named: updateUsingPOST_8
2019-05-14 14:49:09 -Generating unique operation named: updateUsingPUT_6
2019-05-14 14:49:09 -Generating unique operation named: updateUsingPATCH_6
2019-05-14 14:49:09 -Generating unique operation named: updateUsingDELETE_6
2019-05-14 14:49:09 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-14 14:49:09 -Generating unique operation named: updateUsingTRACE_6
2019-05-14 14:49:09 -Generating unique operation named: addUsingGET_8
2019-05-14 14:49:09 -Generating unique operation named: editUsingGET_9
2019-05-14 14:49:09 -Generating unique operation named: listUsingGET_9
2019-05-14 14:49:09 -Generating unique operation named: removeUsingPOST_16
2019-05-14 14:49:09 -Generating unique operation named: removeUsingPOST_17
2019-05-14 14:49:09 -Generating unique operation named: saveUsingPOST_8
2019-05-14 14:49:09 -Generating unique operation named: updateUsingGET_7
2019-05-14 14:49:09 -Generating unique operation named: updateUsingHEAD_7
2019-05-14 14:49:09 -Generating unique operation named: updateUsingPOST_9
2019-05-14 14:49:09 -Generating unique operation named: updateUsingPUT_7
2019-05-14 14:49:09 -Generating unique operation named: updateUsingPATCH_7
2019-05-14 14:49:09 -Generating unique operation named: updateUsingDELETE_7
2019-05-14 14:49:09 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-14 14:49:09 -Generating unique operation named: updateUsingTRACE_7
2019-05-14 14:49:09 -Generating unique operation named: addUsingGET_9
2019-05-14 14:49:09 -Generating unique operation named: editUsingGET_10
2019-05-14 14:49:09 -Generating unique operation named: infoUsingGET_1
2019-05-14 14:49:09 -Generating unique operation named: infoUsingHEAD_1
2019-05-14 14:49:09 -Generating unique operation named: infoUsingPOST_1
2019-05-14 14:49:09 -Generating unique operation named: infoUsingPUT_1
2019-05-14 14:49:09 -Generating unique operation named: infoUsingPATCH_1
2019-05-14 14:49:09 -Generating unique operation named: infoUsingDELETE_1
2019-05-14 14:49:09 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-14 14:49:09 -Generating unique operation named: infoUsingTRACE_1
2019-05-14 14:49:09 -Generating unique operation named: listUsingGET_10
2019-05-14 14:49:09 -Generating unique operation named: removeUsingPOST_18
2019-05-14 14:49:09 -Generating unique operation named: removeUsingPOST_19
2019-05-14 14:49:09 -Generating unique operation named: saveUsingPOST_9
2019-05-14 14:49:09 -Generating unique operation named: updateUsingPOST_10
2019-05-14 14:49:09 -Generating unique operation named: listUsingGET_11
2019-05-14 14:49:09 -Generating unique operation named: removeUsingPOST_20
2019-05-14 14:49:09 -Generating unique operation named: welcomeUsingGET_1
2019-05-14 14:49:09 -Generating unique operation named: addUsingGET_10
2019-05-14 14:49:09 -Generating unique operation named: editUsingGET_11
2019-05-14 14:49:09 -Generating unique operation named: listUsingGET_12
2019-05-14 14:49:09 -Generating unique operation named: removeUsingPOST_21
2019-05-14 14:49:09 -Generating unique operation named: saveUsingPOST_10
2019-05-14 14:49:09 -Generating unique operation named: treeUsingGET_1
2019-05-14 14:49:09 -Generating unique operation named: treeUsingGET_2
2019-05-14 14:49:09 -Generating unique operation named: updateUsingPOST_11
2019-05-14 14:49:09 -Generating unique operation named: addUsingGET_11
2019-05-14 14:49:09 -Generating unique operation named: editUsingGET_12
2019-05-14 14:49:09 -Generating unique operation named: listUsingGET_13
2019-05-14 14:49:09 -Generating unique operation named: removeUsingPOST_22
2019-05-14 14:49:09 -Generating unique operation named: removeUsingPOST_23
2019-05-14 14:49:09 -Generating unique operation named: saveUsingPOST_11
2019-05-14 14:49:09 -Generating unique operation named: updateUsingGET_8
2019-05-14 14:49:09 -Generating unique operation named: updateUsingHEAD_8
2019-05-14 14:49:09 -Generating unique operation named: updateUsingPOST_12
2019-05-14 14:49:09 -Generating unique operation named: updateUsingPUT_8
2019-05-14 14:49:09 -Generating unique operation named: updateUsingPATCH_8
2019-05-14 14:49:09 -Generating unique operation named: updateUsingDELETE_8
2019-05-14 14:49:09 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-14 14:49:09 -Generating unique operation named: updateUsingTRACE_8
2019-05-14 14:49:09 -Generating unique operation named: addUsingGET_12
2019-05-14 14:49:09 -Generating unique operation named: editUsingGET_13
2019-05-14 14:49:09 -Generating unique operation named: listUsingGET_14
2019-05-14 14:49:09 -Generating unique operation named: removeUsingPOST_24
2019-05-14 14:49:09 -Generating unique operation named: removeUsingPOST_25
2019-05-14 14:49:09 -Generating unique operation named: saveUsingPOST_12
2019-05-14 14:49:09 -Generating unique operation named: updateUsingGET_9
2019-05-14 14:49:09 -Generating unique operation named: updateUsingHEAD_9
2019-05-14 14:49:09 -Generating unique operation named: updateUsingPOST_13
2019-05-14 14:49:09 -Generating unique operation named: updateUsingPUT_9
2019-05-14 14:49:09 -Generating unique operation named: updateUsingPATCH_9
2019-05-14 14:49:09 -Generating unique operation named: updateUsingDELETE_9
2019-05-14 14:49:09 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-14 14:49:09 -Generating unique operation named: updateUsingTRACE_9
2019-05-14 14:49:09 -Generating unique operation named: addUsingGET_13
2019-05-14 14:49:09 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-14 14:49:09 -Generating unique operation named: editUsingGET_14
2019-05-14 14:49:09 -Generating unique operation named: listUsingGET_15
2019-05-14 14:49:09 -Generating unique operation named: saveUsingPOST_13
2019-05-14 14:49:09 -Generating unique operation named: saveUsingPOST_14
2019-05-14 14:49:09 -Generating unique operation named: updateUsingPOST_14
2019-05-14 14:49:09 -Generating unique operation named: listUsingGET_16
2019-05-14 14:49:09 -Generating unique operation named: listUsingHEAD_1
2019-05-14 14:49:09 -Generating unique operation named: listUsingPOST_1
2019-05-14 14:49:09 -Generating unique operation named: listUsingPUT_1
2019-05-14 14:49:09 -Generating unique operation named: listUsingPATCH_1
2019-05-14 14:49:09 -Generating unique operation named: listUsingDELETE_1
2019-05-14 14:49:09 -Generating unique operation named: listUsingOPTIONS_1
2019-05-14 14:49:09 -Generating unique operation named: listUsingTRACE_1
2019-05-14 14:49:09 -Generating unique operation named: countDDUsingGET_1
2019-05-14 14:49:10 -Generating unique operation named: exportDDUsingGET_1
2019-05-14 14:49:10 -Generating unique operation named: getCountYYUsingPOST_1
2019-05-14 14:49:10 -Generating unique operation named: getCountMMUsingPOST_1
2019-05-14 14:49:10 -Generating unique operation named: addUsingGET_14
2019-05-14 14:49:10 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-14 14:49:10 -Generating unique operation named: editUsingGET_15
2019-05-14 14:49:10 -Generating unique operation named: listUsingGET_17
2019-05-14 14:49:10 -Generating unique operation named: removeUsingPOST_26
2019-05-14 14:49:10 -Generating unique operation named: saveUsingPOST_15
2019-05-14 14:49:10 -Generating unique operation named: treeUsingGET_3
2019-05-14 14:49:10 -Generating unique operation named: treeViewUsingGET_1
2019-05-14 14:49:10 -Generating unique operation named: updateUsingPOST_15
2019-05-14 14:49:10 -Generating unique operation named: addUsingGET_15
2019-05-14 14:49:10 -Generating unique operation named: editUsingGET_16
2019-05-14 14:49:10 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-14 14:49:10 -Generating unique operation named: listUsingGET_18
2019-05-14 14:49:10 -Generating unique operation named: removeUsingPOST_27
2019-05-14 14:49:10 -Generating unique operation named: removeUsingPOST_28
2019-05-14 14:49:10 -Generating unique operation named: saveUsingPOST_16
2019-05-14 14:49:10 -Generating unique operation named: updateUsingGET_10
2019-05-14 14:49:10 -Generating unique operation named: updateUsingHEAD_10
2019-05-14 14:49:10 -Generating unique operation named: updateUsingPOST_16
2019-05-14 14:49:10 -Generating unique operation named: updateUsingPUT_10
2019-05-14 14:49:10 -Generating unique operation named: updateUsingPATCH_10
2019-05-14 14:49:10 -Generating unique operation named: updateUsingDELETE_10
2019-05-14 14:49:10 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-14 14:49:10 -Generating unique operation named: updateUsingTRACE_10
2019-05-14 14:49:10 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-14 14:49:10 -Generating unique operation named: addUsingGET_16
2019-05-14 14:49:10 -Generating unique operation named: editUsingGET_17
2019-05-14 14:49:10 -Generating unique operation named: listUsingGET_19
2019-05-14 14:49:10 -Generating unique operation named: removeUsingPOST_29
2019-05-14 14:49:10 -Generating unique operation named: removeUsingPOST_30
2019-05-14 14:49:10 -Generating unique operation named: saveUsingPOST_17
2019-05-14 14:49:10 -Generating unique operation named: updateUsingGET_11
2019-05-14 14:49:10 -Generating unique operation named: updateUsingHEAD_11
2019-05-14 14:49:10 -Generating unique operation named: updateUsingPOST_17
2019-05-14 14:49:10 -Generating unique operation named: updateUsingPUT_11
2019-05-14 14:49:10 -Generating unique operation named: updateUsingPATCH_11
2019-05-14 14:49:10 -Generating unique operation named: updateUsingDELETE_11
2019-05-14 14:49:10 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-14 14:49:10 -Generating unique operation named: updateUsingTRACE_11
2019-05-14 14:49:10 -Generating unique operation named: addUsingGET_17
2019-05-14 14:49:10 -Generating unique operation named: editUsingGET_18
2019-05-14 14:49:10 -Generating unique operation named: listUsingGET_20
2019-05-14 14:49:10 -Generating unique operation named: removeUsingPOST_31
2019-05-14 14:49:10 -Generating unique operation named: removeUsingPOST_32
2019-05-14 14:49:10 -Generating unique operation named: saveUsingPOST_18
2019-05-14 14:49:10 -Generating unique operation named: updateUsingGET_12
2019-05-14 14:49:10 -Generating unique operation named: updateUsingHEAD_12
2019-05-14 14:49:10 -Generating unique operation named: updateUsingPOST_18
2019-05-14 14:49:10 -Generating unique operation named: updateUsingPUT_12
2019-05-14 14:49:10 -Generating unique operation named: updateUsingPATCH_12
2019-05-14 14:49:10 -Generating unique operation named: updateUsingDELETE_12
2019-05-14 14:49:10 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-14 14:49:10 -Generating unique operation named: updateUsingTRACE_12
2019-05-14 14:49:10 -Starting Quartz Scheduler now
2019-05-14 14:49:10 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-14 14:49:10 -Starting...
2019-05-14 14:49:10 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-14 14:49:10 -Started.
2019-05-14 14:49:10 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-14 14:49:10 -Using a shared selector for servlet write/read
2019-05-14 14:49:10 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-14 14:49:10 -Started BootdoApplication in 42.422 seconds (JVM running for 43.166)
2019-05-14 14:49:10 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-14 14:49:11 -==> Parameters: 
2019-05-14 14:49:11 -<==      Total: 1
2019-05-14 14:50:02 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-14 14:52:29 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-14 14:52:29 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-14 14:52:29 -FrameworkServlet 'dispatcherServlet': initialization completed in 54 ms
2019-05-14 14:52:29 -Enabling session validation scheduler...
2019-05-14 14:52:29 -请求地址 : http://localhost:8081/login;JSESSIONID=5e7c9022-a8d4-4b5b-9a44-f730f358390e
2019-05-14 14:52:29 -HTTP METHOD : GET
2019-05-14 14:52:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-14 14:52:29 -参数 : [{}]
2019-05-14 14:52:29 -耗时 : 4
2019-05-14 14:52:29 -返回值 : login
2019-05-14 14:52:31 -请求地址 : http://localhost:8081/getVerify
2019-05-14 14:52:31 -HTTP METHOD : GET
2019-05-14 14:52:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-14 14:52:31 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@2fd3031d, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4aec93d8]
2019-05-14 14:52:37 -4870
2019-05-14 14:52:37 -耗时 : 5752
2019-05-14 14:52:37 -返回值 : null
2019-05-14 14:52:37 -请求地址 : http://localhost:8081/login
2019-05-14 14:52:37 -HTTP METHOD : GET
2019-05-14 14:52:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-14 14:52:37 -参数 : [{}]
2019-05-14 14:52:37 -耗时 : 1
2019-05-14 14:52:37 -返回值 : login
2019-05-14 14:52:44 -请求地址 : http://localhost:8081/login
2019-05-14 14:52:44 -HTTP METHOD : POST
2019-05-14 14:52:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-14 14:52:44 -参数 : [admin, 111111, 4870, org.apache.shiro.web.servlet.ShiroHttpServletRequest@16545376]
2019-05-14 14:52:44 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-14 14:52:44 -==> Parameters: admin(String)
2019-05-14 14:52:44 -<==      Total: 1
2019-05-14 14:52:44 -耗时 : 166
2019-05-14 14:52:44 -返回值 : {msg=操作成功, code=0}
2019-05-14 14:52:44 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-14 14:52:44 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 14:52:44 -==> Parameters: 1(Long), admin(String), 登录(String), 166(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-14 14:52:44.774(Timestamp)
2019-05-14 14:52:44 -<==    Updates: 1
2019-05-14 14:52:45 -请求地址 : http://localhost:8081/index
2019-05-14 14:52:45 -HTTP METHOD : GET
2019-05-14 14:52:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-14 14:52:45 -参数 : [{}]
2019-05-14 14:52:45 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-14 14:52:45 -==> Parameters: 1(Long)
2019-05-14 14:52:45 -<==      Total: 49
2019-05-14 14:52:45 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-14 14:52:45 -==> Parameters: 138(Long)
2019-05-14 14:52:45 -<==      Total: 1
2019-05-14 14:52:45 -耗时 : 240
2019-05-14 14:52:45 -返回值 : index_v1
2019-05-14 14:52:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 14:52:45 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 240(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-14 14:52:45.379(Timestamp)
2019-05-14 14:52:45 -<==    Updates: 1
2019-05-14 14:52:45 -请求地址 : http://localhost:8081/main
2019-05-14 14:52:45 -HTTP METHOD : GET
2019-05-14 14:52:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 14:52:45 -参数 : []
2019-05-14 14:52:45 -耗时 : 0
2019-05-14 14:52:45 -返回值 : main
2019-05-14 14:52:45 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-14 14:52:45 -HTTP METHOD : GET
2019-05-14 14:52:45 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-14 14:52:45 -参数 : []
2019-05-14 14:52:45 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-14 14:52:45 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-14 14:52:45 -<==      Total: 0
2019-05-14 14:52:45 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-14 14:52:45 -==> Parameters: 1(Long), 0(String)
2019-05-14 14:52:45 -<==      Total: 1
2019-05-14 14:52:45 -耗时 : 34
2019-05-14 14:52:45 -返回值 : com.bootdo.common.utils.PageUtils@69fbbbe2
2019-05-14 14:52:45 -请求地址 : http://localhost:8081/main
2019-05-14 14:52:45 -HTTP METHOD : GET
2019-05-14 14:52:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 14:52:45 -参数 : []
2019-05-14 14:52:45 -耗时 : 1
2019-05-14 14:52:45 -返回值 : main
2019-05-14 14:52:59 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-14 14:52:59 -==> Parameters: 1(Long)
2019-05-14 14:52:59 -<==      Total: 93
2019-05-14 14:52:59 -请求地址 : http://localhost:8081/print/print
2019-05-14 14:52:59 -HTTP METHOD : GET
2019-05-14 14:52:59 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-05-14 14:52:59 -参数 : []
2019-05-14 14:52:59 -耗时 : 0
2019-05-14 14:52:59 -返回值 : print/print/print
2019-05-14 14:53:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 14:53:01 -HTTP METHOD : GET
2019-05-14 14:53:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 14:53:01 -参数 : [userType]
2019-05-14 14:53:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 14:53:01 -==> Parameters: userType(String)
2019-05-14 14:53:01 -请求地址 : http://localhost:8081/print/print/list
2019-05-14 14:53:01 -HTTP METHOD : GET
2019-05-14 14:53:01 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-05-14 14:53:01 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-05-14 14:53:01 -<==      Total: 4
2019-05-14 14:53:01 -耗时 : 41
2019-05-14 14:53:01 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 14:53:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-05-14 14:53:01 -==> Parameters: 0(Integer), 10(Integer)
2019-05-14 14:53:01 -<==      Total: 6
2019-05-14 14:53:01 -==>  Preparing: select count(*) from print 
2019-05-14 14:53:01 -==> Parameters: 
2019-05-14 14:53:01 -<==      Total: 1
2019-05-14 14:53:01 -耗时 : 60
2019-05-14 14:53:01 -返回值 : com.bootdo.common.utils.PageUtils@771dcff5
2019-05-14 14:53:02 -请求地址 : http://localhost:8081/print/print/edit/1
2019-05-14 14:53:02 -HTTP METHOD : GET
2019-05-14 14:53:02 -CLASS_METHOD : com.bootdo.print.controller.PrintController.edit
2019-05-14 14:53:02 -参数 : [1, {}]
2019-05-14 14:53:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-05-14 14:53:02 -==> Parameters: 1(Long)
2019-05-14 14:53:02 -<==      Total: 1
2019-05-14 14:53:02 -耗时 : 11
2019-05-14 14:53:02 -返回值 : print/print/edit
2019-05-14 14:53:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 14:53:02 -HTTP METHOD : GET
2019-05-14 14:53:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 14:53:02 -参数 : [userType]
2019-05-14 14:53:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 14:53:02 -==> Parameters: userType(String)
2019-05-14 14:53:02 -<==      Total: 4
2019-05-14 14:53:02 -耗时 : 5
2019-05-14 14:53:02 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 14:53:07 -请求地址 : http://localhost:8081/print/print/printEdit/1
2019-05-14 14:53:07 -HTTP METHOD : GET
2019-05-14 14:53:07 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printEdit
2019-05-14 14:53:07 -参数 : [1, {}]
2019-05-14 14:53:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-05-14 14:53:07 -==> Parameters: 1(Long)
2019-05-14 14:53:07 -<==      Total: 1
2019-05-14 14:53:07 -耗时 : 8
2019-05-14 14:53:07 -返回值 : print/print/printEdit
2019-05-14 14:53:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 14:53:35 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/print/print/printEdit/CLodop_Setup_for_Win32NT.exe(String), org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "CLodop_Setup_for_Win32NT.exe"(String), null, 2019-05-14 14:53:35.359(Timestamp)
2019-05-14 14:53:35 -Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "CLodop_Setup_for_Win32NT.exe"
org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "CLodop_Setup_for_Win32NT.exe"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:131)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.NumberFormatException: For input string: "CLodop_Setup_for_Win32NT.exe"
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Long.parseLong(Long.java:589)
	at java.lang.Long.valueOf(Long.java:803)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:213)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:466)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:439)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:192)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:99)
	at org.springframework.beans.TypeConverterSupport.doConvert(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:52)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:692)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:123)
	... 68 common frames omitted
2019-05-14 14:53:35 -<==    Updates: 1
2019-05-14 14:53:37 -请求地址 : http://localhost:8081/
2019-05-14 14:53:37 -HTTP METHOD : GET
2019-05-14 14:53:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-05-14 14:53:37 -参数 : [{}]
2019-05-14 14:53:37 -耗时 : 0
2019-05-14 14:53:37 -返回值 : redirect:/index
2019-05-14 14:53:37 -请求地址 : http://localhost:8081/index
2019-05-14 14:53:37 -HTTP METHOD : GET
2019-05-14 14:53:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-14 14:53:37 -参数 : [{}]
2019-05-14 14:53:37 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-14 14:53:37 -==> Parameters: 1(Long)
2019-05-14 14:53:37 -<==      Total: 49
2019-05-14 14:53:37 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-14 14:53:37 -==> Parameters: 138(Long)
2019-05-14 14:53:37 -<==      Total: 1
2019-05-14 14:53:37 -耗时 : 27
2019-05-14 14:53:37 -返回值 : index_v1
2019-05-14 14:53:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 14:53:37 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-14 14:53:37.786(Timestamp)
2019-05-14 14:53:37 -请求地址 : http://localhost:8081/main
2019-05-14 14:53:37 -HTTP METHOD : GET
2019-05-14 14:53:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 14:53:37 -参数 : []
2019-05-14 14:53:37 -耗时 : 0
2019-05-14 14:53:37 -返回值 : main
2019-05-14 14:53:38 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-14 14:53:38 -HTTP METHOD : GET
2019-05-14 14:53:38 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-14 14:53:38 -参数 : []
2019-05-14 14:53:38 -请求地址 : http://localhost:8081/main
2019-05-14 14:53:38 -HTTP METHOD : GET
2019-05-14 14:53:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 14:53:38 -参数 : []
2019-05-14 14:53:38 -耗时 : 1
2019-05-14 14:53:38 -返回值 : main
2019-05-14 14:53:38 -<==    Updates: 1
2019-05-14 14:53:38 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-14 14:53:38 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-14 14:53:38 -<==      Total: 0
2019-05-14 14:53:38 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-14 14:53:38 -==> Parameters: 1(Long), 0(String)
2019-05-14 14:53:38 -<==      Total: 1
2019-05-14 14:53:38 -耗时 : 51
2019-05-14 14:53:38 -返回值 : com.bootdo.common.utils.PageUtils@3f6a4fb7
2019-05-14 14:53:44 -请求地址 : http://localhost:8081/print/print/printEdit/1
2019-05-14 14:53:44 -HTTP METHOD : GET
2019-05-14 14:53:44 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printEdit
2019-05-14 14:53:44 -参数 : [1, {}]
2019-05-14 14:53:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-05-14 14:53:44 -==> Parameters: 1(Long)
2019-05-14 14:53:44 -<==      Total: 1
2019-05-14 14:53:44 -耗时 : 109
2019-05-14 14:53:44 -返回值 : print/print/printEdit
2019-05-14 14:55:50 -请求地址 : http://localhost:8081/print/print/printEdit/1
2019-05-14 14:55:50 -HTTP METHOD : GET
2019-05-14 14:55:50 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printEdit
2019-05-14 14:55:50 -参数 : [1, {}]
2019-05-14 14:55:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-05-14 14:55:50 -==> Parameters: 1(Long)
2019-05-14 14:55:50 -<==      Total: 1
2019-05-14 14:55:50 -耗时 : 7
2019-05-14 14:55:50 -返回值 : print/print/printEdit
2019-05-14 14:56:38 -请求地址 : http://localhost:8081/index
2019-05-14 14:56:38 -HTTP METHOD : GET
2019-05-14 14:56:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-14 14:56:38 -参数 : [{}]
2019-05-14 14:56:38 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-14 14:56:38 -==> Parameters: 1(Long)
2019-05-14 14:56:38 -<==      Total: 49
2019-05-14 14:56:38 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-14 14:56:38 -==> Parameters: 138(Long)
2019-05-14 14:56:38 -<==      Total: 1
2019-05-14 14:56:38 -耗时 : 62
2019-05-14 14:56:38 -返回值 : index_v1
2019-05-14 14:56:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 14:56:38 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 62(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-14 14:56:38.599(Timestamp)
2019-05-14 14:56:38 -<==    Updates: 1
2019-05-14 14:56:38 -请求地址 : http://localhost:8081/main
2019-05-14 14:56:38 -HTTP METHOD : GET
2019-05-14 14:56:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 14:56:38 -参数 : []
2019-05-14 14:56:38 -耗时 : 0
2019-05-14 14:56:38 -返回值 : main
2019-05-14 14:56:38 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-14 14:56:38 -HTTP METHOD : GET
2019-05-14 14:56:38 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-14 14:56:38 -参数 : []
2019-05-14 14:56:38 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-14 14:56:38 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-14 14:56:38 -<==      Total: 0
2019-05-14 14:56:38 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-14 14:56:38 -==> Parameters: 1(Long), 0(String)
2019-05-14 14:56:38 -<==      Total: 1
2019-05-14 14:56:38 -耗时 : 8
2019-05-14 14:56:38 -返回值 : com.bootdo.common.utils.PageUtils@4396c358
2019-05-14 14:56:39 -请求地址 : http://localhost:8081/main
2019-05-14 14:56:39 -HTTP METHOD : GET
2019-05-14 14:56:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 14:56:39 -参数 : []
2019-05-14 14:56:39 -耗时 : 1
2019-05-14 14:56:39 -返回值 : main
2019-05-14 14:56:46 -请求地址 : http://localhost:8081/charts/countDD
2019-05-14 14:56:46 -HTTP METHOD : GET
2019-05-14 14:56:46 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-05-14 14:56:46 -参数 : []
2019-05-14 14:56:46 -耗时 : 12
2019-05-14 14:56:46 -返回值 : charts/countDD
2019-05-14 14:56:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 14:56:47 -HTTP METHOD : GET
2019-05-14 14:56:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 14:56:47 -参数 : [userType]
2019-05-14 14:56:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 14:56:47 -==> Parameters: userType(String)
2019-05-14 14:56:47 -<==      Total: 4
2019-05-14 14:56:47 -耗时 : 29
2019-05-14 14:56:47 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 14:56:48 -请求地址 : http://localhost:8081/charts/tableDD
2019-05-14 14:56:48 -HTTP METHOD : GET
2019-05-14 14:56:48 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-05-14 14:56:48 -参数 : []
2019-05-14 14:56:48 -耗时 : 9
2019-05-14 14:56:48 -返回值 : charts/tableDD
2019-05-14 14:57:00 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-14 14:57:00 -HTTP METHOD : GET
2019-05-14 14:57:00 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-14 14:57:00 -参数 : []
2019-05-14 14:57:00 -耗时 : 0
2019-05-14 14:57:00 -返回值 : system/dept/deptTree
2019-05-14 14:57:00 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-14 14:57:00 -HTTP METHOD : GET
2019-05-14 14:57:00 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-14 14:57:00 -参数 : []
2019-05-14 14:57:00 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-14 14:57:00 -==> Parameters: 
2019-05-14 14:57:00 -<==      Total: 3
2019-05-14 14:57:00 -耗时 : 16
2019-05-14 14:57:00 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-14 14:57:02 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-05-14 14:57:02 -HTTP METHOD : POST
2019-05-14 14:57:02 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-05-14 14:57:02 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@6214f44d, com.bootdo.moneyLog.vo.WaterLogVo@fb9c8cb, com.bootdo.moneyLog.vo.HeatLogVo@37efe864]
2019-05-14 14:57:02 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:57:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:57:02 -<==      Total: 1
2019-05-14 14:57:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:57:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:57:02 -<==      Total: 1
2019-05-14 14:57:02 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:57:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:57:02 -<==      Total: 1
2019-05-14 14:57:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:57:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:57:02 -<==      Total: 1
2019-05-14 14:57:02 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:57:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:57:02 -<==      Total: 1
2019-05-14 14:57:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:57:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:57:02 -<==      Total: 1
2019-05-14 14:57:02 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:57:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:57:02 -<==      Total: 1
2019-05-14 14:57:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:57:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:57:02 -<==      Total: 1
2019-05-14 14:57:02 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:57:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:57:02 -<==      Total: 1
2019-05-14 14:57:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:57:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:57:02 -<==      Total: 1
2019-05-14 14:57:02 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:57:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:57:02 -<==      Total: 1
2019-05-14 14:57:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:57:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:57:02 -<==      Total: 1
2019-05-14 14:57:02 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:57:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:57:02 -<==      Total: 1
2019-05-14 14:57:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:57:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:57:02 -<==      Total: 1
2019-05-14 14:57:02 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:57:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:57:02 -<==      Total: 1
2019-05-14 14:57:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:57:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:57:02 -<==      Total: 1
2019-05-14 14:57:02 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:57:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:57:02 -<==      Total: 1
2019-05-14 14:57:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:57:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:57:02 -<==      Total: 1
2019-05-14 14:57:02 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:57:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:57:02 -<==      Total: 1
2019-05-14 14:57:02 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:57:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:57:02 -<==      Total: 1
2019-05-14 14:57:02 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-14 14:57:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:57:02 -<==      Total: 1
2019-05-14 14:57:02 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-14 14:57:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:57:02 -<==      Total: 1
2019-05-14 14:57:02 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-14 14:57:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:57:02 -<==      Total: 1
2019-05-14 14:57:02 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-14 14:57:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:57:02 -<==      Total: 1
2019-05-14 14:57:02 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-14 14:57:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:57:02 -<==      Total: 1
2019-05-14 14:57:02 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-14 14:57:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:57:02 -<==      Total: 1
2019-05-14 14:57:02 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-14 14:57:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:57:02 -<==      Total: 1
2019-05-14 14:57:02 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-14 14:57:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:57:02 -<==      Total: 1
2019-05-14 14:57:02 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-14 14:57:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:57:02 -<==      Total: 1
2019-05-14 14:57:02 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-14 14:57:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:57:02 -<==      Total: 1
2019-05-14 14:57:02 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-14 14:57:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:57:02 -<==      Total: 1
2019-05-14 14:57:02 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-14 14:57:02 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:57:02 -<==      Total: 1
2019-05-14 14:57:02 -耗时 : 197
2019-05-14 14:57:02 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=0, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=120, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=2, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=0, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-05-14 14:57:25 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-14 14:57:30 -请求地址 : http://localhost:8081/index
2019-05-14 14:57:30 -HTTP METHOD : GET
2019-05-14 14:57:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-14 14:57:30 -参数 : [{}]
2019-05-14 14:57:30 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-14 14:57:30 -==> Parameters: 1(Long)
2019-05-14 14:57:30 -<==      Total: 49
2019-05-14 14:57:30 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-14 14:57:30 -==> Parameters: 138(Long)
2019-05-14 14:57:30 -<==      Total: 1
2019-05-14 14:57:30 -耗时 : 24
2019-05-14 14:57:30 -返回值 : index_v1
2019-05-14 14:57:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 14:57:30 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-14 14:57:30.925(Timestamp)
2019-05-14 14:57:31 -请求地址 : http://localhost:8081/main
2019-05-14 14:57:31 -HTTP METHOD : GET
2019-05-14 14:57:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 14:57:31 -参数 : []
2019-05-14 14:57:31 -耗时 : 0
2019-05-14 14:57:31 -返回值 : main
2019-05-14 14:57:31 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-14 14:57:31 -HTTP METHOD : GET
2019-05-14 14:57:31 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-14 14:57:31 -参数 : []
2019-05-14 14:57:31 -<==    Updates: 1
2019-05-14 14:57:31 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-14 14:57:31 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-14 14:57:31 -<==      Total: 0
2019-05-14 14:57:31 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-14 14:57:31 -==> Parameters: 1(Long), 0(String)
2019-05-14 14:57:31 -<==      Total: 1
2019-05-14 14:57:31 -耗时 : 9
2019-05-14 14:57:31 -返回值 : com.bootdo.common.utils.PageUtils@74e98157
2019-05-14 14:57:31 -请求地址 : http://localhost:8081/main
2019-05-14 14:57:31 -HTTP METHOD : GET
2019-05-14 14:57:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 14:57:31 -参数 : []
2019-05-14 14:57:31 -耗时 : 1
2019-05-14 14:57:31 -返回值 : main
2019-05-14 14:57:35 -请求地址 : http://localhost:8081/charts/countDD
2019-05-14 14:57:35 -HTTP METHOD : GET
2019-05-14 14:57:35 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-05-14 14:57:35 -参数 : []
2019-05-14 14:57:35 -耗时 : 0
2019-05-14 14:57:35 -返回值 : charts/countDD
2019-05-14 14:57:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 14:57:35 -HTTP METHOD : GET
2019-05-14 14:57:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 14:57:35 -参数 : [userType]
2019-05-14 14:57:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 14:57:35 -==> Parameters: userType(String)
2019-05-14 14:57:35 -<==      Total: 4
2019-05-14 14:57:35 -耗时 : 141
2019-05-14 14:57:35 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 14:57:36 -请求地址 : http://localhost:8081/charts/tableDD
2019-05-14 14:57:36 -HTTP METHOD : GET
2019-05-14 14:57:36 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-05-14 14:57:36 -参数 : []
2019-05-14 14:57:36 -耗时 : 1
2019-05-14 14:57:36 -返回值 : charts/tableDD
2019-05-14 14:57:42 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-14 14:57:42 -HTTP METHOD : GET
2019-05-14 14:57:42 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-14 14:57:42 -参数 : []
2019-05-14 14:57:42 -耗时 : 0
2019-05-14 14:57:42 -返回值 : system/dept/deptTree
2019-05-14 14:57:43 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-14 14:57:43 -HTTP METHOD : GET
2019-05-14 14:57:43 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-14 14:57:43 -参数 : []
2019-05-14 14:57:43 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-14 14:57:43 -==> Parameters: 
2019-05-14 14:57:43 -<==      Total: 3
2019-05-14 14:57:43 -耗时 : 4
2019-05-14 14:57:43 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-14 14:58:04 -请求地址 : http://localhost:8081/charts/tableDD
2019-05-14 14:58:04 -HTTP METHOD : GET
2019-05-14 14:58:04 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-05-14 14:58:04 -参数 : []
2019-05-14 14:58:04 -耗时 : 0
2019-05-14 14:58:04 -返回值 : charts/tableDD
2019-05-14 14:58:12 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-14 14:58:12 -HTTP METHOD : GET
2019-05-14 14:58:12 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-14 14:58:12 -参数 : []
2019-05-14 14:58:12 -耗时 : 1
2019-05-14 14:58:12 -返回值 : system/dept/deptTree
2019-05-14 14:58:12 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-14 14:58:12 -HTTP METHOD : GET
2019-05-14 14:58:12 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-14 14:58:12 -参数 : []
2019-05-14 14:58:12 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-14 14:58:12 -==> Parameters: 
2019-05-14 14:58:12 -<==      Total: 3
2019-05-14 14:58:12 -耗时 : 3
2019-05-14 14:58:12 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-14 14:58:17 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-05-14 14:58:17 -HTTP METHOD : POST
2019-05-14 14:58:17 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-05-14 14:58:17 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@669e7250, com.bootdo.moneyLog.vo.WaterLogVo@52934bbb, com.bootdo.moneyLog.vo.HeatLogVo@6b46a286]
2019-05-14 14:58:17 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:58:17 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:58:17 -<==      Total: 1
2019-05-14 14:58:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:58:17 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:58:17 -<==      Total: 1
2019-05-14 14:58:17 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:58:17 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:58:17 -<==      Total: 1
2019-05-14 14:58:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:58:17 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:58:17 -<==      Total: 1
2019-05-14 14:58:17 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:58:17 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:58:17 -<==      Total: 1
2019-05-14 14:58:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:58:17 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:58:17 -<==      Total: 1
2019-05-14 14:58:17 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:58:17 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:58:17 -<==      Total: 1
2019-05-14 14:58:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:58:17 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:58:17 -<==      Total: 1
2019-05-14 14:58:17 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:58:17 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:58:17 -<==      Total: 1
2019-05-14 14:58:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:58:17 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:58:17 -<==      Total: 1
2019-05-14 14:58:17 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:58:17 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:58:17 -<==      Total: 1
2019-05-14 14:58:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:58:17 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:58:17 -<==      Total: 1
2019-05-14 14:58:17 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:58:17 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:58:17 -<==      Total: 1
2019-05-14 14:58:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:58:17 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:58:17 -<==      Total: 1
2019-05-14 14:58:17 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:58:17 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:58:17 -<==      Total: 1
2019-05-14 14:58:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:58:17 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:58:17 -<==      Total: 1
2019-05-14 14:58:17 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:58:17 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:58:17 -<==      Total: 1
2019-05-14 14:58:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:58:17 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:58:17 -<==      Total: 1
2019-05-14 14:58:17 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:58:17 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:58:17 -<==      Total: 1
2019-05-14 14:58:17 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:58:17 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:58:17 -<==      Total: 1
2019-05-14 14:58:17 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-14 14:58:17 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:58:17 -<==      Total: 1
2019-05-14 14:58:17 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-14 14:58:17 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:58:17 -<==      Total: 1
2019-05-14 14:58:17 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-14 14:58:17 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:58:17 -<==      Total: 1
2019-05-14 14:58:17 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-14 14:58:17 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:58:17 -<==      Total: 1
2019-05-14 14:58:17 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-14 14:58:17 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:58:17 -<==      Total: 1
2019-05-14 14:58:17 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-14 14:58:17 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:58:17 -<==      Total: 1
2019-05-14 14:58:17 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-14 14:58:17 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:58:17 -<==      Total: 1
2019-05-14 14:58:17 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-14 14:58:17 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:58:17 -<==      Total: 1
2019-05-14 14:58:17 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-14 14:58:17 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:58:17 -<==      Total: 1
2019-05-14 14:58:17 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-14 14:58:17 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:58:17 -<==      Total: 1
2019-05-14 14:58:17 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-14 14:58:17 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:58:17 -<==      Total: 1
2019-05-14 14:58:17 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-14 14:58:17 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:58:17 -<==      Total: 1
2019-05-14 14:58:17 -耗时 : 80
2019-05-14 14:58:17 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=0, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=120, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=2, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=0, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-05-14 14:58:29 -请求地址 : http://localhost:8081/charts/tableDD
2019-05-14 14:58:29 -HTTP METHOD : GET
2019-05-14 14:58:29 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-05-14 14:58:29 -参数 : []
2019-05-14 14:58:29 -耗时 : 1
2019-05-14 14:58:29 -返回值 : charts/tableDD
2019-05-14 14:58:30 -请求地址 : http://localhost:8081/charts/countMM
2019-05-14 14:58:30 -HTTP METHOD : GET
2019-05-14 14:58:30 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-05-14 14:58:30 -参数 : []
2019-05-14 14:58:30 -耗时 : 9
2019-05-14 14:58:30 -返回值 : charts/countMM
2019-05-14 14:58:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 14:58:30 -HTTP METHOD : GET
2019-05-14 14:58:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 14:58:30 -参数 : [userType]
2019-05-14 14:58:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 14:58:30 -==> Parameters: userType(String)
2019-05-14 14:58:30 -<==      Total: 4
2019-05-14 14:58:30 -耗时 : 4
2019-05-14 14:58:30 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 14:58:35 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-14 14:58:35 -HTTP METHOD : GET
2019-05-14 14:58:35 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 14:58:35 -参数 : []
2019-05-14 14:58:35 -耗时 : 11
2019-05-14 14:58:35 -返回值 : charts/tableElecMM
2019-05-14 14:58:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 14:58:35 -HTTP METHOD : GET
2019-05-14 14:58:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 14:58:35 -参数 : [userType]
2019-05-14 14:58:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 14:58:35 -==> Parameters: userType(String)
2019-05-14 14:58:35 -<==      Total: 4
2019-05-14 14:58:35 -耗时 : 5
2019-05-14 14:58:35 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 14:58:39 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-14 14:58:39 -HTTP METHOD : GET
2019-05-14 14:58:39 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-14 14:58:39 -参数 : []
2019-05-14 14:58:39 -耗时 : 1
2019-05-14 14:58:39 -返回值 : system/dept/deptTree
2019-05-14 14:58:39 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-14 14:58:39 -HTTP METHOD : GET
2019-05-14 14:58:39 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-14 14:58:39 -参数 : []
2019-05-14 14:58:39 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-14 14:58:39 -==> Parameters: 
2019-05-14 14:58:39 -<==      Total: 3
2019-05-14 14:58:39 -耗时 : 3
2019-05-14 14:58:39 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-14 14:58:49 -请求地址 : http://localhost:8081/charts/tableElecMM/tableElecMM
2019-05-14 14:58:49 -HTTP METHOD : POST
2019-05-14 14:58:49 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 14:58:49 -参数 : [com.bootdo.elec.vo.ElecVo@19c6b8db, com.bootdo.moneyLog.vo.ElecLogVo@27de9277]
2019-05-14 14:58:49 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT COUNT(elec_type = "1") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "1" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT COUNT(elec_type = "2") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "2" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and PERIOD_DIFF( date_format(CONCAT(?,-01) , '%Y%m' ) , date_format( CONCAT(create_time,"-01"), '%Y%m' ) ) =1 and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT COUNT(elec_type = "3") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "3" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT COUNT(elec_type = "4") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "4" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT COUNT(elec_type = "5") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "5" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT COUNT(elec_type = "6") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "6" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT COUNT(elec_type = "7") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "7" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT COUNT(elec_type = "8") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "8" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT COUNT(elec_type = "9") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "9" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT COUNT(elec_type = "10") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "10" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM >= 0 and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM >= 0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE ELEC_SUM < 0 and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_SUM <0),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(elec_amount),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT DISTINCT elec_price FROM elec WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT COUNT(elec_type = "11") FROM ELEC WHERE `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_COST),0) FROM ELEC WHERE elec_type = "11" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(ifnull(ifnull(COUNT(ID),0),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(ifnull(COUNT(ID),0),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "1" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "2" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "3" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "4" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "5" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "6" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "7" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "8" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "9" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "10" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE ELEC_TYPE = "11" and `create_time` = ? and user_org = ? 
2019-05-14 14:58:49 -==> Parameters: 2019-03(String), 2(String)
2019-05-14 14:58:49 -<==      Total: 1
2019-05-14 14:58:49 -耗时 : 360
2019-05-14 14:58:49 -返回值 : {ZElecSumPre=1, SumG1ElecLog=80, SElecSumPre=1, SumG2ElecLog=70, CountWSElecLog=1, CountPrehu=99, CountAmount=206, MStotalhu=11, CountWMElecLog=1, SElecPrice=1, G1ElecAmount=100, WSElecPrice=1, WSElecAmount=0, MElecAmount=1, SumG3ElecLog=90, MMElecCostCount=11, CountPreyu=9, CountSElecLog=0, MMElecAmount=1, CountZElecLog=0, MElecPrice=1, MStotalyu=1, SElecCostSum=0, SumSElecLog=0, G1totalhu=11, G3totalhu=11, ZElecSumOwe=0, ZElecAmount=1, G3ElecCostSum=1, WMElecPrice=1, MMtotalhu=11, ZElecPrice=1, SElecCostCount=11, MElecCostSum=1, SumMElecLog=152, G1totalyu=1, G3totalyu=1, MSElecSumOwe=0, WGElecPrice=1, SumMMElecLog=0, SElecSumOwe=0, SElecAmount=0, SumMSElecLog=0, MElecCountPre=9, WSElecSumOwe=0, WMElecSumPre=1, CountMMElecLog=0, G1ElecPrice=1, G3ElecAmount=1, WGElecAmount=0, CountMElecLog=3, SElecCountPre=9, G1ElecSumOwe=0, MMtotalyu=1, WMElecAmount=1, ZElecCostSum=1, MElecCountOwe=2, Mtotalhu=11, G2totalhu=11, WStotalhu=11, G3ElecCountOwe=2, G2ElecCountOwe=2, G3ElecCostCount=11, WSElecSumPre=1, G1ElecCountOwe=2, SElecCountOwe=2, WSElecCostSum=0, Mtotalyu=1, WMElecSumOwe=0, G2totalyu=1, G1ElecSumPre=1, CountG2ElecLog=1, CountG3ElecLog=1, WMtotalyu=1, WGtotalhu=11, SumWSElecLog=80, CountG1ElecLog=1, ZElecCountOwe=2, SumWMElecLog=60, WGElecCostCount=11, G3ElecSumPre=0, G1ElecCostSum=100, WGtotalyu=1, G1ElecCostCount=11, WStotalyu=1, CountOweyu=2, MElecCostCount=11, WGElecCountPre=9, MSElecCostSum=1, WGElecSumOwe=0, WMElecCostSum=1, G2ElecPrice=1, CountLogyu=542, CountOwehu=22, G3ElecSumOwe=1, ZElecCostCount=11, MSElecCostCount=11, CountMSElecLog=0, Ztotalyu=1, G1ElecCountPre=9, G2ElecCountPre=9, WGElecSumPre=1, WGElecCountOwe=2, CountLoghu=9, MMElecPrice=1, ZElecCountPre=9, G3ElecPrice=1, CountAllyu=11, G3ElecCountPre=9, MSElecAmount=1, WGElecCostSum=0, Ztotalhu=11, WMElecCountOwe=2, MMElecCountOwe=2, CountAllhu=121, CountCostyu=206, Stotalhu=11, CountPrice=11, MSElecPrice=1, MSElecCountPre=9, G2ElecSumPre=1, WSElecCountOwe=2, MElecSumOwe=1, G2ElecCostSum=100, CountCosthu=121, MMElecSumOwe=0, WSElecCountPre=9, MMElecCountPre=9, Stotalyu=1, CountWGElecLog=1, MSElecSumPre=1, WSElecCostCount=11, SumZElecLog=0, SumWGElecLog=10, G2ElecCostCount=11, WMElecCountPre=9, G2ElecAmount=100, MSElecCountOwe=2, WMtotalhu=11, MElecSumPre=0, MMElecSumPre=1, MMElecCostSum=1, G2ElecSumOwe=0, WMElecCostCount=11}
2019-05-14 14:59:04 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-14 14:59:04 -HTTP METHOD : GET
2019-05-14 14:59:04 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-14 14:59:04 -参数 : []
2019-05-14 14:59:04 -耗时 : 1
2019-05-14 14:59:04 -返回值 : system/dept/deptTree
2019-05-14 14:59:04 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-14 14:59:04 -HTTP METHOD : GET
2019-05-14 14:59:04 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-14 14:59:04 -参数 : []
2019-05-14 14:59:04 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-14 14:59:04 -==> Parameters: 
2019-05-14 14:59:04 -<==      Total: 3
2019-05-14 14:59:04 -耗时 : 4
2019-05-14 14:59:04 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-14 14:59:06 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-05-14 14:59:06 -HTTP METHOD : POST
2019-05-14 14:59:06 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-05-14 14:59:06 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@72cdd8b5, com.bootdo.moneyLog.vo.WaterLogVo@569f5ac2, com.bootdo.moneyLog.vo.HeatLogVo@163ff14e]
2019-05-14 14:59:06 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:59:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:59:06 -<==      Total: 1
2019-05-14 14:59:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:59:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:59:06 -<==      Total: 1
2019-05-14 14:59:06 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:59:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:59:06 -<==      Total: 1
2019-05-14 14:59:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:59:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:59:06 -<==      Total: 1
2019-05-14 14:59:06 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:59:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:59:06 -<==      Total: 1
2019-05-14 14:59:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:59:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:59:06 -<==      Total: 1
2019-05-14 14:59:06 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:59:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:59:06 -<==      Total: 1
2019-05-14 14:59:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:59:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:59:06 -<==      Total: 1
2019-05-14 14:59:06 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:59:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:59:06 -<==      Total: 1
2019-05-14 14:59:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:59:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:59:06 -<==      Total: 1
2019-05-14 14:59:06 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:59:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:59:06 -<==      Total: 1
2019-05-14 14:59:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:59:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:59:06 -<==      Total: 1
2019-05-14 14:59:06 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:59:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:59:06 -<==      Total: 1
2019-05-14 14:59:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:59:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:59:06 -<==      Total: 1
2019-05-14 14:59:06 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:59:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:59:06 -<==      Total: 1
2019-05-14 14:59:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:59:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:59:06 -<==      Total: 1
2019-05-14 14:59:06 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:59:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:59:06 -<==      Total: 1
2019-05-14 14:59:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:59:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:59:06 -<==      Total: 1
2019-05-14 14:59:06 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:59:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:59:06 -<==      Total: 1
2019-05-14 14:59:06 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 14:59:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:59:06 -<==      Total: 1
2019-05-14 14:59:06 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-14 14:59:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:59:06 -<==      Total: 1
2019-05-14 14:59:06 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-14 14:59:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:59:06 -<==      Total: 1
2019-05-14 14:59:06 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-14 14:59:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:59:06 -<==      Total: 1
2019-05-14 14:59:06 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-14 14:59:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:59:06 -<==      Total: 1
2019-05-14 14:59:06 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-14 14:59:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:59:06 -<==      Total: 1
2019-05-14 14:59:06 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-14 14:59:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:59:06 -<==      Total: 1
2019-05-14 14:59:06 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-14 14:59:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:59:06 -<==      Total: 1
2019-05-14 14:59:06 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-14 14:59:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:59:06 -<==      Total: 1
2019-05-14 14:59:06 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-14 14:59:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:59:06 -<==      Total: 1
2019-05-14 14:59:06 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-14 14:59:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:59:06 -<==      Total: 1
2019-05-14 14:59:06 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-14 14:59:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:59:06 -<==      Total: 1
2019-05-14 14:59:06 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-14 14:59:06 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 14:59:06 -<==      Total: 1
2019-05-14 14:59:06 -耗时 : 76
2019-05-14 14:59:06 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=0, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=120, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=2, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=0, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-05-14 15:05:51 -请求地址 : http://localhost:8081/index
2019-05-14 15:05:51 -HTTP METHOD : GET
2019-05-14 15:05:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-14 15:05:51 -参数 : [{}]
2019-05-14 15:05:51 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-14 15:05:51 -==> Parameters: 1(Long)
2019-05-14 15:05:51 -<==      Total: 49
2019-05-14 15:05:51 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-14 15:05:51 -==> Parameters: 138(Long)
2019-05-14 15:05:51 -<==      Total: 1
2019-05-14 15:05:51 -耗时 : 30
2019-05-14 15:05:51 -返回值 : index_v1
2019-05-14 15:05:51 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 15:05:51 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 30(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-14 15:05:51.28(Timestamp)
2019-05-14 15:05:51 -请求地址 : http://localhost:8081/main
2019-05-14 15:05:51 -HTTP METHOD : GET
2019-05-14 15:05:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 15:05:51 -参数 : []
2019-05-14 15:05:51 -耗时 : 0
2019-05-14 15:05:51 -返回值 : main
2019-05-14 15:05:51 -<==    Updates: 1
2019-05-14 15:05:51 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-14 15:05:51 -HTTP METHOD : GET
2019-05-14 15:05:51 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-14 15:05:51 -参数 : []
2019-05-14 15:05:51 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-14 15:05:51 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-14 15:05:51 -<==      Total: 0
2019-05-14 15:05:51 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-14 15:05:51 -==> Parameters: 1(Long), 0(String)
2019-05-14 15:05:51 -<==      Total: 1
2019-05-14 15:05:51 -耗时 : 9
2019-05-14 15:05:51 -返回值 : com.bootdo.common.utils.PageUtils@75b9c808
2019-05-14 15:05:51 -请求地址 : http://localhost:8081/main
2019-05-14 15:05:51 -HTTP METHOD : GET
2019-05-14 15:05:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 15:05:51 -参数 : []
2019-05-14 15:05:51 -耗时 : 4
2019-05-14 15:05:51 -返回值 : main
2019-05-14 15:05:55 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-14 15:05:55 -==> Parameters: 1(Long)
2019-05-14 15:05:55 -<==      Total: 93
2019-05-14 15:05:55 -请求地址 : http://localhost:8081/print/print
2019-05-14 15:05:55 -HTTP METHOD : GET
2019-05-14 15:05:55 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-05-14 15:05:55 -参数 : []
2019-05-14 15:05:55 -耗时 : 1
2019-05-14 15:05:55 -返回值 : print/print/print
2019-05-14 15:05:56 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 15:05:56 -HTTP METHOD : GET
2019-05-14 15:05:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 15:05:56 -参数 : [userType]
2019-05-14 15:05:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 15:05:56 -==> Parameters: userType(String)
2019-05-14 15:05:56 -<==      Total: 4
2019-05-14 15:05:56 -耗时 : 5
2019-05-14 15:05:56 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 15:05:56 -请求地址 : http://localhost:8081/print/print/list
2019-05-14 15:05:56 -HTTP METHOD : GET
2019-05-14 15:05:56 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-05-14 15:05:56 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-05-14 15:05:56 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-05-14 15:05:56 -==> Parameters: 0(Integer), 10(Integer)
2019-05-14 15:05:56 -<==      Total: 6
2019-05-14 15:05:56 -==>  Preparing: select count(*) from print 
2019-05-14 15:05:56 -==> Parameters: 
2019-05-14 15:05:56 -<==      Total: 1
2019-05-14 15:05:56 -耗时 : 15
2019-05-14 15:05:56 -返回值 : com.bootdo.common.utils.PageUtils@5febef8b
2019-05-14 15:05:57 -请求地址 : http://localhost:8081/print/print/printEdit/1
2019-05-14 15:05:57 -HTTP METHOD : GET
2019-05-14 15:05:57 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printEdit
2019-05-14 15:05:57 -参数 : [1, {}]
2019-05-14 15:05:57 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-05-14 15:05:57 -==> Parameters: 1(Long)
2019-05-14 15:05:57 -<==      Total: 1
2019-05-14 15:05:57 -耗时 : 4
2019-05-14 15:05:57 -返回值 : print/print/printEdit
2019-05-14 15:09:07 -请求地址 : http://localhost:8081/print/print/printEdit/1
2019-05-14 15:09:07 -HTTP METHOD : GET
2019-05-14 15:09:07 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printEdit
2019-05-14 15:09:07 -参数 : [1, {}]
2019-05-14 15:09:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-05-14 15:09:07 -==> Parameters: 1(Long)
2019-05-14 15:09:07 -<==      Total: 1
2019-05-14 15:09:07 -耗时 : 6
2019-05-14 15:09:07 -返回值 : print/print/printEdit
2019-05-14 15:09:39 -请求地址 : http://localhost:8081/index
2019-05-14 15:09:39 -HTTP METHOD : GET
2019-05-14 15:09:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-14 15:09:39 -参数 : [{}]
2019-05-14 15:09:39 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-14 15:09:39 -==> Parameters: 1(Long)
2019-05-14 15:09:39 -<==      Total: 49
2019-05-14 15:09:39 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-14 15:09:39 -==> Parameters: 138(Long)
2019-05-14 15:09:39 -<==      Total: 1
2019-05-14 15:09:39 -耗时 : 18
2019-05-14 15:09:39 -返回值 : index_v1
2019-05-14 15:09:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 15:09:39 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 18(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-14 15:09:39.539(Timestamp)
2019-05-14 15:09:39 -请求地址 : http://localhost:8081/main
2019-05-14 15:09:39 -HTTP METHOD : GET
2019-05-14 15:09:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 15:09:39 -参数 : []
2019-05-14 15:09:39 -耗时 : 0
2019-05-14 15:09:39 -返回值 : main
2019-05-14 15:09:39 -<==    Updates: 1
2019-05-14 15:09:39 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-14 15:09:39 -HTTP METHOD : GET
2019-05-14 15:09:39 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-14 15:09:39 -参数 : []
2019-05-14 15:09:39 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-14 15:09:39 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-14 15:09:39 -<==      Total: 0
2019-05-14 15:09:39 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-14 15:09:39 -==> Parameters: 1(Long), 0(String)
2019-05-14 15:09:39 -<==      Total: 1
2019-05-14 15:09:39 -耗时 : 6
2019-05-14 15:09:39 -返回值 : com.bootdo.common.utils.PageUtils@587076e9
2019-05-14 15:09:39 -请求地址 : http://localhost:8081/main
2019-05-14 15:09:39 -HTTP METHOD : GET
2019-05-14 15:09:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 15:09:39 -参数 : []
2019-05-14 15:09:39 -耗时 : 0
2019-05-14 15:09:39 -返回值 : main
2019-05-14 15:09:46 -请求地址 : http://localhost:8081/charts/countDD
2019-05-14 15:09:46 -HTTP METHOD : GET
2019-05-14 15:09:46 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-05-14 15:09:46 -参数 : []
2019-05-14 15:09:46 -耗时 : 0
2019-05-14 15:09:46 -返回值 : charts/countDD
2019-05-14 15:09:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 15:09:46 -HTTP METHOD : GET
2019-05-14 15:09:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 15:09:46 -参数 : [userType]
2019-05-14 15:09:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 15:09:46 -==> Parameters: userType(String)
2019-05-14 15:09:46 -<==      Total: 4
2019-05-14 15:09:46 -耗时 : 3
2019-05-14 15:09:46 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 15:09:46 -请求地址 : http://localhost:8081/charts/tableDD
2019-05-14 15:09:46 -HTTP METHOD : GET
2019-05-14 15:09:46 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-05-14 15:09:46 -参数 : []
2019-05-14 15:09:46 -耗时 : 0
2019-05-14 15:09:46 -返回值 : charts/tableDD
2019-05-14 15:09:52 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-14 15:09:52 -HTTP METHOD : GET
2019-05-14 15:09:52 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-14 15:09:52 -参数 : []
2019-05-14 15:09:52 -耗时 : 1
2019-05-14 15:09:52 -返回值 : system/dept/deptTree
2019-05-14 15:09:52 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-14 15:09:52 -HTTP METHOD : GET
2019-05-14 15:09:52 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-14 15:09:52 -参数 : []
2019-05-14 15:09:52 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-14 15:09:52 -==> Parameters: 
2019-05-14 15:09:52 -<==      Total: 3
2019-05-14 15:09:52 -耗时 : 4
2019-05-14 15:09:52 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-14 15:20:02 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 7 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(6)-CONNECTED(6)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 72], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 394]
2019-05-14 15:44:30 -请求地址 : http://localhost:8081/login;JSESSIONID=7f70dfbf-3d24-475d-b257-5898780c8077
2019-05-14 15:44:30 -HTTP METHOD : GET
2019-05-14 15:44:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-14 15:44:30 -参数 : [{}]
2019-05-14 15:44:30 -耗时 : 2
2019-05-14 15:44:30 -返回值 : login
2019-05-14 15:44:30 -请求地址 : http://localhost:8081/login;JSESSIONID=7f70dfbf-3d24-475d-b257-5898780c8077
2019-05-14 15:44:30 -HTTP METHOD : GET
2019-05-14 15:44:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-14 15:44:30 -参数 : [{}]
2019-05-14 15:44:30 -耗时 : 0
2019-05-14 15:44:30 -返回值 : login
2019-05-14 15:44:30 -请求地址 : http://localhost:8081/getVerify
2019-05-14 15:44:30 -HTTP METHOD : GET
2019-05-14 15:44:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-14 15:44:30 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1964cf63, org.apache.shiro.web.servlet.ShiroHttpServletResponse@23c2fc11]
2019-05-14 15:44:30 -5025
2019-05-14 15:44:30 -耗时 : 40
2019-05-14 15:44:30 -返回值 : null
2019-05-14 15:44:30 -请求地址 : http://localhost:8081/getVerify
2019-05-14 15:44:30 -HTTP METHOD : GET
2019-05-14 15:44:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-14 15:44:30 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@35df7293, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1f000ba6]
2019-05-14 15:44:30 -9810
2019-05-14 15:44:30 -耗时 : 8
2019-05-14 15:44:30 -返回值 : null
2019-05-14 15:44:36 -请求地址 : http://localhost:8081/login
2019-05-14 15:44:36 -HTTP METHOD : POST
2019-05-14 15:44:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-14 15:44:36 -参数 : [admin, 111111, 9810, org.apache.shiro.web.servlet.ShiroHttpServletRequest@75f664a4]
2019-05-14 15:44:36 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-14 15:44:36 -==> Parameters: admin(String)
2019-05-14 15:44:36 -<==      Total: 1
2019-05-14 15:44:36 -耗时 : 67
2019-05-14 15:44:36 -返回值 : {msg=操作成功, code=0}
2019-05-14 15:44:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 15:44:36 -==> Parameters: 1(Long), admin(String), 登录(String), 67(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-14 15:44:36.404(Timestamp)
2019-05-14 15:44:36 -请求地址 : http://localhost:8081/index
2019-05-14 15:44:36 -HTTP METHOD : GET
2019-05-14 15:44:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-14 15:44:36 -参数 : [{}]
2019-05-14 15:44:36 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-14 15:44:36 -==> Parameters: 1(Long)
2019-05-14 15:44:36 -<==    Updates: 1
2019-05-14 15:44:36 -<==      Total: 49
2019-05-14 15:44:36 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-14 15:44:36 -==> Parameters: 138(Long)
2019-05-14 15:44:36 -<==      Total: 1
2019-05-14 15:44:36 -耗时 : 59
2019-05-14 15:44:36 -返回值 : index_v1
2019-05-14 15:44:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 15:44:36 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 59(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-14 15:44:36.482(Timestamp)
2019-05-14 15:44:36 -<==    Updates: 1
2019-05-14 15:44:36 -请求地址 : http://localhost:8081/main
2019-05-14 15:44:36 -HTTP METHOD : GET
2019-05-14 15:44:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 15:44:36 -参数 : []
2019-05-14 15:44:36 -耗时 : 0
2019-05-14 15:44:36 -返回值 : main
2019-05-14 15:44:36 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-14 15:44:36 -HTTP METHOD : GET
2019-05-14 15:44:36 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-14 15:44:36 -参数 : []
2019-05-14 15:44:36 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-14 15:44:36 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-14 15:44:36 -<==      Total: 0
2019-05-14 15:44:36 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-14 15:44:36 -==> Parameters: 1(Long), 0(String)
2019-05-14 15:44:36 -<==      Total: 1
2019-05-14 15:44:36 -耗时 : 8
2019-05-14 15:44:36 -返回值 : com.bootdo.common.utils.PageUtils@7cec01de
2019-05-14 15:44:36 -请求地址 : http://localhost:8081/main
2019-05-14 15:44:36 -HTTP METHOD : GET
2019-05-14 15:44:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 15:44:36 -参数 : []
2019-05-14 15:44:36 -耗时 : 0
2019-05-14 15:44:36 -返回值 : main
2019-05-14 15:44:42 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-14 15:44:42 -==> Parameters: 1(Long)
2019-05-14 15:44:42 -<==      Total: 93
2019-05-14 15:44:42 -请求地址 : http://localhost:8081/charts/countMM
2019-05-14 15:44:42 -HTTP METHOD : GET
2019-05-14 15:44:42 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-05-14 15:44:42 -参数 : []
2019-05-14 15:44:42 -耗时 : 0
2019-05-14 15:44:42 -返回值 : charts/countMM
2019-05-14 15:44:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 15:44:42 -HTTP METHOD : GET
2019-05-14 15:44:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 15:44:42 -参数 : [userType]
2019-05-14 15:44:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 15:44:42 -==> Parameters: userType(String)
2019-05-14 15:44:42 -<==      Total: 4
2019-05-14 15:44:42 -耗时 : 4
2019-05-14 15:44:42 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 15:44:43 -请求地址 : http://localhost:8081/charts/tableElecMM
2019-05-14 15:44:43 -HTTP METHOD : GET
2019-05-14 15:44:43 -CLASS_METHOD : com.bootdo.charts.controller.tableElecMMController.tableElecMM
2019-05-14 15:44:43 -参数 : []
2019-05-14 15:44:43 -耗时 : 0
2019-05-14 15:44:43 -返回值 : charts/tableElecMM
2019-05-14 15:44:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-14 15:44:44 -HTTP METHOD : GET
2019-05-14 15:44:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-14 15:44:44 -参数 : [userType]
2019-05-14 15:44:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-14 15:44:44 -==> Parameters: userType(String)
2019-05-14 15:44:44 -<==      Total: 4
2019-05-14 15:44:44 -耗时 : 4
2019-05-14 15:44:44 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-14 15:44:48 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-14 15:44:48 -HTTP METHOD : GET
2019-05-14 15:44:48 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-14 15:44:48 -参数 : []
2019-05-14 15:44:48 -耗时 : 0
2019-05-14 15:44:48 -返回值 : system/dept/deptTree
2019-05-14 15:44:48 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-14 15:44:48 -HTTP METHOD : GET
2019-05-14 15:44:48 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-14 15:44:48 -参数 : []
2019-05-14 15:44:48 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-14 15:44:48 -==> Parameters: 
2019-05-14 15:44:48 -<==      Total: 3
2019-05-14 15:44:48 -耗时 : 3
2019-05-14 15:44:48 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-14 15:44:52 -请求地址 : http://localhost:8081/charts/tableDD
2019-05-14 15:44:52 -HTTP METHOD : GET
2019-05-14 15:44:52 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-05-14 15:44:52 -参数 : []
2019-05-14 15:44:52 -耗时 : 0
2019-05-14 15:44:52 -返回值 : charts/tableDD
2019-05-14 15:44:57 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-14 15:44:57 -HTTP METHOD : GET
2019-05-14 15:44:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-14 15:44:57 -参数 : []
2019-05-14 15:44:57 -耗时 : 2
2019-05-14 15:44:57 -返回值 : system/dept/deptTree
2019-05-14 15:44:57 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-14 15:44:57 -HTTP METHOD : GET
2019-05-14 15:44:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-14 15:44:57 -参数 : []
2019-05-14 15:44:57 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-14 15:44:57 -==> Parameters: 
2019-05-14 15:44:57 -<==      Total: 3
2019-05-14 15:44:57 -耗时 : 3
2019-05-14 15:44:57 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-14 15:44:59 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-05-14 15:44:59 -HTTP METHOD : POST
2019-05-14 15:44:59 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-05-14 15:44:59 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@1f13586a, com.bootdo.moneyLog.vo.WaterLogVo@50aca478, com.bootdo.moneyLog.vo.HeatLogVo@44fb36fd]
2019-05-14 15:44:59 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 15:44:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 15:44:59 -<==      Total: 1
2019-05-14 15:44:59 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 15:44:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 15:44:59 -<==      Total: 1
2019-05-14 15:44:59 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 15:44:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 15:44:59 -<==      Total: 1
2019-05-14 15:44:59 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 15:44:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 15:44:59 -<==      Total: 1
2019-05-14 15:44:59 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 15:44:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 15:44:59 -<==      Total: 1
2019-05-14 15:44:59 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 15:44:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 15:44:59 -<==      Total: 1
2019-05-14 15:44:59 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 15:44:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 15:44:59 -<==      Total: 1
2019-05-14 15:44:59 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 15:44:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 15:44:59 -<==      Total: 1
2019-05-14 15:44:59 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 15:44:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 15:44:59 -<==      Total: 1
2019-05-14 15:44:59 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 15:44:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 15:44:59 -<==      Total: 1
2019-05-14 15:44:59 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 15:44:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 15:44:59 -<==      Total: 1
2019-05-14 15:44:59 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 15:44:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 15:44:59 -<==      Total: 1
2019-05-14 15:44:59 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 15:44:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 15:44:59 -<==      Total: 1
2019-05-14 15:44:59 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 15:44:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 15:44:59 -<==      Total: 1
2019-05-14 15:44:59 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 15:44:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 15:44:59 -<==      Total: 1
2019-05-14 15:44:59 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 15:44:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 15:44:59 -<==      Total: 1
2019-05-14 15:44:59 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 15:44:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 15:44:59 -<==      Total: 1
2019-05-14 15:44:59 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 15:44:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 15:44:59 -<==      Total: 1
2019-05-14 15:44:59 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 15:44:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 15:44:59 -<==      Total: 1
2019-05-14 15:44:59 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 15:44:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 15:44:59 -<==      Total: 1
2019-05-14 15:44:59 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-14 15:44:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 15:44:59 -<==      Total: 1
2019-05-14 15:44:59 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-14 15:44:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 15:44:59 -<==      Total: 1
2019-05-14 15:44:59 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-14 15:44:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 15:44:59 -<==      Total: 1
2019-05-14 15:44:59 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-14 15:44:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 15:44:59 -<==      Total: 1
2019-05-14 15:44:59 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-14 15:44:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 15:44:59 -<==      Total: 1
2019-05-14 15:44:59 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-14 15:44:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 15:44:59 -<==      Total: 1
2019-05-14 15:44:59 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-14 15:44:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 15:44:59 -<==      Total: 1
2019-05-14 15:44:59 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-14 15:44:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 15:44:59 -<==      Total: 1
2019-05-14 15:44:59 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-14 15:44:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 15:44:59 -<==      Total: 1
2019-05-14 15:44:59 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-14 15:44:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 15:44:59 -<==      Total: 1
2019-05-14 15:44:59 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-14 15:44:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 15:44:59 -<==      Total: 1
2019-05-14 15:44:59 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-14 15:44:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 15:44:59 -<==      Total: 1
2019-05-14 15:44:59 -耗时 : 257
2019-05-14 15:44:59 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=0, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=120, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=2, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=0, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-05-14 15:50:02 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 8 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(7)-CONNECTED(7)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 84], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 14], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 827]
2019-05-14 15:52:29 -Validating all active sessions...
2019-05-14 15:52:29 -Finished session validation.  No sessions were stopped.
2019-05-14 15:59:45 -Starting BootdoApplication on PC-201905091110 with PID 32360 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-14 15:59:45 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-14 15:59:45 -The following profiles are active: dev
2019-05-14 15:59:46 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Tue May 14 15:59:46 CST 2019]; root of context hierarchy
2019-05-14 15:59:49 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-14 15:59:51 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$918fd747] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 15:59:51 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$83e905ee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 15:59:53 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 15:59:53 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 15:59:53 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 15:59:53 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-14 15:59:53 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-14 15:59:53 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 15:59:53 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 15:59:53 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 15:59:53 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 15:59:54 -Tomcat initialized with port(s): 8081 (http)
2019-05-14 15:59:54 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-14 15:59:54 -Starting service [Tomcat]
2019-05-14 15:59:54 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-14 15:59:54 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-14 15:59:55 -Initializing Spring embedded WebApplicationContext
2019-05-14 15:59:55 -Root WebApplicationContext: initialization completed in 9126 ms
2019-05-14 15:59:56 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-14 15:59:56 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-14 15:59:56 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-14 15:59:56 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-14 15:59:56 -Filter xssFilter was not registered (disabled)
2019-05-14 15:59:56 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-14 15:59:56 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-14 15:59:56 -Servlet statViewServlet mapped to [/druid/*]
2019-05-14 15:59:56 -Servlet dispatcherServlet mapped to [/]
2019-05-14 16:00:04 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Tue May 14 15:59:46 CST 2019]; root of context hierarchy
2019-05-14 16:00:05 -Using default implementation for ThreadExecutor
2019-05-14 16:00:05 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-14 16:00:05 -Quartz Scheduler v.2.2.1 created.
2019-05-14 16:00:05 -RAMJobStore initialized.
2019-05-14 16:00:05 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-14 16:00:05 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-14 16:00:05 -Quartz scheduler version: 2.2.1
2019-05-14 16:00:05 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@305b43ca
2019-05-14 16:00:05 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-14 16:00:05 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-14 16:00:08 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 16:00:08 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-14 16:00:08 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 16:00:08 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 16:00:08 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 16:00:08 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-14 16:00:08 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-14 16:00:08 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-14 16:00:08 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-14 16:00:08 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 16:00:08 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-14 16:00:08 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 16:00:08 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 16:00:08 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-14 16:00:08 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 16:00:08 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 16:00:08 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-14 16:00:08 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 16:00:08 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-14 16:00:08 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-14 16:00:08 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 16:00:08 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 16:00:08 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-14 16:00:08 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-14 16:00:08 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 16:00:08 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-14 16:00:08 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 16:00:08 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 16:00:08 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-14 16:00:08 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 16:00:08 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-05-14 16:00:08 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-14 16:00:08 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 16:00:08 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-14 16:00:08 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-14 16:00:08 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 16:00:08 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-14 16:00:08 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-14 16:00:08 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-14 16:00:08 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-14 16:00:08 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 16:00:08 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-14 16:00:08 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-14 16:00:08 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-14 16:00:08 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-14 16:00:08 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-14 16:00:08 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 16:00:08 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-14 16:00:08 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-14 16:00:08 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-14 16:00:08 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-14 16:00:08 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 16:00:08 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-14 16:00:08 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-14 16:00:08 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-14 16:00:08 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-14 16:00:08 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 16:00:08 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 16:00:08 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-14 16:00:08 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-14 16:00:08 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-14 16:00:08 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-14 16:00:08 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-14 16:00:08 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-14 16:00:08 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-14 16:00:08 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-14 16:00:08 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-14 16:00:08 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 16:00:08 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-14 16:00:08 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-14 16:00:08 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 16:00:08 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-14 16:00:08 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-14 16:00:08 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-14 16:00:08 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-14 16:00:08 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 16:00:08 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-14 16:00:08 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-14 16:00:08 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-14 16:00:08 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-14 16:00:08 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-14 16:00:08 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-14 16:00:08 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-14 16:00:08 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-14 16:00:08 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-14 16:00:08 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-14 16:00:08 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-14 16:00:08 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 16:00:08 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-14 16:00:08 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-14 16:00:08 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-14 16:00:08 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-14 16:00:08 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-14 16:00:08 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-14 16:00:08 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-14 16:00:08 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-14 16:00:08 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-14 16:00:08 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-14 16:00:08 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-14 16:00:08 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 16:00:08 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-14 16:00:08 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 16:00:08 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-14 16:00:08 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-14 16:00:08 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-14 16:00:08 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-14 16:00:08 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-14 16:00:08 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-14 16:00:08 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-14 16:00:08 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-14 16:00:08 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 16:00:08 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-14 16:00:08 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-14 16:00:08 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-14 16:00:08 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-14 16:00:08 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-14 16:00:08 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-14 16:00:08 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-14 16:00:08 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-14 16:00:08 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-14 16:00:08 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-14 16:00:08 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-14 16:00:08 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 16:00:08 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-14 16:00:08 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 16:00:08 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-14 16:00:08 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-14 16:00:08 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-14 16:00:08 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-14 16:00:08 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-14 16:00:08 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-14 16:00:08 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-14 16:00:08 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-14 16:00:08 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-14 16:00:08 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-14 16:00:08 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-14 16:00:08 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-14 16:00:08 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-14 16:00:08 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 16:00:08 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-14 16:00:08 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 16:00:08 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-14 16:00:08 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-14 16:00:08 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-14 16:00:08 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-14 16:00:08 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-14 16:00:08 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-14 16:00:08 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 16:00:08 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-14 16:00:08 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 16:00:08 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-14 16:00:08 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-14 16:00:08 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-14 16:00:08 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-14 16:00:08 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-14 16:00:08 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-14 16:00:08 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 16:00:08 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-14 16:00:08 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 16:00:08 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-14 16:00:08 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-14 16:00:08 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-14 16:00:08 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-14 16:00:08 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-14 16:00:08 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-14 16:00:08 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-14 16:00:08 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 16:00:08 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-14 16:00:08 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-14 16:00:08 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 16:00:08 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 16:00:08 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-14 16:00:08 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-14 16:00:08 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-14 16:00:08 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-14 16:00:08 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-14 16:00:08 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-14 16:00:08 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 16:00:08 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-14 16:00:08 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-14 16:00:08 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-14 16:00:08 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 16:00:08 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 16:00:08 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-14 16:00:08 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-14 16:00:08 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-14 16:00:08 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-14 16:00:08 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-14 16:00:08 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-14 16:00:08 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-14 16:00:08 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-14 16:00:08 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-14 16:00:08 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-14 16:00:08 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 16:00:08 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-14 16:00:08 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-14 16:00:08 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-14 16:00:08 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-14 16:00:08 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-14 16:00:08 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-14 16:00:08 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-14 16:00:08 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-14 16:00:08 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-14 16:00:08 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-14 16:00:08 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 16:00:08 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-14 16:00:08 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-14 16:00:08 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-14 16:00:08 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-14 16:00:08 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-14 16:00:08 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-14 16:00:08 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-14 16:00:08 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-14 16:00:08 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-14 16:00:08 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-14 16:00:08 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-14 16:00:08 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-14 16:00:08 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 16:00:08 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-14 16:00:08 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-14 16:00:08 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-14 16:00:08 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-14 16:00:08 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 16:00:08 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-14 16:00:08 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-14 16:00:08 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-14 16:00:08 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 16:00:08 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-14 16:00:08 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-14 16:00:08 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-14 16:00:08 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-14 16:00:08 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-14 16:00:08 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-14 16:00:08 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-14 16:00:08 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-14 16:00:08 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-14 16:00:08 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-14 16:00:08 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-14 16:00:08 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-14 16:00:08 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-14 16:00:08 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-14 16:00:08 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-14 16:00:08 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-14 16:00:08 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-14 16:00:08 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 16:00:08 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-14 16:00:08 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-14 16:00:08 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 16:00:08 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-14 16:00:08 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-14 16:00:08 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-14 16:00:08 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-14 16:00:08 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-14 16:00:08 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-14 16:00:08 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-14 16:00:08 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-14 16:00:08 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 16:00:08 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-14 16:00:08 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-14 16:00:08 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 16:00:08 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-14 16:00:08 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-14 16:00:08 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-14 16:00:08 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-14 16:00:08 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-14 16:00:08 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-14 16:00:08 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-14 16:00:08 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-14 16:00:09 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-14 16:00:09 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-14 16:00:09 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-14 16:00:10 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-14 16:00:10 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Tue May 14 15:59:46 CST 2019]; root of context hierarchy
2019-05-14 16:00:10 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-14 16:00:10 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-14 16:00:10 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-14 16:00:10 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-14 16:00:11 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-14 16:00:14 -Registering beans for JMX exposure on startup
2019-05-14 16:00:14 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-14 16:00:14 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-14 16:00:14 -Starting beans in phase 2147483647
2019-05-14 16:00:14 -Context refreshed
2019-05-14 16:00:15 -Found 1 custom documentation plugin(s)
2019-05-14 16:00:15 -Scanning for api listing references
2019-05-14 16:00:15 -Generating unique operation named: getCountDUsingPOST_1
2019-05-14 16:00:15 -Generating unique operation named: removeUsingPOST_1
2019-05-14 16:00:15 -Generating unique operation named: addUsingGET_1
2019-05-14 16:00:15 -Generating unique operation named: editUsingGET_1
2019-05-14 16:00:15 -Generating unique operation named: listUsingGET_1
2019-05-14 16:00:16 -Generating unique operation named: removeUsingPOST_2
2019-05-14 16:00:16 -Generating unique operation named: removeUsingPOST_3
2019-05-14 16:00:16 -Generating unique operation named: saveUsingPOST_1
2019-05-14 16:00:16 -Generating unique operation named: updateUsingGET_1
2019-05-14 16:00:16 -Generating unique operation named: updateUsingHEAD_1
2019-05-14 16:00:16 -Generating unique operation named: updateUsingPOST_1
2019-05-14 16:00:16 -Generating unique operation named: updateUsingPUT_1
2019-05-14 16:00:16 -Generating unique operation named: updateUsingPATCH_1
2019-05-14 16:00:16 -Generating unique operation named: updateUsingDELETE_1
2019-05-14 16:00:16 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-14 16:00:16 -Generating unique operation named: updateUsingTRACE_1
2019-05-14 16:00:16 -Generating unique operation named: addUsingGET_2
2019-05-14 16:00:16 -Generating unique operation named: editUsingGET_2
2019-05-14 16:00:16 -Generating unique operation named: listUsingGET_2
2019-05-14 16:00:16 -Generating unique operation named: removeUsingPOST_4
2019-05-14 16:00:16 -Generating unique operation named: removeUsingPOST_5
2019-05-14 16:00:16 -Generating unique operation named: saveUsingPOST_2
2019-05-14 16:00:16 -Generating unique operation named: updateUsingPOST_2
2019-05-14 16:00:16 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-14 16:00:16 -Generating unique operation named: addUsingGET_3
2019-05-14 16:00:16 -Generating unique operation named: editUsingGET_3
2019-05-14 16:00:16 -Generating unique operation named: listUsingGET_3
2019-05-14 16:00:16 -Generating unique operation named: removeUsingPOST_6
2019-05-14 16:00:16 -Generating unique operation named: removeUsingPOST_7
2019-05-14 16:00:16 -Generating unique operation named: saveUsingPOST_3
2019-05-14 16:00:16 -Generating unique operation named: updateUsingGET_2
2019-05-14 16:00:16 -Generating unique operation named: updateUsingHEAD_2
2019-05-14 16:00:16 -Generating unique operation named: updateUsingPOST_3
2019-05-14 16:00:16 -Generating unique operation named: updateUsingPUT_2
2019-05-14 16:00:16 -Generating unique operation named: updateUsingPATCH_2
2019-05-14 16:00:16 -Generating unique operation named: updateUsingDELETE_2
2019-05-14 16:00:16 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-14 16:00:16 -Generating unique operation named: updateUsingTRACE_2
2019-05-14 16:00:16 -Generating unique operation named: addUsingGET_4
2019-05-14 16:00:16 -Generating unique operation named: editUsingGET_4
2019-05-14 16:00:16 -Generating unique operation named: listUsingGET_4
2019-05-14 16:00:16 -Generating unique operation named: removeUsingPOST_8
2019-05-14 16:00:16 -Generating unique operation named: removeUsingPOST_9
2019-05-14 16:00:16 -Generating unique operation named: saveUsingPOST_4
2019-05-14 16:00:16 -Generating unique operation named: updateUsingGET_3
2019-05-14 16:00:16 -Generating unique operation named: updateUsingHEAD_3
2019-05-14 16:00:16 -Generating unique operation named: updateUsingPOST_4
2019-05-14 16:00:16 -Generating unique operation named: updateUsingPUT_3
2019-05-14 16:00:16 -Generating unique operation named: updateUsingPATCH_3
2019-05-14 16:00:16 -Generating unique operation named: updateUsingDELETE_3
2019-05-14 16:00:16 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-14 16:00:16 -Generating unique operation named: updateUsingTRACE_3
2019-05-14 16:00:16 -Generating unique operation named: ElecUsingGET_1
2019-05-14 16:00:16 -Generating unique operation named: addUsingGET_5
2019-05-14 16:00:16 -Generating unique operation named: editUsingGET_5
2019-05-14 16:00:16 -Generating unique operation named: listUsingGET_5
2019-05-14 16:00:16 -Generating unique operation named: removeUsingPOST_10
2019-05-14 16:00:16 -Generating unique operation named: removeUsingPOST_11
2019-05-14 16:00:16 -Generating unique operation named: saveUsingPOST_5
2019-05-14 16:00:16 -Generating unique operation named: updateUsingGET_4
2019-05-14 16:00:16 -Generating unique operation named: updateUsingHEAD_4
2019-05-14 16:00:16 -Generating unique operation named: updateUsingPOST_5
2019-05-14 16:00:16 -Generating unique operation named: updateUsingPUT_4
2019-05-14 16:00:16 -Generating unique operation named: updateUsingPATCH_4
2019-05-14 16:00:16 -Generating unique operation named: updateUsingDELETE_4
2019-05-14 16:00:16 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-14 16:00:16 -Generating unique operation named: updateUsingTRACE_4
2019-05-14 16:00:16 -Generating unique operation named: editUsingGET_6
2019-05-14 16:00:16 -Generating unique operation named: listUsingGET_6
2019-05-14 16:00:16 -Generating unique operation named: updateUsingPOST_6
2019-05-14 16:00:16 -Generating unique operation named: addUsingGET_6
2019-05-14 16:00:16 -Generating unique operation named: editUsingGET_7
2019-05-14 16:00:16 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-14 16:00:16 -Generating unique operation named: listUsingGET_7
2019-05-14 16:00:16 -Generating unique operation named: removeUsingPOST_12
2019-05-14 16:00:16 -Generating unique operation named: removeUsingPOST_13
2019-05-14 16:00:16 -Generating unique operation named: saveUsingPOST_6
2019-05-14 16:00:16 -Generating unique operation named: updateUsingGET_5
2019-05-14 16:00:16 -Generating unique operation named: updateUsingHEAD_5
2019-05-14 16:00:16 -Generating unique operation named: updateUsingPOST_7
2019-05-14 16:00:16 -Generating unique operation named: updateUsingPUT_5
2019-05-14 16:00:16 -Generating unique operation named: updateUsingPATCH_5
2019-05-14 16:00:16 -Generating unique operation named: updateUsingDELETE_5
2019-05-14 16:00:16 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-14 16:00:16 -Generating unique operation named: updateUsingTRACE_5
2019-05-14 16:00:16 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-14 16:00:16 -Generating unique operation named: addUsingGET_7
2019-05-14 16:00:16 -Generating unique operation named: editUsingGET_8
2019-05-14 16:00:16 -Generating unique operation named: listUsingGET_8
2019-05-14 16:00:16 -Generating unique operation named: removeUsingPOST_14
2019-05-14 16:00:16 -Generating unique operation named: removeUsingPOST_15
2019-05-14 16:00:16 -Generating unique operation named: saveUsingPOST_7
2019-05-14 16:00:16 -Generating unique operation named: updateUsingGET_6
2019-05-14 16:00:16 -Generating unique operation named: updateUsingHEAD_6
2019-05-14 16:00:16 -Generating unique operation named: updateUsingPOST_8
2019-05-14 16:00:16 -Generating unique operation named: updateUsingPUT_6
2019-05-14 16:00:16 -Generating unique operation named: updateUsingPATCH_6
2019-05-14 16:00:16 -Generating unique operation named: updateUsingDELETE_6
2019-05-14 16:00:16 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-14 16:00:16 -Generating unique operation named: updateUsingTRACE_6
2019-05-14 16:00:16 -Generating unique operation named: addUsingGET_8
2019-05-14 16:00:16 -Generating unique operation named: editUsingGET_9
2019-05-14 16:00:16 -Generating unique operation named: listUsingGET_9
2019-05-14 16:00:16 -Generating unique operation named: removeUsingPOST_16
2019-05-14 16:00:16 -Generating unique operation named: removeUsingPOST_17
2019-05-14 16:00:16 -Generating unique operation named: saveUsingPOST_8
2019-05-14 16:00:16 -Generating unique operation named: updateUsingGET_7
2019-05-14 16:00:16 -Generating unique operation named: updateUsingHEAD_7
2019-05-14 16:00:16 -Generating unique operation named: updateUsingPOST_9
2019-05-14 16:00:16 -Generating unique operation named: updateUsingPUT_7
2019-05-14 16:00:16 -Generating unique operation named: updateUsingPATCH_7
2019-05-14 16:00:16 -Generating unique operation named: updateUsingDELETE_7
2019-05-14 16:00:16 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-14 16:00:16 -Generating unique operation named: updateUsingTRACE_7
2019-05-14 16:00:17 -Generating unique operation named: addUsingGET_9
2019-05-14 16:00:17 -Generating unique operation named: editUsingGET_10
2019-05-14 16:00:17 -Generating unique operation named: infoUsingGET_1
2019-05-14 16:00:17 -Generating unique operation named: infoUsingHEAD_1
2019-05-14 16:00:17 -Generating unique operation named: infoUsingPOST_1
2019-05-14 16:00:17 -Generating unique operation named: infoUsingPUT_1
2019-05-14 16:00:17 -Generating unique operation named: infoUsingPATCH_1
2019-05-14 16:00:17 -Generating unique operation named: infoUsingDELETE_1
2019-05-14 16:00:17 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-14 16:00:17 -Generating unique operation named: infoUsingTRACE_1
2019-05-14 16:00:17 -Generating unique operation named: listUsingGET_10
2019-05-14 16:00:17 -Generating unique operation named: removeUsingPOST_18
2019-05-14 16:00:17 -Generating unique operation named: removeUsingPOST_19
2019-05-14 16:00:17 -Generating unique operation named: saveUsingPOST_9
2019-05-14 16:00:17 -Generating unique operation named: updateUsingPOST_10
2019-05-14 16:00:17 -Generating unique operation named: listUsingGET_11
2019-05-14 16:00:17 -Generating unique operation named: removeUsingPOST_20
2019-05-14 16:00:17 -Generating unique operation named: welcomeUsingGET_1
2019-05-14 16:00:17 -Generating unique operation named: addUsingGET_10
2019-05-14 16:00:17 -Generating unique operation named: editUsingGET_11
2019-05-14 16:00:17 -Generating unique operation named: listUsingGET_12
2019-05-14 16:00:17 -Generating unique operation named: removeUsingPOST_21
2019-05-14 16:00:17 -Generating unique operation named: saveUsingPOST_10
2019-05-14 16:00:17 -Generating unique operation named: treeUsingGET_1
2019-05-14 16:00:17 -Generating unique operation named: treeUsingGET_2
2019-05-14 16:00:17 -Generating unique operation named: updateUsingPOST_11
2019-05-14 16:00:17 -Generating unique operation named: addUsingGET_11
2019-05-14 16:00:17 -Generating unique operation named: editUsingGET_12
2019-05-14 16:00:17 -Generating unique operation named: listUsingGET_13
2019-05-14 16:00:17 -Generating unique operation named: removeUsingPOST_22
2019-05-14 16:00:17 -Generating unique operation named: removeUsingPOST_23
2019-05-14 16:00:17 -Generating unique operation named: saveUsingPOST_11
2019-05-14 16:00:17 -Generating unique operation named: updateUsingGET_8
2019-05-14 16:00:17 -Generating unique operation named: updateUsingHEAD_8
2019-05-14 16:00:17 -Generating unique operation named: updateUsingPOST_12
2019-05-14 16:00:17 -Generating unique operation named: updateUsingPUT_8
2019-05-14 16:00:17 -Generating unique operation named: updateUsingPATCH_8
2019-05-14 16:00:17 -Generating unique operation named: updateUsingDELETE_8
2019-05-14 16:00:17 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-14 16:00:17 -Generating unique operation named: updateUsingTRACE_8
2019-05-14 16:00:17 -Generating unique operation named: addUsingGET_12
2019-05-14 16:00:17 -Generating unique operation named: editUsingGET_13
2019-05-14 16:00:17 -Generating unique operation named: listUsingGET_14
2019-05-14 16:00:17 -Generating unique operation named: removeUsingPOST_24
2019-05-14 16:00:17 -Generating unique operation named: removeUsingPOST_25
2019-05-14 16:00:17 -Generating unique operation named: saveUsingPOST_12
2019-05-14 16:00:17 -Generating unique operation named: updateUsingGET_9
2019-05-14 16:00:17 -Generating unique operation named: updateUsingHEAD_9
2019-05-14 16:00:17 -Generating unique operation named: updateUsingPOST_13
2019-05-14 16:00:17 -Generating unique operation named: updateUsingPUT_9
2019-05-14 16:00:17 -Generating unique operation named: updateUsingPATCH_9
2019-05-14 16:00:17 -Generating unique operation named: updateUsingDELETE_9
2019-05-14 16:00:17 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-14 16:00:17 -Generating unique operation named: updateUsingTRACE_9
2019-05-14 16:00:17 -Generating unique operation named: addUsingGET_13
2019-05-14 16:00:17 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-14 16:00:17 -Generating unique operation named: editUsingGET_14
2019-05-14 16:00:17 -Generating unique operation named: listUsingGET_15
2019-05-14 16:00:17 -Generating unique operation named: saveUsingPOST_13
2019-05-14 16:00:18 -Generating unique operation named: saveUsingPOST_14
2019-05-14 16:00:18 -Generating unique operation named: updateUsingPOST_14
2019-05-14 16:00:18 -Generating unique operation named: listUsingGET_16
2019-05-14 16:00:18 -Generating unique operation named: listUsingHEAD_1
2019-05-14 16:00:18 -Generating unique operation named: listUsingPOST_1
2019-05-14 16:00:18 -Generating unique operation named: listUsingPUT_1
2019-05-14 16:00:18 -Generating unique operation named: listUsingPATCH_1
2019-05-14 16:00:18 -Generating unique operation named: listUsingDELETE_1
2019-05-14 16:00:18 -Generating unique operation named: listUsingOPTIONS_1
2019-05-14 16:00:18 -Generating unique operation named: listUsingTRACE_1
2019-05-14 16:00:18 -Generating unique operation named: countDDUsingGET_1
2019-05-14 16:00:18 -Generating unique operation named: exportDDUsingGET_1
2019-05-14 16:00:18 -Generating unique operation named: getCountYYUsingPOST_1
2019-05-14 16:00:18 -Generating unique operation named: getCountMMUsingPOST_1
2019-05-14 16:00:18 -Generating unique operation named: addUsingGET_14
2019-05-14 16:00:18 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-14 16:00:18 -Generating unique operation named: editUsingGET_15
2019-05-14 16:00:18 -Generating unique operation named: listUsingGET_17
2019-05-14 16:00:18 -Generating unique operation named: removeUsingPOST_26
2019-05-14 16:00:18 -Generating unique operation named: saveUsingPOST_15
2019-05-14 16:00:18 -Generating unique operation named: treeUsingGET_3
2019-05-14 16:00:18 -Generating unique operation named: treeViewUsingGET_1
2019-05-14 16:00:18 -Generating unique operation named: updateUsingPOST_15
2019-05-14 16:00:18 -Generating unique operation named: addUsingGET_15
2019-05-14 16:00:18 -Generating unique operation named: editUsingGET_16
2019-05-14 16:00:18 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-14 16:00:18 -Generating unique operation named: listUsingGET_18
2019-05-14 16:00:18 -Generating unique operation named: removeUsingPOST_27
2019-05-14 16:00:18 -Generating unique operation named: removeUsingPOST_28
2019-05-14 16:00:18 -Generating unique operation named: saveUsingPOST_16
2019-05-14 16:00:18 -Generating unique operation named: updateUsingGET_10
2019-05-14 16:00:18 -Generating unique operation named: updateUsingHEAD_10
2019-05-14 16:00:18 -Generating unique operation named: updateUsingPOST_16
2019-05-14 16:00:18 -Generating unique operation named: updateUsingPUT_10
2019-05-14 16:00:18 -Generating unique operation named: updateUsingPATCH_10
2019-05-14 16:00:18 -Generating unique operation named: updateUsingDELETE_10
2019-05-14 16:00:18 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-14 16:00:18 -Generating unique operation named: updateUsingTRACE_10
2019-05-14 16:00:18 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-14 16:00:18 -Generating unique operation named: addUsingGET_16
2019-05-14 16:00:18 -Generating unique operation named: editUsingGET_17
2019-05-14 16:00:18 -Generating unique operation named: listUsingGET_19
2019-05-14 16:00:18 -Generating unique operation named: removeUsingPOST_29
2019-05-14 16:00:18 -Generating unique operation named: removeUsingPOST_30
2019-05-14 16:00:18 -Generating unique operation named: saveUsingPOST_17
2019-05-14 16:00:18 -Generating unique operation named: updateUsingGET_11
2019-05-14 16:00:18 -Generating unique operation named: updateUsingHEAD_11
2019-05-14 16:00:18 -Generating unique operation named: updateUsingPOST_17
2019-05-14 16:00:18 -Generating unique operation named: updateUsingPUT_11
2019-05-14 16:00:18 -Generating unique operation named: updateUsingPATCH_11
2019-05-14 16:00:18 -Generating unique operation named: updateUsingDELETE_11
2019-05-14 16:00:18 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-14 16:00:18 -Generating unique operation named: updateUsingTRACE_11
2019-05-14 16:00:18 -Generating unique operation named: addUsingGET_17
2019-05-14 16:00:18 -Generating unique operation named: editUsingGET_18
2019-05-14 16:00:18 -Generating unique operation named: listUsingGET_20
2019-05-14 16:00:18 -Generating unique operation named: removeUsingPOST_31
2019-05-14 16:00:18 -Generating unique operation named: removeUsingPOST_32
2019-05-14 16:00:18 -Generating unique operation named: saveUsingPOST_18
2019-05-14 16:00:18 -Generating unique operation named: updateUsingGET_12
2019-05-14 16:00:18 -Generating unique operation named: updateUsingHEAD_12
2019-05-14 16:00:18 -Generating unique operation named: updateUsingPOST_18
2019-05-14 16:00:18 -Generating unique operation named: updateUsingPUT_12
2019-05-14 16:00:18 -Generating unique operation named: updateUsingPATCH_12
2019-05-14 16:00:18 -Generating unique operation named: updateUsingDELETE_12
2019-05-14 16:00:18 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-14 16:00:18 -Generating unique operation named: updateUsingTRACE_12
2019-05-14 16:00:18 -Starting Quartz Scheduler now
2019-05-14 16:00:18 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-14 16:00:18 -Starting...
2019-05-14 16:00:18 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-14 16:00:18 -Started.
2019-05-14 16:00:18 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-14 16:00:18 -Using a shared selector for servlet write/read
2019-05-14 16:00:18 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-14 16:00:18 -Started BootdoApplication in 34.467 seconds (JVM running for 35.438)
2019-05-14 16:00:19 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-14 16:00:19 -==> Parameters: 
2019-05-14 16:00:19 -<==      Total: 1
2019-05-14 16:00:24 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-14 16:00:24 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-14 16:00:24 -FrameworkServlet 'dispatcherServlet': initialization completed in 67 ms
2019-05-14 16:00:24 -Enabling session validation scheduler...
2019-05-14 16:00:24 -请求地址 : http://localhost:8081/login;JSESSIONID=c26d97d4-c329-4e45-821b-8120f511dd28
2019-05-14 16:00:24 -HTTP METHOD : GET
2019-05-14 16:00:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-14 16:00:24 -参数 : [{}]
2019-05-14 16:00:24 -耗时 : 9
2019-05-14 16:00:24 -返回值 : login
2019-05-14 16:00:26 -请求地址 : http://localhost:8081/getVerify
2019-05-14 16:00:26 -HTTP METHOD : GET
2019-05-14 16:00:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-14 16:00:26 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@3d5aec78, org.apache.shiro.web.servlet.ShiroHttpServletResponse@339d15a3]
2019-05-14 16:00:35 -请求地址 : http://localhost:8081/login;JSESSIONID=c26d97d4-c329-4e45-821b-8120f511dd28
2019-05-14 16:00:35 -HTTP METHOD : GET
2019-05-14 16:00:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-14 16:00:35 -参数 : [{}]
2019-05-14 16:00:35 -耗时 : 0
2019-05-14 16:00:35 -返回值 : login
2019-05-14 16:00:36 -请求地址 : http://localhost:8081/getVerify
2019-05-14 16:00:36 -HTTP METHOD : GET
2019-05-14 16:00:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-14 16:00:36 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@24484388, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5ad1a2b6]
2019-05-14 16:00:39 -1887
2019-05-14 16:00:39 -3971
2019-05-14 16:00:40 -耗时 : 13646
2019-05-14 16:00:40 -耗时 : 3799
2019-05-14 16:00:40 -返回值 : null
2019-05-14 16:00:40 -返回值 : null
2019-05-14 16:00:40 -请求地址 : http://localhost:8081/login
2019-05-14 16:00:40 -HTTP METHOD : GET
2019-05-14 16:00:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-14 16:00:40 -参数 : [{}]
2019-05-14 16:00:40 -耗时 : 1
2019-05-14 16:00:40 -返回值 : login
2019-05-14 16:00:48 -请求地址 : http://localhost:8081/login
2019-05-14 16:00:48 -HTTP METHOD : POST
2019-05-14 16:00:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-14 16:00:48 -参数 : [admin, 111111, 3971, org.apache.shiro.web.servlet.ShiroHttpServletRequest@8a2f4ab]
2019-05-14 16:00:48 -耗时 : 6
2019-05-14 16:00:48 -返回值 : {msg=请输入正确的验证码, code=500}
2019-05-14 16:00:48 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-14 16:00:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 16:00:48 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 6(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-14 16:00:48.904(Timestamp)
2019-05-14 16:00:49 -<==    Updates: 1
2019-05-14 16:00:51 -请求地址 : http://localhost:8081/login;JSESSIONID=c26d97d4-c329-4e45-821b-8120f511dd28
2019-05-14 16:00:51 -HTTP METHOD : GET
2019-05-14 16:00:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-14 16:00:51 -参数 : [{}]
2019-05-14 16:00:51 -耗时 : 1
2019-05-14 16:00:51 -返回值 : login
2019-05-14 16:00:52 -请求地址 : http://localhost:8081/getVerify
2019-05-14 16:00:52 -HTTP METHOD : GET
2019-05-14 16:00:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-14 16:00:52 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@31cf574a, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7f57fc8b]
2019-05-14 16:00:52 -3045
2019-05-14 16:00:52 -耗时 : 10
2019-05-14 16:00:52 -返回值 : null
2019-05-14 16:00:52 -请求地址 : http://localhost:8081/login
2019-05-14 16:00:52 -HTTP METHOD : GET
2019-05-14 16:00:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-14 16:00:52 -参数 : [{}]
2019-05-14 16:00:52 -耗时 : 0
2019-05-14 16:00:52 -返回值 : login
2019-05-14 16:00:57 -请求地址 : http://localhost:8081/login
2019-05-14 16:00:57 -HTTP METHOD : POST
2019-05-14 16:00:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-14 16:00:57 -参数 : [admin, 111111, 3045, org.apache.shiro.web.servlet.ShiroHttpServletRequest@70ded7ab]
2019-05-14 16:00:57 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-14 16:00:57 -==> Parameters: admin(String)
2019-05-14 16:00:57 -<==      Total: 1
2019-05-14 16:00:57 -耗时 : 235
2019-05-14 16:00:57 -返回值 : {msg=操作成功, code=0}
2019-05-14 16:00:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 16:00:57 -==> Parameters: 1(Long), admin(String), 登录(String), 236(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-14 16:00:57.625(Timestamp)
2019-05-14 16:00:57 -<==    Updates: 1
2019-05-14 16:00:57 -请求地址 : http://localhost:8081/index
2019-05-14 16:00:57 -HTTP METHOD : GET
2019-05-14 16:00:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-14 16:00:57 -参数 : [{}]
2019-05-14 16:00:57 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-14 16:00:57 -==> Parameters: 1(Long)
2019-05-14 16:00:57 -<==      Total: 49
2019-05-14 16:00:57 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-14 16:00:57 -==> Parameters: 138(Long)
2019-05-14 16:00:57 -<==      Total: 1
2019-05-14 16:00:57 -耗时 : 209
2019-05-14 16:00:57 -返回值 : index_v1
2019-05-14 16:00:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 16:00:57 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 209(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-14 16:00:57.977(Timestamp)
2019-05-14 16:00:58 -<==    Updates: 1
2019-05-14 16:00:58 -请求地址 : http://localhost:8081/main
2019-05-14 16:00:58 -HTTP METHOD : GET
2019-05-14 16:00:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 16:00:58 -参数 : []
2019-05-14 16:00:58 -耗时 : 0
2019-05-14 16:00:58 -返回值 : main
2019-05-14 16:00:58 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-14 16:00:58 -HTTP METHOD : GET
2019-05-14 16:00:58 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-14 16:00:58 -参数 : []
2019-05-14 16:00:58 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-14 16:00:58 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-14 16:00:58 -<==      Total: 0
2019-05-14 16:00:58 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-14 16:00:58 -==> Parameters: 1(Long), 0(String)
2019-05-14 16:00:58 -<==      Total: 1
2019-05-14 16:00:58 -耗时 : 104
2019-05-14 16:00:58 -返回值 : com.bootdo.common.utils.PageUtils@da37e41
2019-05-14 16:00:58 -请求地址 : http://localhost:8081/main
2019-05-14 16:00:58 -HTTP METHOD : GET
2019-05-14 16:00:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 16:00:58 -参数 : []
2019-05-14 16:00:58 -耗时 : 0
2019-05-14 16:00:58 -返回值 : main
2019-05-14 16:01:09 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3]
2019-05-14 16:01:22 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-14 16:01:22 -==> Parameters: 1(Long)
2019-05-14 16:01:22 -<==      Total: 93
2019-05-14 16:01:22 -请求地址 : http://localhost:8081/charts/tableDD
2019-05-14 16:01:22 -HTTP METHOD : GET
2019-05-14 16:01:22 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-05-14 16:01:22 -参数 : []
2019-05-14 16:01:22 -耗时 : 10
2019-05-14 16:01:22 -返回值 : charts/tableDD
2019-05-14 16:01:36 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-14 16:01:36 -HTTP METHOD : GET
2019-05-14 16:01:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-14 16:01:36 -参数 : []
2019-05-14 16:01:36 -耗时 : 0
2019-05-14 16:01:36 -返回值 : system/dept/deptTree
2019-05-14 16:01:37 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-14 16:01:37 -HTTP METHOD : GET
2019-05-14 16:01:37 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-14 16:01:37 -参数 : []
2019-05-14 16:01:37 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-14 16:01:37 -==> Parameters: 
2019-05-14 16:01:37 -<==      Total: 3
2019-05-14 16:01:37 -耗时 : 32
2019-05-14 16:01:37 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-14 16:01:39 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-05-14 16:01:39 -HTTP METHOD : POST
2019-05-14 16:01:39 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-05-14 16:01:39 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@706d3e8a, com.bootdo.moneyLog.vo.WaterLogVo@4f939f27, com.bootdo.moneyLog.vo.HeatLogVo@3dce35c5]
2019-05-14 16:01:39 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 16:01:39 -==> Parameters: 2019-03-14 00:00:00(String), 2019-03-14 23:59:59(String), 2(String)
2019-05-14 16:01:39 -<==      Total: 1
2019-05-14 16:01:39 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 16:01:39 -==> Parameters: 2019-03-14 00:00:00(String), 2019-03-14 23:59:59(String), 2(String)
2019-05-14 16:01:39 -<==      Total: 1
2019-05-14 16:01:39 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 16:01:39 -==> Parameters: 2019-03-14 00:00:00(String), 2019-03-14 23:59:59(String), 2(String)
2019-05-14 16:01:39 -<==      Total: 1
2019-05-14 16:01:39 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 16:01:39 -==> Parameters: 2019-03-14 00:00:00(String), 2019-03-14 23:59:59(String), 2(String)
2019-05-14 16:01:39 -<==      Total: 1
2019-05-14 16:01:39 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 16:01:39 -==> Parameters: 2019-03-14 00:00:00(String), 2019-03-14 23:59:59(String), 2(String)
2019-05-14 16:01:39 -<==      Total: 1
2019-05-14 16:01:39 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 16:01:39 -==> Parameters: 2019-03-14 00:00:00(String), 2019-03-14 23:59:59(String), 2(String)
2019-05-14 16:01:39 -<==      Total: 1
2019-05-14 16:01:39 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 16:01:39 -==> Parameters: 2019-03-14 00:00:00(String), 2019-03-14 23:59:59(String), 2(String)
2019-05-14 16:01:39 -<==      Total: 1
2019-05-14 16:01:39 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 16:01:39 -==> Parameters: 2019-03-14 00:00:00(String), 2019-03-14 23:59:59(String), 2(String)
2019-05-14 16:01:39 -<==      Total: 1
2019-05-14 16:01:39 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 16:01:39 -==> Parameters: 2019-03-14 00:00:00(String), 2019-03-14 23:59:59(String), 2(String)
2019-05-14 16:01:39 -<==      Total: 1
2019-05-14 16:01:39 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 16:01:39 -==> Parameters: 2019-03-14 00:00:00(String), 2019-03-14 23:59:59(String), 2(String)
2019-05-14 16:01:39 -<==      Total: 1
2019-05-14 16:01:39 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 16:01:39 -==> Parameters: 2019-03-14 00:00:00(String), 2019-03-14 23:59:59(String), 2(String)
2019-05-14 16:01:39 -<==      Total: 1
2019-05-14 16:01:39 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 16:01:39 -==> Parameters: 2019-03-14 00:00:00(String), 2019-03-14 23:59:59(String), 2(String)
2019-05-14 16:01:39 -<==      Total: 1
2019-05-14 16:01:39 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 16:01:39 -==> Parameters: 2019-03-14 00:00:00(String), 2019-03-14 23:59:59(String), 2(String)
2019-05-14 16:01:39 -<==      Total: 1
2019-05-14 16:01:39 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 16:01:39 -==> Parameters: 2019-03-14 00:00:00(String), 2019-03-14 23:59:59(String), 2(String)
2019-05-14 16:01:39 -<==      Total: 1
2019-05-14 16:01:39 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 16:01:39 -==> Parameters: 2019-03-14 00:00:00(String), 2019-03-14 23:59:59(String), 2(String)
2019-05-14 16:01:39 -<==      Total: 1
2019-05-14 16:01:39 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 16:01:39 -==> Parameters: 2019-03-14 00:00:00(String), 2019-03-14 23:59:59(String), 2(String)
2019-05-14 16:01:39 -<==      Total: 1
2019-05-14 16:01:39 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 16:01:39 -==> Parameters: 2019-03-14 00:00:00(String), 2019-03-14 23:59:59(String), 2(String)
2019-05-14 16:01:39 -<==      Total: 1
2019-05-14 16:01:39 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 16:01:39 -==> Parameters: 2019-03-14 00:00:00(String), 2019-03-14 23:59:59(String), 2(String)
2019-05-14 16:01:39 -<==      Total: 1
2019-05-14 16:01:39 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 16:01:39 -==> Parameters: 2019-03-14 00:00:00(String), 2019-03-14 23:59:59(String), 2(String)
2019-05-14 16:01:39 -<==      Total: 1
2019-05-14 16:01:39 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 16:01:39 -==> Parameters: 2019-03-14 00:00:00(String), 2019-03-14 23:59:59(String), 2(String)
2019-05-14 16:01:39 -<==      Total: 1
2019-05-14 16:01:39 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-14 16:01:39 -==> Parameters: 2019-03-14 00:00:00(String), 2019-03-14 23:59:59(String), 2(String)
2019-05-14 16:01:39 -<==      Total: 1
2019-05-14 16:01:39 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-14 16:01:39 -==> Parameters: 2019-03-14 00:00:00(String), 2019-03-14 23:59:59(String), 2(String)
2019-05-14 16:01:39 -<==      Total: 1
2019-05-14 16:01:39 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-14 16:01:39 -==> Parameters: 2019-03-14 00:00:00(String), 2019-03-14 23:59:59(String), 2(String)
2019-05-14 16:01:39 -<==      Total: 1
2019-05-14 16:01:39 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-14 16:01:39 -==> Parameters: 2019-03-14 00:00:00(String), 2019-03-14 23:59:59(String), 2(String)
2019-05-14 16:01:39 -<==      Total: 1
2019-05-14 16:01:39 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-14 16:01:39 -==> Parameters: 2019-03-14 00:00:00(String), 2019-03-14 23:59:59(String), 2(String)
2019-05-14 16:01:39 -<==      Total: 1
2019-05-14 16:01:39 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-14 16:01:39 -==> Parameters: 2019-03-14 00:00:00(String), 2019-03-14 23:59:59(String), 2(String)
2019-05-14 16:01:39 -<==      Total: 1
2019-05-14 16:01:40 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-14 16:01:40 -==> Parameters: 2019-03-14 00:00:00(String), 2019-03-14 23:59:59(String), 2(String)
2019-05-14 16:01:40 -<==      Total: 1
2019-05-14 16:01:40 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-14 16:01:40 -==> Parameters: 2019-03-14 00:00:00(String), 2019-03-14 23:59:59(String), 2(String)
2019-05-14 16:01:40 -<==      Total: 1
2019-05-14 16:01:40 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-14 16:01:40 -==> Parameters: 2019-03-14 00:00:00(String), 2019-03-14 23:59:59(String), 2(String)
2019-05-14 16:01:40 -<==      Total: 1
2019-05-14 16:01:40 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-14 16:01:40 -==> Parameters: 2019-03-14 00:00:00(String), 2019-03-14 23:59:59(String), 2(String)
2019-05-14 16:01:40 -<==      Total: 1
2019-05-14 16:01:40 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-14 16:01:40 -==> Parameters: 2019-03-14 00:00:00(String), 2019-03-14 23:59:59(String), 2(String)
2019-05-14 16:01:40 -<==      Total: 1
2019-05-14 16:01:40 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-14 16:01:40 -==> Parameters: 2019-03-14 00:00:00(String), 2019-03-14 23:59:59(String), 2(String)
2019-05-14 16:01:40 -<==      Total: 1
2019-05-14 16:01:40 -耗时 : 201
2019-05-14 16:01:40 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=0, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=0, MheatLogCountA=0, GelecLogCountA=0, SheatLogCountC=0, total=0, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=0, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=0, GelecLogSumC=0, waterLogCountA=0, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=0, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-05-14 16:01:47 -请求地址 : http://localhost:8081/charts/tableDD/getTableDD
2019-05-14 16:01:47 -HTTP METHOD : POST
2019-05-14 16:01:47 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.getTableDD
2019-05-14 16:01:47 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@148a11fa, com.bootdo.moneyLog.vo.WaterLogVo@3cccc33f, com.bootdo.moneyLog.vo.HeatLogVo@49282106]
2019-05-14 16:01:47 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 16:01:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 16:01:47 -<==      Total: 1
2019-05-14 16:01:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 16:01:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 16:01:47 -<==      Total: 1
2019-05-14 16:01:47 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 16:01:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 16:01:47 -<==      Total: 1
2019-05-14 16:01:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "1" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 16:01:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 16:01:47 -<==      Total: 1
2019-05-14 16:01:47 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 16:01:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 16:01:47 -<==      Total: 1
2019-05-14 16:01:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 16:01:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 16:01:47 -<==      Total: 1
2019-05-14 16:01:47 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 16:01:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 16:01:47 -<==      Total: 1
2019-05-14 16:01:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE elec_type = "2" and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 16:01:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 16:01:47 -<==      Total: 1
2019-05-14 16:01:47 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 16:01:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 16:01:47 -<==      Total: 1
2019-05-14 16:01:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 16:01:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 16:01:47 -<==      Total: 1
2019-05-14 16:01:47 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 16:01:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 16:01:47 -<==      Total: 1
2019-05-14 16:01:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'W%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 16:01:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 16:01:47 -<==      Total: 1
2019-05-14 16:01:47 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 16:01:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 16:01:47 -<==      Total: 1
2019-05-14 16:01:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 16:01:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 16:01:47 -<==      Total: 1
2019-05-14 16:01:47 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 16:01:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 16:01:47 -<==      Total: 1
2019-05-14 16:01:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'G%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 16:01:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 16:01:47 -<==      Total: 1
2019-05-14 16:01:47 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 16:01:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 16:01:47 -<==      Total: 1
2019-05-14 16:01:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "A" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 16:01:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 16:01:47 -<==      Total: 1
2019-05-14 16:01:47 -==>  Preparing: SELECT ifnull(COUNT(ID),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 16:01:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 16:01:47 -<==      Total: 1
2019-05-14 16:01:47 -==>  Preparing: SELECT ifnull(SUM(ELEC_MONEY),0) FROM ELEC_LOG WHERE user_id like 'M%' and user_type = "C" and `elec_date` >= ? and `elec_date` <= ? and user_org = ? 
2019-05-14 16:01:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 16:01:47 -<==      Total: 1
2019-05-14 16:01:47 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-14 16:01:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 16:01:47 -<==      Total: 1
2019-05-14 16:01:47 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-14 16:01:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 16:01:47 -<==      Total: 1
2019-05-14 16:01:47 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-14 16:01:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 16:01:47 -<==      Total: 1
2019-05-14 16:01:47 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "1" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-14 16:01:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 16:01:47 -<==      Total: 1
2019-05-14 16:01:47 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-14 16:01:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 16:01:47 -<==      Total: 1
2019-05-14 16:01:47 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "A" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-14 16:01:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 16:01:47 -<==      Total: 1
2019-05-14 16:01:47 -==>  Preparing: SELECT COUNT(ID) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-14 16:01:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 16:01:47 -<==      Total: 1
2019-05-14 16:01:47 -==>  Preparing: SELECT ifnull(SUM(HEAT_MONEY),0) FROM HEAT_LOG WHERE heat_type = "2" and user_type = "C" and `heat_date` >= ? and `heat_date` <= ? and user_org = ? 
2019-05-14 16:01:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 16:01:47 -<==      Total: 1
2019-05-14 16:01:47 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-14 16:01:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 16:01:47 -<==      Total: 1
2019-05-14 16:01:47 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-14 16:01:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 16:01:47 -<==      Total: 1
2019-05-14 16:01:47 -==>  Preparing: SELECT COUNT(ID) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-14 16:01:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 16:01:47 -<==      Total: 1
2019-05-14 16:01:47 -==>  Preparing: SELECT ifnull(SUM(WATER_MONEY),0) FROM WATER_LOG WHERE user_type = "C" and `water_date` >= ? and `water_date` <= ? and user_org = ? 
2019-05-14 16:01:47 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 2(String)
2019-05-14 16:01:47 -<==      Total: 1
2019-05-14 16:01:47 -耗时 : 122
2019-05-14 16:01:47 -返回值 : {WelecLogSumC=0, MelecLogSumC=0, MelecLogSumA=0, GelecLogCountC=0, TelecLogSumC=0, waterLogCountC=0, MheatLogCountC=0, TelecLogSumA=0, sum=120, MheatLogCountA=1, GelecLogCountA=0, SheatLogCountC=0, total=2, SheatLogCountA=0, SelecLogCountA=0, TelecLogCountC=0, TelecLogCountA=0, WelecLogCountA=0, WelecLogCountC=0, MheatLogSumA=60, MheatLogSumC=0, SelecLogCountC=0, GelecLogSumA=0, SheatLogSumA=0, MelecLogCountC=0, MelecLogCountA=0, GelecLogSumC=0, waterLogCountA=1, waterLogSumC=0, SelecLogSumA=0, waterLogSumA=60, SelecLogSumC=0, WelecLogSumA=0, SheatLogSumC=0}
2019-05-14 16:11:04 -请求地址 : http://localhost:8081/index
2019-05-14 16:11:04 -HTTP METHOD : GET
2019-05-14 16:11:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-14 16:11:04 -参数 : [{}]
2019-05-14 16:11:04 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-14 16:11:04 -==> Parameters: 1(Long)
2019-05-14 16:11:04 -<==      Total: 49
2019-05-14 16:11:04 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-14 16:11:04 -==> Parameters: 138(Long)
2019-05-14 16:11:04 -<==      Total: 1
2019-05-14 16:11:04 -耗时 : 37
2019-05-14 16:11:04 -返回值 : index_v1
2019-05-14 16:11:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 16:11:04 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 37(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-14 16:11:04.678(Timestamp)
2019-05-14 16:11:04 -请求地址 : http://localhost:8081/main
2019-05-14 16:11:04 -HTTP METHOD : GET
2019-05-14 16:11:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 16:11:04 -参数 : []
2019-05-14 16:11:04 -耗时 : 1
2019-05-14 16:11:04 -返回值 : main
2019-05-14 16:11:04 -<==    Updates: 1
2019-05-14 16:11:04 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-14 16:11:04 -HTTP METHOD : GET
2019-05-14 16:11:04 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-14 16:11:04 -参数 : []
2019-05-14 16:11:04 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-14 16:11:04 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-14 16:11:04 -<==      Total: 0
2019-05-14 16:11:04 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-14 16:11:04 -==> Parameters: 1(Long), 0(String)
2019-05-14 16:11:04 -<==      Total: 1
2019-05-14 16:11:04 -耗时 : 5
2019-05-14 16:11:04 -返回值 : com.bootdo.common.utils.PageUtils@1799c54b
2019-05-14 16:11:05 -请求地址 : http://localhost:8081/main
2019-05-14 16:11:05 -HTTP METHOD : GET
2019-05-14 16:11:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 16:11:05 -参数 : []
2019-05-14 16:11:05 -耗时 : 1
2019-05-14 16:11:05 -返回值 : main
2019-05-14 16:11:07 -请求地址 : http://localhost:8081/charts/tableDD
2019-05-14 16:11:07 -HTTP METHOD : GET
2019-05-14 16:11:07 -CLASS_METHOD : com.bootdo.charts.controller.tableDDController.countDD
2019-05-14 16:11:07 -参数 : []
2019-05-14 16:11:07 -耗时 : 1
2019-05-14 16:11:07 -返回值 : charts/tableDD
2019-05-14 16:11:50 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-14 16:31:09 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 24], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 438]
2019-05-14 17:00:24 -Validating all active sessions...
2019-05-14 17:00:24 -Finished session validation.  [1] sessions were stopped.
2019-05-14 17:01:09 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 24], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 871]
2019-05-14 20:51:44 -Starting BootdoApplication on PC-201905091110 with PID 15112 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-14 20:51:45 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-14 20:51:45 -The following profiles are active: dev
2019-05-14 20:51:45 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Tue May 14 20:51:45 CST 2019]; root of context hierarchy
2019-05-14 20:51:50 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-14 20:51:52 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$24352bd3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 20:51:52 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$168e5a7a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 20:51:54 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 20:51:54 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 20:51:54 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 20:51:54 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-14 20:51:54 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-14 20:51:54 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 20:51:54 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 20:51:55 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 20:51:55 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 20:51:56 -Tomcat initialized with port(s): 8081 (http)
2019-05-14 20:51:56 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-14 20:51:56 -Starting service [Tomcat]
2019-05-14 20:51:56 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-14 20:51:56 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-14 20:51:56 -Initializing Spring embedded WebApplicationContext
2019-05-14 20:51:56 -Root WebApplicationContext: initialization completed in 11644 ms
2019-05-14 20:51:57 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-14 20:51:57 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-14 20:51:57 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-14 20:51:57 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-14 20:51:57 -Filter xssFilter was not registered (disabled)
2019-05-14 20:51:57 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-14 20:51:57 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-14 20:51:57 -Servlet statViewServlet mapped to [/druid/*]
2019-05-14 20:51:57 -Servlet dispatcherServlet mapped to [/]
2019-05-14 20:52:06 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Tue May 14 20:51:45 CST 2019]; root of context hierarchy
2019-05-14 20:52:07 -Using default implementation for ThreadExecutor
2019-05-14 20:52:07 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-14 20:52:07 -Quartz Scheduler v.2.2.1 created.
2019-05-14 20:52:07 -RAMJobStore initialized.
2019-05-14 20:52:07 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-14 20:52:07 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-14 20:52:07 -Quartz scheduler version: 2.2.1
2019-05-14 20:52:07 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@563317c1
2019-05-14 20:52:07 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-14 20:52:07 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-14 20:52:10 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 20:52:10 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-14 20:52:10 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 20:52:10 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 20:52:10 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 20:52:10 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-14 20:52:10 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-14 20:52:10 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-14 20:52:10 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-14 20:52:10 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-14 20:52:10 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 20:52:10 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 20:52:10 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 20:52:10 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 20:52:10 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-14 20:52:10 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 20:52:10 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-14 20:52:10 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 20:52:10 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-14 20:52:10 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-14 20:52:10 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 20:52:10 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 20:52:10 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-14 20:52:10 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-14 20:52:10 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 20:52:10 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-14 20:52:10 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 20:52:10 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 20:52:10 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-14 20:52:10 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 20:52:10 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 20:52:10 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-14 20:52:10 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-05-14 20:52:10 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 20:52:10 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-14 20:52:10 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-14 20:52:10 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-14 20:52:10 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-14 20:52:10 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-14 20:52:10 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-14 20:52:10 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 20:52:10 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-14 20:52:10 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-14 20:52:10 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-14 20:52:10 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-14 20:52:10 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-14 20:52:10 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 20:52:10 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-14 20:52:10 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-14 20:52:10 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-14 20:52:10 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-14 20:52:10 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 20:52:10 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-14 20:52:10 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-14 20:52:10 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-14 20:52:10 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 20:52:10 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-14 20:52:10 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 20:52:10 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-14 20:52:10 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-14 20:52:10 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-14 20:52:10 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-14 20:52:10 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-14 20:52:10 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-14 20:52:10 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-14 20:52:10 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-14 20:52:10 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-14 20:52:10 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 20:52:10 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-14 20:52:10 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-14 20:52:10 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 20:52:10 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-14 20:52:10 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-14 20:52:10 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-14 20:52:10 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-14 20:52:10 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 20:52:10 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-14 20:52:10 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-14 20:52:10 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-14 20:52:10 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-14 20:52:10 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-14 20:52:10 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-14 20:52:10 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-14 20:52:10 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-14 20:52:10 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-14 20:52:10 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-14 20:52:10 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-14 20:52:10 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 20:52:10 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-14 20:52:10 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-14 20:52:10 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-14 20:52:10 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-14 20:52:10 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-14 20:52:10 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-14 20:52:10 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-14 20:52:10 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-14 20:52:10 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-14 20:52:10 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-14 20:52:10 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-14 20:52:10 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 20:52:10 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-14 20:52:10 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 20:52:10 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-14 20:52:10 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-14 20:52:10 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-14 20:52:10 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-14 20:52:10 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-14 20:52:10 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-14 20:52:10 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-14 20:52:10 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-14 20:52:10 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 20:52:10 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-14 20:52:10 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-14 20:52:10 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-14 20:52:10 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-14 20:52:10 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-14 20:52:10 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-14 20:52:10 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-14 20:52:10 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-14 20:52:10 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-14 20:52:10 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-14 20:52:10 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-14 20:52:10 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 20:52:10 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-14 20:52:10 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 20:52:10 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-14 20:52:10 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-14 20:52:10 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-14 20:52:10 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-14 20:52:10 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-14 20:52:10 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-14 20:52:10 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-14 20:52:10 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-14 20:52:10 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-14 20:52:10 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-14 20:52:10 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-14 20:52:10 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-14 20:52:10 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-14 20:52:10 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 20:52:10 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-14 20:52:10 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 20:52:10 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-14 20:52:10 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-14 20:52:10 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-14 20:52:10 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-14 20:52:10 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-14 20:52:10 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-14 20:52:10 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 20:52:10 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-14 20:52:10 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 20:52:10 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-14 20:52:10 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-14 20:52:10 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-14 20:52:10 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-14 20:52:10 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-14 20:52:10 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-14 20:52:10 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 20:52:10 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-14 20:52:10 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 20:52:10 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-14 20:52:10 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-14 20:52:10 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-14 20:52:10 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-14 20:52:10 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-14 20:52:10 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-14 20:52:10 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-14 20:52:10 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 20:52:10 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-14 20:52:10 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-14 20:52:10 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 20:52:10 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 20:52:10 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-14 20:52:10 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-14 20:52:10 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-14 20:52:10 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-14 20:52:10 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-14 20:52:10 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-14 20:52:10 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 20:52:10 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-14 20:52:10 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 20:52:10 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-14 20:52:10 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-14 20:52:10 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 20:52:10 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-14 20:52:10 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-14 20:52:10 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-14 20:52:10 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-14 20:52:10 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-14 20:52:10 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-14 20:52:10 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-14 20:52:10 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-14 20:52:10 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 20:52:10 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-14 20:52:10 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-14 20:52:10 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-14 20:52:10 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-14 20:52:10 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-14 20:52:10 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-14 20:52:10 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-14 20:52:10 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-14 20:52:10 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-14 20:52:10 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-14 20:52:10 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-14 20:52:10 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-14 20:52:10 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 20:52:10 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-14 20:52:10 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-14 20:52:10 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-14 20:52:10 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-14 20:52:10 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-14 20:52:10 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-14 20:52:10 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-14 20:52:10 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-14 20:52:10 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-14 20:52:10 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-14 20:52:10 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-14 20:52:10 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 20:52:10 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-14 20:52:10 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-14 20:52:10 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-14 20:52:10 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-14 20:52:10 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-14 20:52:10 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 20:52:10 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-14 20:52:10 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-14 20:52:10 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-14 20:52:10 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 20:52:10 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-14 20:52:10 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-14 20:52:10 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-14 20:52:10 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-14 20:52:10 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-14 20:52:10 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-14 20:52:10 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-14 20:52:10 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-14 20:52:10 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-14 20:52:10 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-14 20:52:10 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-14 20:52:10 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-14 20:52:10 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-14 20:52:10 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-14 20:52:10 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-14 20:52:10 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-14 20:52:10 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-14 20:52:10 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 20:52:10 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-14 20:52:10 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-14 20:52:10 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 20:52:10 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-14 20:52:10 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-14 20:52:10 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-14 20:52:10 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-14 20:52:10 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-14 20:52:10 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-14 20:52:10 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-14 20:52:10 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-14 20:52:10 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 20:52:10 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-14 20:52:10 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-14 20:52:10 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 20:52:10 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-14 20:52:10 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-14 20:52:10 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-14 20:52:10 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-14 20:52:10 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-14 20:52:10 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-14 20:52:10 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-14 20:52:10 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-14 20:52:11 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-14 20:52:11 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-14 20:52:11 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-14 20:52:11 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-14 20:52:12 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Tue May 14 20:51:45 CST 2019]; root of context hierarchy
2019-05-14 20:52:12 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-14 20:52:12 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-14 20:52:12 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-14 20:52:12 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-14 20:52:12 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-14 20:52:15 -Registering beans for JMX exposure on startup
2019-05-14 20:52:15 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-14 20:52:15 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-14 20:52:15 -Starting beans in phase 2147483647
2019-05-14 20:52:15 -Context refreshed
2019-05-14 20:52:15 -Found 1 custom documentation plugin(s)
2019-05-14 20:52:15 -Scanning for api listing references
2019-05-14 20:52:16 -Generating unique operation named: getCountDUsingPOST_1
2019-05-14 20:52:16 -Generating unique operation named: removeUsingPOST_1
2019-05-14 20:52:16 -Generating unique operation named: addUsingGET_1
2019-05-14 20:52:16 -Generating unique operation named: editUsingGET_1
2019-05-14 20:52:16 -Generating unique operation named: listUsingGET_1
2019-05-14 20:52:16 -Generating unique operation named: removeUsingPOST_2
2019-05-14 20:52:16 -Generating unique operation named: removeUsingPOST_3
2019-05-14 20:52:16 -Generating unique operation named: saveUsingPOST_1
2019-05-14 20:52:16 -Generating unique operation named: updateUsingGET_1
2019-05-14 20:52:16 -Generating unique operation named: updateUsingHEAD_1
2019-05-14 20:52:16 -Generating unique operation named: updateUsingPOST_1
2019-05-14 20:52:16 -Generating unique operation named: updateUsingPUT_1
2019-05-14 20:52:16 -Generating unique operation named: updateUsingPATCH_1
2019-05-14 20:52:16 -Generating unique operation named: updateUsingDELETE_1
2019-05-14 20:52:16 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-14 20:52:16 -Generating unique operation named: updateUsingTRACE_1
2019-05-14 20:52:16 -Generating unique operation named: addUsingGET_2
2019-05-14 20:52:16 -Generating unique operation named: editUsingGET_2
2019-05-14 20:52:16 -Generating unique operation named: listUsingGET_2
2019-05-14 20:52:16 -Generating unique operation named: removeUsingPOST_4
2019-05-14 20:52:16 -Generating unique operation named: removeUsingPOST_5
2019-05-14 20:52:16 -Generating unique operation named: saveUsingPOST_2
2019-05-14 20:52:16 -Generating unique operation named: updateUsingPOST_2
2019-05-14 20:52:16 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-14 20:52:16 -Generating unique operation named: addUsingGET_3
2019-05-14 20:52:16 -Generating unique operation named: editUsingGET_3
2019-05-14 20:52:16 -Generating unique operation named: listUsingGET_3
2019-05-14 20:52:16 -Generating unique operation named: removeUsingPOST_6
2019-05-14 20:52:16 -Generating unique operation named: removeUsingPOST_7
2019-05-14 20:52:16 -Generating unique operation named: saveUsingPOST_3
2019-05-14 20:52:16 -Generating unique operation named: updateUsingGET_2
2019-05-14 20:52:16 -Generating unique operation named: updateUsingHEAD_2
2019-05-14 20:52:16 -Generating unique operation named: updateUsingPOST_3
2019-05-14 20:52:16 -Generating unique operation named: updateUsingPUT_2
2019-05-14 20:52:16 -Generating unique operation named: updateUsingPATCH_2
2019-05-14 20:52:16 -Generating unique operation named: updateUsingDELETE_2
2019-05-14 20:52:16 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-14 20:52:16 -Generating unique operation named: updateUsingTRACE_2
2019-05-14 20:52:16 -Generating unique operation named: addUsingGET_4
2019-05-14 20:52:16 -Generating unique operation named: editUsingGET_4
2019-05-14 20:52:16 -Generating unique operation named: listUsingGET_4
2019-05-14 20:52:16 -Generating unique operation named: removeUsingPOST_8
2019-05-14 20:52:16 -Generating unique operation named: removeUsingPOST_9
2019-05-14 20:52:16 -Generating unique operation named: saveUsingPOST_4
2019-05-14 20:52:16 -Generating unique operation named: updateUsingGET_3
2019-05-14 20:52:16 -Generating unique operation named: updateUsingHEAD_3
2019-05-14 20:52:16 -Generating unique operation named: updateUsingPOST_4
2019-05-14 20:52:16 -Generating unique operation named: updateUsingPUT_3
2019-05-14 20:52:16 -Generating unique operation named: updateUsingPATCH_3
2019-05-14 20:52:16 -Generating unique operation named: updateUsingDELETE_3
2019-05-14 20:52:16 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-14 20:52:16 -Generating unique operation named: updateUsingTRACE_3
2019-05-14 20:52:16 -Generating unique operation named: ElecUsingGET_1
2019-05-14 20:52:16 -Generating unique operation named: addUsingGET_5
2019-05-14 20:52:16 -Generating unique operation named: editUsingGET_5
2019-05-14 20:52:16 -Generating unique operation named: listUsingGET_5
2019-05-14 20:52:16 -Generating unique operation named: removeUsingPOST_10
2019-05-14 20:52:16 -Generating unique operation named: removeUsingPOST_11
2019-05-14 20:52:16 -Generating unique operation named: saveUsingPOST_5
2019-05-14 20:52:16 -Generating unique operation named: updateUsingGET_4
2019-05-14 20:52:16 -Generating unique operation named: updateUsingHEAD_4
2019-05-14 20:52:16 -Generating unique operation named: updateUsingPOST_5
2019-05-14 20:52:16 -Generating unique operation named: updateUsingPUT_4
2019-05-14 20:52:16 -Generating unique operation named: updateUsingPATCH_4
2019-05-14 20:52:16 -Generating unique operation named: updateUsingDELETE_4
2019-05-14 20:52:16 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-14 20:52:16 -Generating unique operation named: updateUsingTRACE_4
2019-05-14 20:52:16 -Generating unique operation named: editUsingGET_6
2019-05-14 20:52:16 -Generating unique operation named: listUsingGET_6
2019-05-14 20:52:16 -Generating unique operation named: updateUsingPOST_6
2019-05-14 20:52:16 -Generating unique operation named: addUsingGET_6
2019-05-14 20:52:16 -Generating unique operation named: editUsingGET_7
2019-05-14 20:52:16 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-14 20:52:16 -Generating unique operation named: listUsingGET_7
2019-05-14 20:52:16 -Generating unique operation named: removeUsingPOST_12
2019-05-14 20:52:16 -Generating unique operation named: removeUsingPOST_13
2019-05-14 20:52:16 -Generating unique operation named: saveUsingPOST_6
2019-05-14 20:52:16 -Generating unique operation named: updateUsingGET_5
2019-05-14 20:52:16 -Generating unique operation named: updateUsingHEAD_5
2019-05-14 20:52:16 -Generating unique operation named: updateUsingPOST_7
2019-05-14 20:52:16 -Generating unique operation named: updateUsingPUT_5
2019-05-14 20:52:16 -Generating unique operation named: updateUsingPATCH_5
2019-05-14 20:52:16 -Generating unique operation named: updateUsingDELETE_5
2019-05-14 20:52:16 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-14 20:52:16 -Generating unique operation named: updateUsingTRACE_5
2019-05-14 20:52:16 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-14 20:52:16 -Generating unique operation named: addUsingGET_7
2019-05-14 20:52:16 -Generating unique operation named: editUsingGET_8
2019-05-14 20:52:16 -Generating unique operation named: listUsingGET_8
2019-05-14 20:52:16 -Generating unique operation named: removeUsingPOST_14
2019-05-14 20:52:16 -Generating unique operation named: removeUsingPOST_15
2019-05-14 20:52:16 -Generating unique operation named: saveUsingPOST_7
2019-05-14 20:52:16 -Generating unique operation named: updateUsingGET_6
2019-05-14 20:52:16 -Generating unique operation named: updateUsingHEAD_6
2019-05-14 20:52:16 -Generating unique operation named: updateUsingPOST_8
2019-05-14 20:52:16 -Generating unique operation named: updateUsingPUT_6
2019-05-14 20:52:16 -Generating unique operation named: updateUsingPATCH_6
2019-05-14 20:52:16 -Generating unique operation named: updateUsingDELETE_6
2019-05-14 20:52:16 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-14 20:52:16 -Generating unique operation named: updateUsingTRACE_6
2019-05-14 20:52:16 -Generating unique operation named: addUsingGET_8
2019-05-14 20:52:16 -Generating unique operation named: editUsingGET_9
2019-05-14 20:52:16 -Generating unique operation named: listUsingGET_9
2019-05-14 20:52:16 -Generating unique operation named: removeUsingPOST_16
2019-05-14 20:52:16 -Generating unique operation named: removeUsingPOST_17
2019-05-14 20:52:16 -Generating unique operation named: saveUsingPOST_8
2019-05-14 20:52:16 -Generating unique operation named: updateUsingGET_7
2019-05-14 20:52:16 -Generating unique operation named: updateUsingHEAD_7
2019-05-14 20:52:16 -Generating unique operation named: updateUsingPOST_9
2019-05-14 20:52:16 -Generating unique operation named: updateUsingPUT_7
2019-05-14 20:52:16 -Generating unique operation named: updateUsingPATCH_7
2019-05-14 20:52:16 -Generating unique operation named: updateUsingDELETE_7
2019-05-14 20:52:16 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-14 20:52:16 -Generating unique operation named: updateUsingTRACE_7
2019-05-14 20:52:17 -Generating unique operation named: addUsingGET_9
2019-05-14 20:52:17 -Generating unique operation named: editUsingGET_10
2019-05-14 20:52:17 -Generating unique operation named: infoUsingGET_1
2019-05-14 20:52:17 -Generating unique operation named: infoUsingHEAD_1
2019-05-14 20:52:17 -Generating unique operation named: infoUsingPOST_1
2019-05-14 20:52:17 -Generating unique operation named: infoUsingPUT_1
2019-05-14 20:52:17 -Generating unique operation named: infoUsingPATCH_1
2019-05-14 20:52:17 -Generating unique operation named: infoUsingDELETE_1
2019-05-14 20:52:17 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-14 20:52:17 -Generating unique operation named: infoUsingTRACE_1
2019-05-14 20:52:17 -Generating unique operation named: listUsingGET_10
2019-05-14 20:52:17 -Generating unique operation named: removeUsingPOST_18
2019-05-14 20:52:17 -Generating unique operation named: removeUsingPOST_19
2019-05-14 20:52:17 -Generating unique operation named: saveUsingPOST_9
2019-05-14 20:52:17 -Generating unique operation named: updateUsingPOST_10
2019-05-14 20:52:17 -Generating unique operation named: listUsingGET_11
2019-05-14 20:52:17 -Generating unique operation named: removeUsingPOST_20
2019-05-14 20:52:17 -Generating unique operation named: welcomeUsingGET_1
2019-05-14 20:52:17 -Generating unique operation named: addUsingGET_10
2019-05-14 20:52:17 -Generating unique operation named: editUsingGET_11
2019-05-14 20:52:17 -Generating unique operation named: listUsingGET_12
2019-05-14 20:52:17 -Generating unique operation named: removeUsingPOST_21
2019-05-14 20:52:17 -Generating unique operation named: saveUsingPOST_10
2019-05-14 20:52:17 -Generating unique operation named: treeUsingGET_1
2019-05-14 20:52:17 -Generating unique operation named: treeUsingGET_2
2019-05-14 20:52:17 -Generating unique operation named: updateUsingPOST_11
2019-05-14 20:52:17 -Generating unique operation named: addUsingGET_11
2019-05-14 20:52:17 -Generating unique operation named: editUsingGET_12
2019-05-14 20:52:17 -Generating unique operation named: listUsingGET_13
2019-05-14 20:52:17 -Generating unique operation named: removeUsingPOST_22
2019-05-14 20:52:17 -Generating unique operation named: removeUsingPOST_23
2019-05-14 20:52:17 -Generating unique operation named: saveUsingPOST_11
2019-05-14 20:52:17 -Generating unique operation named: updateUsingGET_8
2019-05-14 20:52:17 -Generating unique operation named: updateUsingHEAD_8
2019-05-14 20:52:17 -Generating unique operation named: updateUsingPOST_12
2019-05-14 20:52:17 -Generating unique operation named: updateUsingPUT_8
2019-05-14 20:52:17 -Generating unique operation named: updateUsingPATCH_8
2019-05-14 20:52:17 -Generating unique operation named: updateUsingDELETE_8
2019-05-14 20:52:17 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-14 20:52:17 -Generating unique operation named: updateUsingTRACE_8
2019-05-14 20:52:17 -Generating unique operation named: addUsingGET_12
2019-05-14 20:52:17 -Generating unique operation named: editUsingGET_13
2019-05-14 20:52:17 -Generating unique operation named: listUsingGET_14
2019-05-14 20:52:17 -Generating unique operation named: removeUsingPOST_24
2019-05-14 20:52:17 -Generating unique operation named: removeUsingPOST_25
2019-05-14 20:52:17 -Generating unique operation named: saveUsingPOST_12
2019-05-14 20:52:17 -Generating unique operation named: updateUsingGET_9
2019-05-14 20:52:17 -Generating unique operation named: updateUsingHEAD_9
2019-05-14 20:52:17 -Generating unique operation named: updateUsingPOST_13
2019-05-14 20:52:17 -Generating unique operation named: updateUsingPUT_9
2019-05-14 20:52:17 -Generating unique operation named: updateUsingPATCH_9
2019-05-14 20:52:17 -Generating unique operation named: updateUsingDELETE_9
2019-05-14 20:52:17 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-14 20:52:17 -Generating unique operation named: updateUsingTRACE_9
2019-05-14 20:52:17 -Generating unique operation named: addUsingGET_13
2019-05-14 20:52:17 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-14 20:52:17 -Generating unique operation named: editUsingGET_14
2019-05-14 20:52:17 -Generating unique operation named: listUsingGET_15
2019-05-14 20:52:17 -Generating unique operation named: saveUsingPOST_13
2019-05-14 20:52:17 -Generating unique operation named: saveUsingPOST_14
2019-05-14 20:52:17 -Generating unique operation named: updateUsingPOST_14
2019-05-14 20:52:17 -Generating unique operation named: listUsingGET_16
2019-05-14 20:52:17 -Generating unique operation named: listUsingHEAD_1
2019-05-14 20:52:17 -Generating unique operation named: listUsingPOST_1
2019-05-14 20:52:17 -Generating unique operation named: listUsingPUT_1
2019-05-14 20:52:17 -Generating unique operation named: listUsingPATCH_1
2019-05-14 20:52:17 -Generating unique operation named: listUsingDELETE_1
2019-05-14 20:52:17 -Generating unique operation named: listUsingOPTIONS_1
2019-05-14 20:52:17 -Generating unique operation named: listUsingTRACE_1
2019-05-14 20:52:17 -Generating unique operation named: countDDUsingGET_1
2019-05-14 20:52:17 -Generating unique operation named: exportDDUsingGET_1
2019-05-14 20:52:17 -Generating unique operation named: getCountYYUsingPOST_1
2019-05-14 20:52:17 -Generating unique operation named: getCountMMUsingPOST_1
2019-05-14 20:52:17 -Generating unique operation named: addUsingGET_14
2019-05-14 20:52:17 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-14 20:52:17 -Generating unique operation named: editUsingGET_15
2019-05-14 20:52:17 -Generating unique operation named: listUsingGET_17
2019-05-14 20:52:17 -Generating unique operation named: removeUsingPOST_26
2019-05-14 20:52:17 -Generating unique operation named: saveUsingPOST_15
2019-05-14 20:52:17 -Generating unique operation named: treeUsingGET_3
2019-05-14 20:52:17 -Generating unique operation named: treeViewUsingGET_1
2019-05-14 20:52:17 -Generating unique operation named: updateUsingPOST_15
2019-05-14 20:52:17 -Generating unique operation named: addUsingGET_15
2019-05-14 20:52:17 -Generating unique operation named: editUsingGET_16
2019-05-14 20:52:17 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-14 20:52:17 -Generating unique operation named: listUsingGET_18
2019-05-14 20:52:17 -Generating unique operation named: removeUsingPOST_27
2019-05-14 20:52:17 -Generating unique operation named: removeUsingPOST_28
2019-05-14 20:52:17 -Generating unique operation named: saveUsingPOST_16
2019-05-14 20:52:17 -Generating unique operation named: updateUsingGET_10
2019-05-14 20:52:17 -Generating unique operation named: updateUsingHEAD_10
2019-05-14 20:52:17 -Generating unique operation named: updateUsingPOST_16
2019-05-14 20:52:17 -Generating unique operation named: updateUsingPUT_10
2019-05-14 20:52:17 -Generating unique operation named: updateUsingPATCH_10
2019-05-14 20:52:17 -Generating unique operation named: updateUsingDELETE_10
2019-05-14 20:52:17 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-14 20:52:17 -Generating unique operation named: updateUsingTRACE_10
2019-05-14 20:52:17 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-14 20:52:17 -Generating unique operation named: addUsingGET_16
2019-05-14 20:52:17 -Generating unique operation named: editUsingGET_17
2019-05-14 20:52:17 -Generating unique operation named: listUsingGET_19
2019-05-14 20:52:17 -Generating unique operation named: removeUsingPOST_29
2019-05-14 20:52:17 -Generating unique operation named: removeUsingPOST_30
2019-05-14 20:52:17 -Generating unique operation named: saveUsingPOST_17
2019-05-14 20:52:17 -Generating unique operation named: updateUsingGET_11
2019-05-14 20:52:17 -Generating unique operation named: updateUsingHEAD_11
2019-05-14 20:52:17 -Generating unique operation named: updateUsingPOST_17
2019-05-14 20:52:17 -Generating unique operation named: updateUsingPUT_11
2019-05-14 20:52:17 -Generating unique operation named: updateUsingPATCH_11
2019-05-14 20:52:17 -Generating unique operation named: updateUsingDELETE_11
2019-05-14 20:52:17 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-14 20:52:17 -Generating unique operation named: updateUsingTRACE_11
2019-05-14 20:52:17 -Generating unique operation named: addUsingGET_17
2019-05-14 20:52:17 -Generating unique operation named: editUsingGET_18
2019-05-14 20:52:17 -Generating unique operation named: listUsingGET_20
2019-05-14 20:52:17 -Generating unique operation named: removeUsingPOST_31
2019-05-14 20:52:17 -Generating unique operation named: removeUsingPOST_32
2019-05-14 20:52:17 -Generating unique operation named: saveUsingPOST_18
2019-05-14 20:52:17 -Generating unique operation named: updateUsingGET_12
2019-05-14 20:52:17 -Generating unique operation named: updateUsingHEAD_12
2019-05-14 20:52:17 -Generating unique operation named: updateUsingPOST_18
2019-05-14 20:52:17 -Generating unique operation named: updateUsingPUT_12
2019-05-14 20:52:17 -Generating unique operation named: updateUsingPATCH_12
2019-05-14 20:52:17 -Generating unique operation named: updateUsingDELETE_12
2019-05-14 20:52:17 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-14 20:52:17 -Generating unique operation named: updateUsingTRACE_12
2019-05-14 20:52:17 -Starting Quartz Scheduler now
2019-05-14 20:52:17 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-14 20:52:17 -Starting...
2019-05-14 20:52:17 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-14 20:52:17 -Started.
2019-05-14 20:52:17 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-14 20:52:18 -Using a shared selector for servlet write/read
2019-05-14 20:52:18 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-14 20:52:18 -Started BootdoApplication in 34.377 seconds (JVM running for 35.122)
2019-05-14 20:52:18 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-14 20:52:18 -==> Parameters: 
2019-05-14 20:52:18 -<==      Total: 1
2019-05-14 20:53:11 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-14 20:59:25 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-14 20:59:25 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-14 20:59:25 -FrameworkServlet 'dispatcherServlet': initialization completed in 131 ms
2019-05-14 20:59:25 -Enabling session validation scheduler...
2019-05-14 20:59:26 -请求地址 : http://localhost:8081/login;JSESSIONID=05ecc14c-be9d-4523-858a-919423ab8988
2019-05-14 20:59:26 -HTTP METHOD : GET
2019-05-14 20:59:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-14 20:59:26 -参数 : [{}]
2019-05-14 20:59:26 -耗时 : 5
2019-05-14 20:59:26 -返回值 : login
2019-05-14 20:59:29 -请求地址 : http://localhost:8081/getVerify
2019-05-14 20:59:29 -HTTP METHOD : GET
2019-05-14 20:59:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-14 20:59:29 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@3eeac142, org.apache.shiro.web.servlet.ShiroHttpServletResponse@302d38ef]
2019-05-14 20:59:33 -2584
2019-05-14 20:59:33 -耗时 : 4777
2019-05-14 20:59:33 -返回值 : null
2019-05-14 20:59:38 -请求地址 : http://localhost:8081/login
2019-05-14 20:59:38 -HTTP METHOD : POST
2019-05-14 20:59:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-14 20:59:38 -参数 : [admin, 111111, 2584, org.apache.shiro.web.servlet.ShiroHttpServletRequest@28fa7d7c]
2019-05-14 20:59:38 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-14 20:59:38 -==> Parameters: admin(String)
2019-05-14 20:59:38 -<==      Total: 1
2019-05-14 20:59:38 -耗时 : 101
2019-05-14 20:59:38 -返回值 : {msg=操作成功, code=0}
2019-05-14 20:59:38 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-14 20:59:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 20:59:38 -==> Parameters: 1(Long), admin(String), 登录(String), 102(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-14 20:59:38.579(Timestamp)
2019-05-14 20:59:38 -<==    Updates: 1
2019-05-14 20:59:38 -请求地址 : http://localhost:8081/index
2019-05-14 20:59:38 -HTTP METHOD : GET
2019-05-14 20:59:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-14 20:59:38 -参数 : [{}]
2019-05-14 20:59:38 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-14 20:59:38 -==> Parameters: 1(Long)
2019-05-14 20:59:38 -<==      Total: 49
2019-05-14 20:59:38 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-14 20:59:38 -==> Parameters: 138(Long)
2019-05-14 20:59:38 -<==      Total: 1
2019-05-14 20:59:38 -耗时 : 157
2019-05-14 20:59:38 -返回值 : index_v1
2019-05-14 20:59:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 20:59:39 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 158(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-14 20:59:39.051(Timestamp)
2019-05-14 20:59:39 -<==    Updates: 1
2019-05-14 20:59:39 -请求地址 : http://localhost:8081/main
2019-05-14 20:59:39 -HTTP METHOD : GET
2019-05-14 20:59:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 20:59:39 -参数 : []
2019-05-14 20:59:39 -耗时 : 0
2019-05-14 20:59:39 -返回值 : main
2019-05-14 20:59:40 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-14 20:59:40 -HTTP METHOD : GET
2019-05-14 20:59:40 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-14 20:59:40 -参数 : []
2019-05-14 20:59:40 -请求地址 : http://localhost:8081/main
2019-05-14 20:59:40 -HTTP METHOD : GET
2019-05-14 20:59:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 20:59:40 -参数 : []
2019-05-14 20:59:40 -耗时 : 0
2019-05-14 20:59:40 -返回值 : main
2019-05-14 20:59:40 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-14 20:59:40 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-14 20:59:40 -<==      Total: 0
2019-05-14 20:59:40 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-14 20:59:40 -==> Parameters: 1(Long), 0(String)
2019-05-14 20:59:40 -<==      Total: 1
2019-05-14 20:59:40 -耗时 : 49
2019-05-14 20:59:40 -返回值 : com.bootdo.common.utils.PageUtils@6d865fe9
2019-05-14 20:59:45 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-14 20:59:45 -==> Parameters: 1(Long)
2019-05-14 20:59:45 -<==      Total: 93
2019-05-14 20:59:45 -请求地址 : http://localhost:8081/water/waterPrice
2019-05-14 20:59:45 -HTTP METHOD : GET
2019-05-14 20:59:45 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.WaterPrice
2019-05-14 20:59:45 -参数 : []
2019-05-14 20:59:45 -耗时 : 1
2019-05-14 20:59:45 -返回值 : water/waterPrice/waterPrice
2019-05-14 20:59:46 -请求地址 : http://localhost:8081/water/waterPrice/list
2019-05-14 20:59:46 -HTTP METHOD : GET
2019-05-14 20:59:46 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.list
2019-05-14 20:59:46 -参数 : [{limit=10, offset=0}]
2019-05-14 20:59:46 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price order by id asc limit ?, ? 
2019-05-14 20:59:46 -==> Parameters: 0(Integer), 10(Integer)
2019-05-14 20:59:46 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-05-14 20:59:46 -SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2019-05-14 20:59:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 20:59:46 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/water/waterPrice/list(String), org.springframework.dao.TransientDataAccessResourceException: Error attempting to get column 'create_time' from result set.  Cause: java.sql.SQLException: Bad format for Timestamp '2019-05' in column 8.
; ]; Bad format for Timestamp '2019-05' in column 8.; nested exception is java.sql.SQLException: Bad format for Timestamp '2019-05' in column 8.(String), null, 2019-05-14 20:59:46.467(Timestamp)
2019-05-14 20:59:46 -Error attempting to get column 'create_time' from result set.  Cause: java.sql.SQLException: Bad format for Timestamp '2019-05' in column 8.
; ]; Bad format for Timestamp '2019-05' in column 8.; nested exception is java.sql.SQLException: Bad format for Timestamp '2019-05' in column 8.
org.springframework.dao.TransientDataAccessResourceException: Error attempting to get column 'create_time' from result set.  Cause: java.sql.SQLException: Bad format for Timestamp '2019-05' in column 8.
; ]; Bad format for Timestamp '2019-05' in column 8.; nested exception is java.sql.SQLException: Bad format for Timestamp '2019-05' in column 8.
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:110)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy143.list(Unknown Source)
	at com.bootdo.water.service.impl.WaterPriceServiceImpl.list(WaterPriceServiceImpl.java:27)
	at com.bootdo.water.controller.WaterPriceController.list(WaterPriceController.java:48)
	at com.bootdo.water.controller.WaterPriceController$$FastClassBySpringCGLIB$$fb365725.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.water.controller.WaterPriceController$$EnhancerBySpringCGLIB$$a0f2bee2.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.sql.SQLException: Bad format for Timestamp '2019-05' in column 8.
	at com.mysql.jdbc.ResultSetRow.getTimestampFast(ResultSetRow.java:1157)
	at com.mysql.jdbc.ByteArrayRow.getTimestampFast(ByteArrayRow.java:130)
	at com.mysql.jdbc.ResultSetImpl.getTimestampInternal(ResultSetImpl.java:5921)
	at com.mysql.jdbc.ResultSetImpl.getTimestamp(ResultSetImpl.java:5591)
	at com.mysql.jdbc.ResultSetImpl.getTimestamp(ResultSetImpl.java:5620)
	at com.alibaba.druid.filter.FilterChainImpl.resultSet_getTimestamp(FilterChainImpl.java:909)
	at com.alibaba.druid.filter.FilterAdapter.resultSet_getTimestamp(FilterAdapter.java:1796)
	at com.alibaba.druid.filter.FilterChainImpl.resultSet_getTimestamp(FilterChainImpl.java:907)
	at com.alibaba.druid.filter.FilterAdapter.resultSet_getTimestamp(FilterAdapter.java:1796)
	at com.alibaba.druid.filter.FilterChainImpl.resultSet_getTimestamp(FilterChainImpl.java:907)
	at com.alibaba.druid.filter.FilterAdapter.resultSet_getTimestamp(FilterAdapter.java:1796)
	at com.alibaba.druid.filter.FilterChainImpl.resultSet_getTimestamp(FilterChainImpl.java:907)
	at com.alibaba.druid.proxy.jdbc.ResultSetProxyImpl.getTimestamp(ResultSetProxyImpl.java:741)
	at com.alibaba.druid.pool.DruidPooledResultSet.getTimestamp(DruidPooledResultSet.java:366)
	at sun.reflect.GeneratedMethodAccessor111.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.ResultSetLogger.invoke(ResultSetLogger.java:68)
	at com.sun.proxy.$Proxy174.getTimestamp(Unknown Source)
	at org.apache.ibatis.type.DateTypeHandler.getNullableResult(DateTypeHandler.java:39)
	at org.apache.ibatis.type.DateTypeHandler.getNullableResult(DateTypeHandler.java:28)
	at org.apache.ibatis.type.BaseTypeHandler.getResult(BaseTypeHandler.java:66)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.applyAutomaticMappings(DefaultResultSetHandler.java:512)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getRowValue(DefaultResultSetHandler.java:393)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleRowValuesForSimpleResultMap(DefaultResultSetHandler.java:347)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleRowValues(DefaultResultSetHandler.java:322)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleResultSet(DefaultResultSetHandler.java:295)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleResultSets(DefaultResultSetHandler.java:192)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 105 common frames omitted
2019-05-14 20:59:46 -<==    Updates: 1
2019-05-14 21:02:39 -Starting BootdoApplication on PC-201905091110 with PID 16616 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-14 21:02:39 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-14 21:02:39 -The following profiles are active: dev
2019-05-14 21:02:39 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Tue May 14 21:02:39 CST 2019]; root of context hierarchy
2019-05-14 21:02:42 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-14 21:02:44 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$24352bd3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 21:02:44 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$168e5a7a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 21:02:45 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 21:02:45 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 21:02:45 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 21:02:45 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-14 21:02:45 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-14 21:02:45 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 21:02:45 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 21:02:45 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 21:02:46 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-14 21:02:46 -Tomcat initialized with port(s): 8081 (http)
2019-05-14 21:02:46 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-14 21:02:46 -Starting service [Tomcat]
2019-05-14 21:02:46 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-14 21:02:46 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-14 21:02:47 -Initializing Spring embedded WebApplicationContext
2019-05-14 21:02:47 -Root WebApplicationContext: initialization completed in 7624 ms
2019-05-14 21:02:47 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-14 21:02:47 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-14 21:02:47 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-14 21:02:47 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-14 21:02:47 -Filter xssFilter was not registered (disabled)
2019-05-14 21:02:47 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-14 21:02:47 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-14 21:02:47 -Servlet statViewServlet mapped to [/druid/*]
2019-05-14 21:02:47 -Servlet dispatcherServlet mapped to [/]
2019-05-14 21:02:57 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Tue May 14 21:02:39 CST 2019]; root of context hierarchy
2019-05-14 21:02:58 -Using default implementation for ThreadExecutor
2019-05-14 21:02:58 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-14 21:02:58 -Quartz Scheduler v.2.2.1 created.
2019-05-14 21:02:58 -RAMJobStore initialized.
2019-05-14 21:02:58 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-14 21:02:58 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-14 21:02:58 -Quartz scheduler version: 2.2.1
2019-05-14 21:02:58 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@563317c1
2019-05-14 21:02:58 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-14 21:02:58 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-14 21:03:01 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 21:03:01 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-14 21:03:01 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 21:03:01 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 21:03:01 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-14 21:03:01 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 21:03:01 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-14 21:03:01 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-14 21:03:01 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-14 21:03:01 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 21:03:01 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-14 21:03:01 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 21:03:01 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 21:03:01 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-14 21:03:01 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 21:03:01 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 21:03:01 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-14 21:03:01 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 21:03:01 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-14 21:03:01 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-14 21:03:01 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 21:03:01 -Mapped "{[/charts/tableElecYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.getCountYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-14 21:03:01 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-14 21:03:01 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 21:03:01 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 21:03:01 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-14 21:03:01 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 21:03:01 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 21:03:01 -Mapped "{[/charts/tableHeatYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.getCountMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-14 21:03:01 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-14 21:03:01 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 21:03:01 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-14 21:03:01 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.water.vo.WaterVo)
2019-05-14 21:03:01 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-14 21:03:01 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-14 21:03:01 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-14 21:03:01 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-14 21:03:01 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-14 21:03:01 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-14 21:03:01 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-14 21:03:01 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 21:03:01 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-14 21:03:01 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-14 21:03:01 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-14 21:03:01 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-14 21:03:01 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-14 21:03:01 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 21:03:01 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-14 21:03:01 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-14 21:03:01 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-14 21:03:01 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-14 21:03:01 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 21:03:01 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-14 21:03:01 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-14 21:03:01 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-14 21:03:01 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-14 21:03:01 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 21:03:01 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 21:03:01 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-14 21:03:01 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-14 21:03:01 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-14 21:03:01 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-14 21:03:01 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-14 21:03:01 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-14 21:03:01 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-14 21:03:01 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-14 21:03:01 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-14 21:03:01 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 21:03:01 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-14 21:03:01 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-14 21:03:01 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 21:03:01 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-14 21:03:01 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-14 21:03:01 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-14 21:03:01 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-14 21:03:01 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 21:03:01 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-14 21:03:01 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-14 21:03:01 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-14 21:03:01 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-14 21:03:01 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-14 21:03:01 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-14 21:03:01 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-14 21:03:01 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-14 21:03:01 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-14 21:03:01 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-14 21:03:01 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-14 21:03:01 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 21:03:01 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-14 21:03:01 -Mapped "{[/elec/elec/WxElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.WxElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-14 21:03:01 -Mapped "{[/elec/elec/YhElecUpdate],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.YhElecUpdate(com.bootdo.elec.domain.ElecDO)
2019-05-14 21:03:01 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-14 21:03:01 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-14 21:03:01 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-14 21:03:01 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-14 21:03:01 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-14 21:03:01 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-14 21:03:01 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-14 21:03:01 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-14 21:03:01 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 21:03:01 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-14 21:03:01 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 21:03:01 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-14 21:03:01 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-14 21:03:01 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-14 21:03:01 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-14 21:03:01 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-14 21:03:01 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-14 21:03:01 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-14 21:03:01 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-14 21:03:01 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 21:03:01 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-14 21:03:01 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-14 21:03:01 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-14 21:03:01 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-14 21:03:01 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-14 21:03:01 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-14 21:03:01 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-14 21:03:01 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-14 21:03:01 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-14 21:03:01 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-14 21:03:01 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-14 21:03:01 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 21:03:01 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-14 21:03:01 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 21:03:01 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-14 21:03:01 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-14 21:03:01 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-14 21:03:01 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-14 21:03:01 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-14 21:03:01 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-14 21:03:01 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-14 21:03:01 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-14 21:03:01 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-14 21:03:01 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-14 21:03:01 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-14 21:03:01 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-14 21:03:01 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-14 21:03:01 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 21:03:01 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-14 21:03:01 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 21:03:01 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-14 21:03:01 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-14 21:03:01 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-14 21:03:01 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-14 21:03:01 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-14 21:03:01 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-14 21:03:01 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 21:03:01 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-14 21:03:01 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 21:03:01 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-14 21:03:01 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-14 21:03:01 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-14 21:03:01 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-14 21:03:01 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-14 21:03:01 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-14 21:03:01 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 21:03:01 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-14 21:03:01 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 21:03:01 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-14 21:03:01 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-14 21:03:01 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-14 21:03:01 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-14 21:03:01 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-14 21:03:01 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-14 21:03:01 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-14 21:03:01 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 21:03:01 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-14 21:03:01 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-14 21:03:01 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 21:03:01 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-14 21:03:01 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 21:03:01 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-14 21:03:01 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-14 21:03:01 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-14 21:03:01 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-14 21:03:01 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-14 21:03:01 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 21:03:01 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-14 21:03:01 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 21:03:01 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-14 21:03:01 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-14 21:03:01 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 21:03:01 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-14 21:03:01 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-14 21:03:01 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-14 21:03:01 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-14 21:03:01 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-14 21:03:01 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-14 21:03:01 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-14 21:03:01 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-14 21:03:01 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-14 21:03:01 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-14 21:03:01 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 21:03:01 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-14 21:03:01 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-14 21:03:01 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-14 21:03:01 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-14 21:03:01 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-14 21:03:01 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-14 21:03:01 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-14 21:03:01 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-14 21:03:01 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-14 21:03:01 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-14 21:03:01 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 21:03:01 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-14 21:03:01 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-14 21:03:01 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-14 21:03:01 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-14 21:03:01 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-14 21:03:01 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-14 21:03:01 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-14 21:03:01 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-14 21:03:01 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-14 21:03:01 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-14 21:03:01 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-14 21:03:01 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-14 21:03:01 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 21:03:01 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-14 21:03:01 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-14 21:03:01 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-14 21:03:01 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-14 21:03:01 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 21:03:01 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-14 21:03:01 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-14 21:03:01 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-14 21:03:01 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 21:03:01 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-14 21:03:01 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-14 21:03:01 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-14 21:03:01 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-14 21:03:01 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-14 21:03:01 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-14 21:03:01 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-14 21:03:01 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-14 21:03:01 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-14 21:03:01 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-14 21:03:01 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-14 21:03:01 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-14 21:03:01 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-14 21:03:01 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-14 21:03:01 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-14 21:03:01 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-14 21:03:01 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-14 21:03:01 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 21:03:01 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-14 21:03:01 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 21:03:01 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-14 21:03:01 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-14 21:03:01 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-14 21:03:01 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-14 21:03:01 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-14 21:03:01 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-14 21:03:01 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-14 21:03:01 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-14 21:03:01 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-14 21:03:01 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-14 21:03:01 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-14 21:03:01 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-14 21:03:01 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-14 21:03:01 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-14 21:03:01 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-14 21:03:01 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-14 21:03:01 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-14 21:03:01 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-14 21:03:01 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-14 21:03:01 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-14 21:03:01 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-14 21:03:02 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-14 21:03:02 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-14 21:03:02 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-14 21:03:02 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-14 21:03:02 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Tue May 14 21:02:39 CST 2019]; root of context hierarchy
2019-05-14 21:03:03 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-14 21:03:03 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-14 21:03:03 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-14 21:03:03 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-14 21:03:03 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-14 21:03:05 -Registering beans for JMX exposure on startup
2019-05-14 21:03:05 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-14 21:03:05 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-14 21:03:05 -Starting beans in phase 2147483647
2019-05-14 21:03:05 -Context refreshed
2019-05-14 21:03:05 -Found 1 custom documentation plugin(s)
2019-05-14 21:03:05 -Scanning for api listing references
2019-05-14 21:03:05 -Generating unique operation named: getCountDUsingPOST_1
2019-05-14 21:03:05 -Generating unique operation named: removeUsingPOST_1
2019-05-14 21:03:05 -Generating unique operation named: addUsingGET_1
2019-05-14 21:03:05 -Generating unique operation named: editUsingGET_1
2019-05-14 21:03:06 -Generating unique operation named: listUsingGET_1
2019-05-14 21:03:06 -Generating unique operation named: removeUsingPOST_2
2019-05-14 21:03:06 -Generating unique operation named: removeUsingPOST_3
2019-05-14 21:03:06 -Generating unique operation named: saveUsingPOST_1
2019-05-14 21:03:06 -Generating unique operation named: updateUsingGET_1
2019-05-14 21:03:06 -Generating unique operation named: updateUsingHEAD_1
2019-05-14 21:03:06 -Generating unique operation named: updateUsingPOST_1
2019-05-14 21:03:06 -Generating unique operation named: updateUsingPUT_1
2019-05-14 21:03:06 -Generating unique operation named: updateUsingPATCH_1
2019-05-14 21:03:06 -Generating unique operation named: updateUsingDELETE_1
2019-05-14 21:03:06 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-14 21:03:06 -Generating unique operation named: updateUsingTRACE_1
2019-05-14 21:03:06 -Generating unique operation named: addUsingGET_2
2019-05-14 21:03:06 -Generating unique operation named: editUsingGET_2
2019-05-14 21:03:06 -Generating unique operation named: listUsingGET_2
2019-05-14 21:03:06 -Generating unique operation named: removeUsingPOST_4
2019-05-14 21:03:06 -Generating unique operation named: removeUsingPOST_5
2019-05-14 21:03:06 -Generating unique operation named: saveUsingPOST_2
2019-05-14 21:03:06 -Generating unique operation named: updateUsingPOST_2
2019-05-14 21:03:06 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-14 21:03:06 -Generating unique operation named: addUsingGET_3
2019-05-14 21:03:06 -Generating unique operation named: editUsingGET_3
2019-05-14 21:03:06 -Generating unique operation named: listUsingGET_3
2019-05-14 21:03:06 -Generating unique operation named: removeUsingPOST_6
2019-05-14 21:03:06 -Generating unique operation named: removeUsingPOST_7
2019-05-14 21:03:06 -Generating unique operation named: saveUsingPOST_3
2019-05-14 21:03:06 -Generating unique operation named: updateUsingGET_2
2019-05-14 21:03:06 -Generating unique operation named: updateUsingHEAD_2
2019-05-14 21:03:06 -Generating unique operation named: updateUsingPOST_3
2019-05-14 21:03:06 -Generating unique operation named: updateUsingPUT_2
2019-05-14 21:03:06 -Generating unique operation named: updateUsingPATCH_2
2019-05-14 21:03:06 -Generating unique operation named: updateUsingDELETE_2
2019-05-14 21:03:06 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-14 21:03:06 -Generating unique operation named: updateUsingTRACE_2
2019-05-14 21:03:06 -Generating unique operation named: addUsingGET_4
2019-05-14 21:03:06 -Generating unique operation named: editUsingGET_4
2019-05-14 21:03:06 -Generating unique operation named: listUsingGET_4
2019-05-14 21:03:06 -Generating unique operation named: removeUsingPOST_8
2019-05-14 21:03:06 -Generating unique operation named: removeUsingPOST_9
2019-05-14 21:03:06 -Generating unique operation named: saveUsingPOST_4
2019-05-14 21:03:06 -Generating unique operation named: updateUsingGET_3
2019-05-14 21:03:06 -Generating unique operation named: updateUsingHEAD_3
2019-05-14 21:03:06 -Generating unique operation named: updateUsingPOST_4
2019-05-14 21:03:06 -Generating unique operation named: updateUsingPUT_3
2019-05-14 21:03:06 -Generating unique operation named: updateUsingPATCH_3
2019-05-14 21:03:06 -Generating unique operation named: updateUsingDELETE_3
2019-05-14 21:03:06 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-14 21:03:06 -Generating unique operation named: updateUsingTRACE_3
2019-05-14 21:03:06 -Generating unique operation named: ElecUsingGET_1
2019-05-14 21:03:06 -Generating unique operation named: addUsingGET_5
2019-05-14 21:03:06 -Generating unique operation named: editUsingGET_5
2019-05-14 21:03:06 -Generating unique operation named: listUsingGET_5
2019-05-14 21:03:06 -Generating unique operation named: removeUsingPOST_10
2019-05-14 21:03:06 -Generating unique operation named: removeUsingPOST_11
2019-05-14 21:03:06 -Generating unique operation named: saveUsingPOST_5
2019-05-14 21:03:06 -Generating unique operation named: updateUsingGET_4
2019-05-14 21:03:06 -Generating unique operation named: updateUsingHEAD_4
2019-05-14 21:03:06 -Generating unique operation named: updateUsingPOST_5
2019-05-14 21:03:06 -Generating unique operation named: updateUsingPUT_4
2019-05-14 21:03:06 -Generating unique operation named: updateUsingPATCH_4
2019-05-14 21:03:06 -Generating unique operation named: updateUsingDELETE_4
2019-05-14 21:03:06 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-14 21:03:06 -Generating unique operation named: updateUsingTRACE_4
2019-05-14 21:03:06 -Generating unique operation named: editUsingGET_6
2019-05-14 21:03:06 -Generating unique operation named: listUsingGET_6
2019-05-14 21:03:06 -Generating unique operation named: updateUsingPOST_6
2019-05-14 21:03:06 -Generating unique operation named: addUsingGET_6
2019-05-14 21:03:06 -Generating unique operation named: editUsingGET_7
2019-05-14 21:03:06 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-14 21:03:06 -Generating unique operation named: listUsingGET_7
2019-05-14 21:03:06 -Generating unique operation named: removeUsingPOST_12
2019-05-14 21:03:06 -Generating unique operation named: removeUsingPOST_13
2019-05-14 21:03:06 -Generating unique operation named: saveUsingPOST_6
2019-05-14 21:03:06 -Generating unique operation named: updateUsingGET_5
2019-05-14 21:03:06 -Generating unique operation named: updateUsingHEAD_5
2019-05-14 21:03:06 -Generating unique operation named: updateUsingPOST_7
2019-05-14 21:03:06 -Generating unique operation named: updateUsingPUT_5
2019-05-14 21:03:06 -Generating unique operation named: updateUsingPATCH_5
2019-05-14 21:03:06 -Generating unique operation named: updateUsingDELETE_5
2019-05-14 21:03:06 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-14 21:03:06 -Generating unique operation named: updateUsingTRACE_5
2019-05-14 21:03:06 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-14 21:03:06 -Generating unique operation named: addUsingGET_7
2019-05-14 21:03:06 -Generating unique operation named: editUsingGET_8
2019-05-14 21:03:06 -Generating unique operation named: listUsingGET_8
2019-05-14 21:03:06 -Generating unique operation named: removeUsingPOST_14
2019-05-14 21:03:06 -Generating unique operation named: removeUsingPOST_15
2019-05-14 21:03:06 -Generating unique operation named: saveUsingPOST_7
2019-05-14 21:03:06 -Generating unique operation named: updateUsingGET_6
2019-05-14 21:03:06 -Generating unique operation named: updateUsingHEAD_6
2019-05-14 21:03:06 -Generating unique operation named: updateUsingPOST_8
2019-05-14 21:03:06 -Generating unique operation named: updateUsingPUT_6
2019-05-14 21:03:06 -Generating unique operation named: updateUsingPATCH_6
2019-05-14 21:03:06 -Generating unique operation named: updateUsingDELETE_6
2019-05-14 21:03:06 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-14 21:03:06 -Generating unique operation named: updateUsingTRACE_6
2019-05-14 21:03:06 -Generating unique operation named: addUsingGET_8
2019-05-14 21:03:06 -Generating unique operation named: editUsingGET_9
2019-05-14 21:03:06 -Generating unique operation named: listUsingGET_9
2019-05-14 21:03:06 -Generating unique operation named: removeUsingPOST_16
2019-05-14 21:03:06 -Generating unique operation named: removeUsingPOST_17
2019-05-14 21:03:06 -Generating unique operation named: saveUsingPOST_8
2019-05-14 21:03:06 -Generating unique operation named: updateUsingGET_7
2019-05-14 21:03:06 -Generating unique operation named: updateUsingHEAD_7
2019-05-14 21:03:06 -Generating unique operation named: updateUsingPOST_9
2019-05-14 21:03:06 -Generating unique operation named: updateUsingPUT_7
2019-05-14 21:03:06 -Generating unique operation named: updateUsingPATCH_7
2019-05-14 21:03:06 -Generating unique operation named: updateUsingDELETE_7
2019-05-14 21:03:06 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-14 21:03:06 -Generating unique operation named: updateUsingTRACE_7
2019-05-14 21:03:06 -Generating unique operation named: addUsingGET_9
2019-05-14 21:03:06 -Generating unique operation named: editUsingGET_10
2019-05-14 21:03:06 -Generating unique operation named: infoUsingGET_1
2019-05-14 21:03:06 -Generating unique operation named: infoUsingHEAD_1
2019-05-14 21:03:06 -Generating unique operation named: infoUsingPOST_1
2019-05-14 21:03:06 -Generating unique operation named: infoUsingPUT_1
2019-05-14 21:03:06 -Generating unique operation named: infoUsingPATCH_1
2019-05-14 21:03:06 -Generating unique operation named: infoUsingDELETE_1
2019-05-14 21:03:06 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-14 21:03:06 -Generating unique operation named: infoUsingTRACE_1
2019-05-14 21:03:06 -Generating unique operation named: listUsingGET_10
2019-05-14 21:03:06 -Generating unique operation named: removeUsingPOST_18
2019-05-14 21:03:06 -Generating unique operation named: removeUsingPOST_19
2019-05-14 21:03:06 -Generating unique operation named: saveUsingPOST_9
2019-05-14 21:03:06 -Generating unique operation named: updateUsingPOST_10
2019-05-14 21:03:06 -Generating unique operation named: listUsingGET_11
2019-05-14 21:03:06 -Generating unique operation named: removeUsingPOST_20
2019-05-14 21:03:06 -Generating unique operation named: welcomeUsingGET_1
2019-05-14 21:03:07 -Generating unique operation named: addUsingGET_10
2019-05-14 21:03:07 -Generating unique operation named: editUsingGET_11
2019-05-14 21:03:07 -Generating unique operation named: listUsingGET_12
2019-05-14 21:03:07 -Generating unique operation named: removeUsingPOST_21
2019-05-14 21:03:07 -Generating unique operation named: saveUsingPOST_10
2019-05-14 21:03:07 -Generating unique operation named: treeUsingGET_1
2019-05-14 21:03:07 -Generating unique operation named: treeUsingGET_2
2019-05-14 21:03:07 -Generating unique operation named: updateUsingPOST_11
2019-05-14 21:03:07 -Generating unique operation named: addUsingGET_11
2019-05-14 21:03:07 -Generating unique operation named: editUsingGET_12
2019-05-14 21:03:07 -Generating unique operation named: listUsingGET_13
2019-05-14 21:03:07 -Generating unique operation named: removeUsingPOST_22
2019-05-14 21:03:07 -Generating unique operation named: removeUsingPOST_23
2019-05-14 21:03:07 -Generating unique operation named: saveUsingPOST_11
2019-05-14 21:03:07 -Generating unique operation named: updateUsingGET_8
2019-05-14 21:03:07 -Generating unique operation named: updateUsingHEAD_8
2019-05-14 21:03:07 -Generating unique operation named: updateUsingPOST_12
2019-05-14 21:03:07 -Generating unique operation named: updateUsingPUT_8
2019-05-14 21:03:07 -Generating unique operation named: updateUsingPATCH_8
2019-05-14 21:03:07 -Generating unique operation named: updateUsingDELETE_8
2019-05-14 21:03:07 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-14 21:03:07 -Generating unique operation named: updateUsingTRACE_8
2019-05-14 21:03:07 -Generating unique operation named: addUsingGET_12
2019-05-14 21:03:07 -Generating unique operation named: editUsingGET_13
2019-05-14 21:03:07 -Generating unique operation named: listUsingGET_14
2019-05-14 21:03:07 -Generating unique operation named: removeUsingPOST_24
2019-05-14 21:03:07 -Generating unique operation named: removeUsingPOST_25
2019-05-14 21:03:07 -Generating unique operation named: saveUsingPOST_12
2019-05-14 21:03:07 -Generating unique operation named: updateUsingGET_9
2019-05-14 21:03:07 -Generating unique operation named: updateUsingHEAD_9
2019-05-14 21:03:07 -Generating unique operation named: updateUsingPOST_13
2019-05-14 21:03:07 -Generating unique operation named: updateUsingPUT_9
2019-05-14 21:03:07 -Generating unique operation named: updateUsingPATCH_9
2019-05-14 21:03:07 -Generating unique operation named: updateUsingDELETE_9
2019-05-14 21:03:07 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-14 21:03:07 -Generating unique operation named: updateUsingTRACE_9
2019-05-14 21:03:07 -Generating unique operation named: addUsingGET_13
2019-05-14 21:03:07 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-14 21:03:07 -Generating unique operation named: editUsingGET_14
2019-05-14 21:03:07 -Generating unique operation named: listUsingGET_15
2019-05-14 21:03:07 -Generating unique operation named: saveUsingPOST_13
2019-05-14 21:03:07 -Generating unique operation named: saveUsingPOST_14
2019-05-14 21:03:07 -Generating unique operation named: updateUsingPOST_14
2019-05-14 21:03:07 -Generating unique operation named: listUsingGET_16
2019-05-14 21:03:07 -Generating unique operation named: listUsingHEAD_1
2019-05-14 21:03:07 -Generating unique operation named: listUsingPOST_1
2019-05-14 21:03:07 -Generating unique operation named: listUsingPUT_1
2019-05-14 21:03:07 -Generating unique operation named: listUsingPATCH_1
2019-05-14 21:03:07 -Generating unique operation named: listUsingDELETE_1
2019-05-14 21:03:07 -Generating unique operation named: listUsingOPTIONS_1
2019-05-14 21:03:07 -Generating unique operation named: listUsingTRACE_1
2019-05-14 21:03:07 -Generating unique operation named: countDDUsingGET_1
2019-05-14 21:03:07 -Generating unique operation named: exportDDUsingGET_1
2019-05-14 21:03:07 -Generating unique operation named: getCountYYUsingPOST_1
2019-05-14 21:03:07 -Generating unique operation named: getCountMMUsingPOST_1
2019-05-14 21:03:07 -Generating unique operation named: addUsingGET_14
2019-05-14 21:03:07 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-14 21:03:07 -Generating unique operation named: editUsingGET_15
2019-05-14 21:03:07 -Generating unique operation named: listUsingGET_17
2019-05-14 21:03:07 -Generating unique operation named: removeUsingPOST_26
2019-05-14 21:03:07 -Generating unique operation named: saveUsingPOST_15
2019-05-14 21:03:07 -Generating unique operation named: treeUsingGET_3
2019-05-14 21:03:07 -Generating unique operation named: treeViewUsingGET_1
2019-05-14 21:03:07 -Generating unique operation named: updateUsingPOST_15
2019-05-14 21:03:07 -Generating unique operation named: addUsingGET_15
2019-05-14 21:03:07 -Generating unique operation named: editUsingGET_16
2019-05-14 21:03:07 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-14 21:03:07 -Generating unique operation named: listUsingGET_18
2019-05-14 21:03:07 -Generating unique operation named: removeUsingPOST_27
2019-05-14 21:03:07 -Generating unique operation named: removeUsingPOST_28
2019-05-14 21:03:07 -Generating unique operation named: saveUsingPOST_16
2019-05-14 21:03:07 -Generating unique operation named: updateUsingGET_10
2019-05-14 21:03:07 -Generating unique operation named: updateUsingHEAD_10
2019-05-14 21:03:07 -Generating unique operation named: updateUsingPOST_16
2019-05-14 21:03:07 -Generating unique operation named: updateUsingPUT_10
2019-05-14 21:03:07 -Generating unique operation named: updateUsingPATCH_10
2019-05-14 21:03:07 -Generating unique operation named: updateUsingDELETE_10
2019-05-14 21:03:07 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-14 21:03:07 -Generating unique operation named: updateUsingTRACE_10
2019-05-14 21:03:07 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-14 21:03:07 -Generating unique operation named: addUsingGET_16
2019-05-14 21:03:07 -Generating unique operation named: editUsingGET_17
2019-05-14 21:03:07 -Generating unique operation named: listUsingGET_19
2019-05-14 21:03:07 -Generating unique operation named: removeUsingPOST_29
2019-05-14 21:03:07 -Generating unique operation named: removeUsingPOST_30
2019-05-14 21:03:07 -Generating unique operation named: saveUsingPOST_17
2019-05-14 21:03:07 -Generating unique operation named: updateUsingGET_11
2019-05-14 21:03:07 -Generating unique operation named: updateUsingHEAD_11
2019-05-14 21:03:07 -Generating unique operation named: updateUsingPOST_17
2019-05-14 21:03:07 -Generating unique operation named: updateUsingPUT_11
2019-05-14 21:03:07 -Generating unique operation named: updateUsingPATCH_11
2019-05-14 21:03:07 -Generating unique operation named: updateUsingDELETE_11
2019-05-14 21:03:07 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-14 21:03:07 -Generating unique operation named: updateUsingTRACE_11
2019-05-14 21:03:07 -Generating unique operation named: addUsingGET_17
2019-05-14 21:03:07 -Generating unique operation named: editUsingGET_18
2019-05-14 21:03:07 -Generating unique operation named: listUsingGET_20
2019-05-14 21:03:07 -Generating unique operation named: removeUsingPOST_31
2019-05-14 21:03:07 -Generating unique operation named: removeUsingPOST_32
2019-05-14 21:03:07 -Generating unique operation named: saveUsingPOST_18
2019-05-14 21:03:07 -Generating unique operation named: updateUsingGET_12
2019-05-14 21:03:07 -Generating unique operation named: updateUsingHEAD_12
2019-05-14 21:03:07 -Generating unique operation named: updateUsingPOST_18
2019-05-14 21:03:07 -Generating unique operation named: updateUsingPUT_12
2019-05-14 21:03:07 -Generating unique operation named: updateUsingPATCH_12
2019-05-14 21:03:07 -Generating unique operation named: updateUsingDELETE_12
2019-05-14 21:03:07 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-14 21:03:07 -Generating unique operation named: updateUsingTRACE_12
2019-05-14 21:03:07 -Starting Quartz Scheduler now
2019-05-14 21:03:07 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-14 21:03:07 -Starting...
2019-05-14 21:03:07 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-14 21:03:07 -Started.
2019-05-14 21:03:07 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-14 21:03:07 -Using a shared selector for servlet write/read
2019-05-14 21:03:07 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-14 21:03:07 -Started BootdoApplication in 29.808 seconds (JVM running for 30.554)
2019-05-14 21:03:08 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-14 21:03:08 -==> Parameters: 
2019-05-14 21:03:08 -<==      Total: 1
2019-05-14 21:03:32 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-14 21:03:32 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-14 21:03:32 -FrameworkServlet 'dispatcherServlet': initialization completed in 90 ms
2019-05-14 21:03:32 -Enabling session validation scheduler...
2019-05-14 21:03:32 -请求地址 : http://localhost:8081/login;JSESSIONID=f2d4843c-7665-4c72-8c0e-6cf8fd41224d
2019-05-14 21:03:32 -HTTP METHOD : GET
2019-05-14 21:03:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-14 21:03:32 -参数 : [{}]
2019-05-14 21:03:32 -耗时 : 5
2019-05-14 21:03:32 -返回值 : login
2019-05-14 21:03:33 -请求地址 : http://localhost:8081/getVerify
2019-05-14 21:03:33 -HTTP METHOD : GET
2019-05-14 21:03:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-14 21:03:33 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@b348b4b, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5f3745d]
2019-05-14 21:03:34 -3072
2019-05-14 21:03:34 -耗时 : 433
2019-05-14 21:03:34 -返回值 : null
2019-05-14 21:03:34 -请求地址 : http://localhost:8081/login
2019-05-14 21:03:34 -HTTP METHOD : GET
2019-05-14 21:03:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-14 21:03:34 -参数 : [{}]
2019-05-14 21:03:34 -耗时 : 0
2019-05-14 21:03:34 -返回值 : login
2019-05-14 21:04:02 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-14 21:04:33 -请求地址 : http://localhost:8081/login
2019-05-14 21:04:33 -HTTP METHOD : POST
2019-05-14 21:04:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-14 21:04:33 -参数 : [admin, 111111, 3072, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2f4d1648]
2019-05-14 21:04:33 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-14 21:04:34 -==> Parameters: admin(String)
2019-05-14 21:04:34 -<==      Total: 1
2019-05-14 21:04:34 -耗时 : 84
2019-05-14 21:04:34 -返回值 : {msg=操作成功, code=0}
2019-05-14 21:04:34 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-14 21:04:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 21:04:34 -==> Parameters: 1(Long), admin(String), 登录(String), 85(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-14 21:04:34.126(Timestamp)
2019-05-14 21:04:34 -请求地址 : http://localhost:8081/index
2019-05-14 21:04:34 -HTTP METHOD : GET
2019-05-14 21:04:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-14 21:04:34 -参数 : [{}]
2019-05-14 21:04:34 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-14 21:04:34 -<==    Updates: 1
2019-05-14 21:04:34 -==> Parameters: 1(Long)
2019-05-14 21:04:34 -<==      Total: 49
2019-05-14 21:04:34 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-14 21:04:34 -==> Parameters: 138(Long)
2019-05-14 21:04:34 -<==      Total: 1
2019-05-14 21:04:34 -耗时 : 143
2019-05-14 21:04:34 -返回值 : index_v1
2019-05-14 21:04:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 21:04:34 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 144(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-14 21:04:34.391(Timestamp)
2019-05-14 21:04:34 -<==    Updates: 1
2019-05-14 21:04:34 -请求地址 : http://localhost:8081/main
2019-05-14 21:04:34 -HTTP METHOD : GET
2019-05-14 21:04:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 21:04:34 -参数 : []
2019-05-14 21:04:34 -耗时 : 0
2019-05-14 21:04:34 -返回值 : main
2019-05-14 21:04:34 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-14 21:04:34 -HTTP METHOD : GET
2019-05-14 21:04:34 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-14 21:04:34 -参数 : []
2019-05-14 21:04:34 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-14 21:04:34 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-14 21:04:34 -<==      Total: 0
2019-05-14 21:04:34 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-14 21:04:34 -==> Parameters: 1(Long), 0(String)
2019-05-14 21:04:34 -<==      Total: 1
2019-05-14 21:04:34 -耗时 : 63
2019-05-14 21:04:34 -返回值 : com.bootdo.common.utils.PageUtils@153c67df
2019-05-14 21:04:34 -请求地址 : http://localhost:8081/main
2019-05-14 21:04:34 -HTTP METHOD : GET
2019-05-14 21:04:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-14 21:04:34 -参数 : []
2019-05-14 21:04:34 -耗时 : 1
2019-05-14 21:04:34 -返回值 : main
2019-05-14 21:04:38 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-14 21:04:38 -==> Parameters: 1(Long)
2019-05-14 21:04:38 -<==      Total: 93
2019-05-14 21:04:38 -请求地址 : http://localhost:8081/water/waterPrice
2019-05-14 21:04:38 -HTTP METHOD : GET
2019-05-14 21:04:38 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.WaterPrice
2019-05-14 21:04:38 -参数 : []
2019-05-14 21:04:38 -耗时 : 0
2019-05-14 21:04:38 -返回值 : water/waterPrice/waterPrice
2019-05-14 21:04:39 -请求地址 : http://localhost:8081/water/waterPrice/list
2019-05-14 21:04:39 -HTTP METHOD : GET
2019-05-14 21:04:39 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.list
2019-05-14 21:04:39 -参数 : [{limit=10, offset=0}]
2019-05-14 21:04:39 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price order by id asc limit ?, ? 
2019-05-14 21:04:39 -==> Parameters: 0(Integer), 10(Integer)
2019-05-14 21:04:39 -<==      Total: 2
2019-05-14 21:04:39 -==>  Preparing: select count(*) from water_price 
2019-05-14 21:04:39 -==> Parameters: 
2019-05-14 21:04:39 -<==      Total: 1
2019-05-14 21:04:39 -耗时 : 44
2019-05-14 21:04:39 -返回值 : com.bootdo.common.utils.PageUtils@65f3c560
2019-05-14 21:04:49 -请求地址 : http://localhost:8081/water/waterPrice/edit/1
2019-05-14 21:04:49 -HTTP METHOD : GET
2019-05-14 21:04:49 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.edit
2019-05-14 21:04:49 -参数 : [1, {}]
2019-05-14 21:04:49 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`m_water`,`s1_water`,`s2_water`,`s3_water`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price where id = ? 
2019-05-14 21:04:49 -==> Parameters: 1(Long)
2019-05-14 21:04:49 -<==      Total: 1
2019-05-14 21:04:49 -耗时 : 15
2019-05-14 21:04:49 -返回值 : water/waterPrice/edit
2019-05-14 21:05:13 -请求地址 : http://localhost:8081/water/waterPrice/update
2019-05-14 21:05:13 -HTTP METHOD : POST
2019-05-14 21:05:13 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.update
2019-05-14 21:05:13 -参数 : [com.bootdo.water.domain.WaterPriceDO@6e8c3aa9]
2019-05-14 21:05:13 -==>  Preparing: update water_price SET `water_org` = ?, `m_water` = ?, `s1_water` = ?, `create_time` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-05-14 21:05:13 -==> Parameters: 2(String), 5(BigDecimal), 10(BigDecimal), 2019-03(String), 1(Long), 2019-05-14 21:05:13.045(Timestamp), 1(Long), (String), 1(Long)
2019-05-14 21:05:13 -<==    Updates: 1
2019-05-14 21:05:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-14 21:05:13 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/water/waterPrice/update(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'water_type' in 'class com.bootdo.water.domain.WaterPriceDO'(String), null, 2019-05-14 21:05:13.22(Timestamp)
2019-05-14 21:05:13 -nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'water_type' in 'class com.bootdo.water.domain.WaterPriceDO'
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'water_type' in 'class com.bootdo.water.domain.WaterPriceDO'
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:295)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy143.updateWater(Unknown Source)
	at com.bootdo.water.service.impl.WaterPriceServiceImpl.updateWater(WaterPriceServiceImpl.java:43)
	at com.bootdo.water.controller.WaterPriceController.update(WaterPriceController.java:93)
	at com.bootdo.water.controller.WaterPriceController$$FastClassBySpringCGLIB$$fb365725.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.water.controller.WaterPriceController$$EnhancerBySpringCGLIB$$a0f2bee2.update(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'water_type' in 'class com.bootdo.water.domain.WaterPriceDO'
	at org.apache.ibatis.reflection.Reflector.getGetInvoker(Reflector.java:421)
	at org.apache.ibatis.reflection.MetaClass.getGetInvoker(MetaClass.java:164)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.getBeanProperty(BeanWrapper.java:162)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.get(BeanWrapper.java:49)
	at org.apache.ibatis.reflection.MetaObject.getValue(MetaObject.java:122)
	at org.apache.ibatis.scripting.xmltags.DynamicContext$ContextMap.get(DynamicContext.java:94)
	at org.apache.ibatis.scripting.xmltags.DynamicContext$ContextAccessor.getProperty(DynamicContext.java:108)
	at org.apache.ibatis.ognl.OgnlRuntime.getProperty(OgnlRuntime.java:2666)
	at org.apache.ibatis.ognl.ASTProperty.getValueBody(ASTProperty.java:114)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.ASTEq.getValueBody(ASTEq.java:50)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.ASTAnd.getValueBody(ASTAnd.java:61)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:470)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:434)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.<init>(BaseStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.<init>(PreparedStatementHandler.java:40)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.<init>(RoutingStatementHandler.java:46)
	at org.apache.ibatis.session.Configuration.newStatementHandler(Configuration.java:545)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:48)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
2019-05-14 21:05:13 -<==    Updates: 1

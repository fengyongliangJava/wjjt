2019-03-14 08:13:49 -Starting BootdoApplication on ZJZL-20180906VX with PID 8380 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-14 08:13:49 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-14 08:13:49 -The following profiles are active: dev
2019-03-14 08:13:50 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@28276e50: startup date [Thu Mar 14 08:13:50 CST 2019]; root of context hierarchy
2019-03-14 08:14:01 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-14 08:14:05 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$edcb74bc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 08:14:05 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$e024a363] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 08:14:06 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 08:14:07 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 08:14:07 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 08:14:07 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-14 08:14:07 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-14 08:14:07 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 08:14:07 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 08:14:07 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 08:14:07 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 08:14:09 -Tomcat initialized with port(s): 8081 (http)
2019-03-14 08:14:09 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-14 08:14:09 -Starting service [Tomcat]
2019-03-14 08:14:09 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-14 08:14:09 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;D:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-14 08:14:10 -Initializing Spring embedded WebApplicationContext
2019-03-14 08:14:10 -Root WebApplicationContext: initialization completed in 20472 ms
2019-03-14 08:14:13 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-14 08:14:13 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-14 08:14:13 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-14 08:14:13 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-14 08:14:13 -Filter xssFilter was not registered (disabled)
2019-03-14 08:14:13 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-14 08:14:13 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-14 08:14:13 -Servlet statViewServlet mapped to [/druid/*]
2019-03-14 08:14:13 -Servlet dispatcherServlet mapped to [/]
2019-03-14 08:14:18 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@28276e50: startup date [Thu Mar 14 08:13:50 CST 2019]; root of context hierarchy
2019-03-14 08:14:19 -Using default implementation for ThreadExecutor
2019-03-14 08:14:19 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-14 08:14:19 -Quartz Scheduler v.2.2.1 created.
2019-03-14 08:14:19 -RAMJobStore initialized.
2019-03-14 08:14:19 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-14 08:14:19 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-14 08:14:19 -Quartz scheduler version: 2.2.1
2019-03-14 08:14:19 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@6516181f
2019-03-14 08:14:19 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-14 08:14:20 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-14 08:14:23 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-14 08:14:23 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-14 08:14:23 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-14 08:14:23 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-14 08:14:23 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-14 08:14:23 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-14 08:14:23 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-14 08:14:23 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-14 08:14:23 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-14 08:14:23 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:14:23 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-14 08:14:23 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-14 08:14:23 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-14 08:14:23 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-14 08:14:23 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-14 08:14:23 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:14:23 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-14 08:14:23 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-14 08:14:23 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-14 08:14:23 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-14 08:14:23 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:14:23 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-14 08:14:23 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-14 08:14:23 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-14 08:14:23 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-14 08:14:23 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:14:23 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:14:23 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-14 08:14:23 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-14 08:14:23 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-14 08:14:23 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-14 08:14:23 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-14 08:14:23 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-14 08:14:23 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-14 08:14:23 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-14 08:14:23 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-14 08:14:23 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:14:23 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-14 08:14:23 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-14 08:14:23 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:14:23 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-14 08:14:23 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-14 08:14:23 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-14 08:14:23 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-14 08:14:23 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:14:23 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-14 08:14:23 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-14 08:14:23 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-14 08:14:23 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-14 08:14:23 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-14 08:14:23 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-14 08:14:23 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-14 08:14:23 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-14 08:14:23 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-14 08:14:23 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-14 08:14:23 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:14:23 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-14 08:14:23 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2019-03-14 08:14:23 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-14 08:14:23 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-14 08:14:23 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-14 08:14:23 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-14 08:14:23 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-14 08:14:23 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-14 08:14:23 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:14:23 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-14 08:14:23 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:14:23 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-14 08:14:23 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-14 08:14:23 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-14 08:14:23 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-14 08:14:23 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-14 08:14:23 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-14 08:14:23 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-14 08:14:23 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:14:23 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-14 08:14:23 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-14 08:14:23 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-14 08:14:23 -Mapped "{[/heat/heatCost/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.add()
2019-03-14 08:14:23 -Mapped "{[/heat/heatCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.remove(java.lang.Long)
2019-03-14 08:14:23 -Mapped "{[/heat/heatCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.remove(java.lang.Long[])
2019-03-14 08:14:23 -Mapped "{[/heat/heatCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.update(com.bootdo.heat.domain.HeatCostDO)
2019-03-14 08:14:23 -Mapped "{[/heat/heatCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:14:23 -Mapped "{[/heat/heatCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.save(com.bootdo.heat.domain.HeatCostDO)
2019-03-14 08:14:23 -Mapped "{[/heat/heatCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:14:23 -Mapped "{[/heat/heatCost],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.HeatCost()
2019-03-14 08:14:23 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-14 08:14:23 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-14 08:14:23 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-14 08:14:23 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-14 08:14:23 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-14 08:14:23 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:14:23 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-14 08:14:23 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:14:23 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-14 08:14:23 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-14 08:14:23 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-14 08:14:23 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-03-14 08:14:23 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-14 08:14:23 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-14 08:14:23 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-14 08:14:23 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-14 08:14:23 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:14:23 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-14 08:14:23 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:14:23 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-14 08:14:23 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-14 08:14:23 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-14 08:14:23 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-14 08:14:23 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-14 08:14:23 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:14:23 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-14 08:14:23 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:14:23 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-14 08:14:23 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-14 08:14:23 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-14 08:14:23 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-14 08:14:23 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-14 08:14:23 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:14:23 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-14 08:14:23 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:14:23 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-14 08:14:23 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-14 08:14:23 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-14 08:14:23 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-14 08:14:23 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-14 08:14:23 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:14:23 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:14:23 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-14 08:14:23 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-14 08:14:23 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:14:23 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-14 08:14:23 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:14:23 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-14 08:14:23 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-14 08:14:23 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-14 08:14:23 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-14 08:14:23 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-14 08:14:23 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:14:23 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-14 08:14:23 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:14:23 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-14 08:14:23 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:14:23 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:14:23 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-14 08:14:23 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-14 08:14:23 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-14 08:14:23 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-14 08:14:23 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-14 08:14:23 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-14 08:14:23 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:14:23 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-14 08:14:23 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-14 08:14:23 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-14 08:14:23 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-14 08:14:23 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-14 08:14:23 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-14 08:14:23 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-14 08:14:23 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-14 08:14:23 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-14 08:14:23 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-14 08:14:23 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-14 08:14:23 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-14 08:14:23 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:14:23 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-14 08:14:23 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-14 08:14:23 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-14 08:14:23 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-14 08:14:23 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-14 08:14:23 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-14 08:14:23 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-14 08:14:23 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-14 08:14:23 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-14 08:14:23 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-14 08:14:23 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-14 08:14:23 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:14:23 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-14 08:14:23 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-14 08:14:23 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-14 08:14:23 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-14 08:14:23 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-14 08:14:23 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:14:23 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-14 08:14:23 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-14 08:14:23 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-14 08:14:23 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:14:23 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-14 08:14:23 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-14 08:14:23 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-14 08:14:23 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-14 08:14:23 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-14 08:14:23 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-14 08:14:23 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-14 08:14:23 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-14 08:14:23 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:14:23 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-14 08:14:23 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-14 08:14:23 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-14 08:14:23 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-14 08:14:23 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-14 08:14:23 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-14 08:14:23 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-14 08:14:23 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-14 08:14:23 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:14:23 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-14 08:14:23 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-14 08:14:23 -Mapped "{[/water/water/queryWater],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.queryWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:14:23 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:14:23 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:14:23 -Mapped "{[/water/waterCost/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.add()
2019-03-14 08:14:23 -Mapped "{[/water/waterCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long)
2019-03-14 08:14:23 -Mapped "{[/water/waterCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long[])
2019-03-14 08:14:23 -Mapped "{[/water/waterCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.update(com.bootdo.water.domain.WaterCostDO)
2019-03-14 08:14:23 -Mapped "{[/water/waterCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:14:23 -Mapped "{[/water/waterCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.save(com.bootdo.water.domain.WaterCostDO)
2019-03-14 08:14:23 -Mapped "{[/water/waterCost],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.WaterCost()
2019-03-14 08:14:23 -Mapped "{[/water/waterCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:14:23 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2019-03-14 08:14:23 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-14 08:14:23 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-14 08:14:23 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-14 08:14:23 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-14 08:14:23 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-14 08:14:23 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:14:23 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-14 08:14:23 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-14 08:14:23 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:14:23 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-14 08:14:23 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:14:23 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-14 08:14:23 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-14 08:14:23 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-14 08:14:23 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-14 08:14:25 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-14 08:14:25 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-14 08:14:25 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-14 08:14:26 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-14 08:14:26 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@28276e50: startup date [Thu Mar 14 08:13:50 CST 2019]; root of context hierarchy
2019-03-14 08:14:27 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-14 08:14:27 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-14 08:14:27 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-14 08:14:27 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-14 08:14:27 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-14 08:14:31 -Registering beans for JMX exposure on startup
2019-03-14 08:14:31 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-14 08:14:31 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-14 08:14:31 -Starting beans in phase 2147483647
2019-03-14 08:14:31 -Context refreshed
2019-03-14 08:14:31 -Found 1 custom documentation plugin(s)
2019-03-14 08:14:31 -Scanning for api listing references
2019-03-14 08:14:32 -Generating unique operation named: removeUsingPOST_1
2019-03-14 08:14:32 -Generating unique operation named: addUsingGET_1
2019-03-14 08:14:32 -Generating unique operation named: editUsingGET_1
2019-03-14 08:14:32 -Generating unique operation named: listUsingGET_1
2019-03-14 08:14:32 -Generating unique operation named: removeUsingPOST_2
2019-03-14 08:14:32 -Generating unique operation named: removeUsingPOST_3
2019-03-14 08:14:32 -Generating unique operation named: saveUsingPOST_1
2019-03-14 08:14:32 -Generating unique operation named: updateUsingGET_1
2019-03-14 08:14:32 -Generating unique operation named: updateUsingHEAD_1
2019-03-14 08:14:32 -Generating unique operation named: updateUsingPOST_1
2019-03-14 08:14:32 -Generating unique operation named: updateUsingPUT_1
2019-03-14 08:14:32 -Generating unique operation named: updateUsingPATCH_1
2019-03-14 08:14:32 -Generating unique operation named: updateUsingDELETE_1
2019-03-14 08:14:32 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-14 08:14:32 -Generating unique operation named: updateUsingTRACE_1
2019-03-14 08:14:32 -Generating unique operation named: addUsingGET_2
2019-03-14 08:14:32 -Generating unique operation named: editUsingGET_2
2019-03-14 08:14:32 -Generating unique operation named: listUsingGET_2
2019-03-14 08:14:32 -Generating unique operation named: removeUsingPOST_4
2019-03-14 08:14:32 -Generating unique operation named: removeUsingPOST_5
2019-03-14 08:14:32 -Generating unique operation named: saveUsingPOST_2
2019-03-14 08:14:32 -Generating unique operation named: updateUsingGET_2
2019-03-14 08:14:32 -Generating unique operation named: updateUsingHEAD_2
2019-03-14 08:14:32 -Generating unique operation named: updateUsingPOST_2
2019-03-14 08:14:33 -Generating unique operation named: updateUsingPUT_2
2019-03-14 08:14:33 -Generating unique operation named: updateUsingPATCH_2
2019-03-14 08:14:33 -Generating unique operation named: updateUsingDELETE_2
2019-03-14 08:14:33 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-14 08:14:33 -Generating unique operation named: updateUsingTRACE_2
2019-03-14 08:14:33 -Generating unique operation named: addUsingGET_3
2019-03-14 08:14:33 -Generating unique operation named: editUsingGET_3
2019-03-14 08:14:33 -Generating unique operation named: listUsingGET_3
2019-03-14 08:14:33 -Generating unique operation named: removeUsingPOST_6
2019-03-14 08:14:33 -Generating unique operation named: removeUsingPOST_7
2019-03-14 08:14:33 -Generating unique operation named: saveUsingPOST_3
2019-03-14 08:14:33 -Generating unique operation named: updateUsingGET_3
2019-03-14 08:14:33 -Generating unique operation named: updateUsingHEAD_3
2019-03-14 08:14:33 -Generating unique operation named: updateUsingPOST_3
2019-03-14 08:14:33 -Generating unique operation named: updateUsingPUT_3
2019-03-14 08:14:33 -Generating unique operation named: updateUsingPATCH_3
2019-03-14 08:14:33 -Generating unique operation named: updateUsingDELETE_3
2019-03-14 08:14:33 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-14 08:14:33 -Generating unique operation named: updateUsingTRACE_3
2019-03-14 08:14:33 -Generating unique operation named: addUsingGET_4
2019-03-14 08:14:33 -Generating unique operation named: editUsingGET_4
2019-03-14 08:14:33 -Generating unique operation named: listUsingGET_4
2019-03-14 08:14:33 -Generating unique operation named: removeUsingPOST_8
2019-03-14 08:14:33 -Generating unique operation named: removeUsingPOST_9
2019-03-14 08:14:33 -Generating unique operation named: saveUsingPOST_4
2019-03-14 08:14:33 -Generating unique operation named: updateUsingGET_4
2019-03-14 08:14:33 -Generating unique operation named: updateUsingHEAD_4
2019-03-14 08:14:33 -Generating unique operation named: updateUsingPOST_4
2019-03-14 08:14:33 -Generating unique operation named: updateUsingPUT_4
2019-03-14 08:14:33 -Generating unique operation named: updateUsingPATCH_4
2019-03-14 08:14:33 -Generating unique operation named: updateUsingDELETE_4
2019-03-14 08:14:33 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-14 08:14:33 -Generating unique operation named: updateUsingTRACE_4
2019-03-14 08:14:33 -Generating unique operation named: ElecUsingGET_1
2019-03-14 08:14:33 -Generating unique operation named: addUsingGET_5
2019-03-14 08:14:33 -Generating unique operation named: editUsingGET_5
2019-03-14 08:14:33 -Generating unique operation named: listUsingGET_5
2019-03-14 08:14:33 -Generating unique operation named: removeUsingPOST_10
2019-03-14 08:14:33 -Generating unique operation named: removeUsingPOST_11
2019-03-14 08:14:33 -Generating unique operation named: saveUsingPOST_5
2019-03-14 08:14:33 -Generating unique operation named: updateUsingGET_5
2019-03-14 08:14:33 -Generating unique operation named: updateUsingHEAD_5
2019-03-14 08:14:33 -Generating unique operation named: updateUsingPOST_5
2019-03-14 08:14:33 -Generating unique operation named: updateUsingPUT_5
2019-03-14 08:14:33 -Generating unique operation named: updateUsingPATCH_5
2019-03-14 08:14:33 -Generating unique operation named: updateUsingDELETE_5
2019-03-14 08:14:33 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-14 08:14:33 -Generating unique operation named: updateUsingTRACE_5
2019-03-14 08:14:33 -Generating unique operation named: editUsingGET_6
2019-03-14 08:14:33 -Generating unique operation named: listUsingGET_6
2019-03-14 08:14:33 -Generating unique operation named: updateUsingPOST_6
2019-03-14 08:14:33 -Generating unique operation named: addUsingGET_6
2019-03-14 08:14:33 -Generating unique operation named: editUsingGET_7
2019-03-14 08:14:33 -Generating unique operation named: listUsingGET_7
2019-03-14 08:14:33 -Generating unique operation named: removeUsingPOST_12
2019-03-14 08:14:33 -Generating unique operation named: removeUsingPOST_13
2019-03-14 08:14:33 -Generating unique operation named: saveUsingPOST_6
2019-03-14 08:14:33 -Generating unique operation named: updateUsingGET_6
2019-03-14 08:14:33 -Generating unique operation named: updateUsingHEAD_6
2019-03-14 08:14:33 -Generating unique operation named: updateUsingPOST_7
2019-03-14 08:14:33 -Generating unique operation named: updateUsingPUT_6
2019-03-14 08:14:33 -Generating unique operation named: updateUsingPATCH_6
2019-03-14 08:14:33 -Generating unique operation named: updateUsingDELETE_6
2019-03-14 08:14:33 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-14 08:14:33 -Generating unique operation named: updateUsingTRACE_6
2019-03-14 08:14:33 -Generating unique operation named: addUsingGET_7
2019-03-14 08:14:33 -Generating unique operation named: editUsingGET_8
2019-03-14 08:14:33 -Generating unique operation named: listUsingGET_8
2019-03-14 08:14:33 -Generating unique operation named: removeUsingPOST_14
2019-03-14 08:14:33 -Generating unique operation named: removeUsingPOST_15
2019-03-14 08:14:33 -Generating unique operation named: saveUsingPOST_7
2019-03-14 08:14:33 -Generating unique operation named: updateUsingGET_7
2019-03-14 08:14:33 -Generating unique operation named: updateUsingHEAD_7
2019-03-14 08:14:33 -Generating unique operation named: updateUsingPOST_8
2019-03-14 08:14:33 -Generating unique operation named: updateUsingPUT_7
2019-03-14 08:14:33 -Generating unique operation named: updateUsingPATCH_7
2019-03-14 08:14:33 -Generating unique operation named: updateUsingDELETE_7
2019-03-14 08:14:33 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-14 08:14:33 -Generating unique operation named: updateUsingTRACE_7
2019-03-14 08:14:33 -Generating unique operation named: addUsingGET_8
2019-03-14 08:14:33 -Generating unique operation named: editUsingGET_9
2019-03-14 08:14:33 -Generating unique operation named: listUsingGET_9
2019-03-14 08:14:33 -Generating unique operation named: removeUsingPOST_16
2019-03-14 08:14:33 -Generating unique operation named: removeUsingPOST_17
2019-03-14 08:14:33 -Generating unique operation named: saveUsingPOST_8
2019-03-14 08:14:33 -Generating unique operation named: updateUsingGET_8
2019-03-14 08:14:33 -Generating unique operation named: updateUsingHEAD_8
2019-03-14 08:14:33 -Generating unique operation named: updateUsingPOST_9
2019-03-14 08:14:33 -Generating unique operation named: updateUsingPUT_8
2019-03-14 08:14:33 -Generating unique operation named: updateUsingPATCH_8
2019-03-14 08:14:33 -Generating unique operation named: updateUsingDELETE_8
2019-03-14 08:14:33 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-14 08:14:33 -Generating unique operation named: updateUsingTRACE_8
2019-03-14 08:14:33 -Generating unique operation named: addUsingGET_9
2019-03-14 08:14:33 -Generating unique operation named: editUsingGET_10
2019-03-14 08:14:33 -Generating unique operation named: listUsingGET_10
2019-03-14 08:14:33 -Generating unique operation named: removeUsingPOST_18
2019-03-14 08:14:33 -Generating unique operation named: removeUsingPOST_19
2019-03-14 08:14:33 -Generating unique operation named: saveUsingPOST_9
2019-03-14 08:14:33 -Generating unique operation named: updateUsingGET_9
2019-03-14 08:14:33 -Generating unique operation named: updateUsingHEAD_9
2019-03-14 08:14:33 -Generating unique operation named: updateUsingPOST_10
2019-03-14 08:14:33 -Generating unique operation named: updateUsingPUT_9
2019-03-14 08:14:33 -Generating unique operation named: updateUsingPATCH_9
2019-03-14 08:14:33 -Generating unique operation named: updateUsingDELETE_9
2019-03-14 08:14:33 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-14 08:14:33 -Generating unique operation named: updateUsingTRACE_9
2019-03-14 08:14:33 -Generating unique operation named: addUsingGET_10
2019-03-14 08:14:33 -Generating unique operation named: editUsingGET_11
2019-03-14 08:14:33 -Generating unique operation named: infoUsingGET_1
2019-03-14 08:14:33 -Generating unique operation named: infoUsingHEAD_1
2019-03-14 08:14:33 -Generating unique operation named: infoUsingPOST_1
2019-03-14 08:14:33 -Generating unique operation named: infoUsingPUT_1
2019-03-14 08:14:33 -Generating unique operation named: infoUsingPATCH_1
2019-03-14 08:14:33 -Generating unique operation named: infoUsingDELETE_1
2019-03-14 08:14:33 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-14 08:14:34 -Generating unique operation named: infoUsingTRACE_1
2019-03-14 08:14:34 -Generating unique operation named: listUsingGET_11
2019-03-14 08:14:34 -Generating unique operation named: removeUsingPOST_20
2019-03-14 08:14:34 -Generating unique operation named: removeUsingPOST_21
2019-03-14 08:14:34 -Generating unique operation named: saveUsingPOST_10
2019-03-14 08:14:34 -Generating unique operation named: updateUsingPOST_11
2019-03-14 08:14:34 -Generating unique operation named: listUsingGET_12
2019-03-14 08:14:34 -Generating unique operation named: removeUsingPOST_22
2019-03-14 08:14:34 -Generating unique operation named: welcomeUsingGET_1
2019-03-14 08:14:34 -Generating unique operation named: addUsingGET_11
2019-03-14 08:14:34 -Generating unique operation named: editUsingGET_12
2019-03-14 08:14:34 -Generating unique operation named: listUsingGET_13
2019-03-14 08:14:34 -Generating unique operation named: removeUsingPOST_23
2019-03-14 08:14:34 -Generating unique operation named: saveUsingPOST_11
2019-03-14 08:14:34 -Generating unique operation named: treeUsingGET_1
2019-03-14 08:14:34 -Generating unique operation named: treeUsingGET_2
2019-03-14 08:14:34 -Generating unique operation named: updateUsingPOST_12
2019-03-14 08:14:34 -Generating unique operation named: addUsingGET_12
2019-03-14 08:14:34 -Generating unique operation named: editUsingGET_13
2019-03-14 08:14:34 -Generating unique operation named: listUsingGET_14
2019-03-14 08:14:34 -Generating unique operation named: removeUsingPOST_24
2019-03-14 08:14:34 -Generating unique operation named: removeUsingPOST_25
2019-03-14 08:14:34 -Generating unique operation named: saveUsingPOST_12
2019-03-14 08:14:34 -Generating unique operation named: updateUsingGET_10
2019-03-14 08:14:34 -Generating unique operation named: updateUsingHEAD_10
2019-03-14 08:14:34 -Generating unique operation named: updateUsingPOST_13
2019-03-14 08:14:35 -Generating unique operation named: updateUsingPUT_10
2019-03-14 08:14:35 -Generating unique operation named: updateUsingPATCH_10
2019-03-14 08:14:35 -Generating unique operation named: updateUsingDELETE_10
2019-03-14 08:14:35 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-14 08:14:35 -Generating unique operation named: updateUsingTRACE_10
2019-03-14 08:14:35 -Generating unique operation named: addUsingGET_13
2019-03-14 08:14:35 -Generating unique operation named: editUsingGET_14
2019-03-14 08:14:35 -Generating unique operation named: listUsingGET_15
2019-03-14 08:14:35 -Generating unique operation named: removeUsingPOST_26
2019-03-14 08:14:35 -Generating unique operation named: removeUsingPOST_27
2019-03-14 08:14:35 -Generating unique operation named: saveUsingPOST_13
2019-03-14 08:14:35 -Generating unique operation named: updateUsingGET_11
2019-03-14 08:14:35 -Generating unique operation named: updateUsingHEAD_11
2019-03-14 08:14:35 -Generating unique operation named: updateUsingPOST_14
2019-03-14 08:14:35 -Generating unique operation named: updateUsingPUT_11
2019-03-14 08:14:35 -Generating unique operation named: updateUsingPATCH_11
2019-03-14 08:14:35 -Generating unique operation named: updateUsingDELETE_11
2019-03-14 08:14:35 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-14 08:14:35 -Generating unique operation named: updateUsingTRACE_11
2019-03-14 08:14:35 -Generating unique operation named: addUsingGET_14
2019-03-14 08:14:35 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-14 08:14:35 -Generating unique operation named: editUsingGET_15
2019-03-14 08:14:35 -Generating unique operation named: listUsingGET_16
2019-03-14 08:14:35 -Generating unique operation named: saveUsingPOST_14
2019-03-14 08:14:35 -Generating unique operation named: saveUsingPOST_15
2019-03-14 08:14:35 -Generating unique operation named: updateUsingPOST_15
2019-03-14 08:14:35 -Generating unique operation named: listUsingGET_17
2019-03-14 08:14:35 -Generating unique operation named: listUsingHEAD_1
2019-03-14 08:14:35 -Generating unique operation named: listUsingPOST_1
2019-03-14 08:14:35 -Generating unique operation named: listUsingPUT_1
2019-03-14 08:14:35 -Generating unique operation named: listUsingPATCH_1
2019-03-14 08:14:35 -Generating unique operation named: listUsingDELETE_1
2019-03-14 08:14:35 -Generating unique operation named: listUsingOPTIONS_1
2019-03-14 08:14:35 -Generating unique operation named: listUsingTRACE_1
2019-03-14 08:14:35 -Generating unique operation named: addUsingGET_15
2019-03-14 08:14:35 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-14 08:14:35 -Generating unique operation named: editUsingGET_16
2019-03-14 08:14:35 -Generating unique operation named: listUsingGET_18
2019-03-14 08:14:35 -Generating unique operation named: removeUsingPOST_28
2019-03-14 08:14:35 -Generating unique operation named: saveUsingPOST_16
2019-03-14 08:14:36 -Generating unique operation named: treeUsingGET_3
2019-03-14 08:14:36 -Generating unique operation named: treeViewUsingGET_1
2019-03-14 08:14:36 -Generating unique operation named: updateUsingPOST_16
2019-03-14 08:14:36 -Generating unique operation named: addUsingGET_16
2019-03-14 08:14:36 -Generating unique operation named: editUsingGET_17
2019-03-14 08:14:36 -Generating unique operation named: listUsingGET_19
2019-03-14 08:14:36 -Generating unique operation named: removeUsingPOST_29
2019-03-14 08:14:36 -Generating unique operation named: removeUsingPOST_30
2019-03-14 08:14:36 -Generating unique operation named: saveUsingPOST_17
2019-03-14 08:14:36 -Generating unique operation named: updateUsingGET_12
2019-03-14 08:14:36 -Generating unique operation named: updateUsingHEAD_12
2019-03-14 08:14:36 -Generating unique operation named: updateUsingPOST_17
2019-03-14 08:14:36 -Generating unique operation named: updateUsingPUT_12
2019-03-14 08:14:36 -Generating unique operation named: updateUsingPATCH_12
2019-03-14 08:14:36 -Generating unique operation named: updateUsingDELETE_12
2019-03-14 08:14:36 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-14 08:14:36 -Generating unique operation named: updateUsingTRACE_12
2019-03-14 08:14:36 -Generating unique operation named: addUsingGET_17
2019-03-14 08:14:36 -Generating unique operation named: editUsingGET_18
2019-03-14 08:14:36 -Generating unique operation named: listUsingGET_20
2019-03-14 08:14:36 -Generating unique operation named: removeUsingPOST_31
2019-03-14 08:14:36 -Generating unique operation named: removeUsingPOST_32
2019-03-14 08:14:36 -Generating unique operation named: saveUsingPOST_18
2019-03-14 08:14:36 -Generating unique operation named: updateUsingGET_13
2019-03-14 08:14:36 -Generating unique operation named: updateUsingHEAD_13
2019-03-14 08:14:36 -Generating unique operation named: updateUsingPOST_18
2019-03-14 08:14:36 -Generating unique operation named: updateUsingPUT_13
2019-03-14 08:14:36 -Generating unique operation named: updateUsingPATCH_13
2019-03-14 08:14:36 -Generating unique operation named: updateUsingDELETE_13
2019-03-14 08:14:36 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-14 08:14:36 -Generating unique operation named: updateUsingTRACE_13
2019-03-14 08:14:36 -Generating unique operation named: addUsingGET_18
2019-03-14 08:14:36 -Generating unique operation named: editUsingGET_19
2019-03-14 08:14:36 -Generating unique operation named: listUsingGET_21
2019-03-14 08:14:36 -Generating unique operation named: removeUsingPOST_33
2019-03-14 08:14:36 -Generating unique operation named: removeUsingPOST_34
2019-03-14 08:14:36 -Generating unique operation named: saveUsingPOST_19
2019-03-14 08:14:36 -Generating unique operation named: updateUsingGET_14
2019-03-14 08:14:36 -Generating unique operation named: updateUsingHEAD_14
2019-03-14 08:14:36 -Generating unique operation named: updateUsingPOST_19
2019-03-14 08:14:36 -Generating unique operation named: updateUsingPUT_14
2019-03-14 08:14:36 -Generating unique operation named: updateUsingPATCH_14
2019-03-14 08:14:36 -Generating unique operation named: updateUsingDELETE_14
2019-03-14 08:14:36 -Generating unique operation named: updateUsingOPTIONS_14
2019-03-14 08:14:36 -Generating unique operation named: updateUsingTRACE_14
2019-03-14 08:14:36 -Generating unique operation named: addUsingGET_19
2019-03-14 08:14:36 -Generating unique operation named: editUsingGET_20
2019-03-14 08:14:36 -Generating unique operation named: listUsingGET_22
2019-03-14 08:14:36 -Generating unique operation named: removeUsingPOST_35
2019-03-14 08:14:36 -Generating unique operation named: removeUsingPOST_36
2019-03-14 08:14:36 -Generating unique operation named: saveUsingPOST_20
2019-03-14 08:14:36 -Generating unique operation named: updateUsingGET_15
2019-03-14 08:14:36 -Generating unique operation named: updateUsingHEAD_15
2019-03-14 08:14:36 -Generating unique operation named: updateUsingPOST_20
2019-03-14 08:14:36 -Generating unique operation named: updateUsingPUT_15
2019-03-14 08:14:36 -Generating unique operation named: updateUsingPATCH_15
2019-03-14 08:14:36 -Generating unique operation named: updateUsingDELETE_15
2019-03-14 08:14:36 -Generating unique operation named: updateUsingOPTIONS_15
2019-03-14 08:14:36 -Generating unique operation named: updateUsingTRACE_15
2019-03-14 08:14:36 -Starting Quartz Scheduler now
2019-03-14 08:14:36 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-14 08:14:36 -Starting...
2019-03-14 08:14:36 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-14 08:14:36 -Started.
2019-03-14 08:14:37 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-14 08:14:37 -Using a shared selector for servlet write/read
2019-03-14 08:14:37 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-14 08:14:37 -Started BootdoApplication in 51.516 seconds (JVM running for 53.777)
2019-03-14 08:14:38 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-14 08:14:38 -==> Parameters: 
2019-03-14 08:14:39 -<==      Total: 1
2019-03-14 08:15:13 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-14 08:15:13 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-14 08:15:13 -FrameworkServlet 'dispatcherServlet': initialization completed in 83 ms
2019-03-14 08:15:13 -Enabling session validation scheduler...
2019-03-14 08:15:13 -请求地址 : http://localhost:8081/
2019-03-14 08:15:13 -HTTP METHOD : GET
2019-03-14 08:15:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-03-14 08:15:13 -参数 : [{}]
2019-03-14 08:15:13 -耗时 : 5
2019-03-14 08:15:13 -返回值 : redirect:/index
2019-03-14 08:15:13 -请求地址 : http://localhost:8081/login;JSESSIONID=d2b65fa7-d897-4f62-94e4-3068068b494c
2019-03-14 08:15:13 -HTTP METHOD : GET
2019-03-14 08:15:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-14 08:15:13 -参数 : [{}]
2019-03-14 08:15:13 -耗时 : 1
2019-03-14 08:15:13 -返回值 : login
2019-03-14 08:15:18 -请求地址 : http://localhost:8081/getVerify
2019-03-14 08:15:18 -HTTP METHOD : GET
2019-03-14 08:15:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-14 08:15:18 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5455a6ac, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5a925256]
2019-03-14 08:15:22 -0079
2019-03-14 08:15:23 -耗时 : 4948
2019-03-14 08:15:23 -返回值 : null
2019-03-14 08:15:25 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-14 08:15:38 -请求地址 : http://localhost:8081/login
2019-03-14 08:15:38 -HTTP METHOD : POST
2019-03-14 08:15:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-14 08:15:38 -参数 : [admin, 111111, 0079, org.apache.shiro.web.servlet.ShiroHttpServletRequest@3408e023]
2019-03-14 08:15:38 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-14 08:15:38 -==> Parameters: admin(String)
2019-03-14 08:15:38 -<==      Total: 1
2019-03-14 08:15:38 -耗时 : 262
2019-03-14 08:15:38 -返回值 : {msg=操作成功, code=0}
2019-03-14 08:15:38 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-14 08:15:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 08:15:38 -==> Parameters: 1(Long), admin(String), 登录(String), 262(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-14 08:15:38.92(Timestamp)
2019-03-14 08:15:39 -<==    Updates: 1
2019-03-14 08:15:39 -请求地址 : http://localhost:8081/index
2019-03-14 08:15:39 -HTTP METHOD : GET
2019-03-14 08:15:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 08:15:39 -参数 : [{}]
2019-03-14 08:15:39 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 08:15:39 -==> Parameters: 1(Long)
2019-03-14 08:15:39 -<==      Total: 45
2019-03-14 08:15:39 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 08:15:39 -==> Parameters: 138(Long)
2019-03-14 08:15:39 -<==      Total: 1
2019-03-14 08:15:39 -耗时 : 416
2019-03-14 08:15:39 -返回值 : index_v1
2019-03-14 08:15:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 08:15:39 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 416(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 08:15:39.84(Timestamp)
2019-03-14 08:15:39 -<==    Updates: 1
2019-03-14 08:15:40 -请求地址 : http://localhost:8081/main
2019-03-14 08:15:40 -HTTP METHOD : GET
2019-03-14 08:15:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 08:15:40 -参数 : []
2019-03-14 08:15:40 -耗时 : 1
2019-03-14 08:15:40 -返回值 : main
2019-03-14 08:15:41 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 08:15:41 -HTTP METHOD : GET
2019-03-14 08:15:41 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 08:15:41 -参数 : []
2019-03-14 08:15:41 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 08:15:41 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 08:15:41 -<==      Total: 0
2019-03-14 08:15:41 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 08:15:41 -==> Parameters: 1(Long), 0(String)
2019-03-14 08:15:41 -<==      Total: 1
2019-03-14 08:15:41 -耗时 : 110
2019-03-14 08:15:41 -返回值 : com.bootdo.common.utils.PageUtils@62ecc875
2019-03-14 08:15:41 -请求地址 : http://localhost:8081/main
2019-03-14 08:15:41 -HTTP METHOD : GET
2019-03-14 08:15:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 08:15:41 -参数 : []
2019-03-14 08:15:41 -耗时 : 0
2019-03-14 08:15:41 -返回值 : main
2019-03-14 08:16:07 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-14 08:16:07 -==> Parameters: 1(Long)
2019-03-14 08:16:07 -<==      Total: 86
2019-03-14 08:16:07 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 08:16:07 -HTTP METHOD : GET
2019-03-14 08:16:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 08:16:07 -参数 : []
2019-03-14 08:16:07 -耗时 : 1
2019-03-14 08:16:07 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 08:16:08 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 08:16:08 -HTTP METHOD : GET
2019-03-14 08:16:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 08:16:08 -参数 : [{limit=10, offset=0}]
2019-03-14 08:16:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-14 08:16:08 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 08:16:09 -{conn-10001, pstmt-20008} execute error. select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log
          
         
                order by id asc
			 
		 
			limit ?, ?
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:46)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$de7193db.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-14 08:16:09 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-03-14 08:16:09 -SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2019-03-14 08:16:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 08:16:09 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/elecLog/list(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'(String), null, 2019-03-14 08:16:09.391(Timestamp)
2019-03-14 08:16:09 -
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:46)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$de7193db.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 105 common frames omitted
2019-03-14 08:16:09 -<==    Updates: 1
2019-03-14 08:16:13 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-14 08:16:13 -HTTP METHOD : GET
2019-03-14 08:16:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-14 08:16:13 -参数 : []
2019-03-14 08:16:13 -耗时 : 0
2019-03-14 08:16:13 -返回值 : /moneyLog/heatLog/heatLog
2019-03-14 08:16:14 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-14 08:16:14 -HTTP METHOD : GET
2019-03-14 08:16:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-14 08:16:14 -参数 : []
2019-03-14 08:16:14 -耗时 : 1
2019-03-14 08:16:14 -返回值 : /moneyLog/waterLog/waterLog
2019-03-14 08:16:15 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-14 08:16:15 -HTTP METHOD : GET
2019-03-14 08:16:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-14 08:16:15 -参数 : [{limit=10, offset=0}]
2019-03-14 08:16:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-14 08:16:15 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 08:16:15 -<==      Total: 3
2019-03-14 08:16:15 -==>  Preparing: select count(*) from water_log 
2019-03-14 08:16:15 -==> Parameters: 
2019-03-14 08:16:15 -<==      Total: 1
2019-03-14 08:16:15 -耗时 : 39
2019-03-14 08:16:15 -返回值 : com.bootdo.common.utils.PageUtils@2ef57114
2019-03-14 08:16:16 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-14 08:16:16 -HTTP METHOD : GET
2019-03-14 08:16:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-14 08:16:16 -参数 : []
2019-03-14 08:16:16 -耗时 : 1
2019-03-14 08:16:16 -返回值 : /moneyLog/heatLog/heatLog
2019-03-14 08:16:17 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 08:16:17 -HTTP METHOD : GET
2019-03-14 08:16:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 08:16:17 -参数 : []
2019-03-14 08:16:17 -耗时 : 1
2019-03-14 08:16:17 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 08:16:17 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 08:16:17 -HTTP METHOD : GET
2019-03-14 08:16:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 08:16:17 -参数 : [{limit=10, offset=0}]
2019-03-14 08:16:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-14 08:16:17 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 08:16:17 -{conn-10001, pstmt-20011} execute error. select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log
          
         
                order by id asc
			 
		 
			limit ?, ?
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:46)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$de7193db.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-14 08:16:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 08:16:17 -
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:46)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$de7193db.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 105 common frames omitted
2019-03-14 08:16:17 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/elecLog/list(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'(String), null, 2019-03-14 08:16:17.689(Timestamp)
2019-03-14 08:16:17 -<==    Updates: 1
2019-03-14 08:16:18 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-14 08:16:18 -HTTP METHOD : GET
2019-03-14 08:16:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-14 08:16:18 -参数 : []
2019-03-14 08:16:18 -耗时 : 0
2019-03-14 08:16:18 -返回值 : /moneyLog/heatLog/heatLog
2019-03-14 08:16:19 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 08:16:19 -HTTP METHOD : GET
2019-03-14 08:16:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 08:16:19 -参数 : []
2019-03-14 08:16:19 -耗时 : 0
2019-03-14 08:16:19 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 08:16:19 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 08:16:19 -HTTP METHOD : GET
2019-03-14 08:16:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 08:16:19 -参数 : [{limit=10, offset=0}]
2019-03-14 08:16:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-14 08:16:19 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 08:16:19 -{conn-10001, pstmt-20012} execute error. select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log
          
         
                order by id asc
			 
		 
			limit ?, ?
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:46)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$de7193db.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-14 08:16:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 08:16:19 -
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:46)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$de7193db.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
2019-03-14 08:16:19 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/elecLog/list(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'(String), null, 2019-03-14 08:16:19.832(Timestamp)
2019-03-14 08:16:20 -<==    Updates: 1
2019-03-14 08:16:25 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-14 08:16:25 -HTTP METHOD : GET
2019-03-14 08:16:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-14 08:16:25 -参数 : []
2019-03-14 08:16:25 -耗时 : 0
2019-03-14 08:16:25 -返回值 : /moneyLog/heatLog/heatLog
2019-03-14 08:16:27 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-14 08:16:27 -HTTP METHOD : GET
2019-03-14 08:16:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-14 08:16:27 -参数 : []
2019-03-14 08:16:27 -耗时 : 0
2019-03-14 08:16:27 -返回值 : /moneyLog/waterLog/waterLog
2019-03-14 08:16:28 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-14 08:16:28 -HTTP METHOD : GET
2019-03-14 08:16:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-14 08:16:28 -参数 : [{limit=10, offset=0}]
2019-03-14 08:16:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-14 08:16:28 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 08:16:28 -<==      Total: 3
2019-03-14 08:16:28 -==>  Preparing: select count(*) from water_log 
2019-03-14 08:16:28 -==> Parameters: 
2019-03-14 08:16:28 -<==      Total: 1
2019-03-14 08:16:28 -耗时 : 10
2019-03-14 08:16:28 -返回值 : com.bootdo.common.utils.PageUtils@52aea5dc
2019-03-14 08:16:29 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-14 08:16:29 -HTTP METHOD : GET
2019-03-14 08:16:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-14 08:16:29 -参数 : []
2019-03-14 08:16:29 -耗时 : 1
2019-03-14 08:16:29 -返回值 : /moneyLog/heatLog/heatLog
2019-03-14 08:16:30 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 08:16:30 -HTTP METHOD : GET
2019-03-14 08:16:30 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 08:16:30 -参数 : []
2019-03-14 08:16:30 -耗时 : 1
2019-03-14 08:16:30 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 08:16:30 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 08:16:30 -HTTP METHOD : GET
2019-03-14 08:16:30 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 08:16:30 -参数 : [{limit=10, offset=0}]
2019-03-14 08:16:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-14 08:16:30 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 08:16:30 -{conn-10001, pstmt-20013} execute error. select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log
          
         
                order by id asc
			 
		 
			limit ?, ?
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:46)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$de7193db.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-14 08:16:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 08:16:30 -
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:46)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$de7193db.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
2019-03-14 08:16:30 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/elecLog/list(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'(String), null, 2019-03-14 08:16:30.71(Timestamp)
2019-03-14 08:16:30 -<==    Updates: 1
2019-03-14 08:16:31 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-14 08:16:31 -HTTP METHOD : GET
2019-03-14 08:16:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-14 08:16:31 -参数 : []
2019-03-14 08:16:31 -耗时 : 0
2019-03-14 08:16:31 -返回值 : /moneyLog/heatLog/heatLog
2019-03-14 08:16:35 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 08:16:35 -HTTP METHOD : GET
2019-03-14 08:16:35 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 08:16:35 -参数 : []
2019-03-14 08:16:35 -耗时 : 0
2019-03-14 08:16:35 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 08:16:35 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 08:16:35 -HTTP METHOD : GET
2019-03-14 08:16:35 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 08:16:35 -参数 : [{limit=10, offset=0}]
2019-03-14 08:16:35 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-14 08:16:35 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 08:16:35 -{conn-10001, pstmt-20014} execute error. select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log
          
         
                order by id asc
			 
		 
			limit ?, ?
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:46)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$de7193db.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-14 08:16:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 08:16:35 -
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:46)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$de7193db.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
2019-03-14 08:16:35 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/elecLog/list(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'(String), null, 2019-03-14 08:16:35.816(Timestamp)
2019-03-14 08:16:35 -<==    Updates: 1
2019-03-14 08:16:37 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-14 08:16:37 -HTTP METHOD : GET
2019-03-14 08:16:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-14 08:16:37 -参数 : []
2019-03-14 08:16:37 -耗时 : 1
2019-03-14 08:16:37 -返回值 : /moneyLog/heatLog/heatLog
2019-03-14 08:16:44 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-14 08:16:44 -HTTP METHOD : GET
2019-03-14 08:16:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-14 08:16:44 -参数 : []
2019-03-14 08:16:44 -耗时 : 1
2019-03-14 08:16:44 -返回值 : /moneyLog/waterLog/waterLog
2019-03-14 08:16:44 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-14 08:16:44 -HTTP METHOD : GET
2019-03-14 08:16:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-14 08:16:44 -参数 : [{limit=10, offset=0}]
2019-03-14 08:16:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-14 08:16:44 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 08:16:44 -<==      Total: 3
2019-03-14 08:16:44 -==>  Preparing: select count(*) from water_log 
2019-03-14 08:16:44 -==> Parameters: 
2019-03-14 08:16:44 -<==      Total: 1
2019-03-14 08:16:44 -耗时 : 10
2019-03-14 08:16:44 -返回值 : com.bootdo.common.utils.PageUtils@1b72d47b
2019-03-14 08:21:07 -请求地址 : http://localhost:8081/index
2019-03-14 08:21:07 -HTTP METHOD : GET
2019-03-14 08:21:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 08:21:07 -参数 : [{}]
2019-03-14 08:21:07 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 08:21:07 -==> Parameters: 1(Long)
2019-03-14 08:21:07 -<==      Total: 45
2019-03-14 08:21:07 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 08:21:07 -==> Parameters: 138(Long)
2019-03-14 08:21:07 -<==      Total: 1
2019-03-14 08:21:07 -耗时 : 28
2019-03-14 08:21:07 -返回值 : index_v1
2019-03-14 08:21:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 08:21:08 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 28(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 08:21:07.932(Timestamp)
2019-03-14 08:21:08 -请求地址 : http://localhost:8081/main
2019-03-14 08:21:08 -HTTP METHOD : GET
2019-03-14 08:21:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 08:21:08 -参数 : []
2019-03-14 08:21:08 -耗时 : 0
2019-03-14 08:21:08 -返回值 : main
2019-03-14 08:21:08 -<==    Updates: 1
2019-03-14 08:21:08 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 08:21:08 -HTTP METHOD : GET
2019-03-14 08:21:08 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 08:21:08 -参数 : []
2019-03-14 08:21:08 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 08:21:08 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 08:21:08 -<==      Total: 0
2019-03-14 08:21:08 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 08:21:08 -==> Parameters: 1(Long), 0(String)
2019-03-14 08:21:08 -<==      Total: 1
2019-03-14 08:21:08 -耗时 : 36
2019-03-14 08:21:08 -返回值 : com.bootdo.common.utils.PageUtils@797b1663
2019-03-14 08:21:08 -请求地址 : http://localhost:8081/main
2019-03-14 08:21:08 -HTTP METHOD : GET
2019-03-14 08:21:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 08:21:08 -参数 : []
2019-03-14 08:21:08 -耗时 : 1
2019-03-14 08:21:08 -返回值 : main
2019-03-14 08:21:11 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 08:21:11 -HTTP METHOD : GET
2019-03-14 08:21:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 08:21:11 -参数 : []
2019-03-14 08:21:11 -耗时 : 1
2019-03-14 08:21:11 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 08:21:12 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 08:21:12 -HTTP METHOD : GET
2019-03-14 08:21:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 08:21:12 -参数 : [{limit=10, offset=0}]
2019-03-14 08:21:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-14 08:21:12 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 08:21:12 -{conn-10001, pstmt-20015} execute error. select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log
          
         
                order by id asc
			 
		 
			limit ?, ?
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:46)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$de7193db.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-14 08:21:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 08:21:12 -
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:46)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$de7193db.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
2019-03-14 08:21:12 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/elecLog/list(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'(String), null, 2019-03-14 08:21:12.112(Timestamp)
2019-03-14 08:21:12 -<==    Updates: 1
2019-03-14 08:21:13 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-14 08:21:13 -HTTP METHOD : GET
2019-03-14 08:21:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-14 08:21:13 -参数 : []
2019-03-14 08:21:13 -耗时 : 0
2019-03-14 08:21:13 -返回值 : /moneyLog/waterLog/waterLog
2019-03-14 08:21:13 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-14 08:21:13 -HTTP METHOD : GET
2019-03-14 08:21:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-14 08:21:13 -参数 : [{limit=10, offset=0}]
2019-03-14 08:21:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-14 08:21:13 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 08:21:13 -<==      Total: 3
2019-03-14 08:21:13 -==>  Preparing: select count(*) from water_log 
2019-03-14 08:21:13 -==> Parameters: 
2019-03-14 08:21:13 -<==      Total: 1
2019-03-14 08:21:13 -耗时 : 7
2019-03-14 08:21:13 -返回值 : com.bootdo.common.utils.PageUtils@680a484a
2019-03-14 08:21:33 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-14 08:22:01 -请求地址 : http://localhost:8081/index
2019-03-14 08:22:01 -HTTP METHOD : GET
2019-03-14 08:22:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 08:22:01 -参数 : [{}]
2019-03-14 08:22:01 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 08:22:01 -==> Parameters: 1(Long)
2019-03-14 08:22:01 -<==      Total: 45
2019-03-14 08:22:01 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 08:22:01 -==> Parameters: 138(Long)
2019-03-14 08:22:01 -<==      Total: 1
2019-03-14 08:22:01 -耗时 : 24
2019-03-14 08:22:01 -返回值 : index_v1
2019-03-14 08:22:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 08:22:01 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 08:22:01.231(Timestamp)
2019-03-14 08:22:01 -请求地址 : http://localhost:8081/main
2019-03-14 08:22:01 -HTTP METHOD : GET
2019-03-14 08:22:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 08:22:01 -参数 : []
2019-03-14 08:22:01 -耗时 : 0
2019-03-14 08:22:01 -返回值 : main
2019-03-14 08:22:01 -<==    Updates: 1
2019-03-14 08:22:01 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 08:22:01 -HTTP METHOD : GET
2019-03-14 08:22:01 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 08:22:01 -参数 : []
2019-03-14 08:22:01 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 08:22:01 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 08:22:01 -<==      Total: 0
2019-03-14 08:22:01 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 08:22:01 -==> Parameters: 1(Long), 0(String)
2019-03-14 08:22:01 -<==      Total: 1
2019-03-14 08:22:01 -耗时 : 9
2019-03-14 08:22:01 -返回值 : com.bootdo.common.utils.PageUtils@701e2b61
2019-03-14 08:22:01 -请求地址 : http://localhost:8081/main
2019-03-14 08:22:01 -HTTP METHOD : GET
2019-03-14 08:22:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 08:22:01 -参数 : []
2019-03-14 08:22:01 -耗时 : 0
2019-03-14 08:22:01 -返回值 : main
2019-03-14 08:22:03 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 08:22:03 -HTTP METHOD : GET
2019-03-14 08:22:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 08:22:03 -参数 : []
2019-03-14 08:22:03 -耗时 : 0
2019-03-14 08:22:03 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 08:22:04 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 08:22:04 -HTTP METHOD : GET
2019-03-14 08:22:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 08:22:04 -参数 : [{limit=10, offset=0}]
2019-03-14 08:22:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-14 08:22:04 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 08:22:04 -{conn-10001, pstmt-20016} execute error. select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log
          
         
                order by id asc
			 
		 
			limit ?, ?
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor141.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:46)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$de7193db.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-14 08:22:04 -
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:46)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$de7193db.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor141.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
2019-03-14 08:22:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 08:22:04 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/elecLog/list(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'(String), null, 2019-03-14 08:22:04.132(Timestamp)
2019-03-14 08:22:04 -<==    Updates: 1
2019-03-14 08:22:04 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-14 08:22:04 -HTTP METHOD : GET
2019-03-14 08:22:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-14 08:22:04 -参数 : []
2019-03-14 08:22:04 -耗时 : 1
2019-03-14 08:22:04 -返回值 : /moneyLog/waterLog/waterLog
2019-03-14 08:22:05 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-14 08:22:05 -HTTP METHOD : GET
2019-03-14 08:22:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-14 08:22:05 -参数 : [{limit=10, offset=0}]
2019-03-14 08:22:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-14 08:22:05 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 08:22:05 -<==      Total: 3
2019-03-14 08:22:05 -==>  Preparing: select count(*) from water_log 
2019-03-14 08:22:05 -==> Parameters: 
2019-03-14 08:22:05 -<==      Total: 1
2019-03-14 08:22:05 -耗时 : 9
2019-03-14 08:22:05 -返回值 : com.bootdo.common.utils.PageUtils@43f01202
2019-03-14 08:24:08 -Starting BootdoApplication on ZJZL-20180906VX with PID 11124 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-14 08:24:08 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-14 08:24:08 -The following profiles are active: dev
2019-03-14 08:24:08 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ea9b7c6: startup date [Thu Mar 14 08:24:08 CST 2019]; root of context hierarchy
2019-03-14 08:24:12 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-14 08:24:14 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$69bcc858] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 08:24:14 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$5c15f6ff] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 08:24:15 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 08:24:15 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 08:24:15 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 08:24:15 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-14 08:24:15 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-14 08:24:15 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 08:24:16 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 08:24:16 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 08:24:16 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 08:24:17 -Tomcat initialized with port(s): 8081 (http)
2019-03-14 08:24:17 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-14 08:24:17 -Starting service [Tomcat]
2019-03-14 08:24:17 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-14 08:24:17 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;D:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-14 08:24:17 -Initializing Spring embedded WebApplicationContext
2019-03-14 08:24:17 -Root WebApplicationContext: initialization completed in 9496 ms
2019-03-14 08:24:18 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-14 08:24:18 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-14 08:24:18 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-14 08:24:18 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-14 08:24:18 -Filter xssFilter was not registered (disabled)
2019-03-14 08:24:18 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-14 08:24:18 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-14 08:24:18 -Servlet statViewServlet mapped to [/druid/*]
2019-03-14 08:24:18 -Servlet dispatcherServlet mapped to [/]
2019-03-14 08:24:22 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ea9b7c6: startup date [Thu Mar 14 08:24:08 CST 2019]; root of context hierarchy
2019-03-14 08:24:23 -Using default implementation for ThreadExecutor
2019-03-14 08:24:23 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-14 08:24:23 -Quartz Scheduler v.2.2.1 created.
2019-03-14 08:24:23 -RAMJobStore initialized.
2019-03-14 08:24:23 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-14 08:24:23 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-14 08:24:23 -Quartz scheduler version: 2.2.1
2019-03-14 08:24:23 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@9cb927e
2019-03-14 08:24:23 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-14 08:24:24 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-14 08:24:27 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-14 08:24:27 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-14 08:24:27 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-14 08:24:27 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-14 08:24:27 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-14 08:24:27 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-14 08:24:27 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-14 08:24:27 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-14 08:24:27 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-14 08:24:27 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:24:27 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-14 08:24:27 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-14 08:24:27 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:24:27 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-14 08:24:27 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-14 08:24:27 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-14 08:24:27 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-14 08:24:27 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-14 08:24:27 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-14 08:24:27 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-14 08:24:27 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:24:27 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-14 08:24:27 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-14 08:24:27 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:24:27 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-14 08:24:27 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-14 08:24:27 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:24:27 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-14 08:24:27 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-14 08:24:27 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-14 08:24:27 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-14 08:24:27 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-14 08:24:27 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-14 08:24:27 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-14 08:24:27 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-14 08:24:27 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-14 08:24:27 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:24:27 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-14 08:24:27 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-14 08:24:27 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:24:27 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-14 08:24:27 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-14 08:24:27 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-14 08:24:27 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-14 08:24:27 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:24:27 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-14 08:24:27 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-14 08:24:27 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-14 08:24:27 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-14 08:24:27 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-14 08:24:27 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-14 08:24:27 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-14 08:24:27 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-14 08:24:27 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-14 08:24:27 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-14 08:24:27 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:24:27 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-14 08:24:27 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-14 08:24:27 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-14 08:24:27 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2019-03-14 08:24:27 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-14 08:24:27 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-14 08:24:27 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-14 08:24:27 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-14 08:24:27 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:24:27 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-14 08:24:27 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:24:27 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-14 08:24:27 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-14 08:24:27 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-14 08:24:27 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-14 08:24:27 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-14 08:24:27 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-14 08:24:27 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-14 08:24:27 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:24:27 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-14 08:24:27 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-14 08:24:27 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-14 08:24:27 -Mapped "{[/heat/heatCost/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.add()
2019-03-14 08:24:27 -Mapped "{[/heat/heatCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.remove(java.lang.Long)
2019-03-14 08:24:27 -Mapped "{[/heat/heatCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.remove(java.lang.Long[])
2019-03-14 08:24:27 -Mapped "{[/heat/heatCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.update(com.bootdo.heat.domain.HeatCostDO)
2019-03-14 08:24:27 -Mapped "{[/heat/heatCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:24:27 -Mapped "{[/heat/heatCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.save(com.bootdo.heat.domain.HeatCostDO)
2019-03-14 08:24:27 -Mapped "{[/heat/heatCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:24:27 -Mapped "{[/heat/heatCost],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.HeatCost()
2019-03-14 08:24:27 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-14 08:24:27 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-14 08:24:27 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-14 08:24:27 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-14 08:24:27 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-14 08:24:27 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:24:27 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-14 08:24:27 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:24:27 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-14 08:24:27 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-14 08:24:27 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-14 08:24:27 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-03-14 08:24:27 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-14 08:24:27 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-14 08:24:27 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-14 08:24:27 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-14 08:24:27 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:24:27 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-14 08:24:27 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:24:27 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-14 08:24:27 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-14 08:24:27 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-14 08:24:27 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-14 08:24:27 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-14 08:24:27 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:24:27 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-14 08:24:27 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:24:27 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-14 08:24:27 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-14 08:24:27 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-14 08:24:27 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-14 08:24:27 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-14 08:24:27 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:24:27 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-14 08:24:27 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:24:27 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-14 08:24:27 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-14 08:24:27 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-14 08:24:27 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-14 08:24:27 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-14 08:24:27 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:24:27 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:24:27 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-14 08:24:27 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-14 08:24:27 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:24:27 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-14 08:24:27 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:24:27 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-14 08:24:27 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-14 08:24:27 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-14 08:24:27 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-14 08:24:27 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-14 08:24:27 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:24:27 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-14 08:24:27 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:24:27 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-14 08:24:27 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:24:27 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:24:27 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-14 08:24:27 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-14 08:24:27 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-14 08:24:27 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-14 08:24:27 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-14 08:24:27 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-14 08:24:27 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:24:27 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-14 08:24:27 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-14 08:24:27 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-14 08:24:27 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-14 08:24:27 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-14 08:24:27 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-14 08:24:27 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-14 08:24:27 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-14 08:24:27 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-14 08:24:27 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-14 08:24:27 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-14 08:24:27 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-14 08:24:27 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:24:27 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-14 08:24:27 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-14 08:24:27 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-14 08:24:27 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-14 08:24:27 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-14 08:24:27 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-14 08:24:27 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-14 08:24:27 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-14 08:24:27 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-14 08:24:27 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-14 08:24:27 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-14 08:24:27 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:24:27 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-14 08:24:27 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-14 08:24:27 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-14 08:24:27 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-14 08:24:27 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-14 08:24:27 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:24:27 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-14 08:24:27 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-14 08:24:27 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-14 08:24:27 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:24:27 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-14 08:24:27 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-14 08:24:27 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-14 08:24:27 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-14 08:24:27 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-14 08:24:27 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-14 08:24:27 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-14 08:24:27 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-14 08:24:27 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-14 08:24:27 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-14 08:24:27 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:24:27 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-14 08:24:27 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-14 08:24:27 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-14 08:24:27 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-14 08:24:27 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-14 08:24:27 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-14 08:24:27 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:24:27 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-14 08:24:27 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:24:27 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:24:27 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-14 08:24:27 -Mapped "{[/water/water/queryWater],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.queryWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:24:27 -Mapped "{[/water/waterCost/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.add()
2019-03-14 08:24:27 -Mapped "{[/water/waterCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long)
2019-03-14 08:24:27 -Mapped "{[/water/waterCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long[])
2019-03-14 08:24:27 -Mapped "{[/water/waterCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.update(com.bootdo.water.domain.WaterCostDO)
2019-03-14 08:24:27 -Mapped "{[/water/waterCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:24:27 -Mapped "{[/water/waterCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.save(com.bootdo.water.domain.WaterCostDO)
2019-03-14 08:24:27 -Mapped "{[/water/waterCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:24:27 -Mapped "{[/water/waterCost],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.WaterCost()
2019-03-14 08:24:27 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-14 08:24:27 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2019-03-14 08:24:27 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-14 08:24:27 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-14 08:24:27 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-14 08:24:27 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-14 08:24:27 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:24:27 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-14 08:24:27 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:24:27 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-14 08:24:27 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:24:27 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-14 08:24:27 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-14 08:24:27 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-14 08:24:27 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-14 08:24:27 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-14 08:24:28 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-14 08:24:28 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-14 08:24:28 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-14 08:24:29 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-14 08:24:29 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ea9b7c6: startup date [Thu Mar 14 08:24:08 CST 2019]; root of context hierarchy
2019-03-14 08:24:30 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-14 08:24:30 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-14 08:24:30 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-14 08:24:30 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-14 08:24:30 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-14 08:24:32 -Registering beans for JMX exposure on startup
2019-03-14 08:24:32 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-14 08:24:32 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-14 08:24:32 -Starting beans in phase 2147483647
2019-03-14 08:24:32 -Context refreshed
2019-03-14 08:24:32 -Found 1 custom documentation plugin(s)
2019-03-14 08:24:32 -Scanning for api listing references
2019-03-14 08:24:33 -Generating unique operation named: removeUsingPOST_1
2019-03-14 08:24:33 -Generating unique operation named: addUsingGET_1
2019-03-14 08:24:33 -Generating unique operation named: editUsingGET_1
2019-03-14 08:24:33 -Generating unique operation named: listUsingGET_1
2019-03-14 08:24:33 -Generating unique operation named: removeUsingPOST_2
2019-03-14 08:24:33 -Generating unique operation named: removeUsingPOST_3
2019-03-14 08:24:33 -Generating unique operation named: saveUsingPOST_1
2019-03-14 08:24:33 -Generating unique operation named: updateUsingGET_1
2019-03-14 08:24:33 -Generating unique operation named: updateUsingHEAD_1
2019-03-14 08:24:33 -Generating unique operation named: updateUsingPOST_1
2019-03-14 08:24:33 -Generating unique operation named: updateUsingPUT_1
2019-03-14 08:24:33 -Generating unique operation named: updateUsingPATCH_1
2019-03-14 08:24:33 -Generating unique operation named: updateUsingDELETE_1
2019-03-14 08:24:33 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-14 08:24:33 -Generating unique operation named: updateUsingTRACE_1
2019-03-14 08:24:33 -Generating unique operation named: addUsingGET_2
2019-03-14 08:24:33 -Generating unique operation named: editUsingGET_2
2019-03-14 08:24:33 -Generating unique operation named: listUsingGET_2
2019-03-14 08:24:33 -Generating unique operation named: removeUsingPOST_4
2019-03-14 08:24:33 -Generating unique operation named: removeUsingPOST_5
2019-03-14 08:24:33 -Generating unique operation named: saveUsingPOST_2
2019-03-14 08:24:33 -Generating unique operation named: updateUsingGET_2
2019-03-14 08:24:33 -Generating unique operation named: updateUsingHEAD_2
2019-03-14 08:24:33 -Generating unique operation named: updateUsingPOST_2
2019-03-14 08:24:33 -Generating unique operation named: updateUsingPUT_2
2019-03-14 08:24:33 -Generating unique operation named: updateUsingPATCH_2
2019-03-14 08:24:33 -Generating unique operation named: updateUsingDELETE_2
2019-03-14 08:24:33 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-14 08:24:33 -Generating unique operation named: updateUsingTRACE_2
2019-03-14 08:24:33 -Generating unique operation named: addUsingGET_3
2019-03-14 08:24:33 -Generating unique operation named: editUsingGET_3
2019-03-14 08:24:33 -Generating unique operation named: listUsingGET_3
2019-03-14 08:24:33 -Generating unique operation named: removeUsingPOST_6
2019-03-14 08:24:33 -Generating unique operation named: removeUsingPOST_7
2019-03-14 08:24:33 -Generating unique operation named: saveUsingPOST_3
2019-03-14 08:24:33 -Generating unique operation named: updateUsingGET_3
2019-03-14 08:24:33 -Generating unique operation named: updateUsingHEAD_3
2019-03-14 08:24:33 -Generating unique operation named: updateUsingPOST_3
2019-03-14 08:24:33 -Generating unique operation named: updateUsingPUT_3
2019-03-14 08:24:33 -Generating unique operation named: updateUsingPATCH_3
2019-03-14 08:24:33 -Generating unique operation named: updateUsingDELETE_3
2019-03-14 08:24:33 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-14 08:24:33 -Generating unique operation named: updateUsingTRACE_3
2019-03-14 08:24:33 -Generating unique operation named: addUsingGET_4
2019-03-14 08:24:33 -Generating unique operation named: editUsingGET_4
2019-03-14 08:24:33 -Generating unique operation named: listUsingGET_4
2019-03-14 08:24:33 -Generating unique operation named: removeUsingPOST_8
2019-03-14 08:24:33 -Generating unique operation named: removeUsingPOST_9
2019-03-14 08:24:33 -Generating unique operation named: saveUsingPOST_4
2019-03-14 08:24:33 -Generating unique operation named: updateUsingGET_4
2019-03-14 08:24:33 -Generating unique operation named: updateUsingHEAD_4
2019-03-14 08:24:33 -Generating unique operation named: updateUsingPOST_4
2019-03-14 08:24:33 -Generating unique operation named: updateUsingPUT_4
2019-03-14 08:24:33 -Generating unique operation named: updateUsingPATCH_4
2019-03-14 08:24:33 -Generating unique operation named: updateUsingDELETE_4
2019-03-14 08:24:33 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-14 08:24:33 -Generating unique operation named: updateUsingTRACE_4
2019-03-14 08:24:33 -Generating unique operation named: ElecUsingGET_1
2019-03-14 08:24:33 -Generating unique operation named: addUsingGET_5
2019-03-14 08:24:34 -Generating unique operation named: editUsingGET_5
2019-03-14 08:24:34 -Generating unique operation named: listUsingGET_5
2019-03-14 08:24:34 -Generating unique operation named: removeUsingPOST_10
2019-03-14 08:24:34 -Generating unique operation named: removeUsingPOST_11
2019-03-14 08:24:34 -Generating unique operation named: saveUsingPOST_5
2019-03-14 08:24:34 -Generating unique operation named: updateUsingGET_5
2019-03-14 08:24:34 -Generating unique operation named: updateUsingHEAD_5
2019-03-14 08:24:34 -Generating unique operation named: updateUsingPOST_5
2019-03-14 08:24:34 -Generating unique operation named: updateUsingPUT_5
2019-03-14 08:24:34 -Generating unique operation named: updateUsingPATCH_5
2019-03-14 08:24:34 -Generating unique operation named: updateUsingDELETE_5
2019-03-14 08:24:34 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-14 08:24:34 -Generating unique operation named: updateUsingTRACE_5
2019-03-14 08:24:34 -Generating unique operation named: editUsingGET_6
2019-03-14 08:24:34 -Generating unique operation named: listUsingGET_6
2019-03-14 08:24:34 -Generating unique operation named: updateUsingPOST_6
2019-03-14 08:24:34 -Generating unique operation named: addUsingGET_6
2019-03-14 08:24:34 -Generating unique operation named: editUsingGET_7
2019-03-14 08:24:34 -Generating unique operation named: listUsingGET_7
2019-03-14 08:24:34 -Generating unique operation named: removeUsingPOST_12
2019-03-14 08:24:34 -Generating unique operation named: removeUsingPOST_13
2019-03-14 08:24:34 -Generating unique operation named: saveUsingPOST_6
2019-03-14 08:24:34 -Generating unique operation named: updateUsingGET_6
2019-03-14 08:24:34 -Generating unique operation named: updateUsingHEAD_6
2019-03-14 08:24:34 -Generating unique operation named: updateUsingPOST_7
2019-03-14 08:24:34 -Generating unique operation named: updateUsingPUT_6
2019-03-14 08:24:34 -Generating unique operation named: updateUsingPATCH_6
2019-03-14 08:24:34 -Generating unique operation named: updateUsingDELETE_6
2019-03-14 08:24:34 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-14 08:24:34 -Generating unique operation named: updateUsingTRACE_6
2019-03-14 08:24:34 -Generating unique operation named: addUsingGET_7
2019-03-14 08:24:34 -Generating unique operation named: editUsingGET_8
2019-03-14 08:24:34 -Generating unique operation named: listUsingGET_8
2019-03-14 08:24:34 -Generating unique operation named: removeUsingPOST_14
2019-03-14 08:24:34 -Generating unique operation named: removeUsingPOST_15
2019-03-14 08:24:34 -Generating unique operation named: saveUsingPOST_7
2019-03-14 08:24:34 -Generating unique operation named: updateUsingGET_7
2019-03-14 08:24:34 -Generating unique operation named: updateUsingHEAD_7
2019-03-14 08:24:34 -Generating unique operation named: updateUsingPOST_8
2019-03-14 08:24:34 -Generating unique operation named: updateUsingPUT_7
2019-03-14 08:24:34 -Generating unique operation named: updateUsingPATCH_7
2019-03-14 08:24:34 -Generating unique operation named: updateUsingDELETE_7
2019-03-14 08:24:34 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-14 08:24:34 -Generating unique operation named: updateUsingTRACE_7
2019-03-14 08:24:34 -Generating unique operation named: addUsingGET_8
2019-03-14 08:24:34 -Generating unique operation named: editUsingGET_9
2019-03-14 08:24:34 -Generating unique operation named: listUsingGET_9
2019-03-14 08:24:34 -Generating unique operation named: removeUsingPOST_16
2019-03-14 08:24:34 -Generating unique operation named: removeUsingPOST_17
2019-03-14 08:24:34 -Generating unique operation named: saveUsingPOST_8
2019-03-14 08:24:34 -Generating unique operation named: updateUsingGET_8
2019-03-14 08:24:34 -Generating unique operation named: updateUsingHEAD_8
2019-03-14 08:24:34 -Generating unique operation named: updateUsingPOST_9
2019-03-14 08:24:34 -Generating unique operation named: updateUsingPUT_8
2019-03-14 08:24:34 -Generating unique operation named: updateUsingPATCH_8
2019-03-14 08:24:34 -Generating unique operation named: updateUsingDELETE_8
2019-03-14 08:24:34 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-14 08:24:34 -Generating unique operation named: updateUsingTRACE_8
2019-03-14 08:24:34 -Generating unique operation named: addUsingGET_9
2019-03-14 08:24:34 -Generating unique operation named: editUsingGET_10
2019-03-14 08:24:34 -Generating unique operation named: listUsingGET_10
2019-03-14 08:24:34 -Generating unique operation named: removeUsingPOST_18
2019-03-14 08:24:34 -Generating unique operation named: removeUsingPOST_19
2019-03-14 08:24:34 -Generating unique operation named: saveUsingPOST_9
2019-03-14 08:24:34 -Generating unique operation named: updateUsingGET_9
2019-03-14 08:24:34 -Generating unique operation named: updateUsingHEAD_9
2019-03-14 08:24:34 -Generating unique operation named: updateUsingPOST_10
2019-03-14 08:24:34 -Generating unique operation named: updateUsingPUT_9
2019-03-14 08:24:34 -Generating unique operation named: updateUsingPATCH_9
2019-03-14 08:24:34 -Generating unique operation named: updateUsingDELETE_9
2019-03-14 08:24:34 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-14 08:24:34 -Generating unique operation named: updateUsingTRACE_9
2019-03-14 08:24:34 -Generating unique operation named: addUsingGET_10
2019-03-14 08:24:34 -Generating unique operation named: editUsingGET_11
2019-03-14 08:24:34 -Generating unique operation named: infoUsingGET_1
2019-03-14 08:24:34 -Generating unique operation named: infoUsingHEAD_1
2019-03-14 08:24:34 -Generating unique operation named: infoUsingPOST_1
2019-03-14 08:24:34 -Generating unique operation named: infoUsingPUT_1
2019-03-14 08:24:34 -Generating unique operation named: infoUsingPATCH_1
2019-03-14 08:24:34 -Generating unique operation named: infoUsingDELETE_1
2019-03-14 08:24:34 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-14 08:24:34 -Generating unique operation named: infoUsingTRACE_1
2019-03-14 08:24:34 -Generating unique operation named: listUsingGET_11
2019-03-14 08:24:34 -Generating unique operation named: removeUsingPOST_20
2019-03-14 08:24:34 -Generating unique operation named: removeUsingPOST_21
2019-03-14 08:24:34 -Generating unique operation named: saveUsingPOST_10
2019-03-14 08:24:34 -Generating unique operation named: updateUsingPOST_11
2019-03-14 08:24:34 -Generating unique operation named: listUsingGET_12
2019-03-14 08:24:34 -Generating unique operation named: removeUsingPOST_22
2019-03-14 08:24:34 -Generating unique operation named: welcomeUsingGET_1
2019-03-14 08:24:34 -Generating unique operation named: addUsingGET_11
2019-03-14 08:24:34 -Generating unique operation named: editUsingGET_12
2019-03-14 08:24:34 -Generating unique operation named: listUsingGET_13
2019-03-14 08:24:34 -Generating unique operation named: removeUsingPOST_23
2019-03-14 08:24:34 -Generating unique operation named: saveUsingPOST_11
2019-03-14 08:24:34 -Generating unique operation named: treeUsingGET_1
2019-03-14 08:24:34 -Generating unique operation named: treeUsingGET_2
2019-03-14 08:24:34 -Generating unique operation named: updateUsingPOST_12
2019-03-14 08:24:34 -Generating unique operation named: addUsingGET_12
2019-03-14 08:24:34 -Generating unique operation named: editUsingGET_13
2019-03-14 08:24:34 -Generating unique operation named: listUsingGET_14
2019-03-14 08:24:34 -Generating unique operation named: removeUsingPOST_24
2019-03-14 08:24:34 -Generating unique operation named: removeUsingPOST_25
2019-03-14 08:24:34 -Generating unique operation named: saveUsingPOST_12
2019-03-14 08:24:34 -Generating unique operation named: updateUsingGET_10
2019-03-14 08:24:34 -Generating unique operation named: updateUsingHEAD_10
2019-03-14 08:24:34 -Generating unique operation named: updateUsingPOST_13
2019-03-14 08:24:34 -Generating unique operation named: updateUsingPUT_10
2019-03-14 08:24:34 -Generating unique operation named: updateUsingPATCH_10
2019-03-14 08:24:34 -Generating unique operation named: updateUsingDELETE_10
2019-03-14 08:24:34 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-14 08:24:34 -Generating unique operation named: updateUsingTRACE_10
2019-03-14 08:24:34 -Generating unique operation named: addUsingGET_13
2019-03-14 08:24:34 -Generating unique operation named: editUsingGET_14
2019-03-14 08:24:34 -Generating unique operation named: listUsingGET_15
2019-03-14 08:24:34 -Generating unique operation named: removeUsingPOST_26
2019-03-14 08:24:34 -Generating unique operation named: removeUsingPOST_27
2019-03-14 08:24:34 -Generating unique operation named: saveUsingPOST_13
2019-03-14 08:24:34 -Generating unique operation named: updateUsingGET_11
2019-03-14 08:24:34 -Generating unique operation named: updateUsingHEAD_11
2019-03-14 08:24:34 -Generating unique operation named: updateUsingPOST_14
2019-03-14 08:24:34 -Generating unique operation named: updateUsingPUT_11
2019-03-14 08:24:34 -Generating unique operation named: updateUsingPATCH_11
2019-03-14 08:24:34 -Generating unique operation named: updateUsingDELETE_11
2019-03-14 08:24:34 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-14 08:24:34 -Generating unique operation named: updateUsingTRACE_11
2019-03-14 08:24:34 -Generating unique operation named: addUsingGET_14
2019-03-14 08:24:34 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-14 08:24:34 -Generating unique operation named: editUsingGET_15
2019-03-14 08:24:35 -Generating unique operation named: listUsingGET_16
2019-03-14 08:24:35 -Generating unique operation named: saveUsingPOST_14
2019-03-14 08:24:35 -Generating unique operation named: saveUsingPOST_15
2019-03-14 08:24:35 -Generating unique operation named: updateUsingPOST_15
2019-03-14 08:24:35 -Generating unique operation named: listUsingGET_17
2019-03-14 08:24:35 -Generating unique operation named: listUsingHEAD_1
2019-03-14 08:24:35 -Generating unique operation named: listUsingPOST_1
2019-03-14 08:24:35 -Generating unique operation named: listUsingPUT_1
2019-03-14 08:24:35 -Generating unique operation named: listUsingPATCH_1
2019-03-14 08:24:35 -Generating unique operation named: listUsingDELETE_1
2019-03-14 08:24:35 -Generating unique operation named: listUsingOPTIONS_1
2019-03-14 08:24:35 -Generating unique operation named: listUsingTRACE_1
2019-03-14 08:24:35 -Generating unique operation named: addUsingGET_15
2019-03-14 08:24:35 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-14 08:24:35 -Generating unique operation named: editUsingGET_16
2019-03-14 08:24:35 -Generating unique operation named: listUsingGET_18
2019-03-14 08:24:35 -Generating unique operation named: removeUsingPOST_28
2019-03-14 08:24:35 -Generating unique operation named: saveUsingPOST_16
2019-03-14 08:24:35 -Generating unique operation named: treeUsingGET_3
2019-03-14 08:24:35 -Generating unique operation named: treeViewUsingGET_1
2019-03-14 08:24:35 -Generating unique operation named: updateUsingPOST_16
2019-03-14 08:24:35 -Generating unique operation named: addUsingGET_16
2019-03-14 08:24:35 -Generating unique operation named: editUsingGET_17
2019-03-14 08:24:35 -Generating unique operation named: listUsingGET_19
2019-03-14 08:24:35 -Generating unique operation named: removeUsingPOST_29
2019-03-14 08:24:35 -Generating unique operation named: removeUsingPOST_30
2019-03-14 08:24:35 -Generating unique operation named: saveUsingPOST_17
2019-03-14 08:24:35 -Generating unique operation named: updateUsingGET_12
2019-03-14 08:24:35 -Generating unique operation named: updateUsingHEAD_12
2019-03-14 08:24:35 -Generating unique operation named: updateUsingPOST_17
2019-03-14 08:24:35 -Generating unique operation named: updateUsingPUT_12
2019-03-14 08:24:35 -Generating unique operation named: updateUsingPATCH_12
2019-03-14 08:24:35 -Generating unique operation named: updateUsingDELETE_12
2019-03-14 08:24:35 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-14 08:24:35 -Generating unique operation named: updateUsingTRACE_12
2019-03-14 08:24:35 -Generating unique operation named: addUsingGET_17
2019-03-14 08:24:35 -Generating unique operation named: editUsingGET_18
2019-03-14 08:24:35 -Generating unique operation named: listUsingGET_20
2019-03-14 08:24:35 -Generating unique operation named: removeUsingPOST_31
2019-03-14 08:24:35 -Generating unique operation named: removeUsingPOST_32
2019-03-14 08:24:35 -Generating unique operation named: saveUsingPOST_18
2019-03-14 08:24:35 -Generating unique operation named: updateUsingGET_13
2019-03-14 08:24:35 -Generating unique operation named: updateUsingHEAD_13
2019-03-14 08:24:35 -Generating unique operation named: updateUsingPOST_18
2019-03-14 08:24:35 -Generating unique operation named: updateUsingPUT_13
2019-03-14 08:24:35 -Generating unique operation named: updateUsingPATCH_13
2019-03-14 08:24:35 -Generating unique operation named: updateUsingDELETE_13
2019-03-14 08:24:35 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-14 08:24:35 -Generating unique operation named: updateUsingTRACE_13
2019-03-14 08:24:35 -Generating unique operation named: addUsingGET_18
2019-03-14 08:24:35 -Generating unique operation named: editUsingGET_19
2019-03-14 08:24:35 -Generating unique operation named: listUsingGET_21
2019-03-14 08:24:35 -Generating unique operation named: removeUsingPOST_33
2019-03-14 08:24:35 -Generating unique operation named: removeUsingPOST_34
2019-03-14 08:24:35 -Generating unique operation named: saveUsingPOST_19
2019-03-14 08:24:35 -Generating unique operation named: updateUsingGET_14
2019-03-14 08:24:35 -Generating unique operation named: updateUsingHEAD_14
2019-03-14 08:24:35 -Generating unique operation named: updateUsingPOST_19
2019-03-14 08:24:35 -Generating unique operation named: updateUsingPUT_14
2019-03-14 08:24:35 -Generating unique operation named: updateUsingPATCH_14
2019-03-14 08:24:35 -Generating unique operation named: updateUsingDELETE_14
2019-03-14 08:24:35 -Generating unique operation named: updateUsingOPTIONS_14
2019-03-14 08:24:35 -Generating unique operation named: updateUsingTRACE_14
2019-03-14 08:24:35 -Generating unique operation named: addUsingGET_19
2019-03-14 08:24:35 -Generating unique operation named: editUsingGET_20
2019-03-14 08:24:35 -Generating unique operation named: listUsingGET_22
2019-03-14 08:24:35 -Generating unique operation named: removeUsingPOST_35
2019-03-14 08:24:35 -Generating unique operation named: removeUsingPOST_36
2019-03-14 08:24:35 -Generating unique operation named: saveUsingPOST_20
2019-03-14 08:24:35 -Generating unique operation named: updateUsingGET_15
2019-03-14 08:24:35 -Generating unique operation named: updateUsingHEAD_15
2019-03-14 08:24:35 -Generating unique operation named: updateUsingPOST_20
2019-03-14 08:24:35 -Generating unique operation named: updateUsingPUT_15
2019-03-14 08:24:35 -Generating unique operation named: updateUsingPATCH_15
2019-03-14 08:24:35 -Generating unique operation named: updateUsingDELETE_15
2019-03-14 08:24:35 -Generating unique operation named: updateUsingOPTIONS_15
2019-03-14 08:24:35 -Generating unique operation named: updateUsingTRACE_15
2019-03-14 08:24:35 -Starting Quartz Scheduler now
2019-03-14 08:24:35 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-14 08:24:35 -Starting...
2019-03-14 08:24:35 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-14 08:24:35 -Started.
2019-03-14 08:24:35 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-14 08:24:35 -Using a shared selector for servlet write/read
2019-03-14 08:24:35 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-14 08:24:35 -Started BootdoApplication in 29.454 seconds (JVM running for 31.044)
2019-03-14 08:24:35 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-14 08:24:35 -==> Parameters: 
2019-03-14 08:24:36 -<==      Total: 1
2019-03-14 08:25:15 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-14 08:25:15 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-14 08:25:15 -FrameworkServlet 'dispatcherServlet': initialization completed in 77 ms
2019-03-14 08:25:15 -Enabling session validation scheduler...
2019-03-14 08:25:15 -请求地址 : http://localhost:8081/
2019-03-14 08:25:15 -HTTP METHOD : GET
2019-03-14 08:25:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-03-14 08:25:15 -参数 : [{}]
2019-03-14 08:25:15 -耗时 : 4
2019-03-14 08:25:15 -返回值 : redirect:/index
2019-03-14 08:25:15 -请求地址 : http://localhost:8081/login;JSESSIONID=adc73edc-380c-47ee-be75-53d922b37660
2019-03-14 08:25:15 -HTTP METHOD : GET
2019-03-14 08:25:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-14 08:25:15 -参数 : [{}]
2019-03-14 08:25:15 -耗时 : 1
2019-03-14 08:25:15 -返回值 : login
2019-03-14 08:25:17 -请求地址 : http://localhost:8081/getVerify
2019-03-14 08:25:17 -HTTP METHOD : GET
2019-03-14 08:25:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-14 08:25:17 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7d88e61c, org.apache.shiro.web.servlet.ShiroHttpServletResponse@388a77c9]
2019-03-14 08:25:17 -2532
2019-03-14 08:25:17 -耗时 : 647
2019-03-14 08:25:17 -返回值 : null
2019-03-14 08:25:17 -请求地址 : http://localhost:8081/login
2019-03-14 08:25:17 -HTTP METHOD : GET
2019-03-14 08:25:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-14 08:25:17 -参数 : [{}]
2019-03-14 08:25:17 -耗时 : 0
2019-03-14 08:25:17 -返回值 : login
2019-03-14 08:25:24 -请求地址 : http://localhost:8081/login
2019-03-14 08:25:24 -HTTP METHOD : POST
2019-03-14 08:25:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-14 08:25:24 -参数 : [admin, 111111, 2532, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1676bd22]
2019-03-14 08:25:24 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-14 08:25:24 -==> Parameters: admin(String)
2019-03-14 08:25:24 -<==      Total: 1
2019-03-14 08:25:24 -耗时 : 139
2019-03-14 08:25:24 -返回值 : {msg=操作成功, code=0}
2019-03-14 08:25:24 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-14 08:25:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 08:25:24 -==> Parameters: 1(Long), admin(String), 登录(String), 141(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-14 08:25:24.321(Timestamp)
2019-03-14 08:25:24 -请求地址 : http://localhost:8081/index
2019-03-14 08:25:24 -HTTP METHOD : GET
2019-03-14 08:25:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 08:25:24 -参数 : [{}]
2019-03-14 08:25:24 -<==    Updates: 1
2019-03-14 08:25:24 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 08:25:24 -==> Parameters: 1(Long)
2019-03-14 08:25:24 -<==      Total: 45
2019-03-14 08:25:24 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 08:25:24 -==> Parameters: 138(Long)
2019-03-14 08:25:24 -<==      Total: 1
2019-03-14 08:25:24 -耗时 : 273
2019-03-14 08:25:24 -返回值 : index_v1
2019-03-14 08:25:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 08:25:24 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 273(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 08:25:24.734(Timestamp)
2019-03-14 08:25:24 -<==    Updates: 1
2019-03-14 08:25:24 -请求地址 : http://localhost:8081/main
2019-03-14 08:25:24 -HTTP METHOD : GET
2019-03-14 08:25:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 08:25:24 -参数 : []
2019-03-14 08:25:24 -耗时 : 1
2019-03-14 08:25:24 -返回值 : main
2019-03-14 08:25:25 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 08:25:25 -HTTP METHOD : GET
2019-03-14 08:25:25 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 08:25:25 -参数 : []
2019-03-14 08:25:25 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 08:25:25 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 08:25:25 -<==      Total: 0
2019-03-14 08:25:25 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 08:25:25 -==> Parameters: 1(Long), 0(String)
2019-03-14 08:25:25 -<==      Total: 1
2019-03-14 08:25:25 -耗时 : 42
2019-03-14 08:25:25 -返回值 : com.bootdo.common.utils.PageUtils@22f57fd5
2019-03-14 08:25:25 -请求地址 : http://localhost:8081/main
2019-03-14 08:25:25 -HTTP METHOD : GET
2019-03-14 08:25:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 08:25:25 -参数 : []
2019-03-14 08:25:25 -耗时 : 1
2019-03-14 08:25:25 -返回值 : main
2019-03-14 08:25:28 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1]
2019-03-14 08:25:55 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-14 08:25:55 -==> Parameters: 1(Long)
2019-03-14 08:25:55 -<==      Total: 86
2019-03-14 08:25:55 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 08:25:55 -HTTP METHOD : GET
2019-03-14 08:25:55 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 08:25:55 -参数 : []
2019-03-14 08:25:55 -耗时 : 1
2019-03-14 08:25:55 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 08:25:56 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 08:25:56 -HTTP METHOD : GET
2019-03-14 08:25:56 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 08:25:56 -参数 : [{limit=10, offset=0}]
2019-03-14 08:25:56 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-14 08:25:56 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 08:25:56 -{conn-10001, pstmt-20008} execute error. select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log
          
         
                order by id asc
			 
		 
			limit ?, ?
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:46)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$ccffa515.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-14 08:25:56 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-03-14 08:25:56 -SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2019-03-14 08:25:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 08:25:56 -
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:46)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$ccffa515.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 105 common frames omitted
2019-03-14 08:25:56 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/elecLog/list(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'(String), null, 2019-03-14 08:25:56.392(Timestamp)
2019-03-14 08:25:56 -<==    Updates: 1
2019-03-14 08:25:56 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-14 08:25:56 -HTTP METHOD : GET
2019-03-14 08:25:56 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-14 08:25:56 -参数 : []
2019-03-14 08:25:56 -耗时 : 1
2019-03-14 08:25:56 -返回值 : /moneyLog/waterLog/waterLog
2019-03-14 08:25:56 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-14 08:25:56 -HTTP METHOD : GET
2019-03-14 08:25:56 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-14 08:25:56 -参数 : [{limit=10, offset=0}]
2019-03-14 08:25:56 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-14 08:25:56 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 08:25:56 -<==      Total: 3
2019-03-14 08:25:56 -==>  Preparing: select count(*) from water_log 
2019-03-14 08:25:56 -==> Parameters: 
2019-03-14 08:25:56 -<==      Total: 1
2019-03-14 08:25:56 -耗时 : 51
2019-03-14 08:25:56 -返回值 : com.bootdo.common.utils.PageUtils@b8a44d3
2019-03-14 08:26:46 -请求地址 : http://localhost:8081/index
2019-03-14 08:26:46 -HTTP METHOD : GET
2019-03-14 08:26:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 08:26:46 -参数 : [{}]
2019-03-14 08:26:46 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 08:26:46 -==> Parameters: 1(Long)
2019-03-14 08:26:46 -<==      Total: 45
2019-03-14 08:26:46 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 08:26:46 -==> Parameters: 138(Long)
2019-03-14 08:26:46 -<==      Total: 1
2019-03-14 08:26:46 -耗时 : 28
2019-03-14 08:26:46 -返回值 : index_v1
2019-03-14 08:26:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 08:26:46 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 08:26:46.298(Timestamp)
2019-03-14 08:26:46 -请求地址 : http://localhost:8081/main
2019-03-14 08:26:46 -HTTP METHOD : GET
2019-03-14 08:26:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 08:26:46 -参数 : []
2019-03-14 08:26:46 -耗时 : 8
2019-03-14 08:26:46 -返回值 : main
2019-03-14 08:26:46 -<==    Updates: 1
2019-03-14 08:26:46 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 08:26:46 -HTTP METHOD : GET
2019-03-14 08:26:46 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 08:26:46 -参数 : []
2019-03-14 08:26:46 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 08:26:46 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 08:26:46 -<==      Total: 0
2019-03-14 08:26:46 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 08:26:46 -==> Parameters: 1(Long), 0(String)
2019-03-14 08:26:46 -<==      Total: 1
2019-03-14 08:26:46 -耗时 : 11
2019-03-14 08:26:46 -返回值 : com.bootdo.common.utils.PageUtils@3c253da8
2019-03-14 08:26:46 -请求地址 : http://localhost:8081/main
2019-03-14 08:26:46 -HTTP METHOD : GET
2019-03-14 08:26:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 08:26:46 -参数 : []
2019-03-14 08:26:46 -耗时 : 1
2019-03-14 08:26:46 -返回值 : main
2019-03-14 08:26:50 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 08:26:50 -HTTP METHOD : GET
2019-03-14 08:26:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 08:26:50 -参数 : []
2019-03-14 08:26:50 -耗时 : 1
2019-03-14 08:26:50 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 08:26:50 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 08:26:50 -HTTP METHOD : GET
2019-03-14 08:26:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 08:26:50 -参数 : [{limit=10, offset=0}]
2019-03-14 08:26:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-14 08:26:50 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 08:26:50 -{conn-10001, pstmt-20011} execute error. select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log
          
         
                order by id asc
			 
		 
			limit ?, ?
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:46)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$ccffa515.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-14 08:26:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 08:26:50 -
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:46)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$ccffa515.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
2019-03-14 08:26:50 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/elecLog/list(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'(String), null, 2019-03-14 08:26:50.869(Timestamp)
2019-03-14 08:26:51 -<==    Updates: 1
2019-03-14 08:26:52 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-14 08:26:52 -HTTP METHOD : GET
2019-03-14 08:26:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-14 08:26:52 -参数 : []
2019-03-14 08:26:52 -耗时 : 0
2019-03-14 08:26:52 -返回值 : /moneyLog/waterLog/waterLog
2019-03-14 08:26:52 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-14 08:26:52 -HTTP METHOD : GET
2019-03-14 08:26:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-14 08:26:52 -参数 : [{limit=10, offset=0}]
2019-03-14 08:26:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-14 08:26:52 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 08:26:52 -<==      Total: 3
2019-03-14 08:26:52 -==>  Preparing: select count(*) from water_log 
2019-03-14 08:26:52 -==> Parameters: 
2019-03-14 08:26:52 -<==      Total: 1
2019-03-14 08:26:52 -耗时 : 10
2019-03-14 08:26:52 -返回值 : com.bootdo.common.utils.PageUtils@272c8ab2
2019-03-14 08:26:57 -请求地址 : http://localhost:8081/index
2019-03-14 08:26:57 -HTTP METHOD : GET
2019-03-14 08:26:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 08:26:57 -参数 : [{}]
2019-03-14 08:26:57 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 08:26:57 -==> Parameters: 1(Long)
2019-03-14 08:26:57 -<==      Total: 45
2019-03-14 08:26:57 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 08:26:57 -==> Parameters: 138(Long)
2019-03-14 08:26:57 -<==      Total: 1
2019-03-14 08:26:57 -耗时 : 46
2019-03-14 08:26:57 -返回值 : index_v1
2019-03-14 08:26:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 08:26:57 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 46(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 08:26:57.249(Timestamp)
2019-03-14 08:26:57 -请求地址 : http://localhost:8081/main
2019-03-14 08:26:57 -HTTP METHOD : GET
2019-03-14 08:26:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 08:26:57 -参数 : []
2019-03-14 08:26:57 -耗时 : 1
2019-03-14 08:26:57 -返回值 : main
2019-03-14 08:26:57 -<==    Updates: 1
2019-03-14 08:26:57 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 08:26:57 -HTTP METHOD : GET
2019-03-14 08:26:57 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 08:26:57 -参数 : []
2019-03-14 08:26:57 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 08:26:57 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 08:26:57 -<==      Total: 0
2019-03-14 08:26:57 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 08:26:57 -==> Parameters: 1(Long), 0(String)
2019-03-14 08:26:57 -<==      Total: 1
2019-03-14 08:26:57 -耗时 : 5
2019-03-14 08:26:57 -返回值 : com.bootdo.common.utils.PageUtils@68cc1641
2019-03-14 08:26:57 -请求地址 : http://localhost:8081/main
2019-03-14 08:26:57 -HTTP METHOD : GET
2019-03-14 08:26:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 08:26:57 -参数 : []
2019-03-14 08:26:57 -耗时 : 1
2019-03-14 08:26:57 -返回值 : main
2019-03-14 08:27:01 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 08:27:01 -HTTP METHOD : GET
2019-03-14 08:27:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 08:27:01 -参数 : []
2019-03-14 08:27:01 -耗时 : 0
2019-03-14 08:27:01 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 08:27:01 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 08:27:01 -HTTP METHOD : GET
2019-03-14 08:27:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 08:27:01 -参数 : [{limit=10, offset=0}]
2019-03-14 08:27:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-14 08:27:01 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 08:27:01 -{conn-10001, pstmt-20012} execute error. select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log
          
         
                order by id asc
			 
		 
			limit ?, ?
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:46)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$ccffa515.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-14 08:27:01 -
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:46)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$ccffa515.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
2019-03-14 08:27:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 08:27:01 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/elecLog/list(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'(String), null, 2019-03-14 08:27:01.308(Timestamp)
2019-03-14 08:27:01 -<==    Updates: 1
2019-03-14 08:27:02 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-14 08:27:02 -HTTP METHOD : GET
2019-03-14 08:27:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-14 08:27:02 -参数 : []
2019-03-14 08:27:02 -耗时 : 0
2019-03-14 08:27:02 -返回值 : /moneyLog/waterLog/waterLog
2019-03-14 08:27:02 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-14 08:27:02 -HTTP METHOD : GET
2019-03-14 08:27:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-14 08:27:02 -参数 : [{limit=10, offset=0}]
2019-03-14 08:27:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-14 08:27:02 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 08:27:02 -<==      Total: 3
2019-03-14 08:27:02 -==>  Preparing: select count(*) from water_log 
2019-03-14 08:27:02 -==> Parameters: 
2019-03-14 08:27:02 -<==      Total: 1
2019-03-14 08:27:02 -耗时 : 8
2019-03-14 08:27:02 -返回值 : com.bootdo.common.utils.PageUtils@4d5e34cd
2019-03-14 08:28:59 -请求地址 : http://localhost:8081/index
2019-03-14 08:28:59 -HTTP METHOD : GET
2019-03-14 08:28:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 08:28:59 -参数 : [{}]
2019-03-14 08:28:59 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 08:28:59 -==> Parameters: 1(Long)
2019-03-14 08:28:59 -<==      Total: 45
2019-03-14 08:28:59 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 08:28:59 -==> Parameters: 138(Long)
2019-03-14 08:28:59 -<==      Total: 1
2019-03-14 08:28:59 -耗时 : 33
2019-03-14 08:28:59 -返回值 : index_v1
2019-03-14 08:28:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 08:28:59 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 33(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 08:28:59.433(Timestamp)
2019-03-14 08:28:59 -请求地址 : http://localhost:8081/main
2019-03-14 08:28:59 -HTTP METHOD : GET
2019-03-14 08:28:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 08:28:59 -参数 : []
2019-03-14 08:28:59 -耗时 : 1
2019-03-14 08:28:59 -返回值 : main
2019-03-14 08:28:59 -<==    Updates: 1
2019-03-14 08:28:59 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 08:28:59 -HTTP METHOD : GET
2019-03-14 08:28:59 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 08:28:59 -参数 : []
2019-03-14 08:28:59 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 08:28:59 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 08:28:59 -<==      Total: 0
2019-03-14 08:28:59 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 08:28:59 -==> Parameters: 1(Long), 0(String)
2019-03-14 08:28:59 -<==      Total: 1
2019-03-14 08:28:59 -耗时 : 10
2019-03-14 08:28:59 -返回值 : com.bootdo.common.utils.PageUtils@11301a4a
2019-03-14 08:28:59 -请求地址 : http://localhost:8081/main
2019-03-14 08:28:59 -HTTP METHOD : GET
2019-03-14 08:28:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 08:28:59 -参数 : []
2019-03-14 08:28:59 -耗时 : 1
2019-03-14 08:28:59 -返回值 : main
2019-03-14 08:29:02 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 08:29:02 -HTTP METHOD : GET
2019-03-14 08:29:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 08:29:02 -参数 : []
2019-03-14 08:29:02 -耗时 : 0
2019-03-14 08:29:02 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 08:29:02 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 08:29:02 -HTTP METHOD : GET
2019-03-14 08:29:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 08:29:02 -参数 : [{limit=10, offset=0}]
2019-03-14 08:29:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-14 08:29:02 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 08:29:02 -{conn-10001, pstmt-20013} execute error. select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log
          
         
                order by id asc
			 
		 
			limit ?, ?
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor142.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:46)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$ccffa515.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-14 08:29:02 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 08:29:02 -
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:46)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$ccffa515.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor142.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
2019-03-14 08:29:02 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/elecLog/list(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'(String), null, 2019-03-14 08:29:02.369(Timestamp)
2019-03-14 08:29:02 -<==    Updates: 1
2019-03-14 08:29:03 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-14 08:29:03 -HTTP METHOD : GET
2019-03-14 08:29:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-14 08:29:03 -参数 : []
2019-03-14 08:29:03 -耗时 : 1
2019-03-14 08:29:03 -返回值 : /moneyLog/waterLog/waterLog
2019-03-14 08:29:48 -请求地址 : http://localhost:8081/index
2019-03-14 08:29:48 -HTTP METHOD : GET
2019-03-14 08:29:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 08:29:48 -参数 : [{}]
2019-03-14 08:29:48 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 08:29:48 -==> Parameters: 1(Long)
2019-03-14 08:29:48 -<==      Total: 45
2019-03-14 08:29:48 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 08:29:48 -==> Parameters: 138(Long)
2019-03-14 08:29:48 -<==      Total: 1
2019-03-14 08:29:48 -耗时 : 43
2019-03-14 08:29:48 -返回值 : index_v1
2019-03-14 08:29:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 08:29:48 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 43(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 08:29:48.684(Timestamp)
2019-03-14 08:29:48 -<==    Updates: 1
2019-03-14 08:29:48 -请求地址 : http://localhost:8081/main
2019-03-14 08:29:48 -HTTP METHOD : GET
2019-03-14 08:29:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 08:29:48 -参数 : []
2019-03-14 08:29:48 -耗时 : 0
2019-03-14 08:29:48 -返回值 : main
2019-03-14 08:29:49 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 08:29:49 -HTTP METHOD : GET
2019-03-14 08:29:49 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 08:29:49 -参数 : []
2019-03-14 08:29:49 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 08:29:49 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 08:29:49 -<==      Total: 0
2019-03-14 08:29:49 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 08:29:49 -==> Parameters: 1(Long), 0(String)
2019-03-14 08:29:49 -<==      Total: 1
2019-03-14 08:29:49 -耗时 : 6
2019-03-14 08:29:49 -返回值 : com.bootdo.common.utils.PageUtils@fd0959b
2019-03-14 08:29:49 -请求地址 : http://localhost:8081/main
2019-03-14 08:29:49 -HTTP METHOD : GET
2019-03-14 08:29:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 08:29:49 -参数 : []
2019-03-14 08:29:49 -耗时 : 1
2019-03-14 08:29:49 -返回值 : main
2019-03-14 08:29:51 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 08:29:51 -HTTP METHOD : GET
2019-03-14 08:29:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 08:29:51 -参数 : []
2019-03-14 08:29:51 -耗时 : 3
2019-03-14 08:29:51 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 08:29:51 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 08:29:51 -HTTP METHOD : GET
2019-03-14 08:29:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 08:29:51 -参数 : [{limit=10, offset=0}]
2019-03-14 08:29:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-14 08:29:51 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 08:29:51 -{conn-10001, pstmt-20014} execute error. select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log
          
         
                order by id asc
			 
		 
			limit ?, ?
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor142.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:46)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$ccffa515.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-14 08:29:51 -
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:21)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:46)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$ccffa515.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor142.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
2019-03-14 08:29:51 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 08:29:51 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/elecLog/list(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_area`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log                                      order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'user_area' in 'field list'(String), null, 2019-03-14 08:29:51.512(Timestamp)
2019-03-14 08:29:51 -<==    Updates: 1
2019-03-14 08:42:17 -Starting BootdoApplication on ZJZL-20180906VX with PID 7336 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-14 08:42:17 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-14 08:42:17 -The following profiles are active: dev
2019-03-14 08:42:18 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1c7fd41f: startup date [Thu Mar 14 08:42:18 CST 2019]; root of context hierarchy
2019-03-14 08:42:23 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-14 08:42:26 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$aabd9934] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 08:42:26 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$9d16c7db] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 08:42:27 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 08:42:28 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 08:42:28 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 08:42:28 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-14 08:42:28 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-14 08:42:28 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 08:42:28 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 08:42:28 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 08:42:29 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 08:42:30 -Tomcat initialized with port(s): 8081 (http)
2019-03-14 08:42:30 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-14 08:42:30 -Starting service [Tomcat]
2019-03-14 08:42:30 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-14 08:42:30 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;D:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-14 08:42:30 -Initializing Spring embedded WebApplicationContext
2019-03-14 08:42:30 -Root WebApplicationContext: initialization completed in 12635 ms
2019-03-14 08:42:32 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-14 08:42:32 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-14 08:42:32 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-14 08:42:32 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-14 08:42:32 -Filter xssFilter was not registered (disabled)
2019-03-14 08:42:32 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-14 08:42:32 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-14 08:42:32 -Servlet statViewServlet mapped to [/druid/*]
2019-03-14 08:42:32 -Servlet dispatcherServlet mapped to [/]
2019-03-14 08:42:35 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1c7fd41f: startup date [Thu Mar 14 08:42:18 CST 2019]; root of context hierarchy
2019-03-14 08:42:36 -Using default implementation for ThreadExecutor
2019-03-14 08:42:36 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-14 08:42:36 -Quartz Scheduler v.2.2.1 created.
2019-03-14 08:42:36 -RAMJobStore initialized.
2019-03-14 08:42:36 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-14 08:42:36 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-14 08:42:36 -Quartz scheduler version: 2.2.1
2019-03-14 08:42:36 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@45f95ac0
2019-03-14 08:42:37 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-14 08:42:37 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-14 08:42:41 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-14 08:42:41 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-14 08:42:41 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-14 08:42:41 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-14 08:42:41 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-14 08:42:41 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-14 08:42:41 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-14 08:42:41 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-14 08:42:41 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-14 08:42:41 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:42:41 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-14 08:42:41 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-14 08:42:41 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:42:41 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-14 08:42:41 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-14 08:42:41 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-14 08:42:41 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-14 08:42:41 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-14 08:42:41 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-14 08:42:41 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-14 08:42:41 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:42:41 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-14 08:42:41 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-14 08:42:41 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:42:41 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-14 08:42:41 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-14 08:42:41 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:42:41 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-14 08:42:41 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-14 08:42:41 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-14 08:42:41 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-14 08:42:41 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-14 08:42:41 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-14 08:42:41 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-14 08:42:41 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-14 08:42:41 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-14 08:42:41 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:42:41 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-14 08:42:41 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-14 08:42:41 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:42:41 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-14 08:42:41 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-14 08:42:41 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-14 08:42:41 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-14 08:42:41 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:42:41 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-14 08:42:41 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-14 08:42:41 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-14 08:42:41 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-14 08:42:41 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-14 08:42:41 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-14 08:42:41 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-14 08:42:41 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-14 08:42:41 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-14 08:42:41 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-14 08:42:41 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:42:41 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-14 08:42:41 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2019-03-14 08:42:41 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-14 08:42:41 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-14 08:42:41 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-14 08:42:41 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-14 08:42:41 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-14 08:42:41 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-14 08:42:41 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:42:41 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-14 08:42:41 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-14 08:42:41 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:42:41 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-14 08:42:41 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-14 08:42:41 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-14 08:42:41 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-14 08:42:41 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-14 08:42:41 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-14 08:42:41 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:42:41 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-14 08:42:41 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-14 08:42:41 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-14 08:42:41 -Mapped "{[/heat/heatCost/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.add()
2019-03-14 08:42:41 -Mapped "{[/heat/heatCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.remove(java.lang.Long)
2019-03-14 08:42:41 -Mapped "{[/heat/heatCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.remove(java.lang.Long[])
2019-03-14 08:42:41 -Mapped "{[/heat/heatCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.update(com.bootdo.heat.domain.HeatCostDO)
2019-03-14 08:42:41 -Mapped "{[/heat/heatCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:42:41 -Mapped "{[/heat/heatCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.save(com.bootdo.heat.domain.HeatCostDO)
2019-03-14 08:42:41 -Mapped "{[/heat/heatCost],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.HeatCost()
2019-03-14 08:42:41 -Mapped "{[/heat/heatCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:42:41 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-14 08:42:41 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-14 08:42:41 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-14 08:42:41 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-14 08:42:41 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-14 08:42:41 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:42:41 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-14 08:42:41 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-14 08:42:41 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:42:41 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-14 08:42:41 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-03-14 08:42:41 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-14 08:42:41 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-14 08:42:41 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-14 08:42:41 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-14 08:42:41 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-14 08:42:41 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:42:41 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-14 08:42:41 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-14 08:42:41 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:42:41 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-14 08:42:41 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-14 08:42:41 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-14 08:42:41 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-14 08:42:41 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:42:41 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-14 08:42:41 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-14 08:42:41 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:42:41 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-14 08:42:41 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-14 08:42:41 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-14 08:42:41 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-14 08:42:41 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:42:41 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-14 08:42:41 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-14 08:42:41 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:42:41 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-14 08:42:41 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-14 08:42:41 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-14 08:42:41 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-14 08:42:41 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:42:41 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:42:41 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-14 08:42:41 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-14 08:42:41 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-14 08:42:41 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-14 08:42:41 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:42:41 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:42:41 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-14 08:42:41 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-14 08:42:41 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-14 08:42:41 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-14 08:42:41 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:42:41 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-14 08:42:41 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-14 08:42:41 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:42:41 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:42:41 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:42:41 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-14 08:42:41 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-14 08:42:41 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-14 08:42:41 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-14 08:42:41 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-14 08:42:41 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-14 08:42:41 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-14 08:42:41 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-14 08:42:41 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:42:41 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-14 08:42:41 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-14 08:42:41 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-14 08:42:41 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-14 08:42:41 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-14 08:42:41 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-14 08:42:41 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-14 08:42:41 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-14 08:42:41 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-14 08:42:41 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-14 08:42:41 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:42:41 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-14 08:42:41 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-14 08:42:41 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-14 08:42:41 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-14 08:42:41 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-14 08:42:41 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-14 08:42:41 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-14 08:42:41 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-14 08:42:41 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-14 08:42:41 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-14 08:42:41 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-14 08:42:41 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-14 08:42:41 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:42:41 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-14 08:42:41 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-14 08:42:41 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-14 08:42:41 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-14 08:42:41 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:42:41 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-14 08:42:41 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-14 08:42:41 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-14 08:42:41 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:42:41 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-14 08:42:41 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-14 08:42:41 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-14 08:42:41 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-14 08:42:41 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:42:41 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-14 08:42:41 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-14 08:42:41 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-14 08:42:41 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-14 08:42:41 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-14 08:42:41 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-14 08:42:41 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-14 08:42:41 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-14 08:42:41 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-14 08:42:41 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-14 08:42:41 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-14 08:42:41 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-14 08:42:41 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:42:41 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-14 08:42:41 -Mapped "{[/water/water/queryWater],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.queryWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:42:41 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-14 08:42:41 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:42:41 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:42:41 -Mapped "{[/water/waterCost/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.add()
2019-03-14 08:42:41 -Mapped "{[/water/waterCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long)
2019-03-14 08:42:41 -Mapped "{[/water/waterCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long[])
2019-03-14 08:42:41 -Mapped "{[/water/waterCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.update(com.bootdo.water.domain.WaterCostDO)
2019-03-14 08:42:41 -Mapped "{[/water/waterCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:42:41 -Mapped "{[/water/waterCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.save(com.bootdo.water.domain.WaterCostDO)
2019-03-14 08:42:41 -Mapped "{[/water/waterCost],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.WaterCost()
2019-03-14 08:42:41 -Mapped "{[/water/waterCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:42:41 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2019-03-14 08:42:41 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-14 08:42:41 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-14 08:42:41 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-14 08:42:41 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-14 08:42:41 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-14 08:42:41 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:42:41 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-14 08:42:41 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-14 08:42:41 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:42:41 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-14 08:42:41 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:42:41 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-14 08:42:41 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-14 08:42:41 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-14 08:42:41 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-14 08:42:42 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-14 08:42:42 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-14 08:42:42 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-14 08:42:43 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-14 08:42:44 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1c7fd41f: startup date [Thu Mar 14 08:42:18 CST 2019]; root of context hierarchy
2019-03-14 08:42:44 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-14 08:42:44 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-14 08:42:44 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-14 08:42:44 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-14 08:42:44 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-14 08:42:47 -Registering beans for JMX exposure on startup
2019-03-14 08:42:47 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-14 08:42:47 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-14 08:42:47 -Starting beans in phase 2147483647
2019-03-14 08:42:47 -Context refreshed
2019-03-14 08:42:48 -Found 1 custom documentation plugin(s)
2019-03-14 08:42:48 -Scanning for api listing references
2019-03-14 08:42:48 -Generating unique operation named: removeUsingPOST_1
2019-03-14 08:42:48 -Generating unique operation named: addUsingGET_1
2019-03-14 08:42:48 -Generating unique operation named: editUsingGET_1
2019-03-14 08:42:48 -Generating unique operation named: listUsingGET_1
2019-03-14 08:42:48 -Generating unique operation named: removeUsingPOST_2
2019-03-14 08:42:48 -Generating unique operation named: removeUsingPOST_3
2019-03-14 08:42:48 -Generating unique operation named: saveUsingPOST_1
2019-03-14 08:42:48 -Generating unique operation named: updateUsingGET_1
2019-03-14 08:42:48 -Generating unique operation named: updateUsingHEAD_1
2019-03-14 08:42:49 -Generating unique operation named: updateUsingPOST_1
2019-03-14 08:42:49 -Generating unique operation named: updateUsingPUT_1
2019-03-14 08:42:49 -Generating unique operation named: updateUsingPATCH_1
2019-03-14 08:42:49 -Generating unique operation named: updateUsingDELETE_1
2019-03-14 08:42:49 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-14 08:42:49 -Generating unique operation named: updateUsingTRACE_1
2019-03-14 08:42:49 -Generating unique operation named: addUsingGET_2
2019-03-14 08:42:49 -Generating unique operation named: editUsingGET_2
2019-03-14 08:42:49 -Generating unique operation named: listUsingGET_2
2019-03-14 08:42:49 -Generating unique operation named: removeUsingPOST_4
2019-03-14 08:42:49 -Generating unique operation named: removeUsingPOST_5
2019-03-14 08:42:49 -Generating unique operation named: saveUsingPOST_2
2019-03-14 08:42:49 -Generating unique operation named: updateUsingGET_2
2019-03-14 08:42:49 -Generating unique operation named: updateUsingHEAD_2
2019-03-14 08:42:49 -Generating unique operation named: updateUsingPOST_2
2019-03-14 08:42:49 -Generating unique operation named: updateUsingPUT_2
2019-03-14 08:42:49 -Generating unique operation named: updateUsingPATCH_2
2019-03-14 08:42:49 -Generating unique operation named: updateUsingDELETE_2
2019-03-14 08:42:49 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-14 08:42:49 -Generating unique operation named: updateUsingTRACE_2
2019-03-14 08:42:49 -Generating unique operation named: addUsingGET_3
2019-03-14 08:42:49 -Generating unique operation named: editUsingGET_3
2019-03-14 08:42:49 -Generating unique operation named: listUsingGET_3
2019-03-14 08:42:49 -Generating unique operation named: removeUsingPOST_6
2019-03-14 08:42:49 -Generating unique operation named: removeUsingPOST_7
2019-03-14 08:42:49 -Generating unique operation named: saveUsingPOST_3
2019-03-14 08:42:49 -Generating unique operation named: updateUsingGET_3
2019-03-14 08:42:49 -Generating unique operation named: updateUsingHEAD_3
2019-03-14 08:42:49 -Generating unique operation named: updateUsingPOST_3
2019-03-14 08:42:49 -Generating unique operation named: updateUsingPUT_3
2019-03-14 08:42:49 -Generating unique operation named: updateUsingPATCH_3
2019-03-14 08:42:49 -Generating unique operation named: updateUsingDELETE_3
2019-03-14 08:42:49 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-14 08:42:49 -Generating unique operation named: updateUsingTRACE_3
2019-03-14 08:42:49 -Generating unique operation named: addUsingGET_4
2019-03-14 08:42:49 -Generating unique operation named: editUsingGET_4
2019-03-14 08:42:49 -Generating unique operation named: listUsingGET_4
2019-03-14 08:42:49 -Generating unique operation named: removeUsingPOST_8
2019-03-14 08:42:49 -Generating unique operation named: removeUsingPOST_9
2019-03-14 08:42:49 -Generating unique operation named: saveUsingPOST_4
2019-03-14 08:42:49 -Generating unique operation named: updateUsingGET_4
2019-03-14 08:42:49 -Generating unique operation named: updateUsingHEAD_4
2019-03-14 08:42:49 -Generating unique operation named: updateUsingPOST_4
2019-03-14 08:42:49 -Generating unique operation named: updateUsingPUT_4
2019-03-14 08:42:49 -Generating unique operation named: updateUsingPATCH_4
2019-03-14 08:42:49 -Generating unique operation named: updateUsingDELETE_4
2019-03-14 08:42:49 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-14 08:42:49 -Generating unique operation named: updateUsingTRACE_4
2019-03-14 08:42:49 -Generating unique operation named: ElecUsingGET_1
2019-03-14 08:42:49 -Generating unique operation named: addUsingGET_5
2019-03-14 08:42:49 -Generating unique operation named: editUsingGET_5
2019-03-14 08:42:49 -Generating unique operation named: listUsingGET_5
2019-03-14 08:42:49 -Generating unique operation named: removeUsingPOST_10
2019-03-14 08:42:49 -Generating unique operation named: removeUsingPOST_11
2019-03-14 08:42:49 -Generating unique operation named: saveUsingPOST_5
2019-03-14 08:42:49 -Generating unique operation named: updateUsingGET_5
2019-03-14 08:42:49 -Generating unique operation named: updateUsingHEAD_5
2019-03-14 08:42:49 -Generating unique operation named: updateUsingPOST_5
2019-03-14 08:42:49 -Generating unique operation named: updateUsingPUT_5
2019-03-14 08:42:49 -Generating unique operation named: updateUsingPATCH_5
2019-03-14 08:42:49 -Generating unique operation named: updateUsingDELETE_5
2019-03-14 08:42:49 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-14 08:42:49 -Generating unique operation named: updateUsingTRACE_5
2019-03-14 08:42:49 -Generating unique operation named: editUsingGET_6
2019-03-14 08:42:49 -Generating unique operation named: listUsingGET_6
2019-03-14 08:42:49 -Generating unique operation named: updateUsingPOST_6
2019-03-14 08:42:49 -Generating unique operation named: addUsingGET_6
2019-03-14 08:42:49 -Generating unique operation named: editUsingGET_7
2019-03-14 08:42:49 -Generating unique operation named: listUsingGET_7
2019-03-14 08:42:49 -Generating unique operation named: removeUsingPOST_12
2019-03-14 08:42:49 -Generating unique operation named: removeUsingPOST_13
2019-03-14 08:42:49 -Generating unique operation named: saveUsingPOST_6
2019-03-14 08:42:49 -Generating unique operation named: updateUsingGET_6
2019-03-14 08:42:49 -Generating unique operation named: updateUsingHEAD_6
2019-03-14 08:42:49 -Generating unique operation named: updateUsingPOST_7
2019-03-14 08:42:49 -Generating unique operation named: updateUsingPUT_6
2019-03-14 08:42:49 -Generating unique operation named: updateUsingPATCH_6
2019-03-14 08:42:49 -Generating unique operation named: updateUsingDELETE_6
2019-03-14 08:42:49 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-14 08:42:49 -Generating unique operation named: updateUsingTRACE_6
2019-03-14 08:42:49 -Generating unique operation named: addUsingGET_7
2019-03-14 08:42:49 -Generating unique operation named: editUsingGET_8
2019-03-14 08:42:49 -Generating unique operation named: listUsingGET_8
2019-03-14 08:42:49 -Generating unique operation named: removeUsingPOST_14
2019-03-14 08:42:49 -Generating unique operation named: removeUsingPOST_15
2019-03-14 08:42:49 -Generating unique operation named: saveUsingPOST_7
2019-03-14 08:42:49 -Generating unique operation named: updateUsingGET_7
2019-03-14 08:42:50 -Generating unique operation named: updateUsingHEAD_7
2019-03-14 08:42:50 -Generating unique operation named: updateUsingPOST_8
2019-03-14 08:42:50 -Generating unique operation named: updateUsingPUT_7
2019-03-14 08:42:50 -Generating unique operation named: updateUsingPATCH_7
2019-03-14 08:42:50 -Generating unique operation named: updateUsingDELETE_7
2019-03-14 08:42:50 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-14 08:42:50 -Generating unique operation named: updateUsingTRACE_7
2019-03-14 08:42:50 -Generating unique operation named: addUsingGET_8
2019-03-14 08:42:50 -Generating unique operation named: editUsingGET_9
2019-03-14 08:42:50 -Generating unique operation named: listUsingGET_9
2019-03-14 08:42:50 -Generating unique operation named: removeUsingPOST_16
2019-03-14 08:42:50 -Generating unique operation named: removeUsingPOST_17
2019-03-14 08:42:50 -Generating unique operation named: saveUsingPOST_8
2019-03-14 08:42:50 -Generating unique operation named: updateUsingGET_8
2019-03-14 08:42:50 -Generating unique operation named: updateUsingHEAD_8
2019-03-14 08:42:50 -Generating unique operation named: updateUsingPOST_9
2019-03-14 08:42:50 -Generating unique operation named: updateUsingPUT_8
2019-03-14 08:42:50 -Generating unique operation named: updateUsingPATCH_8
2019-03-14 08:42:50 -Generating unique operation named: updateUsingDELETE_8
2019-03-14 08:42:50 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-14 08:42:50 -Generating unique operation named: updateUsingTRACE_8
2019-03-14 08:42:50 -Generating unique operation named: addUsingGET_9
2019-03-14 08:42:50 -Generating unique operation named: editUsingGET_10
2019-03-14 08:42:50 -Generating unique operation named: listUsingGET_10
2019-03-14 08:42:50 -Generating unique operation named: removeUsingPOST_18
2019-03-14 08:42:50 -Generating unique operation named: removeUsingPOST_19
2019-03-14 08:42:50 -Generating unique operation named: saveUsingPOST_9
2019-03-14 08:42:50 -Generating unique operation named: updateUsingGET_9
2019-03-14 08:42:50 -Generating unique operation named: updateUsingHEAD_9
2019-03-14 08:42:50 -Generating unique operation named: updateUsingPOST_10
2019-03-14 08:42:50 -Generating unique operation named: updateUsingPUT_9
2019-03-14 08:42:50 -Generating unique operation named: updateUsingPATCH_9
2019-03-14 08:42:50 -Generating unique operation named: updateUsingDELETE_9
2019-03-14 08:42:50 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-14 08:42:50 -Generating unique operation named: updateUsingTRACE_9
2019-03-14 08:42:50 -Generating unique operation named: addUsingGET_10
2019-03-14 08:42:50 -Generating unique operation named: editUsingGET_11
2019-03-14 08:42:50 -Generating unique operation named: infoUsingGET_1
2019-03-14 08:42:50 -Generating unique operation named: infoUsingHEAD_1
2019-03-14 08:42:50 -Generating unique operation named: infoUsingPOST_1
2019-03-14 08:42:50 -Generating unique operation named: infoUsingPUT_1
2019-03-14 08:42:50 -Generating unique operation named: infoUsingPATCH_1
2019-03-14 08:42:50 -Generating unique operation named: infoUsingDELETE_1
2019-03-14 08:42:50 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-14 08:42:50 -Generating unique operation named: infoUsingTRACE_1
2019-03-14 08:42:50 -Generating unique operation named: listUsingGET_11
2019-03-14 08:42:50 -Generating unique operation named: removeUsingPOST_20
2019-03-14 08:42:50 -Generating unique operation named: removeUsingPOST_21
2019-03-14 08:42:50 -Generating unique operation named: saveUsingPOST_10
2019-03-14 08:42:50 -Generating unique operation named: updateUsingPOST_11
2019-03-14 08:42:50 -Generating unique operation named: listUsingGET_12
2019-03-14 08:42:50 -Generating unique operation named: removeUsingPOST_22
2019-03-14 08:42:50 -Generating unique operation named: welcomeUsingGET_1
2019-03-14 08:42:50 -Generating unique operation named: addUsingGET_11
2019-03-14 08:42:50 -Generating unique operation named: editUsingGET_12
2019-03-14 08:42:50 -Generating unique operation named: listUsingGET_13
2019-03-14 08:42:50 -Generating unique operation named: removeUsingPOST_23
2019-03-14 08:42:50 -Generating unique operation named: saveUsingPOST_11
2019-03-14 08:42:50 -Generating unique operation named: treeUsingGET_1
2019-03-14 08:42:50 -Generating unique operation named: treeUsingGET_2
2019-03-14 08:42:50 -Generating unique operation named: updateUsingPOST_12
2019-03-14 08:42:50 -Generating unique operation named: addUsingGET_12
2019-03-14 08:42:50 -Generating unique operation named: editUsingGET_13
2019-03-14 08:42:50 -Generating unique operation named: listUsingGET_14
2019-03-14 08:42:50 -Generating unique operation named: removeUsingPOST_24
2019-03-14 08:42:50 -Generating unique operation named: removeUsingPOST_25
2019-03-14 08:42:50 -Generating unique operation named: saveUsingPOST_12
2019-03-14 08:42:50 -Generating unique operation named: updateUsingGET_10
2019-03-14 08:42:50 -Generating unique operation named: updateUsingHEAD_10
2019-03-14 08:42:50 -Generating unique operation named: updateUsingPOST_13
2019-03-14 08:42:50 -Generating unique operation named: updateUsingPUT_10
2019-03-14 08:42:50 -Generating unique operation named: updateUsingPATCH_10
2019-03-14 08:42:50 -Generating unique operation named: updateUsingDELETE_10
2019-03-14 08:42:50 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-14 08:42:50 -Generating unique operation named: updateUsingTRACE_10
2019-03-14 08:42:50 -Generating unique operation named: addUsingGET_13
2019-03-14 08:42:50 -Generating unique operation named: editUsingGET_14
2019-03-14 08:42:50 -Generating unique operation named: listUsingGET_15
2019-03-14 08:42:50 -Generating unique operation named: removeUsingPOST_26
2019-03-14 08:42:50 -Generating unique operation named: removeUsingPOST_27
2019-03-14 08:42:51 -Generating unique operation named: saveUsingPOST_13
2019-03-14 08:42:51 -Generating unique operation named: updateUsingGET_11
2019-03-14 08:42:51 -Generating unique operation named: updateUsingHEAD_11
2019-03-14 08:42:51 -Generating unique operation named: updateUsingPOST_14
2019-03-14 08:42:51 -Generating unique operation named: updateUsingPUT_11
2019-03-14 08:42:51 -Generating unique operation named: updateUsingPATCH_11
2019-03-14 08:42:51 -Generating unique operation named: updateUsingDELETE_11
2019-03-14 08:42:51 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-14 08:42:51 -Generating unique operation named: updateUsingTRACE_11
2019-03-14 08:42:51 -Generating unique operation named: addUsingGET_14
2019-03-14 08:42:51 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-14 08:42:51 -Generating unique operation named: editUsingGET_15
2019-03-14 08:42:51 -Generating unique operation named: listUsingGET_16
2019-03-14 08:42:51 -Generating unique operation named: saveUsingPOST_14
2019-03-14 08:42:51 -Generating unique operation named: saveUsingPOST_15
2019-03-14 08:42:51 -Generating unique operation named: updateUsingPOST_15
2019-03-14 08:42:51 -Generating unique operation named: listUsingGET_17
2019-03-14 08:42:51 -Generating unique operation named: listUsingHEAD_1
2019-03-14 08:42:51 -Generating unique operation named: listUsingPOST_1
2019-03-14 08:42:51 -Generating unique operation named: listUsingPUT_1
2019-03-14 08:42:51 -Generating unique operation named: listUsingPATCH_1
2019-03-14 08:42:51 -Generating unique operation named: listUsingDELETE_1
2019-03-14 08:42:51 -Generating unique operation named: listUsingOPTIONS_1
2019-03-14 08:42:51 -Generating unique operation named: listUsingTRACE_1
2019-03-14 08:42:51 -Generating unique operation named: addUsingGET_15
2019-03-14 08:42:51 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-14 08:42:51 -Generating unique operation named: editUsingGET_16
2019-03-14 08:42:51 -Generating unique operation named: listUsingGET_18
2019-03-14 08:42:51 -Generating unique operation named: removeUsingPOST_28
2019-03-14 08:42:51 -Generating unique operation named: saveUsingPOST_16
2019-03-14 08:42:51 -Generating unique operation named: treeUsingGET_3
2019-03-14 08:42:51 -Generating unique operation named: treeViewUsingGET_1
2019-03-14 08:42:51 -Generating unique operation named: updateUsingPOST_16
2019-03-14 08:42:51 -Generating unique operation named: addUsingGET_16
2019-03-14 08:42:51 -Generating unique operation named: editUsingGET_17
2019-03-14 08:42:51 -Generating unique operation named: listUsingGET_19
2019-03-14 08:42:51 -Generating unique operation named: removeUsingPOST_29
2019-03-14 08:42:51 -Generating unique operation named: removeUsingPOST_30
2019-03-14 08:42:51 -Generating unique operation named: saveUsingPOST_17
2019-03-14 08:42:51 -Generating unique operation named: updateUsingGET_12
2019-03-14 08:42:51 -Generating unique operation named: updateUsingHEAD_12
2019-03-14 08:42:51 -Generating unique operation named: updateUsingPOST_17
2019-03-14 08:42:51 -Generating unique operation named: updateUsingPUT_12
2019-03-14 08:42:51 -Generating unique operation named: updateUsingPATCH_12
2019-03-14 08:42:51 -Generating unique operation named: updateUsingDELETE_12
2019-03-14 08:42:51 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-14 08:42:51 -Generating unique operation named: updateUsingTRACE_12
2019-03-14 08:42:51 -Generating unique operation named: addUsingGET_17
2019-03-14 08:42:51 -Generating unique operation named: editUsingGET_18
2019-03-14 08:42:51 -Generating unique operation named: listUsingGET_20
2019-03-14 08:42:51 -Generating unique operation named: removeUsingPOST_31
2019-03-14 08:42:51 -Generating unique operation named: removeUsingPOST_32
2019-03-14 08:42:51 -Generating unique operation named: saveUsingPOST_18
2019-03-14 08:42:51 -Generating unique operation named: updateUsingGET_13
2019-03-14 08:42:51 -Generating unique operation named: updateUsingHEAD_13
2019-03-14 08:42:51 -Generating unique operation named: updateUsingPOST_18
2019-03-14 08:42:51 -Generating unique operation named: updateUsingPUT_13
2019-03-14 08:42:51 -Generating unique operation named: updateUsingPATCH_13
2019-03-14 08:42:51 -Generating unique operation named: updateUsingDELETE_13
2019-03-14 08:42:51 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-14 08:42:51 -Generating unique operation named: updateUsingTRACE_13
2019-03-14 08:42:51 -Generating unique operation named: addUsingGET_18
2019-03-14 08:42:51 -Generating unique operation named: editUsingGET_19
2019-03-14 08:42:51 -Generating unique operation named: listUsingGET_21
2019-03-14 08:42:51 -Generating unique operation named: removeUsingPOST_33
2019-03-14 08:42:51 -Generating unique operation named: removeUsingPOST_34
2019-03-14 08:42:51 -Generating unique operation named: saveUsingPOST_19
2019-03-14 08:42:51 -Generating unique operation named: updateUsingGET_14
2019-03-14 08:42:51 -Generating unique operation named: updateUsingHEAD_14
2019-03-14 08:42:51 -Generating unique operation named: updateUsingPOST_19
2019-03-14 08:42:51 -Generating unique operation named: updateUsingPUT_14
2019-03-14 08:42:51 -Generating unique operation named: updateUsingPATCH_14
2019-03-14 08:42:51 -Generating unique operation named: updateUsingDELETE_14
2019-03-14 08:42:51 -Generating unique operation named: updateUsingOPTIONS_14
2019-03-14 08:42:51 -Generating unique operation named: updateUsingTRACE_14
2019-03-14 08:42:51 -Generating unique operation named: addUsingGET_19
2019-03-14 08:42:51 -Generating unique operation named: editUsingGET_20
2019-03-14 08:42:51 -Generating unique operation named: listUsingGET_22
2019-03-14 08:42:51 -Generating unique operation named: removeUsingPOST_35
2019-03-14 08:42:51 -Generating unique operation named: removeUsingPOST_36
2019-03-14 08:42:51 -Generating unique operation named: saveUsingPOST_20
2019-03-14 08:42:51 -Generating unique operation named: updateUsingGET_15
2019-03-14 08:42:51 -Generating unique operation named: updateUsingHEAD_15
2019-03-14 08:42:51 -Generating unique operation named: updateUsingPOST_20
2019-03-14 08:42:51 -Generating unique operation named: updateUsingPUT_15
2019-03-14 08:42:51 -Generating unique operation named: updateUsingPATCH_15
2019-03-14 08:42:51 -Generating unique operation named: updateUsingDELETE_15
2019-03-14 08:42:51 -Generating unique operation named: updateUsingOPTIONS_15
2019-03-14 08:42:51 -Generating unique operation named: updateUsingTRACE_15
2019-03-14 08:42:52 -Starting Quartz Scheduler now
2019-03-14 08:42:52 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-14 08:42:52 -Starting...
2019-03-14 08:42:52 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-14 08:42:52 -Started.
2019-03-14 08:42:52 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-14 08:42:52 -Using a shared selector for servlet write/read
2019-03-14 08:42:52 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-14 08:42:52 -Started BootdoApplication in 36.509 seconds (JVM running for 38.208)
2019-03-14 08:42:52 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-14 08:42:52 -==> Parameters: 
2019-03-14 08:42:52 -<==      Total: 1
2019-03-14 08:43:00 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-14 08:43:00 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-14 08:43:00 -FrameworkServlet 'dispatcherServlet': initialization completed in 114 ms
2019-03-14 08:43:00 -Enabling session validation scheduler...
2019-03-14 08:43:00 -请求地址 : http://localhost:8081/login;JSESSIONID=14910d79-510e-4744-b7e7-bd67f8dd531c
2019-03-14 08:43:00 -HTTP METHOD : GET
2019-03-14 08:43:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-14 08:43:00 -参数 : [{}]
2019-03-14 08:43:00 -耗时 : 5
2019-03-14 08:43:00 -返回值 : login
2019-03-14 08:43:02 -请求地址 : http://localhost:8081/getVerify
2019-03-14 08:43:02 -HTTP METHOD : GET
2019-03-14 08:43:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-14 08:43:02 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@2227a4c8, org.apache.shiro.web.servlet.ShiroHttpServletResponse@47b6147b]
2019-03-14 08:43:02 -7173
2019-03-14 08:43:02 -耗时 : 626
2019-03-14 08:43:02 -返回值 : null
2019-03-14 08:43:08 -请求地址 : http://localhost:8081/login
2019-03-14 08:43:08 -HTTP METHOD : POST
2019-03-14 08:43:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-14 08:43:08 -参数 : [admin, 111111, 7173, org.apache.shiro.web.servlet.ShiroHttpServletRequest@31646b83]
2019-03-14 08:43:08 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-14 08:43:08 -==> Parameters: admin(String)
2019-03-14 08:43:08 -<==      Total: 1
2019-03-14 08:43:08 -耗时 : 97
2019-03-14 08:43:08 -返回值 : {msg=操作成功, code=0}
2019-03-14 08:43:08 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-14 08:43:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 08:43:08 -==> Parameters: 1(Long), admin(String), 登录(String), 98(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-14 08:43:08.823(Timestamp)
2019-03-14 08:43:08 -请求地址 : http://localhost:8081/index
2019-03-14 08:43:08 -HTTP METHOD : GET
2019-03-14 08:43:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 08:43:08 -参数 : [{}]
2019-03-14 08:43:08 -<==    Updates: 1
2019-03-14 08:43:08 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 08:43:09 -==> Parameters: 1(Long)
2019-03-14 08:43:09 -<==      Total: 45
2019-03-14 08:43:09 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 08:43:09 -==> Parameters: 138(Long)
2019-03-14 08:43:09 -<==      Total: 1
2019-03-14 08:43:09 -耗时 : 191
2019-03-14 08:43:09 -返回值 : index_v1
2019-03-14 08:43:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 08:43:09 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 191(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 08:43:09.207(Timestamp)
2019-03-14 08:43:09 -<==    Updates: 1
2019-03-14 08:43:09 -请求地址 : http://localhost:8081/main
2019-03-14 08:43:09 -HTTP METHOD : GET
2019-03-14 08:43:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 08:43:09 -参数 : []
2019-03-14 08:43:09 -耗时 : 0
2019-03-14 08:43:09 -返回值 : main
2019-03-14 08:43:09 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 08:43:09 -HTTP METHOD : GET
2019-03-14 08:43:09 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 08:43:09 -参数 : []
2019-03-14 08:43:09 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 08:43:09 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 08:43:09 -<==      Total: 0
2019-03-14 08:43:09 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 08:43:09 -==> Parameters: 1(Long), 0(String)
2019-03-14 08:43:09 -<==      Total: 1
2019-03-14 08:43:09 -耗时 : 42
2019-03-14 08:43:09 -返回值 : com.bootdo.common.utils.PageUtils@1a901106
2019-03-14 08:43:09 -请求地址 : http://localhost:8081/main
2019-03-14 08:43:09 -HTTP METHOD : GET
2019-03-14 08:43:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 08:43:09 -参数 : []
2019-03-14 08:43:09 -耗时 : 1
2019-03-14 08:43:09 -返回值 : main
2019-03-14 08:43:13 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-14 08:43:13 -==> Parameters: 1(Long)
2019-03-14 08:43:13 -<==      Total: 86
2019-03-14 08:43:13 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 08:43:13 -HTTP METHOD : GET
2019-03-14 08:43:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 08:43:13 -参数 : []
2019-03-14 08:43:13 -耗时 : 1
2019-03-14 08:43:13 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 08:43:13 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 08:43:13 -HTTP METHOD : GET
2019-03-14 08:43:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 08:43:13 -参数 : [{limit=10, offset=0}]
2019-03-14 08:43:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-14 08:43:13 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 08:43:13 -<==      Total: 3
2019-03-14 08:43:13 -==>  Preparing: select count(*) from elec_log 
2019-03-14 08:43:13 -==> Parameters: 
2019-03-14 08:43:13 -<==      Total: 1
2019-03-14 08:43:13 -耗时 : 40
2019-03-14 08:43:13 -返回值 : com.bootdo.common.utils.PageUtils@3834fcee
2019-03-14 08:43:15 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-14 08:43:15 -HTTP METHOD : GET
2019-03-14 08:43:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-14 08:43:15 -参数 : []
2019-03-14 08:43:15 -耗时 : 1
2019-03-14 08:43:15 -返回值 : /moneyLog/waterLog/waterLog
2019-03-14 08:43:15 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-14 08:43:15 -HTTP METHOD : GET
2019-03-14 08:43:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-14 08:43:15 -参数 : [{limit=10, offset=0}]
2019-03-14 08:43:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-14 08:43:15 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 08:43:15 -<==      Total: 3
2019-03-14 08:43:15 -==>  Preparing: select count(*) from water_log 
2019-03-14 08:43:15 -==> Parameters: 
2019-03-14 08:43:15 -<==      Total: 1
2019-03-14 08:43:15 -耗时 : 35
2019-03-14 08:43:15 -返回值 : com.bootdo.common.utils.PageUtils@253576bb
2019-03-14 08:43:42 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 8]
2019-03-14 08:44:24 -请求地址 : http://localhost:8081/
2019-03-14 08:44:24 -HTTP METHOD : GET
2019-03-14 08:44:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-03-14 08:44:24 -参数 : [{}]
2019-03-14 08:44:24 -耗时 : 1
2019-03-14 08:44:24 -返回值 : redirect:/index
2019-03-14 08:44:24 -请求地址 : http://localhost:8081/login;JSESSIONID=51e60254-1811-4e69-9a39-341814e958a6
2019-03-14 08:44:24 -HTTP METHOD : GET
2019-03-14 08:44:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-14 08:44:24 -参数 : [{}]
2019-03-14 08:44:24 -耗时 : 1
2019-03-14 08:44:24 -返回值 : login
2019-03-14 08:44:25 -请求地址 : http://localhost:8081/getVerify
2019-03-14 08:44:25 -HTTP METHOD : GET
2019-03-14 08:44:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-14 08:44:25 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@311dd9f, org.apache.shiro.web.servlet.ShiroHttpServletResponse@542baff3]
2019-03-14 08:44:25 -0175
2019-03-14 08:44:25 -耗时 : 13
2019-03-14 08:44:25 -返回值 : null
2019-03-14 08:44:25 -请求地址 : http://localhost:8081/login
2019-03-14 08:44:25 -HTTP METHOD : GET
2019-03-14 08:44:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-14 08:44:25 -参数 : [{}]
2019-03-14 08:44:25 -耗时 : 1
2019-03-14 08:44:25 -返回值 : login
2019-03-14 08:44:39 -请求地址 : http://localhost:8081/login
2019-03-14 08:44:39 -HTTP METHOD : POST
2019-03-14 08:44:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-14 08:44:39 -参数 : [admin, 111111, 0175, org.apache.shiro.web.servlet.ShiroHttpServletRequest@65fa8f69]
2019-03-14 08:44:39 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-14 08:44:39 -==> Parameters: admin(String)
2019-03-14 08:44:39 -<==      Total: 1
2019-03-14 08:44:39 -耗时 : 10
2019-03-14 08:44:39 -返回值 : {msg=操作成功, code=0}
2019-03-14 08:44:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 08:44:39 -==> Parameters: 1(Long), admin(String), 登录(String), 11(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-14 08:44:39.319(Timestamp)
2019-03-14 08:44:39 -请求地址 : http://localhost:8081/index
2019-03-14 08:44:39 -HTTP METHOD : GET
2019-03-14 08:44:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 08:44:39 -参数 : [{}]
2019-03-14 08:44:39 -<==    Updates: 1
2019-03-14 08:44:39 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 08:44:39 -==> Parameters: 1(Long)
2019-03-14 08:44:39 -<==      Total: 45
2019-03-14 08:44:39 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 08:44:39 -==> Parameters: 138(Long)
2019-03-14 08:44:39 -<==      Total: 1
2019-03-14 08:44:39 -耗时 : 50
2019-03-14 08:44:39 -返回值 : index_v1
2019-03-14 08:44:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 08:44:39 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 50(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 08:44:39.408(Timestamp)
2019-03-14 08:44:39 -<==    Updates: 1
2019-03-14 08:44:39 -请求地址 : http://localhost:8081/main
2019-03-14 08:44:39 -HTTP METHOD : GET
2019-03-14 08:44:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 08:44:39 -参数 : []
2019-03-14 08:44:39 -耗时 : 0
2019-03-14 08:44:39 -返回值 : main
2019-03-14 08:44:40 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 08:44:40 -HTTP METHOD : GET
2019-03-14 08:44:40 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 08:44:40 -参数 : []
2019-03-14 08:44:40 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 08:44:40 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 08:44:40 -<==      Total: 0
2019-03-14 08:44:40 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 08:44:40 -==> Parameters: 1(Long), 0(String)
2019-03-14 08:44:40 -<==      Total: 1
2019-03-14 08:44:40 -耗时 : 13
2019-03-14 08:44:40 -返回值 : com.bootdo.common.utils.PageUtils@516a087b
2019-03-14 08:44:40 -请求地址 : http://localhost:8081/main
2019-03-14 08:44:40 -HTTP METHOD : GET
2019-03-14 08:44:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 08:44:40 -参数 : []
2019-03-14 08:44:40 -耗时 : 0
2019-03-14 08:44:40 -返回值 : main
2019-03-14 08:45:00 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-14 08:45:00 -==> Parameters: 1(Long)
2019-03-14 08:45:00 -<==      Total: 86
2019-03-14 08:45:00 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 08:45:00 -HTTP METHOD : GET
2019-03-14 08:45:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 08:45:00 -参数 : []
2019-03-14 08:45:00 -耗时 : 1
2019-03-14 08:45:00 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 08:45:01 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 08:45:01 -HTTP METHOD : GET
2019-03-14 08:45:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 08:45:01 -参数 : [{limit=10, offset=0}]
2019-03-14 08:45:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-14 08:45:01 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 08:45:01 -<==      Total: 3
2019-03-14 08:45:01 -==>  Preparing: select count(*) from elec_log 
2019-03-14 08:45:01 -==> Parameters: 
2019-03-14 08:45:01 -<==      Total: 1
2019-03-14 08:45:01 -耗时 : 9
2019-03-14 08:45:01 -返回值 : com.bootdo.common.utils.PageUtils@275a461c
2019-03-14 08:45:04 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-14 08:45:04 -HTTP METHOD : GET
2019-03-14 08:45:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-14 08:45:04 -参数 : []
2019-03-14 08:45:04 -耗时 : 0
2019-03-14 08:45:04 -返回值 : /moneyLog/waterLog/waterLog
2019-03-14 08:45:04 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-14 08:45:04 -HTTP METHOD : GET
2019-03-14 08:45:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-14 08:45:04 -参数 : [{limit=10, offset=0}]
2019-03-14 08:45:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-14 08:45:04 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 08:45:04 -<==      Total: 3
2019-03-14 08:45:04 -==>  Preparing: select count(*) from water_log 
2019-03-14 08:45:04 -==> Parameters: 
2019-03-14 08:45:04 -<==      Total: 1
2019-03-14 08:45:04 -耗时 : 10
2019-03-14 08:45:04 -返回值 : com.bootdo.common.utils.PageUtils@939d715
2019-03-14 08:47:20 -请求地址 : http://localhost:8081/index
2019-03-14 08:47:20 -HTTP METHOD : GET
2019-03-14 08:47:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 08:47:20 -参数 : [{}]
2019-03-14 08:47:20 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 08:47:20 -==> Parameters: 1(Long)
2019-03-14 08:47:20 -<==      Total: 45
2019-03-14 08:47:20 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 08:47:20 -==> Parameters: 138(Long)
2019-03-14 08:47:20 -<==      Total: 1
2019-03-14 08:47:20 -耗时 : 29
2019-03-14 08:47:20 -返回值 : index_v1
2019-03-14 08:47:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 08:47:20 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 30(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 08:47:20.775(Timestamp)
2019-03-14 08:47:20 -<==    Updates: 1
2019-03-14 08:47:20 -请求地址 : http://localhost:8081/main
2019-03-14 08:47:20 -HTTP METHOD : GET
2019-03-14 08:47:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 08:47:20 -参数 : []
2019-03-14 08:47:20 -耗时 : 8
2019-03-14 08:47:20 -返回值 : main
2019-03-14 08:47:21 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 08:47:21 -HTTP METHOD : GET
2019-03-14 08:47:21 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 08:47:21 -参数 : []
2019-03-14 08:47:21 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 08:47:21 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 08:47:21 -<==      Total: 0
2019-03-14 08:47:21 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 08:47:21 -==> Parameters: 1(Long), 0(String)
2019-03-14 08:47:21 -<==      Total: 1
2019-03-14 08:47:21 -耗时 : 7
2019-03-14 08:47:21 -返回值 : com.bootdo.common.utils.PageUtils@78cd0f82
2019-03-14 08:47:21 -请求地址 : http://localhost:8081/main
2019-03-14 08:47:21 -HTTP METHOD : GET
2019-03-14 08:47:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 08:47:21 -参数 : []
2019-03-14 08:47:21 -耗时 : 0
2019-03-14 08:47:21 -返回值 : main
2019-03-14 08:47:31 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 08:47:31 -HTTP METHOD : GET
2019-03-14 08:47:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 08:47:31 -参数 : []
2019-03-14 08:47:31 -耗时 : 1
2019-03-14 08:47:31 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 08:47:31 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 08:47:31 -HTTP METHOD : GET
2019-03-14 08:47:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 08:47:31 -参数 : [{limit=10, offset=0}]
2019-03-14 08:47:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-14 08:47:31 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 08:47:31 -<==      Total: 3
2019-03-14 08:47:31 -==>  Preparing: select count(*) from elec_log 
2019-03-14 08:47:31 -==> Parameters: 
2019-03-14 08:47:31 -<==      Total: 1
2019-03-14 08:47:31 -耗时 : 9
2019-03-14 08:47:31 -返回值 : com.bootdo.common.utils.PageUtils@5157a692
2019-03-14 08:48:03 -请求地址 : http://localhost:8081/index
2019-03-14 08:48:03 -HTTP METHOD : GET
2019-03-14 08:48:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 08:48:03 -参数 : [{}]
2019-03-14 08:48:03 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 08:48:03 -==> Parameters: 1(Long)
2019-03-14 08:48:03 -<==      Total: 45
2019-03-14 08:48:03 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 08:48:03 -==> Parameters: 138(Long)
2019-03-14 08:48:03 -<==      Total: 1
2019-03-14 08:48:03 -耗时 : 28
2019-03-14 08:48:03 -返回值 : index_v1
2019-03-14 08:48:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 08:48:04 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 08:48:03.994(Timestamp)
2019-03-14 08:48:04 -<==    Updates: 1
2019-03-14 08:48:04 -请求地址 : http://localhost:8081/main
2019-03-14 08:48:04 -HTTP METHOD : GET
2019-03-14 08:48:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 08:48:04 -参数 : []
2019-03-14 08:48:04 -耗时 : 1
2019-03-14 08:48:04 -返回值 : main
2019-03-14 08:48:04 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 08:48:04 -HTTP METHOD : GET
2019-03-14 08:48:04 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 08:48:04 -参数 : []
2019-03-14 08:48:04 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 08:48:04 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 08:48:04 -<==      Total: 0
2019-03-14 08:48:04 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 08:48:04 -==> Parameters: 1(Long), 0(String)
2019-03-14 08:48:04 -<==      Total: 1
2019-03-14 08:48:04 -耗时 : 7
2019-03-14 08:48:04 -返回值 : com.bootdo.common.utils.PageUtils@7f8715d0
2019-03-14 08:48:04 -请求地址 : http://localhost:8081/main
2019-03-14 08:48:04 -HTTP METHOD : GET
2019-03-14 08:48:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 08:48:04 -参数 : []
2019-03-14 08:48:04 -耗时 : 1
2019-03-14 08:48:04 -返回值 : main
2019-03-14 08:48:06 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 08:48:06 -HTTP METHOD : GET
2019-03-14 08:48:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 08:48:06 -参数 : []
2019-03-14 08:48:06 -耗时 : 0
2019-03-14 08:48:06 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 08:48:06 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 08:48:06 -HTTP METHOD : GET
2019-03-14 08:48:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 08:48:06 -参数 : [{limit=10, offset=0}]
2019-03-14 08:48:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-14 08:48:06 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 08:48:06 -<==      Total: 3
2019-03-14 08:48:06 -==>  Preparing: select count(*) from elec_log 
2019-03-14 08:48:06 -==> Parameters: 
2019-03-14 08:48:06 -<==      Total: 1
2019-03-14 08:48:06 -耗时 : 9
2019-03-14 08:48:06 -返回值 : com.bootdo.common.utils.PageUtils@6c1e099
2019-03-14 08:49:26 -Starting BootdoApplication on ZJZL-20180906VX with PID 4784 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-14 08:49:26 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-14 08:49:26 -The following profiles are active: dev
2019-03-14 08:49:26 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@631e06ab: startup date [Thu Mar 14 08:49:26 CST 2019]; root of context hierarchy
2019-03-14 08:49:30 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-14 08:49:33 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3dea2e76] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 08:49:33 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$30435d1d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 08:49:34 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 08:49:34 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 08:49:35 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 08:49:35 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-14 08:49:35 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-14 08:49:35 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 08:49:35 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 08:49:35 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 08:49:35 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 08:49:36 -Tomcat initialized with port(s): 8081 (http)
2019-03-14 08:49:36 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-14 08:49:36 -Starting service [Tomcat]
2019-03-14 08:49:36 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-14 08:49:36 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;D:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-14 08:49:36 -Initializing Spring embedded WebApplicationContext
2019-03-14 08:49:36 -Root WebApplicationContext: initialization completed in 10207 ms
2019-03-14 08:49:37 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-14 08:49:37 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-14 08:49:37 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-14 08:49:37 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-14 08:49:37 -Filter xssFilter was not registered (disabled)
2019-03-14 08:49:37 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-14 08:49:37 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-14 08:49:37 -Servlet statViewServlet mapped to [/druid/*]
2019-03-14 08:49:37 -Servlet dispatcherServlet mapped to [/]
2019-03-14 08:49:40 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@631e06ab: startup date [Thu Mar 14 08:49:26 CST 2019]; root of context hierarchy
2019-03-14 08:49:41 -Using default implementation for ThreadExecutor
2019-03-14 08:49:41 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-14 08:49:41 -Quartz Scheduler v.2.2.1 created.
2019-03-14 08:49:41 -RAMJobStore initialized.
2019-03-14 08:49:41 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-14 08:49:41 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-14 08:49:41 -Quartz scheduler version: 2.2.1
2019-03-14 08:49:41 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@c7673ae
2019-03-14 08:49:42 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-14 08:49:42 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-14 08:49:46 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-14 08:49:46 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-14 08:49:46 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-14 08:49:46 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-14 08:49:46 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-14 08:49:46 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-14 08:49:46 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-14 08:49:46 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-14 08:49:46 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-14 08:49:46 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:49:46 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-14 08:49:46 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-14 08:49:46 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-14 08:49:46 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-14 08:49:46 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:49:46 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-14 08:49:46 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-14 08:49:46 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-14 08:49:46 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-14 08:49:46 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-14 08:49:46 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:49:46 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-14 08:49:46 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-14 08:49:46 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-14 08:49:46 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-14 08:49:46 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:49:46 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:49:46 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-14 08:49:46 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-14 08:49:46 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-14 08:49:46 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-14 08:49:46 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-14 08:49:46 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-14 08:49:46 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-14 08:49:46 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-14 08:49:46 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-14 08:49:46 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:49:46 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-14 08:49:46 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-14 08:49:46 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:49:46 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-14 08:49:46 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-14 08:49:46 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-14 08:49:46 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-14 08:49:46 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:49:46 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-14 08:49:46 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-14 08:49:46 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-14 08:49:46 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-14 08:49:46 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-14 08:49:46 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-14 08:49:46 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-14 08:49:46 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-14 08:49:46 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-14 08:49:46 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-14 08:49:46 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:49:46 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-14 08:49:46 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-14 08:49:46 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-14 08:49:46 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2019-03-14 08:49:46 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-14 08:49:46 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-14 08:49:46 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-14 08:49:46 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-14 08:49:46 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:49:46 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-14 08:49:46 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:49:46 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-14 08:49:46 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-14 08:49:46 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-14 08:49:46 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-14 08:49:46 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-14 08:49:46 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-14 08:49:46 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-14 08:49:46 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:49:46 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-14 08:49:46 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-14 08:49:46 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-14 08:49:46 -Mapped "{[/heat/heatCost/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.add()
2019-03-14 08:49:46 -Mapped "{[/heat/heatCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.remove(java.lang.Long)
2019-03-14 08:49:46 -Mapped "{[/heat/heatCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.remove(java.lang.Long[])
2019-03-14 08:49:46 -Mapped "{[/heat/heatCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.update(com.bootdo.heat.domain.HeatCostDO)
2019-03-14 08:49:46 -Mapped "{[/heat/heatCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:49:46 -Mapped "{[/heat/heatCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatCostController.save(com.bootdo.heat.domain.HeatCostDO)
2019-03-14 08:49:46 -Mapped "{[/heat/heatCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:49:46 -Mapped "{[/heat/heatCost],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatCostController.HeatCost()
2019-03-14 08:49:46 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-14 08:49:46 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-14 08:49:46 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-14 08:49:46 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-14 08:49:46 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-14 08:49:46 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:49:46 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-14 08:49:46 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:49:46 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-14 08:49:46 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-14 08:49:46 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-03-14 08:49:46 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-14 08:49:46 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-14 08:49:46 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-14 08:49:46 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-14 08:49:46 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-14 08:49:46 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:49:46 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-14 08:49:46 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:49:46 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-14 08:49:46 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-14 08:49:46 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-14 08:49:46 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-14 08:49:46 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-14 08:49:46 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:49:46 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-14 08:49:46 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:49:46 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-14 08:49:46 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-14 08:49:46 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-14 08:49:46 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-14 08:49:46 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-14 08:49:46 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:49:46 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-14 08:49:46 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:49:46 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-14 08:49:46 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-14 08:49:46 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-14 08:49:46 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-14 08:49:46 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-14 08:49:46 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:49:46 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:49:46 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-14 08:49:46 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-14 08:49:46 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:49:46 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-14 08:49:46 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-14 08:49:46 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:49:46 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-14 08:49:46 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-14 08:49:46 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-14 08:49:46 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-14 08:49:46 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:49:46 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-14 08:49:46 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:49:46 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:49:46 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-14 08:49:46 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:49:46 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-14 08:49:46 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-14 08:49:46 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-14 08:49:46 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-14 08:49:46 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-14 08:49:46 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-14 08:49:46 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-14 08:49:46 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-14 08:49:46 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:49:46 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-14 08:49:46 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-14 08:49:46 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-14 08:49:46 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-14 08:49:46 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-14 08:49:46 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-14 08:49:46 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-14 08:49:46 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-14 08:49:46 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-14 08:49:46 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-14 08:49:46 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:49:46 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-14 08:49:46 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-14 08:49:46 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-14 08:49:46 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-14 08:49:46 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-14 08:49:46 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-14 08:49:46 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-14 08:49:46 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-14 08:49:46 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-14 08:49:46 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-14 08:49:46 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-14 08:49:46 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-14 08:49:46 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:49:46 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-14 08:49:46 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-14 08:49:46 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-14 08:49:46 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-14 08:49:46 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:49:46 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-14 08:49:46 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-14 08:49:46 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-14 08:49:46 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:49:46 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-14 08:49:46 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-14 08:49:46 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-14 08:49:46 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-14 08:49:46 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-14 08:49:46 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-14 08:49:46 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:49:46 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-14 08:49:46 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-14 08:49:46 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-14 08:49:46 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-14 08:49:46 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-14 08:49:46 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-14 08:49:46 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-14 08:49:46 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-14 08:49:46 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-14 08:49:46 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-14 08:49:46 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:49:46 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-14 08:49:46 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-14 08:49:46 -Mapped "{[/water/water/queryWater],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.queryWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:49:46 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:49:46 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:49:46 -Mapped "{[/water/waterCost/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.add()
2019-03-14 08:49:46 -Mapped "{[/water/waterCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long)
2019-03-14 08:49:46 -Mapped "{[/water/waterCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long[])
2019-03-14 08:49:46 -Mapped "{[/water/waterCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.update(com.bootdo.water.domain.WaterCostDO)
2019-03-14 08:49:46 -Mapped "{[/water/waterCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:49:46 -Mapped "{[/water/waterCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.save(com.bootdo.water.domain.WaterCostDO)
2019-03-14 08:49:46 -Mapped "{[/water/waterCost],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.WaterCost()
2019-03-14 08:49:46 -Mapped "{[/water/waterCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:49:46 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-14 08:49:46 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2019-03-14 08:49:46 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-14 08:49:46 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-14 08:49:46 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-14 08:49:46 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-14 08:49:46 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:49:46 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-14 08:49:46 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-14 08:49:46 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 08:49:46 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 08:49:46 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-14 08:49:46 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-14 08:49:46 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-14 08:49:46 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-14 08:49:46 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-14 08:49:47 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-14 08:49:47 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-14 08:49:47 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-14 08:49:48 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-14 08:49:48 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@631e06ab: startup date [Thu Mar 14 08:49:26 CST 2019]; root of context hierarchy
2019-03-14 08:49:49 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-14 08:49:49 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-14 08:49:49 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-14 08:49:49 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-14 08:49:49 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-14 08:49:51 -Registering beans for JMX exposure on startup
2019-03-14 08:49:51 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-14 08:49:52 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-14 08:49:52 -Starting beans in phase 2147483647
2019-03-14 08:49:52 -Context refreshed
2019-03-14 08:49:52 -Found 1 custom documentation plugin(s)
2019-03-14 08:49:52 -Scanning for api listing references
2019-03-14 08:49:52 -Generating unique operation named: removeUsingPOST_1
2019-03-14 08:49:53 -Generating unique operation named: addUsingGET_1
2019-03-14 08:49:53 -Generating unique operation named: editUsingGET_1
2019-03-14 08:49:53 -Generating unique operation named: listUsingGET_1
2019-03-14 08:49:53 -Generating unique operation named: removeUsingPOST_2
2019-03-14 08:49:53 -Generating unique operation named: removeUsingPOST_3
2019-03-14 08:49:53 -Generating unique operation named: saveUsingPOST_1
2019-03-14 08:49:53 -Generating unique operation named: updateUsingGET_1
2019-03-14 08:49:53 -Generating unique operation named: updateUsingHEAD_1
2019-03-14 08:49:53 -Generating unique operation named: updateUsingPOST_1
2019-03-14 08:49:53 -Generating unique operation named: updateUsingPUT_1
2019-03-14 08:49:53 -Generating unique operation named: updateUsingPATCH_1
2019-03-14 08:49:53 -Generating unique operation named: updateUsingDELETE_1
2019-03-14 08:49:53 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-14 08:49:53 -Generating unique operation named: updateUsingTRACE_1
2019-03-14 08:49:53 -Generating unique operation named: addUsingGET_2
2019-03-14 08:49:53 -Generating unique operation named: editUsingGET_2
2019-03-14 08:49:53 -Generating unique operation named: listUsingGET_2
2019-03-14 08:49:53 -Generating unique operation named: removeUsingPOST_4
2019-03-14 08:49:53 -Generating unique operation named: removeUsingPOST_5
2019-03-14 08:49:53 -Generating unique operation named: saveUsingPOST_2
2019-03-14 08:49:53 -Generating unique operation named: updateUsingGET_2
2019-03-14 08:49:53 -Generating unique operation named: updateUsingHEAD_2
2019-03-14 08:49:53 -Generating unique operation named: updateUsingPOST_2
2019-03-14 08:49:53 -Generating unique operation named: updateUsingPUT_2
2019-03-14 08:49:53 -Generating unique operation named: updateUsingPATCH_2
2019-03-14 08:49:53 -Generating unique operation named: updateUsingDELETE_2
2019-03-14 08:49:53 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-14 08:49:53 -Generating unique operation named: updateUsingTRACE_2
2019-03-14 08:49:53 -Generating unique operation named: addUsingGET_3
2019-03-14 08:49:53 -Generating unique operation named: editUsingGET_3
2019-03-14 08:49:53 -Generating unique operation named: listUsingGET_3
2019-03-14 08:49:53 -Generating unique operation named: removeUsingPOST_6
2019-03-14 08:49:53 -Generating unique operation named: removeUsingPOST_7
2019-03-14 08:49:53 -Generating unique operation named: saveUsingPOST_3
2019-03-14 08:49:53 -Generating unique operation named: updateUsingGET_3
2019-03-14 08:49:53 -Generating unique operation named: updateUsingHEAD_3
2019-03-14 08:49:53 -Generating unique operation named: updateUsingPOST_3
2019-03-14 08:49:53 -Generating unique operation named: updateUsingPUT_3
2019-03-14 08:49:53 -Generating unique operation named: updateUsingPATCH_3
2019-03-14 08:49:53 -Generating unique operation named: updateUsingDELETE_3
2019-03-14 08:49:53 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-14 08:49:53 -Generating unique operation named: updateUsingTRACE_3
2019-03-14 08:49:53 -Generating unique operation named: addUsingGET_4
2019-03-14 08:49:53 -Generating unique operation named: editUsingGET_4
2019-03-14 08:49:53 -Generating unique operation named: listUsingGET_4
2019-03-14 08:49:53 -Generating unique operation named: removeUsingPOST_8
2019-03-14 08:49:53 -Generating unique operation named: removeUsingPOST_9
2019-03-14 08:49:53 -Generating unique operation named: saveUsingPOST_4
2019-03-14 08:49:53 -Generating unique operation named: updateUsingGET_4
2019-03-14 08:49:53 -Generating unique operation named: updateUsingHEAD_4
2019-03-14 08:49:53 -Generating unique operation named: updateUsingPOST_4
2019-03-14 08:49:53 -Generating unique operation named: updateUsingPUT_4
2019-03-14 08:49:53 -Generating unique operation named: updateUsingPATCH_4
2019-03-14 08:49:53 -Generating unique operation named: updateUsingDELETE_4
2019-03-14 08:49:53 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-14 08:49:53 -Generating unique operation named: updateUsingTRACE_4
2019-03-14 08:49:53 -Generating unique operation named: ElecUsingGET_1
2019-03-14 08:49:53 -Generating unique operation named: addUsingGET_5
2019-03-14 08:49:53 -Generating unique operation named: editUsingGET_5
2019-03-14 08:49:53 -Generating unique operation named: listUsingGET_5
2019-03-14 08:49:53 -Generating unique operation named: removeUsingPOST_10
2019-03-14 08:49:53 -Generating unique operation named: removeUsingPOST_11
2019-03-14 08:49:53 -Generating unique operation named: saveUsingPOST_5
2019-03-14 08:49:53 -Generating unique operation named: updateUsingGET_5
2019-03-14 08:49:53 -Generating unique operation named: updateUsingHEAD_5
2019-03-14 08:49:53 -Generating unique operation named: updateUsingPOST_5
2019-03-14 08:49:53 -Generating unique operation named: updateUsingPUT_5
2019-03-14 08:49:53 -Generating unique operation named: updateUsingPATCH_5
2019-03-14 08:49:53 -Generating unique operation named: updateUsingDELETE_5
2019-03-14 08:49:53 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-14 08:49:53 -Generating unique operation named: updateUsingTRACE_5
2019-03-14 08:49:53 -Generating unique operation named: editUsingGET_6
2019-03-14 08:49:53 -Generating unique operation named: listUsingGET_6
2019-03-14 08:49:53 -Generating unique operation named: updateUsingPOST_6
2019-03-14 08:49:53 -Generating unique operation named: addUsingGET_6
2019-03-14 08:49:53 -Generating unique operation named: editUsingGET_7
2019-03-14 08:49:53 -Generating unique operation named: listUsingGET_7
2019-03-14 08:49:53 -Generating unique operation named: removeUsingPOST_12
2019-03-14 08:49:53 -Generating unique operation named: removeUsingPOST_13
2019-03-14 08:49:53 -Generating unique operation named: saveUsingPOST_6
2019-03-14 08:49:53 -Generating unique operation named: updateUsingGET_6
2019-03-14 08:49:53 -Generating unique operation named: updateUsingHEAD_6
2019-03-14 08:49:53 -Generating unique operation named: updateUsingPOST_7
2019-03-14 08:49:53 -Generating unique operation named: updateUsingPUT_6
2019-03-14 08:49:53 -Generating unique operation named: updateUsingPATCH_6
2019-03-14 08:49:53 -Generating unique operation named: updateUsingDELETE_6
2019-03-14 08:49:53 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-14 08:49:53 -Generating unique operation named: updateUsingTRACE_6
2019-03-14 08:49:53 -Generating unique operation named: addUsingGET_7
2019-03-14 08:49:53 -Generating unique operation named: editUsingGET_8
2019-03-14 08:49:53 -Generating unique operation named: listUsingGET_8
2019-03-14 08:49:53 -Generating unique operation named: removeUsingPOST_14
2019-03-14 08:49:53 -Generating unique operation named: removeUsingPOST_15
2019-03-14 08:49:53 -Generating unique operation named: saveUsingPOST_7
2019-03-14 08:49:53 -Generating unique operation named: updateUsingGET_7
2019-03-14 08:49:53 -Generating unique operation named: updateUsingHEAD_7
2019-03-14 08:49:53 -Generating unique operation named: updateUsingPOST_8
2019-03-14 08:49:54 -Generating unique operation named: updateUsingPUT_7
2019-03-14 08:49:54 -Generating unique operation named: updateUsingPATCH_7
2019-03-14 08:49:54 -Generating unique operation named: updateUsingDELETE_7
2019-03-14 08:49:54 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-14 08:49:54 -Generating unique operation named: updateUsingTRACE_7
2019-03-14 08:49:54 -Generating unique operation named: addUsingGET_8
2019-03-14 08:49:54 -Generating unique operation named: editUsingGET_9
2019-03-14 08:49:54 -Generating unique operation named: listUsingGET_9
2019-03-14 08:49:54 -Generating unique operation named: removeUsingPOST_16
2019-03-14 08:49:54 -Generating unique operation named: removeUsingPOST_17
2019-03-14 08:49:54 -Generating unique operation named: saveUsingPOST_8
2019-03-14 08:49:54 -Generating unique operation named: updateUsingGET_8
2019-03-14 08:49:54 -Generating unique operation named: updateUsingHEAD_8
2019-03-14 08:49:54 -Generating unique operation named: updateUsingPOST_9
2019-03-14 08:49:54 -Generating unique operation named: updateUsingPUT_8
2019-03-14 08:49:54 -Generating unique operation named: updateUsingPATCH_8
2019-03-14 08:49:54 -Generating unique operation named: updateUsingDELETE_8
2019-03-14 08:49:54 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-14 08:49:54 -Generating unique operation named: updateUsingTRACE_8
2019-03-14 08:49:54 -Generating unique operation named: addUsingGET_9
2019-03-14 08:49:54 -Generating unique operation named: editUsingGET_10
2019-03-14 08:49:54 -Generating unique operation named: listUsingGET_10
2019-03-14 08:49:54 -Generating unique operation named: removeUsingPOST_18
2019-03-14 08:49:54 -Generating unique operation named: removeUsingPOST_19
2019-03-14 08:49:54 -Generating unique operation named: saveUsingPOST_9
2019-03-14 08:49:54 -Generating unique operation named: updateUsingGET_9
2019-03-14 08:49:54 -Generating unique operation named: updateUsingHEAD_9
2019-03-14 08:49:54 -Generating unique operation named: updateUsingPOST_10
2019-03-14 08:49:54 -Generating unique operation named: updateUsingPUT_9
2019-03-14 08:49:54 -Generating unique operation named: updateUsingPATCH_9
2019-03-14 08:49:54 -Generating unique operation named: updateUsingDELETE_9
2019-03-14 08:49:54 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-14 08:49:54 -Generating unique operation named: updateUsingTRACE_9
2019-03-14 08:49:54 -Generating unique operation named: addUsingGET_10
2019-03-14 08:49:54 -Generating unique operation named: editUsingGET_11
2019-03-14 08:49:54 -Generating unique operation named: infoUsingGET_1
2019-03-14 08:49:54 -Generating unique operation named: infoUsingHEAD_1
2019-03-14 08:49:54 -Generating unique operation named: infoUsingPOST_1
2019-03-14 08:49:54 -Generating unique operation named: infoUsingPUT_1
2019-03-14 08:49:54 -Generating unique operation named: infoUsingPATCH_1
2019-03-14 08:49:54 -Generating unique operation named: infoUsingDELETE_1
2019-03-14 08:49:54 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-14 08:49:54 -Generating unique operation named: infoUsingTRACE_1
2019-03-14 08:49:54 -Generating unique operation named: listUsingGET_11
2019-03-14 08:49:54 -Generating unique operation named: removeUsingPOST_20
2019-03-14 08:49:54 -Generating unique operation named: removeUsingPOST_21
2019-03-14 08:49:54 -Generating unique operation named: saveUsingPOST_10
2019-03-14 08:49:54 -Generating unique operation named: updateUsingPOST_11
2019-03-14 08:49:54 -Generating unique operation named: listUsingGET_12
2019-03-14 08:49:54 -Generating unique operation named: removeUsingPOST_22
2019-03-14 08:49:54 -Generating unique operation named: welcomeUsingGET_1
2019-03-14 08:49:54 -Generating unique operation named: addUsingGET_11
2019-03-14 08:49:54 -Generating unique operation named: editUsingGET_12
2019-03-14 08:49:54 -Generating unique operation named: listUsingGET_13
2019-03-14 08:49:54 -Generating unique operation named: removeUsingPOST_23
2019-03-14 08:49:54 -Generating unique operation named: saveUsingPOST_11
2019-03-14 08:49:54 -Generating unique operation named: treeUsingGET_1
2019-03-14 08:49:54 -Generating unique operation named: treeUsingGET_2
2019-03-14 08:49:54 -Generating unique operation named: updateUsingPOST_12
2019-03-14 08:49:54 -Generating unique operation named: addUsingGET_12
2019-03-14 08:49:54 -Generating unique operation named: editUsingGET_13
2019-03-14 08:49:54 -Generating unique operation named: listUsingGET_14
2019-03-14 08:49:54 -Generating unique operation named: removeUsingPOST_24
2019-03-14 08:49:54 -Generating unique operation named: removeUsingPOST_25
2019-03-14 08:49:54 -Generating unique operation named: saveUsingPOST_12
2019-03-14 08:49:54 -Generating unique operation named: updateUsingGET_10
2019-03-14 08:49:54 -Generating unique operation named: updateUsingHEAD_10
2019-03-14 08:49:54 -Generating unique operation named: updateUsingPOST_13
2019-03-14 08:49:54 -Generating unique operation named: updateUsingPUT_10
2019-03-14 08:49:54 -Generating unique operation named: updateUsingPATCH_10
2019-03-14 08:49:54 -Generating unique operation named: updateUsingDELETE_10
2019-03-14 08:49:54 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-14 08:49:54 -Generating unique operation named: updateUsingTRACE_10
2019-03-14 08:49:54 -Generating unique operation named: addUsingGET_13
2019-03-14 08:49:54 -Generating unique operation named: editUsingGET_14
2019-03-14 08:49:54 -Generating unique operation named: listUsingGET_15
2019-03-14 08:49:54 -Generating unique operation named: removeUsingPOST_26
2019-03-14 08:49:54 -Generating unique operation named: removeUsingPOST_27
2019-03-14 08:49:54 -Generating unique operation named: saveUsingPOST_13
2019-03-14 08:49:54 -Generating unique operation named: updateUsingGET_11
2019-03-14 08:49:54 -Generating unique operation named: updateUsingHEAD_11
2019-03-14 08:49:54 -Generating unique operation named: updateUsingPOST_14
2019-03-14 08:49:54 -Generating unique operation named: updateUsingPUT_11
2019-03-14 08:49:54 -Generating unique operation named: updateUsingPATCH_11
2019-03-14 08:49:54 -Generating unique operation named: updateUsingDELETE_11
2019-03-14 08:49:54 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-14 08:49:54 -Generating unique operation named: updateUsingTRACE_11
2019-03-14 08:49:54 -Generating unique operation named: addUsingGET_14
2019-03-14 08:49:54 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-14 08:49:54 -Generating unique operation named: editUsingGET_15
2019-03-14 08:49:54 -Generating unique operation named: listUsingGET_16
2019-03-14 08:49:54 -Generating unique operation named: saveUsingPOST_14
2019-03-14 08:49:54 -Generating unique operation named: saveUsingPOST_15
2019-03-14 08:49:54 -Generating unique operation named: updateUsingPOST_15
2019-03-14 08:49:54 -Generating unique operation named: listUsingGET_17
2019-03-14 08:49:54 -Generating unique operation named: listUsingHEAD_1
2019-03-14 08:49:54 -Generating unique operation named: listUsingPOST_1
2019-03-14 08:49:54 -Generating unique operation named: listUsingPUT_1
2019-03-14 08:49:54 -Generating unique operation named: listUsingPATCH_1
2019-03-14 08:49:54 -Generating unique operation named: listUsingDELETE_1
2019-03-14 08:49:54 -Generating unique operation named: listUsingOPTIONS_1
2019-03-14 08:49:54 -Generating unique operation named: listUsingTRACE_1
2019-03-14 08:49:54 -Generating unique operation named: addUsingGET_15
2019-03-14 08:49:54 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-14 08:49:54 -Generating unique operation named: editUsingGET_16
2019-03-14 08:49:54 -Generating unique operation named: listUsingGET_18
2019-03-14 08:49:55 -Generating unique operation named: removeUsingPOST_28
2019-03-14 08:49:55 -Generating unique operation named: saveUsingPOST_16
2019-03-14 08:49:55 -Generating unique operation named: treeUsingGET_3
2019-03-14 08:49:55 -Generating unique operation named: treeViewUsingGET_1
2019-03-14 08:49:55 -Generating unique operation named: updateUsingPOST_16
2019-03-14 08:49:55 -Generating unique operation named: addUsingGET_16
2019-03-14 08:49:55 -Generating unique operation named: editUsingGET_17
2019-03-14 08:49:55 -Generating unique operation named: listUsingGET_19
2019-03-14 08:49:55 -Generating unique operation named: removeUsingPOST_29
2019-03-14 08:49:55 -Generating unique operation named: removeUsingPOST_30
2019-03-14 08:49:55 -Generating unique operation named: saveUsingPOST_17
2019-03-14 08:49:55 -Generating unique operation named: updateUsingGET_12
2019-03-14 08:49:55 -Generating unique operation named: updateUsingHEAD_12
2019-03-14 08:49:55 -Generating unique operation named: updateUsingPOST_17
2019-03-14 08:49:55 -Generating unique operation named: updateUsingPUT_12
2019-03-14 08:49:55 -Generating unique operation named: updateUsingPATCH_12
2019-03-14 08:49:55 -Generating unique operation named: updateUsingDELETE_12
2019-03-14 08:49:55 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-14 08:49:55 -Generating unique operation named: updateUsingTRACE_12
2019-03-14 08:49:55 -Generating unique operation named: addUsingGET_17
2019-03-14 08:49:55 -Generating unique operation named: editUsingGET_18
2019-03-14 08:49:55 -Generating unique operation named: listUsingGET_20
2019-03-14 08:49:55 -Generating unique operation named: removeUsingPOST_31
2019-03-14 08:49:55 -Generating unique operation named: removeUsingPOST_32
2019-03-14 08:49:55 -Generating unique operation named: saveUsingPOST_18
2019-03-14 08:49:55 -Generating unique operation named: updateUsingGET_13
2019-03-14 08:49:55 -Generating unique operation named: updateUsingHEAD_13
2019-03-14 08:49:55 -Generating unique operation named: updateUsingPOST_18
2019-03-14 08:49:55 -Generating unique operation named: updateUsingPUT_13
2019-03-14 08:49:55 -Generating unique operation named: updateUsingPATCH_13
2019-03-14 08:49:55 -Generating unique operation named: updateUsingDELETE_13
2019-03-14 08:49:55 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-14 08:49:55 -Generating unique operation named: updateUsingTRACE_13
2019-03-14 08:49:55 -Generating unique operation named: addUsingGET_18
2019-03-14 08:49:55 -Generating unique operation named: editUsingGET_19
2019-03-14 08:49:55 -Generating unique operation named: listUsingGET_21
2019-03-14 08:49:55 -Generating unique operation named: removeUsingPOST_33
2019-03-14 08:49:55 -Generating unique operation named: removeUsingPOST_34
2019-03-14 08:49:55 -Generating unique operation named: saveUsingPOST_19
2019-03-14 08:49:55 -Generating unique operation named: updateUsingGET_14
2019-03-14 08:49:55 -Generating unique operation named: updateUsingHEAD_14
2019-03-14 08:49:55 -Generating unique operation named: updateUsingPOST_19
2019-03-14 08:49:55 -Generating unique operation named: updateUsingPUT_14
2019-03-14 08:49:55 -Generating unique operation named: updateUsingPATCH_14
2019-03-14 08:49:55 -Generating unique operation named: updateUsingDELETE_14
2019-03-14 08:49:55 -Generating unique operation named: updateUsingOPTIONS_14
2019-03-14 08:49:55 -Generating unique operation named: updateUsingTRACE_14
2019-03-14 08:49:55 -Generating unique operation named: addUsingGET_19
2019-03-14 08:49:55 -Generating unique operation named: editUsingGET_20
2019-03-14 08:49:55 -Generating unique operation named: listUsingGET_22
2019-03-14 08:49:55 -Generating unique operation named: removeUsingPOST_35
2019-03-14 08:49:55 -Generating unique operation named: removeUsingPOST_36
2019-03-14 08:49:55 -Generating unique operation named: saveUsingPOST_20
2019-03-14 08:49:55 -Generating unique operation named: updateUsingGET_15
2019-03-14 08:49:55 -Generating unique operation named: updateUsingHEAD_15
2019-03-14 08:49:55 -Generating unique operation named: updateUsingPOST_20
2019-03-14 08:49:55 -Generating unique operation named: updateUsingPUT_15
2019-03-14 08:49:55 -Generating unique operation named: updateUsingPATCH_15
2019-03-14 08:49:55 -Generating unique operation named: updateUsingDELETE_15
2019-03-14 08:49:55 -Generating unique operation named: updateUsingOPTIONS_15
2019-03-14 08:49:55 -Generating unique operation named: updateUsingTRACE_15
2019-03-14 08:49:55 -Starting Quartz Scheduler now
2019-03-14 08:49:55 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-14 08:49:55 -Starting...
2019-03-14 08:49:55 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-14 08:49:55 -Started.
2019-03-14 08:49:55 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-14 08:49:55 -Using a shared selector for servlet write/read
2019-03-14 08:49:55 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-14 08:49:55 -Started BootdoApplication in 31.477 seconds (JVM running for 33.098)
2019-03-14 08:49:55 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-14 08:49:56 -==> Parameters: 
2019-03-14 08:49:56 -<==      Total: 1
2019-03-14 08:49:59 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-14 08:49:59 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-14 08:49:59 -FrameworkServlet 'dispatcherServlet': initialization completed in 58 ms
2019-03-14 08:49:59 -Enabling session validation scheduler...
2019-03-14 08:49:59 -请求地址 : http://localhost:8081/login;JSESSIONID=c0bedfb8-8fc4-4a15-8542-1290a2806359
2019-03-14 08:49:59 -HTTP METHOD : GET
2019-03-14 08:49:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-14 08:49:59 -参数 : [{}]
2019-03-14 08:49:59 -耗时 : 4
2019-03-14 08:49:59 -返回值 : login
2019-03-14 08:50:01 -请求地址 : http://localhost:8081/getVerify
2019-03-14 08:50:01 -HTTP METHOD : GET
2019-03-14 08:50:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-14 08:50:01 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@e46d9f0, org.apache.shiro.web.servlet.ShiroHttpServletResponse@40b98102]
2019-03-14 08:50:01 -2839
2019-03-14 08:50:01 -耗时 : 456
2019-03-14 08:50:01 -返回值 : null
2019-03-14 08:50:06 -请求地址 : http://localhost:8081/login
2019-03-14 08:50:06 -HTTP METHOD : POST
2019-03-14 08:50:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-14 08:50:06 -参数 : [admin, 111111, 2839, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5de37644]
2019-03-14 08:50:06 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-14 08:50:06 -==> Parameters: admin(String)
2019-03-14 08:50:06 -<==      Total: 1
2019-03-14 08:50:06 -耗时 : 95
2019-03-14 08:50:06 -返回值 : {msg=操作成功, code=0}
2019-03-14 08:50:06 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-14 08:50:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 08:50:06 -==> Parameters: 1(Long), admin(String), 登录(String), 95(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-14 08:50:06.62(Timestamp)
2019-03-14 08:50:06 -请求地址 : http://localhost:8081/index
2019-03-14 08:50:06 -HTTP METHOD : GET
2019-03-14 08:50:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 08:50:06 -参数 : [{}]
2019-03-14 08:50:06 -<==    Updates: 1
2019-03-14 08:50:06 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 08:50:06 -==> Parameters: 1(Long)
2019-03-14 08:50:06 -<==      Total: 45
2019-03-14 08:50:06 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 08:50:06 -==> Parameters: 138(Long)
2019-03-14 08:50:06 -<==      Total: 1
2019-03-14 08:50:06 -耗时 : 171
2019-03-14 08:50:06 -返回值 : index_v1
2019-03-14 08:50:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 08:50:06 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 171(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 08:50:06.923(Timestamp)
2019-03-14 08:50:06 -<==    Updates: 1
2019-03-14 08:50:07 -请求地址 : http://localhost:8081/main
2019-03-14 08:50:07 -HTTP METHOD : GET
2019-03-14 08:50:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 08:50:07 -参数 : []
2019-03-14 08:50:07 -耗时 : 1
2019-03-14 08:50:07 -返回值 : main
2019-03-14 08:50:07 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 08:50:07 -HTTP METHOD : GET
2019-03-14 08:50:07 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 08:50:07 -参数 : []
2019-03-14 08:50:07 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 08:50:07 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 08:50:07 -<==      Total: 0
2019-03-14 08:50:07 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 08:50:07 -==> Parameters: 1(Long), 0(String)
2019-03-14 08:50:07 -<==      Total: 1
2019-03-14 08:50:07 -耗时 : 61
2019-03-14 08:50:07 -返回值 : com.bootdo.common.utils.PageUtils@1d8b5f9
2019-03-14 08:50:07 -请求地址 : http://localhost:8081/main
2019-03-14 08:50:07 -HTTP METHOD : GET
2019-03-14 08:50:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 08:50:07 -参数 : []
2019-03-14 08:50:07 -耗时 : 1
2019-03-14 08:50:07 -返回值 : main
2019-03-14 08:50:10 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-14 08:50:10 -==> Parameters: 1(Long)
2019-03-14 08:50:10 -<==      Total: 86
2019-03-14 08:50:10 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 08:50:10 -HTTP METHOD : GET
2019-03-14 08:50:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 08:50:10 -参数 : []
2019-03-14 08:50:10 -耗时 : 0
2019-03-14 08:50:10 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 08:50:11 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 08:50:11 -HTTP METHOD : GET
2019-03-14 08:50:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 08:50:11 -参数 : [{limit=10, offset=0}]
2019-03-14 08:50:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-14 08:50:11 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 08:50:11 -<==      Total: 3
2019-03-14 08:50:11 -==>  Preparing: select count(*) from elec_log 
2019-03-14 08:50:11 -==> Parameters: 
2019-03-14 08:50:11 -<==      Total: 1
2019-03-14 08:50:11 -耗时 : 40
2019-03-14 08:50:11 -返回值 : com.bootdo.common.utils.PageUtils@73a0e34e
2019-03-14 08:50:47 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 10]
2019-03-14 08:51:48 -请求地址 : http://localhost:8081/
2019-03-14 08:51:48 -HTTP METHOD : GET
2019-03-14 08:51:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-03-14 08:51:48 -参数 : [{}]
2019-03-14 08:51:48 -耗时 : 0
2019-03-14 08:51:48 -返回值 : redirect:/index
2019-03-14 08:51:48 -请求地址 : http://localhost:8081/login;JSESSIONID=2e9476fc-4b78-40e5-941b-2b71d1e13b5a
2019-03-14 08:51:48 -HTTP METHOD : GET
2019-03-14 08:51:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-14 08:51:48 -参数 : [{}]
2019-03-14 08:51:48 -耗时 : 1
2019-03-14 08:51:48 -返回值 : login
2019-03-14 08:51:49 -请求地址 : http://localhost:8081/getVerify
2019-03-14 08:51:49 -HTTP METHOD : GET
2019-03-14 08:51:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-14 08:51:49 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7e11264f, org.apache.shiro.web.servlet.ShiroHttpServletResponse@12e249d3]
2019-03-14 08:51:49 -0935
2019-03-14 08:51:49 -耗时 : 15
2019-03-14 08:51:49 -返回值 : null
2019-03-14 08:51:49 -请求地址 : http://localhost:8081/login
2019-03-14 08:51:49 -HTTP METHOD : GET
2019-03-14 08:51:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-14 08:51:49 -参数 : [{}]
2019-03-14 08:51:49 -耗时 : 0
2019-03-14 08:51:49 -返回值 : login
2019-03-14 08:51:58 -请求地址 : http://localhost:8081/login
2019-03-14 08:51:58 -HTTP METHOD : POST
2019-03-14 08:51:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-14 08:51:58 -参数 : [admin, 111111, 0935, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6a41f452]
2019-03-14 08:51:58 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-14 08:51:58 -==> Parameters: admin(String)
2019-03-14 08:51:58 -<==      Total: 1
2019-03-14 08:51:58 -耗时 : 10
2019-03-14 08:51:58 -返回值 : {msg=操作成功, code=0}
2019-03-14 08:51:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 08:51:58 -==> Parameters: 1(Long), admin(String), 登录(String), 11(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-14 08:51:58.227(Timestamp)
2019-03-14 08:51:58 -请求地址 : http://localhost:8081/index
2019-03-14 08:51:58 -HTTP METHOD : GET
2019-03-14 08:51:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 08:51:58 -参数 : [{}]
2019-03-14 08:51:58 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 08:51:58 -==> Parameters: 1(Long)
2019-03-14 08:51:58 -<==      Total: 45
2019-03-14 08:51:58 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 08:51:58 -==> Parameters: 138(Long)
2019-03-14 08:51:58 -<==      Total: 1
2019-03-14 08:51:58 -耗时 : 27
2019-03-14 08:51:58 -返回值 : index_v1
2019-03-14 08:51:58 -<==    Updates: 1
2019-03-14 08:51:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 08:51:58 -请求地址 : http://localhost:8081/main
2019-03-14 08:51:58 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 28(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 08:51:58.295(Timestamp)
2019-03-14 08:51:58 -HTTP METHOD : GET
2019-03-14 08:51:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 08:51:58 -参数 : []
2019-03-14 08:51:58 -耗时 : 18
2019-03-14 08:51:58 -返回值 : main
2019-03-14 08:51:58 -<==    Updates: 1
2019-03-14 08:51:58 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 08:51:58 -HTTP METHOD : GET
2019-03-14 08:51:58 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 08:51:58 -参数 : []
2019-03-14 08:51:58 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 08:51:58 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 08:51:58 -<==      Total: 0
2019-03-14 08:51:58 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 08:51:58 -==> Parameters: 1(Long), 0(String)
2019-03-14 08:51:58 -<==      Total: 1
2019-03-14 08:51:58 -耗时 : 12
2019-03-14 08:51:58 -返回值 : com.bootdo.common.utils.PageUtils@2d4c840e
2019-03-14 08:51:58 -请求地址 : http://localhost:8081/main
2019-03-14 08:51:58 -HTTP METHOD : GET
2019-03-14 08:51:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 08:51:58 -参数 : []
2019-03-14 08:51:58 -耗时 : 1
2019-03-14 08:51:58 -返回值 : main
2019-03-14 08:52:10 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-14 08:52:10 -==> Parameters: 1(Long)
2019-03-14 08:52:10 -<==      Total: 86
2019-03-14 08:52:10 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 08:52:10 -HTTP METHOD : GET
2019-03-14 08:52:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 08:52:10 -参数 : []
2019-03-14 08:52:10 -耗时 : 1
2019-03-14 08:52:10 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 08:52:11 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 08:52:11 -HTTP METHOD : GET
2019-03-14 08:52:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 08:52:11 -参数 : [{limit=10, offset=0}]
2019-03-14 08:52:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-14 08:52:11 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 08:52:11 -<==      Total: 3
2019-03-14 08:52:11 -==>  Preparing: select count(*) from elec_log 
2019-03-14 08:52:11 -==> Parameters: 
2019-03-14 08:52:11 -<==      Total: 1
2019-03-14 08:52:11 -耗时 : 15
2019-03-14 08:52:11 -返回值 : com.bootdo.common.utils.PageUtils@4f0eef43
2019-03-14 08:52:12 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-14 08:52:12 -HTTP METHOD : GET
2019-03-14 08:52:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-14 08:52:12 -参数 : []
2019-03-14 08:52:12 -耗时 : 0
2019-03-14 08:52:12 -返回值 : /moneyLog/waterLog/waterLog
2019-03-14 08:52:12 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-14 08:52:12 -HTTP METHOD : GET
2019-03-14 08:52:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-14 08:52:12 -参数 : [{limit=10, offset=0}]
2019-03-14 08:52:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-14 08:52:12 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 08:52:12 -<==      Total: 3
2019-03-14 08:52:12 -==>  Preparing: select count(*) from water_log 
2019-03-14 08:52:12 -==> Parameters: 
2019-03-14 08:52:12 -<==      Total: 1
2019-03-14 08:52:12 -耗时 : 29
2019-03-14 08:52:12 -返回值 : com.bootdo.common.utils.PageUtils@619f2ab8
2019-03-14 08:52:34 -请求地址 : http://localhost:8081/moneyLog/waterLog/add
2019-03-14 08:52:34 -HTTP METHOD : GET
2019-03-14 08:52:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.add
2019-03-14 08:52:34 -参数 : []
2019-03-14 08:52:34 -耗时 : 0
2019-03-14 08:52:34 -返回值 : moneyLog/waterLog/add
2019-03-14 08:53:02 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-14 08:53:02 -HTTP METHOD : GET
2019-03-14 08:53:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-14 08:53:02 -参数 : []
2019-03-14 08:53:02 -耗时 : 1
2019-03-14 08:53:02 -返回值 : /moneyLog/heatLog/heatLog
2019-03-14 08:53:03 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 08:53:03 -HTTP METHOD : GET
2019-03-14 08:53:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 08:53:03 -参数 : []
2019-03-14 08:53:03 -耗时 : 0
2019-03-14 08:53:03 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 08:53:04 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 08:53:04 -HTTP METHOD : GET
2019-03-14 08:53:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 08:53:04 -参数 : [{limit=10, offset=0}]
2019-03-14 08:53:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-14 08:53:04 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 08:53:04 -<==      Total: 3
2019-03-14 08:53:04 -==>  Preparing: select count(*) from elec_log 
2019-03-14 08:53:04 -==> Parameters: 
2019-03-14 08:53:04 -<==      Total: 1
2019-03-14 08:53:04 -耗时 : 8
2019-03-14 08:53:04 -返回值 : com.bootdo.common.utils.PageUtils@7883d5f7
2019-03-14 08:53:05 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-14 08:53:05 -HTTP METHOD : GET
2019-03-14 08:53:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-14 08:53:05 -参数 : []
2019-03-14 08:53:05 -耗时 : 1
2019-03-14 08:53:05 -返回值 : /moneyLog/heatLog/heatLog
2019-03-14 09:12:25 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-14 09:12:25 -==> Parameters: 1(Long)
2019-03-14 09:12:25 -<==      Total: 86
2019-03-14 09:12:25 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-14 09:12:25 -HTTP METHOD : GET
2019-03-14 09:12:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-14 09:12:25 -参数 : []
2019-03-14 09:12:25 -耗时 : 1
2019-03-14 09:12:25 -返回值 : /moneyLog/waterLog/waterLog
2019-03-14 09:12:25 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-14 09:12:25 -HTTP METHOD : GET
2019-03-14 09:12:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-14 09:12:25 -参数 : [{limit=10, offset=0}]
2019-03-14 09:12:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-14 09:12:25 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 09:12:25 -<==      Total: 3
2019-03-14 09:12:25 -==>  Preparing: select count(*) from water_log 
2019-03-14 09:12:25 -==> Parameters: 
2019-03-14 09:12:25 -<==      Total: 1
2019-03-14 09:12:25 -耗时 : 8
2019-03-14 09:12:25 -返回值 : com.bootdo.common.utils.PageUtils@2a6f9877
2019-03-14 09:12:38 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-14 09:12:38 -HTTP METHOD : GET
2019-03-14 09:12:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-14 09:12:38 -参数 : []
2019-03-14 09:12:38 -耗时 : 0
2019-03-14 09:12:38 -返回值 : /moneyLog/heatLog/heatLog
2019-03-14 09:12:39 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 09:12:39 -HTTP METHOD : GET
2019-03-14 09:12:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 09:12:39 -参数 : []
2019-03-14 09:12:39 -耗时 : 0
2019-03-14 09:12:39 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 09:12:39 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 09:12:39 -HTTP METHOD : GET
2019-03-14 09:12:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 09:12:39 -参数 : [{limit=10, offset=0}]
2019-03-14 09:12:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-14 09:12:39 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 09:12:39 -<==      Total: 3
2019-03-14 09:12:39 -==>  Preparing: select count(*) from elec_log 
2019-03-14 09:12:39 -==> Parameters: 
2019-03-14 09:12:39 -<==      Total: 1
2019-03-14 09:12:39 -耗时 : 12
2019-03-14 09:12:39 -返回值 : com.bootdo.common.utils.PageUtils@7e8b29bb
2019-03-14 09:15:49 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-14 09:15:49 -HTTP METHOD : GET
2019-03-14 09:15:49 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-14 09:15:49 -参数 : []
2019-03-14 09:15:49 -耗时 : 1
2019-03-14 09:15:49 -返回值 : /moneyLog/heatLog/heatLog
2019-03-14 09:20:47 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 441]
2019-03-14 09:49:59 -Validating all active sessions...
2019-03-14 09:49:59 -Finished session validation.  [2] sessions were stopped.
2019-03-14 09:50:47 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 874]
2019-03-14 10:20:47 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1307]
2019-03-14 10:49:58 -Validating all active sessions...
2019-03-14 10:49:58 -Finished session validation.  No sessions were stopped.
2019-03-14 10:50:47 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1740]
2019-03-14 10:56:13 -Starting BootdoApplication on ZJZL-20180906VX with PID 14508 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-14 10:56:13 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-14 10:56:13 -The following profiles are active: dev
2019-03-14 10:56:13 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a5b0b86: startup date [Thu Mar 14 10:56:13 CST 2019]; root of context hierarchy
2019-03-14 10:56:17 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-14 10:56:19 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d6f8395e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 10:56:20 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$c9516805] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 10:56:21 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 10:56:21 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 10:56:21 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 10:56:21 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-14 10:56:21 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-14 10:56:21 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 10:56:21 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 10:56:21 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 10:56:21 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 10:56:23 -Tomcat initialized with port(s): 8081 (http)
2019-03-14 10:56:23 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-14 10:56:23 -Starting service [Tomcat]
2019-03-14 10:56:23 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-14 10:56:23 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;D:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-14 10:56:23 -Initializing Spring embedded WebApplicationContext
2019-03-14 10:56:23 -Root WebApplicationContext: initialization completed in 10627 ms
2019-03-14 10:56:24 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-14 10:56:24 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-14 10:56:24 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-14 10:56:24 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-14 10:56:24 -Filter xssFilter was not registered (disabled)
2019-03-14 10:56:24 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-14 10:56:24 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-14 10:56:24 -Servlet statViewServlet mapped to [/druid/*]
2019-03-14 10:56:24 -Servlet dispatcherServlet mapped to [/]
2019-03-14 10:56:28 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a5b0b86: startup date [Thu Mar 14 10:56:13 CST 2019]; root of context hierarchy
2019-03-14 10:56:28 -Using default implementation for ThreadExecutor
2019-03-14 10:56:28 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-14 10:56:28 -Quartz Scheduler v.2.2.1 created.
2019-03-14 10:56:28 -RAMJobStore initialized.
2019-03-14 10:56:28 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-14 10:56:28 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-14 10:56:28 -Quartz scheduler version: 2.2.1
2019-03-14 10:56:28 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@5a58db42
2019-03-14 10:56:29 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-14 10:56:29 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-14 10:56:32 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-14 10:56:32 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-14 10:56:32 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-14 10:56:32 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-14 10:56:32 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-14 10:56:32 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-14 10:56:32 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-14 10:56:32 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-14 10:56:32 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-14 10:56:32 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 10:56:32 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-14 10:56:32 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-14 10:56:32 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-14 10:56:32 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-14 10:56:32 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-14 10:56:32 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 10:56:32 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-14 10:56:32 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-14 10:56:32 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-14 10:56:32 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-14 10:56:32 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 10:56:32 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-14 10:56:32 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-14 10:56:32 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-14 10:56:32 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-14 10:56:32 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 10:56:32 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 10:56:32 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-14 10:56:32 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-14 10:56:32 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-14 10:56:32 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-14 10:56:32 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-14 10:56:32 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-14 10:56:32 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-14 10:56:32 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-14 10:56:32 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-14 10:56:32 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 10:56:32 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-14 10:56:32 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-14 10:56:32 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 10:56:32 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-14 10:56:32 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-14 10:56:32 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-14 10:56:32 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-14 10:56:32 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 10:56:32 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-14 10:56:32 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-14 10:56:32 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-14 10:56:32 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-14 10:56:32 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-14 10:56:32 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-14 10:56:32 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-14 10:56:32 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-14 10:56:32 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-14 10:56:32 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-14 10:56:32 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 10:56:32 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-14 10:56:32 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2019-03-14 10:56:32 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-14 10:56:32 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-14 10:56:32 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-14 10:56:32 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-14 10:56:32 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-14 10:56:32 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-14 10:56:32 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 10:56:32 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-14 10:56:32 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-14 10:56:32 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 10:56:32 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-14 10:56:32 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-14 10:56:32 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-14 10:56:32 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-14 10:56:32 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-14 10:56:32 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-14 10:56:32 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 10:56:32 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-14 10:56:32 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-14 10:56:32 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-14 10:56:32 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-14 10:56:32 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-14 10:56:32 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-14 10:56:32 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-14 10:56:32 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-14 10:56:32 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 10:56:32 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-14 10:56:32 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-14 10:56:32 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 10:56:32 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-14 10:56:32 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-14 10:56:32 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-14 10:56:32 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-14 10:56:32 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-03-14 10:56:32 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-14 10:56:32 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-14 10:56:32 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-14 10:56:32 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-14 10:56:32 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 10:56:32 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-14 10:56:32 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-14 10:56:32 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 10:56:32 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-14 10:56:32 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-14 10:56:32 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-14 10:56:32 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-14 10:56:32 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 10:56:32 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-14 10:56:32 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-14 10:56:32 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 10:56:32 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-14 10:56:32 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-14 10:56:32 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-14 10:56:32 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-14 10:56:32 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 10:56:32 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-14 10:56:32 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-14 10:56:32 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 10:56:32 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-14 10:56:32 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-14 10:56:32 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-14 10:56:32 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-14 10:56:32 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-14 10:56:32 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 10:56:32 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-14 10:56:32 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-14 10:56:32 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-14 10:56:32 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-14 10:56:32 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 10:56:32 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 10:56:32 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-14 10:56:32 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-14 10:56:32 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-14 10:56:32 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-14 10:56:32 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 10:56:32 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-14 10:56:32 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 10:56:32 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-14 10:56:32 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 10:56:32 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-14 10:56:32 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-14 10:56:32 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-14 10:56:32 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-14 10:56:32 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-14 10:56:32 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-14 10:56:32 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-14 10:56:32 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-14 10:56:32 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-14 10:56:32 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 10:56:32 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-14 10:56:32 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-14 10:56:32 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-14 10:56:32 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-14 10:56:32 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-14 10:56:32 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-14 10:56:32 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-14 10:56:32 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-14 10:56:32 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-14 10:56:32 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-14 10:56:32 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 10:56:32 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-14 10:56:32 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-14 10:56:32 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-14 10:56:32 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-14 10:56:32 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-14 10:56:32 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-14 10:56:32 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-14 10:56:32 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-14 10:56:32 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-14 10:56:32 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-14 10:56:32 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-14 10:56:32 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-14 10:56:32 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 10:56:32 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-14 10:56:32 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-14 10:56:32 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-14 10:56:32 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-14 10:56:32 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 10:56:32 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-14 10:56:32 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-14 10:56:32 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-14 10:56:32 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 10:56:32 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-14 10:56:32 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-14 10:56:32 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-14 10:56:32 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-14 10:56:32 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-14 10:56:32 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-14 10:56:32 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-14 10:56:32 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-14 10:56:32 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-14 10:56:32 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-14 10:56:32 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-14 10:56:32 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-14 10:56:32 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-14 10:56:32 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-14 10:56:32 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-14 10:56:32 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-14 10:56:32 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-14 10:56:32 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 10:56:32 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-14 10:56:32 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-14 10:56:32 -Mapped "{[/water/water/queryWater],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.queryWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 10:56:32 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 10:56:32 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 10:56:32 -Mapped "{[/water/waterCost/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.add()
2019-03-14 10:56:32 -Mapped "{[/water/waterCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long)
2019-03-14 10:56:32 -Mapped "{[/water/waterCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long[])
2019-03-14 10:56:32 -Mapped "{[/water/waterCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.update(com.bootdo.water.domain.WaterCostDO)
2019-03-14 10:56:32 -Mapped "{[/water/waterCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 10:56:32 -Mapped "{[/water/waterCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.save(com.bootdo.water.domain.WaterCostDO)
2019-03-14 10:56:32 -Mapped "{[/water/waterCost],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.WaterCost()
2019-03-14 10:56:32 -Mapped "{[/water/waterCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 10:56:32 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2019-03-14 10:56:32 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-14 10:56:32 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-14 10:56:32 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-14 10:56:32 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-14 10:56:32 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-14 10:56:32 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 10:56:32 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-14 10:56:32 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-14 10:56:32 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 10:56:32 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 10:56:32 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-14 10:56:32 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-14 10:56:32 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-14 10:56:32 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-14 10:56:32 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-14 10:56:33 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-14 10:56:33 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-14 10:56:33 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-14 10:56:34 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-14 10:56:34 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a5b0b86: startup date [Thu Mar 14 10:56:13 CST 2019]; root of context hierarchy
2019-03-14 10:56:34 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-14 10:56:34 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-14 10:56:34 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-14 10:56:34 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-14 10:56:35 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-14 10:56:37 -Registering beans for JMX exposure on startup
2019-03-14 10:56:37 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-14 10:56:37 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-14 10:56:37 -Starting beans in phase 2147483647
2019-03-14 10:56:37 -Context refreshed
2019-03-14 10:56:37 -Found 1 custom documentation plugin(s)
2019-03-14 10:56:37 -Scanning for api listing references
2019-03-14 10:56:38 -Generating unique operation named: removeUsingPOST_1
2019-03-14 10:56:38 -Generating unique operation named: addUsingGET_1
2019-03-14 10:56:38 -Generating unique operation named: editUsingGET_1
2019-03-14 10:56:38 -Generating unique operation named: listUsingGET_1
2019-03-14 10:56:38 -Generating unique operation named: removeUsingPOST_2
2019-03-14 10:56:38 -Generating unique operation named: removeUsingPOST_3
2019-03-14 10:56:38 -Generating unique operation named: saveUsingPOST_1
2019-03-14 10:56:38 -Generating unique operation named: updateUsingGET_1
2019-03-14 10:56:38 -Generating unique operation named: updateUsingHEAD_1
2019-03-14 10:56:38 -Generating unique operation named: updateUsingPOST_1
2019-03-14 10:56:38 -Generating unique operation named: updateUsingPUT_1
2019-03-14 10:56:38 -Generating unique operation named: updateUsingPATCH_1
2019-03-14 10:56:38 -Generating unique operation named: updateUsingDELETE_1
2019-03-14 10:56:38 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-14 10:56:38 -Generating unique operation named: updateUsingTRACE_1
2019-03-14 10:56:38 -Generating unique operation named: addUsingGET_2
2019-03-14 10:56:38 -Generating unique operation named: editUsingGET_2
2019-03-14 10:56:38 -Generating unique operation named: listUsingGET_2
2019-03-14 10:56:38 -Generating unique operation named: removeUsingPOST_4
2019-03-14 10:56:38 -Generating unique operation named: removeUsingPOST_5
2019-03-14 10:56:38 -Generating unique operation named: saveUsingPOST_2
2019-03-14 10:56:38 -Generating unique operation named: updateUsingGET_2
2019-03-14 10:56:38 -Generating unique operation named: updateUsingHEAD_2
2019-03-14 10:56:38 -Generating unique operation named: updateUsingPOST_2
2019-03-14 10:56:38 -Generating unique operation named: updateUsingPUT_2
2019-03-14 10:56:38 -Generating unique operation named: updateUsingPATCH_2
2019-03-14 10:56:39 -Generating unique operation named: updateUsingDELETE_2
2019-03-14 10:56:39 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-14 10:56:39 -Generating unique operation named: updateUsingTRACE_2
2019-03-14 10:56:39 -Generating unique operation named: addUsingGET_3
2019-03-14 10:56:39 -Generating unique operation named: editUsingGET_3
2019-03-14 10:56:39 -Generating unique operation named: listUsingGET_3
2019-03-14 10:56:39 -Generating unique operation named: removeUsingPOST_6
2019-03-14 10:56:39 -Generating unique operation named: removeUsingPOST_7
2019-03-14 10:56:39 -Generating unique operation named: saveUsingPOST_3
2019-03-14 10:56:39 -Generating unique operation named: updateUsingGET_3
2019-03-14 10:56:39 -Generating unique operation named: updateUsingHEAD_3
2019-03-14 10:56:39 -Generating unique operation named: updateUsingPOST_3
2019-03-14 10:56:39 -Generating unique operation named: updateUsingPUT_3
2019-03-14 10:56:39 -Generating unique operation named: updateUsingPATCH_3
2019-03-14 10:56:39 -Generating unique operation named: updateUsingDELETE_3
2019-03-14 10:56:39 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-14 10:56:39 -Generating unique operation named: updateUsingTRACE_3
2019-03-14 10:56:39 -Generating unique operation named: addUsingGET_4
2019-03-14 10:56:39 -Generating unique operation named: editUsingGET_4
2019-03-14 10:56:39 -Generating unique operation named: listUsingGET_4
2019-03-14 10:56:39 -Generating unique operation named: removeUsingPOST_8
2019-03-14 10:56:39 -Generating unique operation named: removeUsingPOST_9
2019-03-14 10:56:39 -Generating unique operation named: saveUsingPOST_4
2019-03-14 10:56:39 -Generating unique operation named: updateUsingGET_4
2019-03-14 10:56:39 -Generating unique operation named: updateUsingHEAD_4
2019-03-14 10:56:39 -Generating unique operation named: updateUsingPOST_4
2019-03-14 10:56:39 -Generating unique operation named: updateUsingPUT_4
2019-03-14 10:56:39 -Generating unique operation named: updateUsingPATCH_4
2019-03-14 10:56:39 -Generating unique operation named: updateUsingDELETE_4
2019-03-14 10:56:39 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-14 10:56:39 -Generating unique operation named: updateUsingTRACE_4
2019-03-14 10:56:39 -Generating unique operation named: ElecUsingGET_1
2019-03-14 10:56:39 -Generating unique operation named: addUsingGET_5
2019-03-14 10:56:39 -Generating unique operation named: editUsingGET_5
2019-03-14 10:56:39 -Generating unique operation named: listUsingGET_5
2019-03-14 10:56:39 -Generating unique operation named: removeUsingPOST_10
2019-03-14 10:56:39 -Generating unique operation named: removeUsingPOST_11
2019-03-14 10:56:39 -Generating unique operation named: saveUsingPOST_5
2019-03-14 10:56:39 -Generating unique operation named: updateUsingGET_5
2019-03-14 10:56:39 -Generating unique operation named: updateUsingHEAD_5
2019-03-14 10:56:39 -Generating unique operation named: updateUsingPOST_5
2019-03-14 10:56:39 -Generating unique operation named: updateUsingPUT_5
2019-03-14 10:56:39 -Generating unique operation named: updateUsingPATCH_5
2019-03-14 10:56:39 -Generating unique operation named: updateUsingDELETE_5
2019-03-14 10:56:39 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-14 10:56:39 -Generating unique operation named: updateUsingTRACE_5
2019-03-14 10:56:39 -Generating unique operation named: editUsingGET_6
2019-03-14 10:56:39 -Generating unique operation named: listUsingGET_6
2019-03-14 10:56:39 -Generating unique operation named: updateUsingPOST_6
2019-03-14 10:56:39 -Generating unique operation named: addUsingGET_6
2019-03-14 10:56:39 -Generating unique operation named: editUsingGET_7
2019-03-14 10:56:39 -Generating unique operation named: listUsingGET_7
2019-03-14 10:56:39 -Generating unique operation named: removeUsingPOST_12
2019-03-14 10:56:39 -Generating unique operation named: removeUsingPOST_13
2019-03-14 10:56:39 -Generating unique operation named: saveUsingPOST_6
2019-03-14 10:56:39 -Generating unique operation named: updateUsingGET_6
2019-03-14 10:56:39 -Generating unique operation named: updateUsingHEAD_6
2019-03-14 10:56:39 -Generating unique operation named: updateUsingPOST_7
2019-03-14 10:56:39 -Generating unique operation named: updateUsingPUT_6
2019-03-14 10:56:39 -Generating unique operation named: updateUsingPATCH_6
2019-03-14 10:56:39 -Generating unique operation named: updateUsingDELETE_6
2019-03-14 10:56:39 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-14 10:56:39 -Generating unique operation named: updateUsingTRACE_6
2019-03-14 10:56:39 -Generating unique operation named: addUsingGET_7
2019-03-14 10:56:39 -Generating unique operation named: editUsingGET_8
2019-03-14 10:56:39 -Generating unique operation named: listUsingGET_8
2019-03-14 10:56:39 -Generating unique operation named: removeUsingPOST_14
2019-03-14 10:56:39 -Generating unique operation named: removeUsingPOST_15
2019-03-14 10:56:39 -Generating unique operation named: saveUsingPOST_7
2019-03-14 10:56:39 -Generating unique operation named: updateUsingGET_7
2019-03-14 10:56:39 -Generating unique operation named: updateUsingHEAD_7
2019-03-14 10:56:39 -Generating unique operation named: updateUsingPOST_8
2019-03-14 10:56:39 -Generating unique operation named: updateUsingPUT_7
2019-03-14 10:56:39 -Generating unique operation named: updateUsingPATCH_7
2019-03-14 10:56:39 -Generating unique operation named: updateUsingDELETE_7
2019-03-14 10:56:39 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-14 10:56:39 -Generating unique operation named: updateUsingTRACE_7
2019-03-14 10:56:39 -Generating unique operation named: addUsingGET_8
2019-03-14 10:56:39 -Generating unique operation named: editUsingGET_9
2019-03-14 10:56:39 -Generating unique operation named: listUsingGET_9
2019-03-14 10:56:39 -Generating unique operation named: removeUsingPOST_16
2019-03-14 10:56:39 -Generating unique operation named: removeUsingPOST_17
2019-03-14 10:56:39 -Generating unique operation named: saveUsingPOST_8
2019-03-14 10:56:39 -Generating unique operation named: updateUsingGET_8
2019-03-14 10:56:39 -Generating unique operation named: updateUsingHEAD_8
2019-03-14 10:56:39 -Generating unique operation named: updateUsingPOST_9
2019-03-14 10:56:39 -Generating unique operation named: updateUsingPUT_8
2019-03-14 10:56:39 -Generating unique operation named: updateUsingPATCH_8
2019-03-14 10:56:39 -Generating unique operation named: updateUsingDELETE_8
2019-03-14 10:56:39 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-14 10:56:39 -Generating unique operation named: updateUsingTRACE_8
2019-03-14 10:56:39 -Generating unique operation named: addUsingGET_9
2019-03-14 10:56:39 -Generating unique operation named: editUsingGET_10
2019-03-14 10:56:39 -Generating unique operation named: infoUsingGET_1
2019-03-14 10:56:39 -Generating unique operation named: infoUsingHEAD_1
2019-03-14 10:56:39 -Generating unique operation named: infoUsingPOST_1
2019-03-14 10:56:39 -Generating unique operation named: infoUsingPUT_1
2019-03-14 10:56:39 -Generating unique operation named: infoUsingPATCH_1
2019-03-14 10:56:39 -Generating unique operation named: infoUsingDELETE_1
2019-03-14 10:56:39 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-14 10:56:39 -Generating unique operation named: infoUsingTRACE_1
2019-03-14 10:56:39 -Generating unique operation named: listUsingGET_10
2019-03-14 10:56:39 -Generating unique operation named: removeUsingPOST_18
2019-03-14 10:56:39 -Generating unique operation named: removeUsingPOST_19
2019-03-14 10:56:39 -Generating unique operation named: saveUsingPOST_9
2019-03-14 10:56:39 -Generating unique operation named: updateUsingPOST_10
2019-03-14 10:56:39 -Generating unique operation named: listUsingGET_11
2019-03-14 10:56:39 -Generating unique operation named: removeUsingPOST_20
2019-03-14 10:56:39 -Generating unique operation named: welcomeUsingGET_1
2019-03-14 10:56:40 -Generating unique operation named: addUsingGET_10
2019-03-14 10:56:40 -Generating unique operation named: editUsingGET_11
2019-03-14 10:56:40 -Generating unique operation named: listUsingGET_12
2019-03-14 10:56:40 -Generating unique operation named: removeUsingPOST_21
2019-03-14 10:56:40 -Generating unique operation named: saveUsingPOST_10
2019-03-14 10:56:40 -Generating unique operation named: treeUsingGET_1
2019-03-14 10:56:40 -Generating unique operation named: treeUsingGET_2
2019-03-14 10:56:40 -Generating unique operation named: updateUsingPOST_11
2019-03-14 10:56:40 -Generating unique operation named: addUsingGET_11
2019-03-14 10:56:40 -Generating unique operation named: editUsingGET_12
2019-03-14 10:56:40 -Generating unique operation named: listUsingGET_13
2019-03-14 10:56:40 -Generating unique operation named: removeUsingPOST_22
2019-03-14 10:56:40 -Generating unique operation named: removeUsingPOST_23
2019-03-14 10:56:40 -Generating unique operation named: saveUsingPOST_11
2019-03-14 10:56:40 -Generating unique operation named: updateUsingGET_9
2019-03-14 10:56:40 -Generating unique operation named: updateUsingHEAD_9
2019-03-14 10:56:40 -Generating unique operation named: updateUsingPOST_12
2019-03-14 10:56:40 -Generating unique operation named: updateUsingPUT_9
2019-03-14 10:56:40 -Generating unique operation named: updateUsingPATCH_9
2019-03-14 10:56:40 -Generating unique operation named: updateUsingDELETE_9
2019-03-14 10:56:40 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-14 10:56:40 -Generating unique operation named: updateUsingTRACE_9
2019-03-14 10:56:40 -Generating unique operation named: addUsingGET_12
2019-03-14 10:56:40 -Generating unique operation named: editUsingGET_13
2019-03-14 10:56:40 -Generating unique operation named: listUsingGET_14
2019-03-14 10:56:40 -Generating unique operation named: removeUsingPOST_24
2019-03-14 10:56:40 -Generating unique operation named: removeUsingPOST_25
2019-03-14 10:56:40 -Generating unique operation named: saveUsingPOST_12
2019-03-14 10:56:40 -Generating unique operation named: updateUsingGET_10
2019-03-14 10:56:40 -Generating unique operation named: updateUsingHEAD_10
2019-03-14 10:56:40 -Generating unique operation named: updateUsingPOST_13
2019-03-14 10:56:40 -Generating unique operation named: updateUsingPUT_10
2019-03-14 10:56:40 -Generating unique operation named: updateUsingPATCH_10
2019-03-14 10:56:40 -Generating unique operation named: updateUsingDELETE_10
2019-03-14 10:56:40 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-14 10:56:40 -Generating unique operation named: updateUsingTRACE_10
2019-03-14 10:56:40 -Generating unique operation named: addUsingGET_13
2019-03-14 10:56:40 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-14 10:56:40 -Generating unique operation named: editUsingGET_14
2019-03-14 10:56:40 -Generating unique operation named: listUsingGET_15
2019-03-14 10:56:40 -Generating unique operation named: saveUsingPOST_13
2019-03-14 10:56:40 -Generating unique operation named: saveUsingPOST_14
2019-03-14 10:56:40 -Generating unique operation named: updateUsingPOST_14
2019-03-14 10:56:40 -Generating unique operation named: listUsingGET_16
2019-03-14 10:56:40 -Generating unique operation named: listUsingHEAD_1
2019-03-14 10:56:40 -Generating unique operation named: listUsingPOST_1
2019-03-14 10:56:40 -Generating unique operation named: listUsingPUT_1
2019-03-14 10:56:40 -Generating unique operation named: listUsingPATCH_1
2019-03-14 10:56:40 -Generating unique operation named: listUsingDELETE_1
2019-03-14 10:56:40 -Generating unique operation named: listUsingOPTIONS_1
2019-03-14 10:56:40 -Generating unique operation named: listUsingTRACE_1
2019-03-14 10:56:40 -Generating unique operation named: addUsingGET_14
2019-03-14 10:56:40 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-14 10:56:40 -Generating unique operation named: editUsingGET_15
2019-03-14 10:56:40 -Generating unique operation named: listUsingGET_17
2019-03-14 10:56:40 -Generating unique operation named: removeUsingPOST_26
2019-03-14 10:56:40 -Generating unique operation named: saveUsingPOST_15
2019-03-14 10:56:40 -Generating unique operation named: treeUsingGET_3
2019-03-14 10:56:40 -Generating unique operation named: treeViewUsingGET_1
2019-03-14 10:56:40 -Generating unique operation named: updateUsingPOST_15
2019-03-14 10:56:40 -Generating unique operation named: addUsingGET_15
2019-03-14 10:56:40 -Generating unique operation named: editUsingGET_16
2019-03-14 10:56:40 -Generating unique operation named: listUsingGET_18
2019-03-14 10:56:40 -Generating unique operation named: removeUsingPOST_27
2019-03-14 10:56:40 -Generating unique operation named: removeUsingPOST_28
2019-03-14 10:56:40 -Generating unique operation named: saveUsingPOST_16
2019-03-14 10:56:40 -Generating unique operation named: updateUsingGET_11
2019-03-14 10:56:40 -Generating unique operation named: updateUsingHEAD_11
2019-03-14 10:56:40 -Generating unique operation named: updateUsingPOST_16
2019-03-14 10:56:40 -Generating unique operation named: updateUsingPUT_11
2019-03-14 10:56:40 -Generating unique operation named: updateUsingPATCH_11
2019-03-14 10:56:40 -Generating unique operation named: updateUsingDELETE_11
2019-03-14 10:56:40 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-14 10:56:40 -Generating unique operation named: updateUsingTRACE_11
2019-03-14 10:56:40 -Generating unique operation named: addUsingGET_16
2019-03-14 10:56:40 -Generating unique operation named: editUsingGET_17
2019-03-14 10:56:40 -Generating unique operation named: listUsingGET_19
2019-03-14 10:56:40 -Generating unique operation named: removeUsingPOST_29
2019-03-14 10:56:41 -Generating unique operation named: removeUsingPOST_30
2019-03-14 10:56:41 -Generating unique operation named: saveUsingPOST_17
2019-03-14 10:56:41 -Generating unique operation named: updateUsingGET_12
2019-03-14 10:56:41 -Generating unique operation named: updateUsingHEAD_12
2019-03-14 10:56:41 -Generating unique operation named: updateUsingPOST_17
2019-03-14 10:56:41 -Generating unique operation named: updateUsingPUT_12
2019-03-14 10:56:41 -Generating unique operation named: updateUsingPATCH_12
2019-03-14 10:56:41 -Generating unique operation named: updateUsingDELETE_12
2019-03-14 10:56:41 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-14 10:56:41 -Generating unique operation named: updateUsingTRACE_12
2019-03-14 10:56:41 -Generating unique operation named: addUsingGET_17
2019-03-14 10:56:41 -Generating unique operation named: editUsingGET_18
2019-03-14 10:56:41 -Generating unique operation named: listUsingGET_20
2019-03-14 10:56:41 -Generating unique operation named: removeUsingPOST_31
2019-03-14 10:56:41 -Generating unique operation named: removeUsingPOST_32
2019-03-14 10:56:41 -Generating unique operation named: saveUsingPOST_18
2019-03-14 10:56:41 -Generating unique operation named: updateUsingGET_13
2019-03-14 10:56:41 -Generating unique operation named: updateUsingHEAD_13
2019-03-14 10:56:41 -Generating unique operation named: updateUsingPOST_18
2019-03-14 10:56:41 -Generating unique operation named: updateUsingPUT_13
2019-03-14 10:56:41 -Generating unique operation named: updateUsingPATCH_13
2019-03-14 10:56:41 -Generating unique operation named: updateUsingDELETE_13
2019-03-14 10:56:41 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-14 10:56:41 -Generating unique operation named: updateUsingTRACE_13
2019-03-14 10:56:41 -Generating unique operation named: addUsingGET_18
2019-03-14 10:56:41 -Generating unique operation named: editUsingGET_19
2019-03-14 10:56:41 -Generating unique operation named: listUsingGET_21
2019-03-14 10:56:41 -Generating unique operation named: removeUsingPOST_33
2019-03-14 10:56:41 -Generating unique operation named: removeUsingPOST_34
2019-03-14 10:56:41 -Generating unique operation named: saveUsingPOST_19
2019-03-14 10:56:41 -Generating unique operation named: updateUsingGET_14
2019-03-14 10:56:41 -Generating unique operation named: updateUsingHEAD_14
2019-03-14 10:56:41 -Generating unique operation named: updateUsingPOST_19
2019-03-14 10:56:41 -Generating unique operation named: updateUsingPUT_14
2019-03-14 10:56:41 -Generating unique operation named: updateUsingPATCH_14
2019-03-14 10:56:41 -Generating unique operation named: updateUsingDELETE_14
2019-03-14 10:56:41 -Generating unique operation named: updateUsingOPTIONS_14
2019-03-14 10:56:41 -Generating unique operation named: updateUsingTRACE_14
2019-03-14 10:56:41 -Starting Quartz Scheduler now
2019-03-14 10:56:41 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-14 10:56:41 -Starting...
2019-03-14 10:56:41 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-14 10:56:41 -Started.
2019-03-14 10:56:41 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-14 10:56:41 -Using a shared selector for servlet write/read
2019-03-14 10:56:41 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-14 10:56:41 -Started BootdoApplication in 30.428 seconds (JVM running for 32.204)
2019-03-14 10:56:41 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-14 10:56:42 -==> Parameters: 
2019-03-14 10:56:42 -<==      Total: 1
2019-03-14 10:56:46 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-14 10:56:46 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-14 10:56:46 -FrameworkServlet 'dispatcherServlet': initialization completed in 66 ms
2019-03-14 10:56:46 -Enabling session validation scheduler...
2019-03-14 10:56:46 -请求地址 : http://localhost:8081/login;JSESSIONID=95fbbcd6-923f-4c76-9c1b-5c69433de5be
2019-03-14 10:56:46 -HTTP METHOD : GET
2019-03-14 10:56:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-14 10:56:46 -参数 : [{}]
2019-03-14 10:56:46 -耗时 : 6
2019-03-14 10:56:46 -返回值 : login
2019-03-14 10:56:48 -请求地址 : http://localhost:8081/getVerify
2019-03-14 10:56:48 -HTTP METHOD : GET
2019-03-14 10:56:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-14 10:56:48 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@2ff3faa, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2ec040bb]
2019-03-14 10:56:58 -9829
2019-03-14 10:56:58 -耗时 : 10472
2019-03-14 10:56:58 -返回值 : null
2019-03-14 10:56:58 -请求地址 : http://localhost:8081/login
2019-03-14 10:56:58 -HTTP METHOD : GET
2019-03-14 10:56:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-14 10:56:58 -参数 : [{}]
2019-03-14 10:56:58 -耗时 : 0
2019-03-14 10:56:58 -返回值 : login
2019-03-14 10:57:20 -请求地址 : http://localhost:8081/login
2019-03-14 10:57:20 -HTTP METHOD : POST
2019-03-14 10:57:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-14 10:57:20 -参数 : [admin, 111111, 9829, org.apache.shiro.web.servlet.ShiroHttpServletRequest@7805efb2]
2019-03-14 10:57:20 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-14 10:57:20 -==> Parameters: admin(String)
2019-03-14 10:57:20 -<==      Total: 1
2019-03-14 10:57:20 -耗时 : 138
2019-03-14 10:57:20 -返回值 : {msg=操作成功, code=0}
2019-03-14 10:57:20 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-14 10:57:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 10:57:20 -==> Parameters: 1(Long), admin(String), 登录(String), 138(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-14 10:57:20.501(Timestamp)
2019-03-14 10:57:20 -请求地址 : http://localhost:8081/index
2019-03-14 10:57:20 -HTTP METHOD : GET
2019-03-14 10:57:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 10:57:20 -参数 : [{}]
2019-03-14 10:57:20 -<==    Updates: 1
2019-03-14 10:57:20 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 10:57:20 -==> Parameters: 1(Long)
2019-03-14 10:57:20 -<==      Total: 45
2019-03-14 10:57:20 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 10:57:20 -==> Parameters: 138(Long)
2019-03-14 10:57:20 -<==      Total: 1
2019-03-14 10:57:20 -耗时 : 316
2019-03-14 10:57:20 -返回值 : index_v1
2019-03-14 10:57:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 10:57:21 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 316(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 10:57:21.02(Timestamp)
2019-03-14 10:57:21 -<==    Updates: 1
2019-03-14 10:57:21 -请求地址 : http://localhost:8081/main
2019-03-14 10:57:21 -HTTP METHOD : GET
2019-03-14 10:57:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 10:57:21 -参数 : []
2019-03-14 10:57:21 -耗时 : 0
2019-03-14 10:57:21 -返回值 : main
2019-03-14 10:57:21 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 10:57:21 -HTTP METHOD : GET
2019-03-14 10:57:21 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 10:57:21 -参数 : []
2019-03-14 10:57:21 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 10:57:21 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 10:57:21 -<==      Total: 0
2019-03-14 10:57:21 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 10:57:21 -==> Parameters: 1(Long), 0(String)
2019-03-14 10:57:21 -<==      Total: 1
2019-03-14 10:57:21 -耗时 : 38
2019-03-14 10:57:21 -返回值 : com.bootdo.common.utils.PageUtils@71eb2ef5
2019-03-14 10:57:21 -请求地址 : http://localhost:8081/main
2019-03-14 10:57:21 -HTTP METHOD : GET
2019-03-14 10:57:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 10:57:21 -参数 : []
2019-03-14 10:57:21 -耗时 : 2
2019-03-14 10:57:21 -返回值 : main
2019-03-14 10:57:27 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-14 10:57:27 -==> Parameters: 1(Long)
2019-03-14 10:57:27 -<==      Total: 86
2019-03-14 10:57:27 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 10:57:27 -HTTP METHOD : GET
2019-03-14 10:57:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 10:57:27 -参数 : []
2019-03-14 10:57:27 -耗时 : 1
2019-03-14 10:57:27 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 10:57:33 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3]
2019-03-14 11:00:47 -请求地址 : http://localhost:8081/index
2019-03-14 11:00:47 -HTTP METHOD : GET
2019-03-14 11:00:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 11:00:47 -参数 : [{}]
2019-03-14 11:00:47 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 11:00:47 -==> Parameters: 1(Long)
2019-03-14 11:00:47 -<==      Total: 45
2019-03-14 11:00:47 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 11:00:47 -==> Parameters: 138(Long)
2019-03-14 11:00:47 -<==      Total: 1
2019-03-14 11:00:47 -耗时 : 28
2019-03-14 11:00:47 -返回值 : index_v1
2019-03-14 11:00:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 11:00:47 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 11:00:47.468(Timestamp)
2019-03-14 11:00:47 -请求地址 : http://localhost:8081/main
2019-03-14 11:00:47 -HTTP METHOD : GET
2019-03-14 11:00:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 11:00:47 -参数 : []
2019-03-14 11:00:47 -耗时 : 1
2019-03-14 11:00:47 -返回值 : main
2019-03-14 11:00:47 -<==    Updates: 1
2019-03-14 11:00:48 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 11:00:48 -HTTP METHOD : GET
2019-03-14 11:00:48 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 11:00:48 -参数 : []
2019-03-14 11:00:48 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 11:00:48 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 11:00:48 -<==      Total: 0
2019-03-14 11:00:48 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 11:00:48 -==> Parameters: 1(Long), 0(String)
2019-03-14 11:00:48 -<==      Total: 1
2019-03-14 11:00:48 -耗时 : 10
2019-03-14 11:00:48 -返回值 : com.bootdo.common.utils.PageUtils@6500398b
2019-03-14 11:00:48 -请求地址 : http://localhost:8081/main
2019-03-14 11:00:48 -HTTP METHOD : GET
2019-03-14 11:00:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 11:00:48 -参数 : []
2019-03-14 11:00:48 -耗时 : 1
2019-03-14 11:00:48 -返回值 : main
2019-03-14 11:00:51 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 11:00:51 -HTTP METHOD : GET
2019-03-14 11:00:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 11:00:51 -参数 : []
2019-03-14 11:00:51 -耗时 : 1
2019-03-14 11:00:51 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 11:00:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 11:00:52 -HTTP METHOD : GET
2019-03-14 11:00:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:00:52 -参数 : [userType]
2019-03-14 11:00:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:00:52 -==> Parameters: userType(String)
2019-03-14 11:00:52 -<==      Total: 2
2019-03-14 11:00:52 -耗时 : 25
2019-03-14 11:00:52 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 11:00:52 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:00:52 -HTTP METHOD : GET
2019-03-14 11:00:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:00:52 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 11:00:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-14 11:00:52 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:00:52 -<==      Total: 3
2019-03-14 11:00:52 -==>  Preparing: select count(*) from elec_log 
2019-03-14 11:00:52 -==> Parameters: 
2019-03-14 11:00:52 -<==      Total: 1
2019-03-14 11:00:52 -耗时 : 83
2019-03-14 11:00:52 -返回值 : com.bootdo.common.utils.PageUtils@5cd3d4a0
2019-03-14 11:01:07 -请求地址 : http://localhost:8081/moneyLog/elecLog/add
2019-03-14 11:01:07 -HTTP METHOD : GET
2019-03-14 11:01:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.add
2019-03-14 11:01:07 -参数 : []
2019-03-14 11:01:07 -耗时 : 1
2019-03-14 11:01:07 -返回值 : moneyLog/elecLog/add
2019-03-14 11:01:33 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-14 11:01:33 -HTTP METHOD : GET
2019-03-14 11:01:33 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-14 11:01:33 -参数 : []
2019-03-14 11:01:33 -耗时 : 1
2019-03-14 11:01:33 -返回值 : system/dept/deptTree
2019-03-14 11:01:34 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-14 11:01:34 -HTTP METHOD : GET
2019-03-14 11:01:34 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-14 11:01:34 -参数 : []
2019-03-14 11:01:34 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-14 11:01:34 -==> Parameters: 
2019-03-14 11:01:34 -<==      Total: 3
2019-03-14 11:01:34 -耗时 : 21
2019-03-14 11:01:34 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-14 11:02:56 -请求地址 : http://localhost:8081/index
2019-03-14 11:02:56 -HTTP METHOD : GET
2019-03-14 11:02:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 11:02:56 -参数 : [{}]
2019-03-14 11:02:56 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 11:02:56 -==> Parameters: 1(Long)
2019-03-14 11:02:56 -<==      Total: 45
2019-03-14 11:02:56 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 11:02:56 -==> Parameters: 138(Long)
2019-03-14 11:02:56 -<==      Total: 1
2019-03-14 11:02:56 -耗时 : 36
2019-03-14 11:02:56 -返回值 : index_v1
2019-03-14 11:02:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 11:02:56 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 36(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 11:02:56.692(Timestamp)
2019-03-14 11:02:56 -<==    Updates: 1
2019-03-14 11:02:56 -请求地址 : http://localhost:8081/main
2019-03-14 11:02:56 -HTTP METHOD : GET
2019-03-14 11:02:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 11:02:56 -参数 : []
2019-03-14 11:02:56 -耗时 : 1
2019-03-14 11:02:56 -返回值 : main
2019-03-14 11:02:57 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 11:02:57 -HTTP METHOD : GET
2019-03-14 11:02:57 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 11:02:57 -参数 : []
2019-03-14 11:02:57 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 11:02:57 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 11:02:57 -<==      Total: 0
2019-03-14 11:02:57 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 11:02:57 -==> Parameters: 1(Long), 0(String)
2019-03-14 11:02:57 -<==      Total: 1
2019-03-14 11:02:57 -耗时 : 8
2019-03-14 11:02:57 -返回值 : com.bootdo.common.utils.PageUtils@7276c7b2
2019-03-14 11:02:57 -请求地址 : http://localhost:8081/main
2019-03-14 11:02:57 -HTTP METHOD : GET
2019-03-14 11:02:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 11:02:57 -参数 : []
2019-03-14 11:02:57 -耗时 : 0
2019-03-14 11:02:57 -返回值 : main
2019-03-14 11:02:58 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 11:02:58 -HTTP METHOD : GET
2019-03-14 11:02:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 11:02:58 -参数 : []
2019-03-14 11:02:58 -耗时 : 1
2019-03-14 11:02:58 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 11:02:59 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 11:02:59 -HTTP METHOD : GET
2019-03-14 11:02:59 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:02:59 -参数 : [userType]
2019-03-14 11:02:59 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:02:59 -==> Parameters: userType(String)
2019-03-14 11:02:59 -<==      Total: 2
2019-03-14 11:02:59 -耗时 : 5
2019-03-14 11:02:59 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 11:02:59 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:02:59 -HTTP METHOD : GET
2019-03-14 11:02:59 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:02:59 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 11:02:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-14 11:02:59 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:02:59 -<==      Total: 3
2019-03-14 11:02:59 -==>  Preparing: select count(*) from elec_log 
2019-03-14 11:02:59 -==> Parameters: 
2019-03-14 11:02:59 -<==      Total: 1
2019-03-14 11:02:59 -耗时 : 8
2019-03-14 11:02:59 -返回值 : com.bootdo.common.utils.PageUtils@74b5e475
2019-03-14 11:03:06 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:03:06 -HTTP METHOD : GET
2019-03-14 11:03:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:03:06 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-08}]
2019-03-14 11:03:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE create_time = ? and `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-14 11:03:06 -==> Parameters: 2019-03-08(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-03-14 11:03:06 -<==      Total: 0
2019-03-14 11:03:06 -==>  Preparing: select count(*) from elec_log WHERE create_time = ? 
2019-03-14 11:03:06 -==> Parameters: 2019-03-08(String)
2019-03-14 11:03:06 -<==      Total: 1
2019-03-14 11:03:06 -耗时 : 13
2019-03-14 11:03:06 -返回值 : com.bootdo.common.utils.PageUtils@1f4f42bf
2019-03-14 11:03:07 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:03:07 -HTTP METHOD : GET
2019-03-14 11:03:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:03:07 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-08}]
2019-03-14 11:03:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE create_time = ? and `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-14 11:03:07 -==> Parameters: 2019-03-08(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-03-14 11:03:07 -<==      Total: 0
2019-03-14 11:03:07 -==>  Preparing: select count(*) from elec_log WHERE create_time = ? 
2019-03-14 11:03:07 -==> Parameters: 2019-03-08(String)
2019-03-14 11:03:07 -<==      Total: 1
2019-03-14 11:03:07 -耗时 : 9
2019-03-14 11:03:07 -返回值 : com.bootdo.common.utils.PageUtils@378c39ce
2019-03-14 11:03:07 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:03:07 -HTTP METHOD : GET
2019-03-14 11:03:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:03:07 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-08}]
2019-03-14 11:03:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE create_time = ? and `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-14 11:03:07 -==> Parameters: 2019-03-08(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-03-14 11:03:07 -<==      Total: 0
2019-03-14 11:03:07 -==>  Preparing: select count(*) from elec_log WHERE create_time = ? 
2019-03-14 11:03:07 -==> Parameters: 2019-03-08(String)
2019-03-14 11:03:07 -<==      Total: 1
2019-03-14 11:03:07 -耗时 : 9
2019-03-14 11:03:07 -返回值 : com.bootdo.common.utils.PageUtils@71531c61
2019-03-14 11:03:08 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:03:08 -HTTP METHOD : GET
2019-03-14 11:03:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:03:08 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-08}]
2019-03-14 11:03:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE create_time = ? and `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-14 11:03:08 -==> Parameters: 2019-03-08(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-03-14 11:03:08 -<==      Total: 0
2019-03-14 11:03:08 -==>  Preparing: select count(*) from elec_log WHERE create_time = ? 
2019-03-14 11:03:08 -==> Parameters: 2019-03-08(String)
2019-03-14 11:03:08 -<==      Total: 1
2019-03-14 11:03:08 -耗时 : 7
2019-03-14 11:03:08 -返回值 : com.bootdo.common.utils.PageUtils@2b119ab6
2019-03-14 11:03:09 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:03:09 -HTTP METHOD : GET
2019-03-14 11:03:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:03:09 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-08}]
2019-03-14 11:03:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE create_time = ? and `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-14 11:03:09 -==> Parameters: 2019-03-08(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-03-14 11:03:09 -<==      Total: 0
2019-03-14 11:03:09 -==>  Preparing: select count(*) from elec_log WHERE create_time = ? 
2019-03-14 11:03:09 -==> Parameters: 2019-03-08(String)
2019-03-14 11:03:09 -<==      Total: 1
2019-03-14 11:03:09 -耗时 : 8
2019-03-14 11:03:09 -返回值 : com.bootdo.common.utils.PageUtils@2f8dd6e7
2019-03-14 11:03:22 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:03:22 -HTTP METHOD : GET
2019-03-14 11:03:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:03:22 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-09}]
2019-03-14 11:03:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE create_time = ? and `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-14 11:03:22 -==> Parameters: 2019-03-09(String), 2019-03-09 00:00:00(String), 2019-03-09 23:59:59(String), 0(Integer), 10(Integer)
2019-03-14 11:03:22 -<==      Total: 0
2019-03-14 11:03:22 -==>  Preparing: select count(*) from elec_log WHERE create_time = ? 
2019-03-14 11:03:22 -==> Parameters: 2019-03-09(String)
2019-03-14 11:03:22 -<==      Total: 1
2019-03-14 11:03:22 -耗时 : 6
2019-03-14 11:03:22 -返回值 : com.bootdo.common.utils.PageUtils@aa290ef
2019-03-14 11:03:23 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:03:23 -HTTP METHOD : GET
2019-03-14 11:03:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:03:23 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-09}]
2019-03-14 11:03:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE create_time = ? and `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-14 11:03:23 -==> Parameters: 2019-03-09(String), 2019-03-09 00:00:00(String), 2019-03-09 23:59:59(String), 0(Integer), 10(Integer)
2019-03-14 11:03:23 -<==      Total: 0
2019-03-14 11:03:23 -==>  Preparing: select count(*) from elec_log WHERE create_time = ? 
2019-03-14 11:03:23 -==> Parameters: 2019-03-09(String)
2019-03-14 11:03:23 -<==      Total: 1
2019-03-14 11:03:23 -耗时 : 8
2019-03-14 11:03:23 -返回值 : com.bootdo.common.utils.PageUtils@3a73e168
2019-03-14 11:03:27 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:03:27 -HTTP METHOD : GET
2019-03-14 11:03:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:03:27 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-10}]
2019-03-14 11:03:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE create_time = ? and `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-14 11:03:27 -==> Parameters: 2019-03-10(String), 2019-03-10 00:00:00(String), 2019-03-10 23:59:59(String), 0(Integer), 10(Integer)
2019-03-14 11:03:27 -<==      Total: 0
2019-03-14 11:03:27 -==>  Preparing: select count(*) from elec_log WHERE create_time = ? 
2019-03-14 11:03:27 -==> Parameters: 2019-03-10(String)
2019-03-14 11:03:27 -<==      Total: 1
2019-03-14 11:03:27 -耗时 : 7
2019-03-14 11:03:27 -返回值 : com.bootdo.common.utils.PageUtils@6616fba7
2019-03-14 11:03:27 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:03:27 -HTTP METHOD : GET
2019-03-14 11:03:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:03:27 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-10}]
2019-03-14 11:03:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE create_time = ? and `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-14 11:03:27 -==> Parameters: 2019-03-10(String), 2019-03-10 00:00:00(String), 2019-03-10 23:59:59(String), 0(Integer), 10(Integer)
2019-03-14 11:03:27 -<==      Total: 0
2019-03-14 11:03:27 -==>  Preparing: select count(*) from elec_log WHERE create_time = ? 
2019-03-14 11:03:27 -==> Parameters: 2019-03-10(String)
2019-03-14 11:03:27 -<==      Total: 1
2019-03-14 11:03:27 -耗时 : 8
2019-03-14 11:03:27 -返回值 : com.bootdo.common.utils.PageUtils@6cfa4d94
2019-03-14 11:03:27 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:03:27 -HTTP METHOD : GET
2019-03-14 11:03:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:03:27 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-10}]
2019-03-14 11:03:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE create_time = ? and `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-14 11:03:27 -==> Parameters: 2019-03-10(String), 2019-03-10 00:00:00(String), 2019-03-10 23:59:59(String), 0(Integer), 10(Integer)
2019-03-14 11:03:27 -<==      Total: 0
2019-03-14 11:03:27 -==>  Preparing: select count(*) from elec_log WHERE create_time = ? 
2019-03-14 11:03:27 -==> Parameters: 2019-03-10(String)
2019-03-14 11:03:27 -<==      Total: 1
2019-03-14 11:03:27 -耗时 : 7
2019-03-14 11:03:27 -返回值 : com.bootdo.common.utils.PageUtils@6beda67f
2019-03-14 11:03:31 -请求地址 : http://localhost:8081/index
2019-03-14 11:03:31 -HTTP METHOD : GET
2019-03-14 11:03:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 11:03:31 -参数 : [{}]
2019-03-14 11:03:31 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 11:03:31 -==> Parameters: 1(Long)
2019-03-14 11:03:31 -<==      Total: 45
2019-03-14 11:03:31 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 11:03:31 -==> Parameters: 138(Long)
2019-03-14 11:03:31 -<==      Total: 1
2019-03-14 11:03:31 -耗时 : 28
2019-03-14 11:03:31 -返回值 : index_v1
2019-03-14 11:03:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 11:03:31 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 28(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 11:03:31.356(Timestamp)
2019-03-14 11:03:31 -请求地址 : http://localhost:8081/main
2019-03-14 11:03:31 -HTTP METHOD : GET
2019-03-14 11:03:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 11:03:31 -参数 : []
2019-03-14 11:03:31 -耗时 : 1
2019-03-14 11:03:31 -返回值 : main
2019-03-14 11:03:31 -<==    Updates: 1
2019-03-14 11:03:31 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 11:03:31 -HTTP METHOD : GET
2019-03-14 11:03:31 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 11:03:31 -参数 : []
2019-03-14 11:03:31 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 11:03:31 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 11:03:31 -<==      Total: 0
2019-03-14 11:03:31 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 11:03:31 -==> Parameters: 1(Long), 0(String)
2019-03-14 11:03:31 -<==      Total: 1
2019-03-14 11:03:31 -耗时 : 7
2019-03-14 11:03:31 -返回值 : com.bootdo.common.utils.PageUtils@31061f01
2019-03-14 11:03:31 -请求地址 : http://localhost:8081/main
2019-03-14 11:03:31 -HTTP METHOD : GET
2019-03-14 11:03:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 11:03:31 -参数 : []
2019-03-14 11:03:31 -耗时 : 0
2019-03-14 11:03:31 -返回值 : main
2019-03-14 11:03:33 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 11:03:33 -HTTP METHOD : GET
2019-03-14 11:03:33 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 11:03:33 -参数 : []
2019-03-14 11:03:33 -耗时 : 1
2019-03-14 11:03:33 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 11:03:33 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 11:03:33 -HTTP METHOD : GET
2019-03-14 11:03:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:03:33 -参数 : [userType]
2019-03-14 11:03:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:03:33 -==> Parameters: userType(String)
2019-03-14 11:03:33 -<==      Total: 2
2019-03-14 11:03:33 -耗时 : 6
2019-03-14 11:03:33 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 11:03:33 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:03:33 -HTTP METHOD : GET
2019-03-14 11:03:33 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:03:33 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 11:03:33 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-14 11:03:33 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:03:33 -<==      Total: 3
2019-03-14 11:03:33 -==>  Preparing: select count(*) from elec_log 
2019-03-14 11:03:33 -==> Parameters: 
2019-03-14 11:03:33 -<==      Total: 1
2019-03-14 11:03:33 -耗时 : 6
2019-03-14 11:03:33 -返回值 : com.bootdo.common.utils.PageUtils@7ef0ef1a
2019-03-14 11:03:36 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-14 11:03:36 -HTTP METHOD : GET
2019-03-14 11:03:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-14 11:03:36 -参数 : []
2019-03-14 11:03:36 -耗时 : 0
2019-03-14 11:03:36 -返回值 : system/dept/deptTree
2019-03-14 11:03:36 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-14 11:03:36 -HTTP METHOD : GET
2019-03-14 11:03:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-14 11:03:36 -参数 : []
2019-03-14 11:03:36 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-14 11:03:36 -==> Parameters: 
2019-03-14 11:03:36 -<==      Total: 3
2019-03-14 11:03:36 -耗时 : 4
2019-03-14 11:03:36 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-14 11:03:40 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:03:40 -HTTP METHOD : GET
2019-03-14 11:03:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:03:40 -参数 : [{limit=10, offset=0, userType=, userOrg=2, userId=, createTime=}]
2019-03-14 11:03:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE userc_org = ? order by id asc limit ?, ? 
2019-03-14 11:03:40 -==> Parameters: 2(String), 0(Integer), 10(Integer)
2019-03-14 11:03:40 -{conn-10001, pstmt-20014} execute error. select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log
         WHERE  userc_org = ? 
         
                order by id asc
			 
		 
			limit ?, ?
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor142.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:22)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:63)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$28ed7fdd.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-14 11:03:40 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-03-14 11:03:40 -SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2019-03-14 11:03:40 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 11:03:40 -
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log          WHERE  userc_org = ?                            order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log          WHERE  userc_org = ?                            order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:22)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:63)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$28ed7fdd.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor142.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
2019-03-14 11:03:40 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/elecLog/list(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log          WHERE  userc_org = ?                            order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'(String), null, 2019-03-14 11:03:40.944(Timestamp)
2019-03-14 11:03:41 -<==    Updates: 1
2019-03-14 11:03:44 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:03:44 -HTTP METHOD : GET
2019-03-14 11:03:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:03:44 -参数 : [{limit=10, offset=0, userType=, userOrg=2, userId=, createTime=}]
2019-03-14 11:03:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE userc_org = ? order by id asc limit ?, ? 
2019-03-14 11:03:44 -==> Parameters: 2(String), 0(Integer), 10(Integer)
2019-03-14 11:03:44 -{conn-10001, pstmt-20015} execute error. select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log
         WHERE  userc_org = ? 
         
                order by id asc
			 
		 
			limit ?, ?
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor142.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:22)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:63)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$28ed7fdd.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-14 11:03:44 -
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log          WHERE  userc_org = ?                            order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log          WHERE  userc_org = ?                            order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:22)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:63)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$28ed7fdd.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor142.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
2019-03-14 11:03:44 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 11:03:44 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/elecLog/list(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log          WHERE  userc_org = ?                            order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'(String), null, 2019-03-14 11:03:44.684(Timestamp)
2019-03-14 11:03:44 -<==    Updates: 1
2019-03-14 11:03:45 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:03:45 -HTTP METHOD : GET
2019-03-14 11:03:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:03:45 -参数 : [{limit=10, offset=0, userType=, userOrg=2, userId=, createTime=}]
2019-03-14 11:03:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE userc_org = ? order by id asc limit ?, ? 
2019-03-14 11:03:45 -==> Parameters: 2(String), 0(Integer), 10(Integer)
2019-03-14 11:03:45 -{conn-10001, pstmt-20016} execute error. select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log
         WHERE  userc_org = ? 
         
                order by id asc
			 
		 
			limit ?, ?
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor142.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:22)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:63)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$28ed7fdd.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-14 11:03:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 11:03:45 -
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log          WHERE  userc_org = ?                            order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log          WHERE  userc_org = ?                            order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:22)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:63)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$28ed7fdd.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor142.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
2019-03-14 11:03:45 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/elecLog/list(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log          WHERE  userc_org = ?                            order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'(String), null, 2019-03-14 11:03:45.65(Timestamp)
2019-03-14 11:03:45 -<==    Updates: 1
2019-03-14 11:03:46 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:03:46 -HTTP METHOD : GET
2019-03-14 11:03:46 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:03:46 -参数 : [{limit=10, offset=0, userType=, userOrg=2, userId=, createTime=}]
2019-03-14 11:03:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE userc_org = ? order by id asc limit ?, ? 
2019-03-14 11:03:46 -==> Parameters: 2(String), 0(Integer), 10(Integer)
2019-03-14 11:03:46 -{conn-10001, pstmt-20017} execute error. select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log
         WHERE  userc_org = ? 
         
                order by id asc
			 
		 
			limit ?, ?
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor142.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:22)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:63)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$28ed7fdd.list(<generated>)
	at sun.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-14 11:03:46 -
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log          WHERE  userc_org = ?                            order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log          WHERE  userc_org = ?                            order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:22)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:63)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$28ed7fdd.list(<generated>)
	at sun.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor142.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-03-14 11:03:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 11:03:46 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/elecLog/list(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log          WHERE  userc_org = ?                            order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'(String), null, 2019-03-14 11:03:46.211(Timestamp)
2019-03-14 11:03:46 -<==    Updates: 1
2019-03-14 11:03:46 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:03:46 -HTTP METHOD : GET
2019-03-14 11:03:46 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:03:46 -参数 : [{limit=10, offset=0, userType=, userOrg=2, userId=, createTime=}]
2019-03-14 11:03:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE userc_org = ? order by id asc limit ?, ? 
2019-03-14 11:03:46 -==> Parameters: 2(String), 0(Integer), 10(Integer)
2019-03-14 11:03:46 -{conn-10001, pstmt-20018} execute error. select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log
         WHERE  userc_org = ? 
         
                order by id asc
			 
		 
			limit ?, ?
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor142.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:22)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:63)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$28ed7fdd.list(<generated>)
	at sun.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-14 11:03:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 11:03:46 -
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log          WHERE  userc_org = ?                            order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log          WHERE  userc_org = ?                            order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:22)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:63)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$28ed7fdd.list(<generated>)
	at sun.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor142.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-03-14 11:03:46 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/elecLog/list(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log          WHERE  userc_org = ?                            order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'(String), null, 2019-03-14 11:03:46.721(Timestamp)
2019-03-14 11:03:46 -<==    Updates: 1
2019-03-14 11:03:47 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:03:47 -HTTP METHOD : GET
2019-03-14 11:03:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:03:47 -参数 : [{limit=10, offset=0, userType=, userOrg=2, userId=, createTime=}]
2019-03-14 11:03:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE userc_org = ? order by id asc limit ?, ? 
2019-03-14 11:03:47 -==> Parameters: 2(String), 0(Integer), 10(Integer)
2019-03-14 11:03:47 -{conn-10001, pstmt-20019} execute error. select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log
         WHERE  userc_org = ? 
         
                order by id asc
			 
		 
			limit ?, ?
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor142.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:22)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:63)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$28ed7fdd.list(<generated>)
	at sun.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-14 11:03:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 11:03:47 -
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log          WHERE  userc_org = ?                            order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log          WHERE  userc_org = ?                            order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:22)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:63)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$28ed7fdd.list(<generated>)
	at sun.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor142.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-03-14 11:03:47 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/elecLog/list(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log          WHERE  userc_org = ?                            order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'(String), null, 2019-03-14 11:03:47.282(Timestamp)
2019-03-14 11:03:47 -<==    Updates: 1
2019-03-14 11:03:53 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:03:53 -HTTP METHOD : GET
2019-03-14 11:03:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:03:53 -参数 : [{limit=10, offset=0, userType=, userOrg=2, userId=, createTime=}]
2019-03-14 11:03:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE userc_org = ? order by id asc limit ?, ? 
2019-03-14 11:03:53 -==> Parameters: 2(String), 0(Integer), 10(Integer)
2019-03-14 11:03:53 -{conn-10001, pstmt-20020} execute error. select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log
         WHERE  userc_org = ? 
         
                order by id asc
			 
		 
			limit ?, ?
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor142.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:22)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:63)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$28ed7fdd.list(<generated>)
	at sun.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-14 11:03:53 -
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log          WHERE  userc_org = ?                            order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log          WHERE  userc_org = ?                            order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:22)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:63)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$28ed7fdd.list(<generated>)
	at sun.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor142.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-03-14 11:03:53 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 11:03:53 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/elecLog/list(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log          WHERE  userc_org = ?                            order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'(String), null, 2019-03-14 11:03:53.089(Timestamp)
2019-03-14 11:03:53 -<==    Updates: 1
2019-03-14 11:03:55 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-14 11:03:55 -HTTP METHOD : GET
2019-03-14 11:03:55 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-14 11:03:55 -参数 : []
2019-03-14 11:03:55 -耗时 : 0
2019-03-14 11:03:55 -返回值 : system/dept/deptTree
2019-03-14 11:03:55 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-14 11:03:55 -HTTP METHOD : GET
2019-03-14 11:03:55 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-14 11:03:55 -参数 : []
2019-03-14 11:03:55 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-14 11:03:55 -==> Parameters: 
2019-03-14 11:03:55 -<==      Total: 3
2019-03-14 11:03:55 -耗时 : 5
2019-03-14 11:03:55 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-14 11:03:56 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:03:56 -HTTP METHOD : GET
2019-03-14 11:03:56 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:03:56 -参数 : [{limit=10, offset=0, userType=, userOrg=3, userId=, createTime=}]
2019-03-14 11:03:56 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE userc_org = ? order by id asc limit ?, ? 
2019-03-14 11:03:56 -==> Parameters: 3(String), 0(Integer), 10(Integer)
2019-03-14 11:03:56 -{conn-10001, pstmt-20021} execute error. select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log
         WHERE  userc_org = ? 
         
                order by id asc
			 
		 
			limit ?, ?
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor142.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:22)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:63)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$28ed7fdd.list(<generated>)
	at sun.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-14 11:03:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 11:03:56 -
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log          WHERE  userc_org = ?                            order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log          WHERE  userc_org = ?                            order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:22)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:63)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$28ed7fdd.list(<generated>)
	at sun.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor142.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-03-14 11:03:56 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/elecLog/list(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log          WHERE  userc_org = ?                            order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'(String), null, 2019-03-14 11:03:56.938(Timestamp)
2019-03-14 11:03:57 -<==    Updates: 1
2019-03-14 11:03:57 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:03:57 -HTTP METHOD : GET
2019-03-14 11:03:57 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:03:57 -参数 : [{limit=10, offset=0, userType=, userOrg=3, userId=, createTime=}]
2019-03-14 11:03:57 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE userc_org = ? order by id asc limit ?, ? 
2019-03-14 11:03:57 -==> Parameters: 3(String), 0(Integer), 10(Integer)
2019-03-14 11:03:57 -{conn-10001, pstmt-20022} execute error. select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log
         WHERE  userc_org = ? 
         
                order by id asc
			 
		 
			limit ?, ?
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor142.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:22)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:63)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$28ed7fdd.list(<generated>)
	at sun.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-14 11:03:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 11:03:57 -
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log          WHERE  userc_org = ?                            order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log          WHERE  userc_org = ?                            order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:22)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:63)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$28ed7fdd.list(<generated>)
	at sun.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor142.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-03-14 11:03:57 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/elecLog/list(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log          WHERE  userc_org = ?                            order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'(String), null, 2019-03-14 11:03:57.769(Timestamp)
2019-03-14 11:03:57 -<==    Updates: 1
2019-03-14 11:03:58 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:03:58 -HTTP METHOD : GET
2019-03-14 11:03:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:03:58 -参数 : [{limit=10, offset=0, userType=, userOrg=3, userId=, createTime=}]
2019-03-14 11:03:58 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE userc_org = ? order by id asc limit ?, ? 
2019-03-14 11:03:58 -==> Parameters: 3(String), 0(Integer), 10(Integer)
2019-03-14 11:03:58 -{conn-10001, pstmt-20023} execute error. select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log
         WHERE  userc_org = ? 
         
                order by id asc
			 
		 
			limit ?, ?
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor142.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:22)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:63)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$28ed7fdd.list(<generated>)
	at sun.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-14 11:03:58 -
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log          WHERE  userc_org = ?                            order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log          WHERE  userc_org = ?                            order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:22)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:63)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$28ed7fdd.list(<generated>)
	at sun.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor142.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-03-14 11:03:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 11:03:58 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/elecLog/list(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log          WHERE  userc_org = ?                            order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'(String), null, 2019-03-14 11:03:58.298(Timestamp)
2019-03-14 11:03:58 -<==    Updates: 1
2019-03-14 11:03:59 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:03:59 -HTTP METHOD : GET
2019-03-14 11:03:59 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:03:59 -参数 : [{limit=10, offset=0, userType=, userOrg=3, userId=, createTime=}]
2019-03-14 11:03:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE userc_org = ? order by id asc limit ?, ? 
2019-03-14 11:03:59 -==> Parameters: 3(String), 0(Integer), 10(Integer)
2019-03-14 11:03:59 -{conn-10001, pstmt-20024} execute error. select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log
         WHERE  userc_org = ? 
         
                order by id asc
			 
		 
			limit ?, ?
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor142.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:22)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:63)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$28ed7fdd.list(<generated>)
	at sun.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-14 11:03:59 -
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log          WHERE  userc_org = ?                            order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log          WHERE  userc_org = ?                            order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:22)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:63)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor126.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$28ed7fdd.list(<generated>)
	at sun.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor142.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-03-14 11:03:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 11:03:59 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/elecLog/list(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log          WHERE  userc_org = ?                            order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'(String), null, 2019-03-14 11:03:59.098(Timestamp)
2019-03-14 11:03:59 -<==    Updates: 1
2019-03-14 11:04:10 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-14 11:04:10 -HTTP METHOD : GET
2019-03-14 11:04:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-14 11:04:10 -参数 : []
2019-03-14 11:04:10 -耗时 : 0
2019-03-14 11:04:10 -返回值 : /moneyLog/heatLog/heatLog
2019-03-14 11:04:11 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-14 11:04:11 -HTTP METHOD : GET
2019-03-14 11:04:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-14 11:04:11 -参数 : []
2019-03-14 11:04:11 -耗时 : 0
2019-03-14 11:04:11 -返回值 : /moneyLog/waterLog/waterLog
2019-03-14 11:04:11 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-14 11:04:11 -HTTP METHOD : GET
2019-03-14 11:04:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-14 11:04:11 -参数 : [{limit=10, offset=0}]
2019-03-14 11:04:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-14 11:04:11 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:04:11 -<==      Total: 3
2019-03-14 11:04:11 -==>  Preparing: select count(*) from water_log 
2019-03-14 11:04:11 -==> Parameters: 
2019-03-14 11:04:11 -<==      Total: 1
2019-03-14 11:04:11 -耗时 : 30
2019-03-14 11:04:11 -返回值 : com.bootdo.common.utils.PageUtils@19419451
2019-03-14 11:04:12 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-14 11:04:12 -HTTP METHOD : GET
2019-03-14 11:04:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-14 11:04:12 -参数 : []
2019-03-14 11:04:12 -耗时 : 0
2019-03-14 11:04:12 -返回值 : /moneyLog/heatLog/heatLog
2019-03-14 11:04:13 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 11:04:13 -HTTP METHOD : GET
2019-03-14 11:04:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 11:04:13 -参数 : []
2019-03-14 11:04:13 -耗时 : 1
2019-03-14 11:04:13 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 11:04:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 11:04:13 -HTTP METHOD : GET
2019-03-14 11:04:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:04:13 -参数 : [userType]
2019-03-14 11:04:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:04:13 -==> Parameters: userType(String)
2019-03-14 11:04:13 -<==      Total: 2
2019-03-14 11:04:13 -耗时 : 6
2019-03-14 11:04:13 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 11:04:13 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:04:13 -HTTP METHOD : GET
2019-03-14 11:04:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:04:13 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 11:04:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-14 11:04:13 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:04:13 -<==      Total: 3
2019-03-14 11:04:13 -==>  Preparing: select count(*) from elec_log 
2019-03-14 11:04:13 -==> Parameters: 
2019-03-14 11:04:13 -<==      Total: 1
2019-03-14 11:04:13 -耗时 : 9
2019-03-14 11:04:13 -返回值 : com.bootdo.common.utils.PageUtils@a126cef
2019-03-14 11:04:13 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-14 11:04:13 -HTTP METHOD : GET
2019-03-14 11:04:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-14 11:04:13 -参数 : []
2019-03-14 11:04:13 -耗时 : 0
2019-03-14 11:04:13 -返回值 : /moneyLog/heatLog/heatLog
2019-03-14 11:04:13 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-14 11:04:13 -HTTP METHOD : GET
2019-03-14 11:04:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-14 11:04:13 -参数 : []
2019-03-14 11:04:13 -耗时 : 1
2019-03-14 11:04:13 -返回值 : /moneyLog/waterLog/waterLog
2019-03-14 11:04:14 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-14 11:04:14 -HTTP METHOD : GET
2019-03-14 11:04:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-14 11:04:14 -参数 : [{limit=10, offset=0}]
2019-03-14 11:04:14 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-14 11:04:14 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:04:14 -<==      Total: 3
2019-03-14 11:04:14 -==>  Preparing: select count(*) from water_log 
2019-03-14 11:04:14 -==> Parameters: 
2019-03-14 11:04:14 -<==      Total: 1
2019-03-14 11:04:14 -耗时 : 7
2019-03-14 11:04:14 -返回值 : com.bootdo.common.utils.PageUtils@229c4dfd
2019-03-14 11:04:14 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-14 11:04:14 -HTTP METHOD : GET
2019-03-14 11:04:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-14 11:04:14 -参数 : []
2019-03-14 11:04:14 -耗时 : 0
2019-03-14 11:04:14 -返回值 : /moneyLog/heatLog/heatLog
2019-03-14 11:04:15 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 11:04:15 -HTTP METHOD : GET
2019-03-14 11:04:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 11:04:15 -参数 : []
2019-03-14 11:04:15 -耗时 : 0
2019-03-14 11:04:15 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 11:04:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 11:04:15 -HTTP METHOD : GET
2019-03-14 11:04:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:04:15 -参数 : [userType]
2019-03-14 11:04:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:04:15 -==> Parameters: userType(String)
2019-03-14 11:04:15 -<==      Total: 2
2019-03-14 11:04:15 -耗时 : 4
2019-03-14 11:04:15 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 11:04:15 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:04:15 -HTTP METHOD : GET
2019-03-14 11:04:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:04:15 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 11:04:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-14 11:04:15 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:04:15 -<==      Total: 3
2019-03-14 11:04:15 -==>  Preparing: select count(*) from elec_log 
2019-03-14 11:04:15 -==> Parameters: 
2019-03-14 11:04:15 -<==      Total: 1
2019-03-14 11:04:15 -耗时 : 8
2019-03-14 11:04:15 -返回值 : com.bootdo.common.utils.PageUtils@3f425be0
2019-03-14 11:04:18 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-14 11:04:18 -HTTP METHOD : GET
2019-03-14 11:04:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-14 11:04:18 -参数 : []
2019-03-14 11:04:18 -耗时 : 0
2019-03-14 11:04:18 -返回值 : /moneyLog/waterLog/waterLog
2019-03-14 11:04:18 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-14 11:04:18 -HTTP METHOD : GET
2019-03-14 11:04:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-14 11:04:18 -参数 : [{limit=10, offset=0}]
2019-03-14 11:04:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-14 11:04:18 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:04:19 -<==      Total: 3
2019-03-14 11:04:19 -==>  Preparing: select count(*) from water_log 
2019-03-14 11:04:19 -==> Parameters: 
2019-03-14 11:04:19 -<==      Total: 1
2019-03-14 11:04:19 -耗时 : 8
2019-03-14 11:04:19 -返回值 : com.bootdo.common.utils.PageUtils@72b8586
2019-03-14 11:04:19 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-14 11:04:19 -HTTP METHOD : GET
2019-03-14 11:04:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-14 11:04:19 -参数 : []
2019-03-14 11:04:19 -耗时 : 1
2019-03-14 11:04:19 -返回值 : /moneyLog/heatLog/heatLog
2019-03-14 11:04:21 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 11:04:21 -HTTP METHOD : GET
2019-03-14 11:04:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 11:04:21 -参数 : []
2019-03-14 11:04:21 -耗时 : 1
2019-03-14 11:04:21 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 11:04:21 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 11:04:21 -HTTP METHOD : GET
2019-03-14 11:04:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:04:21 -参数 : [userType]
2019-03-14 11:04:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:04:21 -==> Parameters: userType(String)
2019-03-14 11:04:21 -<==      Total: 2
2019-03-14 11:04:21 -耗时 : 5
2019-03-14 11:04:21 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 11:04:21 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:04:21 -HTTP METHOD : GET
2019-03-14 11:04:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:04:21 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 11:04:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-14 11:04:21 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:04:21 -<==      Total: 3
2019-03-14 11:04:21 -==>  Preparing: select count(*) from elec_log 
2019-03-14 11:04:21 -==> Parameters: 
2019-03-14 11:04:21 -<==      Total: 1
2019-03-14 11:04:21 -耗时 : 14
2019-03-14 11:04:21 -返回值 : com.bootdo.common.utils.PageUtils@7d98272f
2019-03-14 11:04:21 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-14 11:04:21 -HTTP METHOD : GET
2019-03-14 11:04:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-14 11:04:21 -参数 : []
2019-03-14 11:04:21 -耗时 : 0
2019-03-14 11:04:21 -返回值 : /moneyLog/heatLog/heatLog
2019-03-14 11:04:22 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-14 11:04:22 -HTTP METHOD : GET
2019-03-14 11:04:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-14 11:04:22 -参数 : []
2019-03-14 11:04:22 -耗时 : 1
2019-03-14 11:04:22 -返回值 : /moneyLog/waterLog/waterLog
2019-03-14 11:04:22 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-14 11:04:22 -HTTP METHOD : GET
2019-03-14 11:04:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-14 11:04:22 -参数 : [{limit=10, offset=0}]
2019-03-14 11:04:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-14 11:04:22 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:04:22 -<==      Total: 3
2019-03-14 11:04:22 -==>  Preparing: select count(*) from water_log 
2019-03-14 11:04:22 -==> Parameters: 
2019-03-14 11:04:22 -<==      Total: 1
2019-03-14 11:04:22 -耗时 : 9
2019-03-14 11:04:22 -返回值 : com.bootdo.common.utils.PageUtils@17138221
2019-03-14 11:04:22 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-14 11:04:22 -HTTP METHOD : GET
2019-03-14 11:04:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-14 11:04:22 -参数 : []
2019-03-14 11:04:22 -耗时 : 1
2019-03-14 11:04:22 -返回值 : /moneyLog/heatLog/heatLog
2019-03-14 11:04:22 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 11:04:22 -HTTP METHOD : GET
2019-03-14 11:04:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 11:04:22 -参数 : []
2019-03-14 11:04:22 -耗时 : 1
2019-03-14 11:04:22 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 11:04:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 11:04:23 -HTTP METHOD : GET
2019-03-14 11:04:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:04:23 -参数 : [userType]
2019-03-14 11:04:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:04:23 -==> Parameters: userType(String)
2019-03-14 11:04:23 -<==      Total: 2
2019-03-14 11:04:23 -耗时 : 5
2019-03-14 11:04:23 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 11:04:23 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:04:23 -HTTP METHOD : GET
2019-03-14 11:04:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:04:23 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 11:04:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-14 11:04:23 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:04:23 -<==      Total: 3
2019-03-14 11:04:23 -==>  Preparing: select count(*) from elec_log 
2019-03-14 11:04:23 -==> Parameters: 
2019-03-14 11:04:23 -<==      Total: 1
2019-03-14 11:04:23 -耗时 : 7
2019-03-14 11:04:23 -返回值 : com.bootdo.common.utils.PageUtils@3a08ac4
2019-03-14 11:04:23 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-14 11:04:23 -HTTP METHOD : GET
2019-03-14 11:04:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-14 11:04:23 -参数 : []
2019-03-14 11:04:23 -耗时 : 0
2019-03-14 11:04:23 -返回值 : /moneyLog/heatLog/heatLog
2019-03-14 11:04:23 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-14 11:04:23 -HTTP METHOD : GET
2019-03-14 11:04:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-14 11:04:23 -参数 : []
2019-03-14 11:04:23 -耗时 : 0
2019-03-14 11:04:23 -返回值 : /moneyLog/waterLog/waterLog
2019-03-14 11:04:24 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-14 11:04:24 -HTTP METHOD : GET
2019-03-14 11:04:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-14 11:04:24 -参数 : [{limit=10, offset=0}]
2019-03-14 11:04:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-14 11:04:24 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:04:24 -<==      Total: 3
2019-03-14 11:04:24 -==>  Preparing: select count(*) from water_log 
2019-03-14 11:04:24 -==> Parameters: 
2019-03-14 11:04:24 -<==      Total: 1
2019-03-14 11:04:24 -耗时 : 6
2019-03-14 11:04:24 -返回值 : com.bootdo.common.utils.PageUtils@e58b45e
2019-03-14 11:04:24 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-14 11:04:24 -HTTP METHOD : GET
2019-03-14 11:04:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-14 11:04:24 -参数 : []
2019-03-14 11:04:24 -耗时 : 1
2019-03-14 11:04:24 -返回值 : /moneyLog/heatLog/heatLog
2019-03-14 11:04:24 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 11:04:24 -HTTP METHOD : GET
2019-03-14 11:04:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 11:04:24 -参数 : []
2019-03-14 11:04:24 -耗时 : 0
2019-03-14 11:04:24 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 11:04:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 11:04:25 -HTTP METHOD : GET
2019-03-14 11:04:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:04:25 -参数 : [userType]
2019-03-14 11:04:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:04:25 -==> Parameters: userType(String)
2019-03-14 11:04:25 -<==      Total: 2
2019-03-14 11:04:25 -耗时 : 7
2019-03-14 11:04:25 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 11:04:25 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:04:25 -HTTP METHOD : GET
2019-03-14 11:04:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:04:25 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 11:04:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-14 11:04:25 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:04:25 -<==      Total: 3
2019-03-14 11:04:25 -==>  Preparing: select count(*) from elec_log 
2019-03-14 11:04:25 -==> Parameters: 
2019-03-14 11:04:25 -<==      Total: 1
2019-03-14 11:04:25 -耗时 : 8
2019-03-14 11:04:25 -返回值 : com.bootdo.common.utils.PageUtils@46c75bea
2019-03-14 11:19:57 -Starting BootdoApplication on ZJZL-20180906VX with PID 10624 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-14 11:19:57 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-14 11:19:57 -The following profiles are active: dev
2019-03-14 11:19:57 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5f031ebd: startup date [Thu Mar 14 11:19:57 CST 2019]; root of context hierarchy
2019-03-14 11:20:02 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-14 11:20:05 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3dddf022] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 11:20:05 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$30371ec9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 11:20:06 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 11:20:07 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 11:20:07 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 11:20:07 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-14 11:20:07 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-14 11:20:07 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 11:20:07 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 11:20:07 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 11:20:07 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 11:20:09 -Tomcat initialized with port(s): 8081 (http)
2019-03-14 11:20:09 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-14 11:20:09 -Starting service [Tomcat]
2019-03-14 11:20:09 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-14 11:20:09 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;D:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-14 11:20:09 -Initializing Spring embedded WebApplicationContext
2019-03-14 11:20:09 -Root WebApplicationContext: initialization completed in 11966 ms
2019-03-14 11:20:10 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-14 11:20:10 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-14 11:20:10 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-14 11:20:10 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-14 11:20:10 -Filter xssFilter was not registered (disabled)
2019-03-14 11:20:10 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-14 11:20:10 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-14 11:20:10 -Servlet statViewServlet mapped to [/druid/*]
2019-03-14 11:20:10 -Servlet dispatcherServlet mapped to [/]
2019-03-14 11:20:13 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5f031ebd: startup date [Thu Mar 14 11:19:57 CST 2019]; root of context hierarchy
2019-03-14 11:20:14 -Using default implementation for ThreadExecutor
2019-03-14 11:20:14 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-14 11:20:14 -Quartz Scheduler v.2.2.1 created.
2019-03-14 11:20:14 -RAMJobStore initialized.
2019-03-14 11:20:14 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-14 11:20:14 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-14 11:20:14 -Quartz scheduler version: 2.2.1
2019-03-14 11:20:14 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@2dd08ff1
2019-03-14 11:20:15 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-14 11:20:15 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-14 11:20:19 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-14 11:20:19 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-14 11:20:19 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-14 11:20:19 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-14 11:20:19 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-14 11:20:19 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-14 11:20:19 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-14 11:20:19 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-14 11:20:19 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-14 11:20:19 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 11:20:19 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-14 11:20:19 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-14 11:20:19 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-14 11:20:19 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-14 11:20:19 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 11:20:19 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-14 11:20:19 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-14 11:20:19 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-14 11:20:19 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-14 11:20:19 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-14 11:20:19 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 11:20:19 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-14 11:20:19 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-14 11:20:19 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 11:20:19 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-14 11:20:19 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-14 11:20:19 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 11:20:19 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-14 11:20:19 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-14 11:20:19 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-14 11:20:19 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-14 11:20:19 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-14 11:20:19 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-14 11:20:19 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-14 11:20:19 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-14 11:20:19 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-14 11:20:19 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 11:20:19 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-14 11:20:19 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-14 11:20:19 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 11:20:19 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-14 11:20:19 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-14 11:20:19 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-14 11:20:19 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-14 11:20:19 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 11:20:19 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-14 11:20:19 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-14 11:20:19 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-14 11:20:19 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-14 11:20:19 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-14 11:20:19 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-14 11:20:19 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-14 11:20:19 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-14 11:20:19 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-14 11:20:19 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-14 11:20:19 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 11:20:19 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-14 11:20:19 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-14 11:20:19 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-14 11:20:19 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2019-03-14 11:20:19 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-14 11:20:19 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-14 11:20:19 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-14 11:20:19 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-14 11:20:19 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 11:20:19 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-14 11:20:19 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 11:20:19 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-14 11:20:19 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-14 11:20:19 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-14 11:20:19 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-14 11:20:19 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-14 11:20:19 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-14 11:20:19 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-14 11:20:19 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 11:20:19 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-14 11:20:19 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-14 11:20:19 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-14 11:20:19 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-14 11:20:19 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-14 11:20:19 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-14 11:20:19 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-14 11:20:19 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-14 11:20:19 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 11:20:19 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-14 11:20:19 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 11:20:19 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-14 11:20:19 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-14 11:20:19 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-14 11:20:19 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-14 11:20:19 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-03-14 11:20:19 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-14 11:20:19 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-14 11:20:19 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-14 11:20:19 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-14 11:20:19 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-14 11:20:19 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 11:20:19 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-14 11:20:19 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 11:20:19 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-14 11:20:19 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-14 11:20:19 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-14 11:20:19 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-14 11:20:19 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-14 11:20:19 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 11:20:19 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-14 11:20:19 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 11:20:19 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-14 11:20:19 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-14 11:20:19 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-14 11:20:19 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-14 11:20:19 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-14 11:20:19 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 11:20:19 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-14 11:20:19 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 11:20:19 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-14 11:20:19 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-14 11:20:19 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-14 11:20:19 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-14 11:20:19 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-14 11:20:19 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-14 11:20:19 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 11:20:19 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-14 11:20:19 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-14 11:20:19 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 11:20:19 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-14 11:20:19 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-14 11:20:19 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 11:20:19 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-14 11:20:19 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-14 11:20:19 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-14 11:20:19 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-14 11:20:19 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 11:20:19 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-14 11:20:19 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 11:20:19 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-14 11:20:19 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 11:20:19 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-14 11:20:19 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-14 11:20:19 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-14 11:20:19 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-14 11:20:19 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-14 11:20:19 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-14 11:20:19 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-14 11:20:19 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 11:20:19 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-14 11:20:19 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-14 11:20:19 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-14 11:20:19 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-14 11:20:19 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-14 11:20:19 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-14 11:20:19 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-14 11:20:19 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-14 11:20:19 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-14 11:20:19 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-14 11:20:19 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-14 11:20:19 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-14 11:20:19 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 11:20:19 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-14 11:20:19 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-14 11:20:19 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-14 11:20:19 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-14 11:20:19 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-14 11:20:19 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-14 11:20:19 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-14 11:20:19 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-14 11:20:19 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-14 11:20:19 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-14 11:20:19 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-14 11:20:19 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 11:20:19 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-14 11:20:19 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-14 11:20:19 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-14 11:20:19 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-14 11:20:19 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-14 11:20:19 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 11:20:19 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-14 11:20:19 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-14 11:20:19 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-14 11:20:19 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 11:20:19 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-14 11:20:19 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-14 11:20:19 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-14 11:20:19 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-14 11:20:19 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-14 11:20:19 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-14 11:20:19 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-14 11:20:19 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-14 11:20:19 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-14 11:20:19 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-14 11:20:19 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-14 11:20:19 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-14 11:20:19 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-14 11:20:19 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-14 11:20:19 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-14 11:20:19 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-14 11:20:19 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-14 11:20:19 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 11:20:19 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-14 11:20:19 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 11:20:19 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 11:20:19 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-14 11:20:19 -Mapped "{[/water/water/queryWater],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.queryWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 11:20:19 -Mapped "{[/water/waterCost/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.add()
2019-03-14 11:20:19 -Mapped "{[/water/waterCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long)
2019-03-14 11:20:19 -Mapped "{[/water/waterCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long[])
2019-03-14 11:20:19 -Mapped "{[/water/waterCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.update(com.bootdo.water.domain.WaterCostDO)
2019-03-14 11:20:19 -Mapped "{[/water/waterCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 11:20:19 -Mapped "{[/water/waterCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.save(com.bootdo.water.domain.WaterCostDO)
2019-03-14 11:20:19 -Mapped "{[/water/waterCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 11:20:19 -Mapped "{[/water/waterCost],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.WaterCost()
2019-03-14 11:20:19 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-14 11:20:19 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2019-03-14 11:20:19 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-14 11:20:19 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-14 11:20:19 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-14 11:20:19 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-14 11:20:19 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 11:20:19 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-14 11:20:19 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 11:20:19 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-14 11:20:19 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 11:20:19 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-14 11:20:19 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-14 11:20:19 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-14 11:20:19 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-14 11:20:19 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-14 11:20:20 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-14 11:20:20 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-14 11:20:20 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-14 11:20:21 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-14 11:20:21 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5f031ebd: startup date [Thu Mar 14 11:19:57 CST 2019]; root of context hierarchy
2019-03-14 11:20:21 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-14 11:20:21 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-14 11:20:21 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-14 11:20:21 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-14 11:20:22 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-14 11:20:25 -Registering beans for JMX exposure on startup
2019-03-14 11:20:25 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-14 11:20:25 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-14 11:20:25 -Starting beans in phase 2147483647
2019-03-14 11:20:25 -Context refreshed
2019-03-14 11:20:25 -Found 1 custom documentation plugin(s)
2019-03-14 11:20:25 -Scanning for api listing references
2019-03-14 11:20:26 -Generating unique operation named: removeUsingPOST_1
2019-03-14 11:20:26 -Generating unique operation named: addUsingGET_1
2019-03-14 11:20:26 -Generating unique operation named: editUsingGET_1
2019-03-14 11:20:26 -Generating unique operation named: listUsingGET_1
2019-03-14 11:20:26 -Generating unique operation named: removeUsingPOST_2
2019-03-14 11:20:26 -Generating unique operation named: removeUsingPOST_3
2019-03-14 11:20:26 -Generating unique operation named: saveUsingPOST_1
2019-03-14 11:20:26 -Generating unique operation named: updateUsingGET_1
2019-03-14 11:20:26 -Generating unique operation named: updateUsingHEAD_1
2019-03-14 11:20:26 -Generating unique operation named: updateUsingPOST_1
2019-03-14 11:20:26 -Generating unique operation named: updateUsingPUT_1
2019-03-14 11:20:26 -Generating unique operation named: updateUsingPATCH_1
2019-03-14 11:20:26 -Generating unique operation named: updateUsingDELETE_1
2019-03-14 11:20:26 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-14 11:20:26 -Generating unique operation named: updateUsingTRACE_1
2019-03-14 11:20:26 -Generating unique operation named: addUsingGET_2
2019-03-14 11:20:26 -Generating unique operation named: editUsingGET_2
2019-03-14 11:20:26 -Generating unique operation named: listUsingGET_2
2019-03-14 11:20:26 -Generating unique operation named: removeUsingPOST_4
2019-03-14 11:20:26 -Generating unique operation named: removeUsingPOST_5
2019-03-14 11:20:26 -Generating unique operation named: saveUsingPOST_2
2019-03-14 11:20:26 -Generating unique operation named: updateUsingGET_2
2019-03-14 11:20:26 -Generating unique operation named: updateUsingHEAD_2
2019-03-14 11:20:26 -Generating unique operation named: updateUsingPOST_2
2019-03-14 11:20:26 -Generating unique operation named: updateUsingPUT_2
2019-03-14 11:20:26 -Generating unique operation named: updateUsingPATCH_2
2019-03-14 11:20:26 -Generating unique operation named: updateUsingDELETE_2
2019-03-14 11:20:26 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-14 11:20:26 -Generating unique operation named: updateUsingTRACE_2
2019-03-14 11:20:26 -Generating unique operation named: addUsingGET_3
2019-03-14 11:20:26 -Generating unique operation named: editUsingGET_3
2019-03-14 11:20:26 -Generating unique operation named: listUsingGET_3
2019-03-14 11:20:26 -Generating unique operation named: removeUsingPOST_6
2019-03-14 11:20:26 -Generating unique operation named: removeUsingPOST_7
2019-03-14 11:20:26 -Generating unique operation named: saveUsingPOST_3
2019-03-14 11:20:26 -Generating unique operation named: updateUsingGET_3
2019-03-14 11:20:26 -Generating unique operation named: updateUsingHEAD_3
2019-03-14 11:20:26 -Generating unique operation named: updateUsingPOST_3
2019-03-14 11:20:26 -Generating unique operation named: updateUsingPUT_3
2019-03-14 11:20:26 -Generating unique operation named: updateUsingPATCH_3
2019-03-14 11:20:26 -Generating unique operation named: updateUsingDELETE_3
2019-03-14 11:20:26 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-14 11:20:26 -Generating unique operation named: updateUsingTRACE_3
2019-03-14 11:20:26 -Generating unique operation named: addUsingGET_4
2019-03-14 11:20:26 -Generating unique operation named: editUsingGET_4
2019-03-14 11:20:26 -Generating unique operation named: listUsingGET_4
2019-03-14 11:20:26 -Generating unique operation named: removeUsingPOST_8
2019-03-14 11:20:26 -Generating unique operation named: removeUsingPOST_9
2019-03-14 11:20:26 -Generating unique operation named: saveUsingPOST_4
2019-03-14 11:20:26 -Generating unique operation named: updateUsingGET_4
2019-03-14 11:20:26 -Generating unique operation named: updateUsingHEAD_4
2019-03-14 11:20:26 -Generating unique operation named: updateUsingPOST_4
2019-03-14 11:20:26 -Generating unique operation named: updateUsingPUT_4
2019-03-14 11:20:26 -Generating unique operation named: updateUsingPATCH_4
2019-03-14 11:20:26 -Generating unique operation named: updateUsingDELETE_4
2019-03-14 11:20:27 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-14 11:20:27 -Generating unique operation named: updateUsingTRACE_4
2019-03-14 11:20:27 -Generating unique operation named: ElecUsingGET_1
2019-03-14 11:20:27 -Generating unique operation named: addUsingGET_5
2019-03-14 11:20:27 -Generating unique operation named: editUsingGET_5
2019-03-14 11:20:27 -Generating unique operation named: listUsingGET_5
2019-03-14 11:20:27 -Generating unique operation named: removeUsingPOST_10
2019-03-14 11:20:27 -Generating unique operation named: removeUsingPOST_11
2019-03-14 11:20:27 -Generating unique operation named: saveUsingPOST_5
2019-03-14 11:20:27 -Generating unique operation named: updateUsingGET_5
2019-03-14 11:20:27 -Generating unique operation named: updateUsingHEAD_5
2019-03-14 11:20:27 -Generating unique operation named: updateUsingPOST_5
2019-03-14 11:20:27 -Generating unique operation named: updateUsingPUT_5
2019-03-14 11:20:27 -Generating unique operation named: updateUsingPATCH_5
2019-03-14 11:20:27 -Generating unique operation named: updateUsingDELETE_5
2019-03-14 11:20:27 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-14 11:20:27 -Generating unique operation named: updateUsingTRACE_5
2019-03-14 11:20:27 -Generating unique operation named: editUsingGET_6
2019-03-14 11:20:27 -Generating unique operation named: listUsingGET_6
2019-03-14 11:20:27 -Generating unique operation named: updateUsingPOST_6
2019-03-14 11:20:27 -Generating unique operation named: addUsingGET_6
2019-03-14 11:20:27 -Generating unique operation named: editUsingGET_7
2019-03-14 11:20:27 -Generating unique operation named: listUsingGET_7
2019-03-14 11:20:27 -Generating unique operation named: removeUsingPOST_12
2019-03-14 11:20:27 -Generating unique operation named: removeUsingPOST_13
2019-03-14 11:20:27 -Generating unique operation named: saveUsingPOST_6
2019-03-14 11:20:27 -Generating unique operation named: updateUsingGET_6
2019-03-14 11:20:27 -Generating unique operation named: updateUsingHEAD_6
2019-03-14 11:20:27 -Generating unique operation named: updateUsingPOST_7
2019-03-14 11:20:27 -Generating unique operation named: updateUsingPUT_6
2019-03-14 11:20:27 -Generating unique operation named: updateUsingPATCH_6
2019-03-14 11:20:27 -Generating unique operation named: updateUsingDELETE_6
2019-03-14 11:20:27 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-14 11:20:27 -Generating unique operation named: updateUsingTRACE_6
2019-03-14 11:20:27 -Generating unique operation named: addUsingGET_7
2019-03-14 11:20:27 -Generating unique operation named: editUsingGET_8
2019-03-14 11:20:27 -Generating unique operation named: listUsingGET_8
2019-03-14 11:20:27 -Generating unique operation named: removeUsingPOST_14
2019-03-14 11:20:27 -Generating unique operation named: removeUsingPOST_15
2019-03-14 11:20:27 -Generating unique operation named: saveUsingPOST_7
2019-03-14 11:20:27 -Generating unique operation named: updateUsingGET_7
2019-03-14 11:20:27 -Generating unique operation named: updateUsingHEAD_7
2019-03-14 11:20:27 -Generating unique operation named: updateUsingPOST_8
2019-03-14 11:20:27 -Generating unique operation named: updateUsingPUT_7
2019-03-14 11:20:27 -Generating unique operation named: updateUsingPATCH_7
2019-03-14 11:20:27 -Generating unique operation named: updateUsingDELETE_7
2019-03-14 11:20:27 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-14 11:20:27 -Generating unique operation named: updateUsingTRACE_7
2019-03-14 11:20:27 -Generating unique operation named: addUsingGET_8
2019-03-14 11:20:27 -Generating unique operation named: editUsingGET_9
2019-03-14 11:20:27 -Generating unique operation named: listUsingGET_9
2019-03-14 11:20:27 -Generating unique operation named: removeUsingPOST_16
2019-03-14 11:20:27 -Generating unique operation named: removeUsingPOST_17
2019-03-14 11:20:27 -Generating unique operation named: saveUsingPOST_8
2019-03-14 11:20:27 -Generating unique operation named: updateUsingGET_8
2019-03-14 11:20:27 -Generating unique operation named: updateUsingHEAD_8
2019-03-14 11:20:27 -Generating unique operation named: updateUsingPOST_9
2019-03-14 11:20:27 -Generating unique operation named: updateUsingPUT_8
2019-03-14 11:20:27 -Generating unique operation named: updateUsingPATCH_8
2019-03-14 11:20:27 -Generating unique operation named: updateUsingDELETE_8
2019-03-14 11:20:27 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-14 11:20:27 -Generating unique operation named: updateUsingTRACE_8
2019-03-14 11:20:27 -Generating unique operation named: addUsingGET_9
2019-03-14 11:20:27 -Generating unique operation named: editUsingGET_10
2019-03-14 11:20:27 -Generating unique operation named: infoUsingGET_1
2019-03-14 11:20:27 -Generating unique operation named: infoUsingHEAD_1
2019-03-14 11:20:27 -Generating unique operation named: infoUsingPOST_1
2019-03-14 11:20:27 -Generating unique operation named: infoUsingPUT_1
2019-03-14 11:20:27 -Generating unique operation named: infoUsingPATCH_1
2019-03-14 11:20:27 -Generating unique operation named: infoUsingDELETE_1
2019-03-14 11:20:27 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-14 11:20:27 -Generating unique operation named: infoUsingTRACE_1
2019-03-14 11:20:27 -Generating unique operation named: listUsingGET_10
2019-03-14 11:20:27 -Generating unique operation named: removeUsingPOST_18
2019-03-14 11:20:27 -Generating unique operation named: removeUsingPOST_19
2019-03-14 11:20:27 -Generating unique operation named: saveUsingPOST_9
2019-03-14 11:20:27 -Generating unique operation named: updateUsingPOST_10
2019-03-14 11:20:27 -Generating unique operation named: listUsingGET_11
2019-03-14 11:20:27 -Generating unique operation named: removeUsingPOST_20
2019-03-14 11:20:27 -Generating unique operation named: welcomeUsingGET_1
2019-03-14 11:20:28 -Generating unique operation named: addUsingGET_10
2019-03-14 11:20:28 -Generating unique operation named: editUsingGET_11
2019-03-14 11:20:28 -Generating unique operation named: listUsingGET_12
2019-03-14 11:20:28 -Generating unique operation named: removeUsingPOST_21
2019-03-14 11:20:28 -Generating unique operation named: saveUsingPOST_10
2019-03-14 11:20:28 -Generating unique operation named: treeUsingGET_1
2019-03-14 11:20:28 -Generating unique operation named: treeUsingGET_2
2019-03-14 11:20:28 -Generating unique operation named: updateUsingPOST_11
2019-03-14 11:20:28 -Generating unique operation named: addUsingGET_11
2019-03-14 11:20:28 -Generating unique operation named: editUsingGET_12
2019-03-14 11:20:28 -Generating unique operation named: listUsingGET_13
2019-03-14 11:20:28 -Generating unique operation named: removeUsingPOST_22
2019-03-14 11:20:28 -Generating unique operation named: removeUsingPOST_23
2019-03-14 11:20:28 -Generating unique operation named: saveUsingPOST_11
2019-03-14 11:20:28 -Generating unique operation named: updateUsingGET_9
2019-03-14 11:20:28 -Generating unique operation named: updateUsingHEAD_9
2019-03-14 11:20:28 -Generating unique operation named: updateUsingPOST_12
2019-03-14 11:20:28 -Generating unique operation named: updateUsingPUT_9
2019-03-14 11:20:28 -Generating unique operation named: updateUsingPATCH_9
2019-03-14 11:20:28 -Generating unique operation named: updateUsingDELETE_9
2019-03-14 11:20:28 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-14 11:20:28 -Generating unique operation named: updateUsingTRACE_9
2019-03-14 11:20:28 -Generating unique operation named: addUsingGET_12
2019-03-14 11:20:28 -Generating unique operation named: editUsingGET_13
2019-03-14 11:20:28 -Generating unique operation named: listUsingGET_14
2019-03-14 11:20:28 -Generating unique operation named: removeUsingPOST_24
2019-03-14 11:20:28 -Generating unique operation named: removeUsingPOST_25
2019-03-14 11:20:28 -Generating unique operation named: saveUsingPOST_12
2019-03-14 11:20:28 -Generating unique operation named: updateUsingGET_10
2019-03-14 11:20:28 -Generating unique operation named: updateUsingHEAD_10
2019-03-14 11:20:28 -Generating unique operation named: updateUsingPOST_13
2019-03-14 11:20:28 -Generating unique operation named: updateUsingPUT_10
2019-03-14 11:20:28 -Generating unique operation named: updateUsingPATCH_10
2019-03-14 11:20:28 -Generating unique operation named: updateUsingDELETE_10
2019-03-14 11:20:28 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-14 11:20:28 -Generating unique operation named: updateUsingTRACE_10
2019-03-14 11:20:28 -Generating unique operation named: addUsingGET_13
2019-03-14 11:20:28 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-14 11:20:28 -Generating unique operation named: editUsingGET_14
2019-03-14 11:20:28 -Generating unique operation named: listUsingGET_15
2019-03-14 11:20:28 -Generating unique operation named: saveUsingPOST_13
2019-03-14 11:20:28 -Generating unique operation named: saveUsingPOST_14
2019-03-14 11:20:28 -Generating unique operation named: updateUsingPOST_14
2019-03-14 11:20:28 -Generating unique operation named: listUsingGET_16
2019-03-14 11:20:28 -Generating unique operation named: listUsingHEAD_1
2019-03-14 11:20:28 -Generating unique operation named: listUsingPOST_1
2019-03-14 11:20:28 -Generating unique operation named: listUsingPUT_1
2019-03-14 11:20:28 -Generating unique operation named: listUsingPATCH_1
2019-03-14 11:20:28 -Generating unique operation named: listUsingDELETE_1
2019-03-14 11:20:28 -Generating unique operation named: listUsingOPTIONS_1
2019-03-14 11:20:28 -Generating unique operation named: listUsingTRACE_1
2019-03-14 11:20:28 -Generating unique operation named: addUsingGET_14
2019-03-14 11:20:28 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-14 11:20:28 -Generating unique operation named: editUsingGET_15
2019-03-14 11:20:28 -Generating unique operation named: listUsingGET_17
2019-03-14 11:20:28 -Generating unique operation named: removeUsingPOST_26
2019-03-14 11:20:28 -Generating unique operation named: saveUsingPOST_15
2019-03-14 11:20:29 -Generating unique operation named: treeUsingGET_3
2019-03-14 11:20:29 -Generating unique operation named: treeViewUsingGET_1
2019-03-14 11:20:29 -Generating unique operation named: updateUsingPOST_15
2019-03-14 11:20:29 -Generating unique operation named: addUsingGET_15
2019-03-14 11:20:29 -Generating unique operation named: editUsingGET_16
2019-03-14 11:20:29 -Generating unique operation named: listUsingGET_18
2019-03-14 11:20:29 -Generating unique operation named: removeUsingPOST_27
2019-03-14 11:20:29 -Generating unique operation named: removeUsingPOST_28
2019-03-14 11:20:29 -Generating unique operation named: saveUsingPOST_16
2019-03-14 11:20:29 -Generating unique operation named: updateUsingGET_11
2019-03-14 11:20:29 -Generating unique operation named: updateUsingHEAD_11
2019-03-14 11:20:29 -Generating unique operation named: updateUsingPOST_16
2019-03-14 11:20:29 -Generating unique operation named: updateUsingPUT_11
2019-03-14 11:20:29 -Generating unique operation named: updateUsingPATCH_11
2019-03-14 11:20:29 -Generating unique operation named: updateUsingDELETE_11
2019-03-14 11:20:29 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-14 11:20:29 -Generating unique operation named: updateUsingTRACE_11
2019-03-14 11:20:29 -Generating unique operation named: addUsingGET_16
2019-03-14 11:20:29 -Generating unique operation named: editUsingGET_17
2019-03-14 11:20:29 -Generating unique operation named: listUsingGET_19
2019-03-14 11:20:29 -Generating unique operation named: removeUsingPOST_29
2019-03-14 11:20:29 -Generating unique operation named: removeUsingPOST_30
2019-03-14 11:20:29 -Generating unique operation named: saveUsingPOST_17
2019-03-14 11:20:29 -Generating unique operation named: updateUsingGET_12
2019-03-14 11:20:29 -Generating unique operation named: updateUsingHEAD_12
2019-03-14 11:20:29 -Generating unique operation named: updateUsingPOST_17
2019-03-14 11:20:29 -Generating unique operation named: updateUsingPUT_12
2019-03-14 11:20:29 -Generating unique operation named: updateUsingPATCH_12
2019-03-14 11:20:29 -Generating unique operation named: updateUsingDELETE_12
2019-03-14 11:20:29 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-14 11:20:29 -Generating unique operation named: updateUsingTRACE_12
2019-03-14 11:20:29 -Generating unique operation named: addUsingGET_17
2019-03-14 11:20:29 -Generating unique operation named: editUsingGET_18
2019-03-14 11:20:29 -Generating unique operation named: listUsingGET_20
2019-03-14 11:20:29 -Generating unique operation named: removeUsingPOST_31
2019-03-14 11:20:29 -Generating unique operation named: removeUsingPOST_32
2019-03-14 11:20:29 -Generating unique operation named: saveUsingPOST_18
2019-03-14 11:20:29 -Generating unique operation named: updateUsingGET_13
2019-03-14 11:20:29 -Generating unique operation named: updateUsingHEAD_13
2019-03-14 11:20:29 -Generating unique operation named: updateUsingPOST_18
2019-03-14 11:20:29 -Generating unique operation named: updateUsingPUT_13
2019-03-14 11:20:29 -Generating unique operation named: updateUsingPATCH_13
2019-03-14 11:20:29 -Generating unique operation named: updateUsingDELETE_13
2019-03-14 11:20:29 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-14 11:20:29 -Generating unique operation named: updateUsingTRACE_13
2019-03-14 11:20:29 -Generating unique operation named: addUsingGET_18
2019-03-14 11:20:29 -Generating unique operation named: editUsingGET_19
2019-03-14 11:20:29 -Generating unique operation named: listUsingGET_21
2019-03-14 11:20:29 -Generating unique operation named: removeUsingPOST_33
2019-03-14 11:20:29 -Generating unique operation named: removeUsingPOST_34
2019-03-14 11:20:29 -Generating unique operation named: saveUsingPOST_19
2019-03-14 11:20:29 -Generating unique operation named: updateUsingGET_14
2019-03-14 11:20:29 -Generating unique operation named: updateUsingHEAD_14
2019-03-14 11:20:29 -Generating unique operation named: updateUsingPOST_19
2019-03-14 11:20:29 -Generating unique operation named: updateUsingPUT_14
2019-03-14 11:20:29 -Generating unique operation named: updateUsingPATCH_14
2019-03-14 11:20:29 -Generating unique operation named: updateUsingDELETE_14
2019-03-14 11:20:29 -Generating unique operation named: updateUsingOPTIONS_14
2019-03-14 11:20:29 -Generating unique operation named: updateUsingTRACE_14
2019-03-14 11:20:29 -Starting Quartz Scheduler now
2019-03-14 11:20:29 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-14 11:20:29 -Starting...
2019-03-14 11:20:29 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-14 11:20:29 -Started.
2019-03-14 11:20:29 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-14 11:20:29 -Using a shared selector for servlet write/read
2019-03-14 11:20:29 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-14 11:20:29 -Started BootdoApplication in 34.408 seconds (JVM running for 36.218)
2019-03-14 11:20:29 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-14 11:20:30 -==> Parameters: 
2019-03-14 11:20:30 -<==      Total: 1
2019-03-14 11:20:43 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-14 11:20:43 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-14 11:20:43 -FrameworkServlet 'dispatcherServlet': initialization completed in 71 ms
2019-03-14 11:20:43 -Enabling session validation scheduler...
2019-03-14 11:20:43 -请求地址 : http://localhost:8081/login;JSESSIONID=5db56ba3-12fd-428d-9ba4-84c1f7077f10
2019-03-14 11:20:43 -HTTP METHOD : GET
2019-03-14 11:20:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-14 11:20:43 -参数 : [{}]
2019-03-14 11:20:43 -耗时 : 4
2019-03-14 11:20:43 -返回值 : login
2019-03-14 11:20:45 -请求地址 : http://localhost:8081/getVerify
2019-03-14 11:20:45 -HTTP METHOD : GET
2019-03-14 11:20:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-14 11:20:45 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@87bf706, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6852f9c7]
2019-03-14 11:20:46 -9127
2019-03-14 11:20:46 -耗时 : 605
2019-03-14 11:20:46 -返回值 : null
2019-03-14 11:20:52 -请求地址 : http://localhost:8081/login
2019-03-14 11:20:52 -HTTP METHOD : POST
2019-03-14 11:20:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-14 11:20:52 -参数 : [admin, 111111, 9127, org.apache.shiro.web.servlet.ShiroHttpServletRequest@8726533]
2019-03-14 11:20:52 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-14 11:20:52 -==> Parameters: admin(String)
2019-03-14 11:20:52 -<==      Total: 1
2019-03-14 11:20:52 -耗时 : 91
2019-03-14 11:20:52 -返回值 : {msg=操作成功, code=0}
2019-03-14 11:20:52 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-14 11:20:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 11:20:52 -==> Parameters: 1(Long), admin(String), 登录(String), 91(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-14 11:20:52.968(Timestamp)
2019-03-14 11:20:53 -请求地址 : http://localhost:8081/index
2019-03-14 11:20:53 -HTTP METHOD : GET
2019-03-14 11:20:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 11:20:53 -参数 : [{}]
2019-03-14 11:20:53 -<==    Updates: 1
2019-03-14 11:20:53 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 11:20:53 -==> Parameters: 1(Long)
2019-03-14 11:20:53 -<==      Total: 45
2019-03-14 11:20:53 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 11:20:53 -==> Parameters: 138(Long)
2019-03-14 11:20:53 -<==      Total: 1
2019-03-14 11:20:53 -耗时 : 231
2019-03-14 11:20:53 -返回值 : index_v1
2019-03-14 11:20:53 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 11:20:53 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 232(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 11:20:53.348(Timestamp)
2019-03-14 11:20:53 -<==    Updates: 1
2019-03-14 11:20:53 -请求地址 : http://localhost:8081/main
2019-03-14 11:20:53 -HTTP METHOD : GET
2019-03-14 11:20:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 11:20:53 -参数 : []
2019-03-14 11:20:53 -耗时 : 0
2019-03-14 11:20:53 -返回值 : main
2019-03-14 11:20:53 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 11:20:53 -HTTP METHOD : GET
2019-03-14 11:20:53 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 11:20:53 -参数 : []
2019-03-14 11:20:53 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 11:20:53 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 11:20:53 -<==      Total: 0
2019-03-14 11:20:53 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 11:20:53 -==> Parameters: 1(Long), 0(String)
2019-03-14 11:20:53 -<==      Total: 1
2019-03-14 11:20:53 -耗时 : 47
2019-03-14 11:20:53 -返回值 : com.bootdo.common.utils.PageUtils@2da3723a
2019-03-14 11:20:53 -请求地址 : http://localhost:8081/main
2019-03-14 11:20:53 -HTTP METHOD : GET
2019-03-14 11:20:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 11:20:53 -参数 : []
2019-03-14 11:20:53 -耗时 : 1
2019-03-14 11:20:53 -返回值 : main
2019-03-14 11:21:13 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-14 11:21:13 -==> Parameters: 1(Long)
2019-03-14 11:21:13 -<==      Total: 86
2019-03-14 11:21:13 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 11:21:13 -HTTP METHOD : GET
2019-03-14 11:21:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 11:21:13 -参数 : []
2019-03-14 11:21:13 -耗时 : 0
2019-03-14 11:21:13 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 11:21:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 11:21:13 -HTTP METHOD : GET
2019-03-14 11:21:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:21:13 -参数 : [userType]
2019-03-14 11:21:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:21:13 -==> Parameters: userType(String)
2019-03-14 11:21:13 -<==      Total: 2
2019-03-14 11:21:13 -耗时 : 33
2019-03-14 11:21:13 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 11:21:13 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:21:13 -HTTP METHOD : GET
2019-03-14 11:21:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:21:13 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 11:21:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-14 11:21:13 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:21:13 -<==      Total: 3
2019-03-14 11:21:13 -==>  Preparing: select count(*) from elec_log 
2019-03-14 11:21:13 -==> Parameters: 
2019-03-14 11:21:13 -<==      Total: 1
2019-03-14 11:21:13 -耗时 : 34
2019-03-14 11:21:13 -返回值 : com.bootdo.common.utils.PageUtils@4fa50246
2019-03-14 11:21:15 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-14 11:21:15 -HTTP METHOD : GET
2019-03-14 11:21:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-14 11:21:15 -参数 : []
2019-03-14 11:21:15 -耗时 : 1
2019-03-14 11:21:15 -返回值 : /moneyLog/heatLog/heatLog
2019-03-14 11:21:15 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-14 11:21:15 -HTTP METHOD : GET
2019-03-14 11:21:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-14 11:21:15 -参数 : [{limit=10, offset=0}]
2019-03-14 11:21:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-14 11:21:15 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:21:15 -<==      Total: 3
2019-03-14 11:21:15 -==>  Preparing: select count(*) from heat_log 
2019-03-14 11:21:15 -==> Parameters: 
2019-03-14 11:21:15 -<==      Total: 1
2019-03-14 11:21:15 -耗时 : 32
2019-03-14 11:21:15 -返回值 : com.bootdo.common.utils.PageUtils@3a740465
2019-03-14 11:21:16 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-14 11:21:16 -HTTP METHOD : GET
2019-03-14 11:21:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-14 11:21:16 -参数 : []
2019-03-14 11:21:16 -耗时 : 1
2019-03-14 11:21:16 -返回值 : /moneyLog/waterLog/waterLog
2019-03-14 11:21:16 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 11:21:16 -HTTP METHOD : GET
2019-03-14 11:21:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:21:16 -参数 : [userType]
2019-03-14 11:21:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:21:16 -==> Parameters: userType(String)
2019-03-14 11:21:16 -<==      Total: 2
2019-03-14 11:21:16 -耗时 : 6
2019-03-14 11:21:16 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 11:21:16 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-14 11:21:16 -HTTP METHOD : GET
2019-03-14 11:21:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-14 11:21:16 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 11:21:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-14 11:21:16 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:21:16 -<==      Total: 3
2019-03-14 11:21:16 -==>  Preparing: select count(*) from water_log 
2019-03-14 11:21:16 -==> Parameters: 
2019-03-14 11:21:16 -<==      Total: 1
2019-03-14 11:21:16 -耗时 : 39
2019-03-14 11:21:16 -返回值 : com.bootdo.common.utils.PageUtils@491e5d96
2019-03-14 11:21:17 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-14 11:21:17 -HTTP METHOD : GET
2019-03-14 11:21:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-14 11:21:17 -参数 : []
2019-03-14 11:21:17 -耗时 : 2
2019-03-14 11:21:17 -返回值 : /moneyLog/heatLog/heatLog
2019-03-14 11:21:17 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-14 11:21:17 -HTTP METHOD : GET
2019-03-14 11:21:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-14 11:21:17 -参数 : [{limit=10, offset=0}]
2019-03-14 11:21:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-14 11:21:17 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:21:17 -<==      Total: 3
2019-03-14 11:21:17 -==>  Preparing: select count(*) from heat_log 
2019-03-14 11:21:17 -==> Parameters: 
2019-03-14 11:21:17 -<==      Total: 1
2019-03-14 11:21:17 -耗时 : 13
2019-03-14 11:21:17 -返回值 : com.bootdo.common.utils.PageUtils@10ee28e4
2019-03-14 11:21:18 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-14 11:21:18 -HTTP METHOD : GET
2019-03-14 11:21:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-14 11:21:18 -参数 : []
2019-03-14 11:21:18 -耗时 : 1
2019-03-14 11:21:18 -返回值 : /moneyLog/waterLog/waterLog
2019-03-14 11:21:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 11:21:18 -HTTP METHOD : GET
2019-03-14 11:21:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:21:18 -参数 : [userType]
2019-03-14 11:21:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:21:18 -==> Parameters: userType(String)
2019-03-14 11:21:18 -<==      Total: 2
2019-03-14 11:21:18 -耗时 : 5
2019-03-14 11:21:18 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 11:21:18 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-14 11:21:18 -HTTP METHOD : GET
2019-03-14 11:21:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-14 11:21:18 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 11:21:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-14 11:21:18 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:21:18 -<==      Total: 3
2019-03-14 11:21:18 -==>  Preparing: select count(*) from water_log 
2019-03-14 11:21:18 -==> Parameters: 
2019-03-14 11:21:18 -<==      Total: 1
2019-03-14 11:21:18 -耗时 : 8
2019-03-14 11:21:18 -返回值 : com.bootdo.common.utils.PageUtils@629029d7
2019-03-14 11:21:20 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-14 11:21:20 -HTTP METHOD : GET
2019-03-14 11:21:20 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-14 11:21:20 -参数 : []
2019-03-14 11:21:20 -耗时 : 0
2019-03-14 11:21:20 -返回值 : /moneyLog/heatLog/heatLog
2019-03-14 11:21:20 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 7]
2019-03-14 11:21:20 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-14 11:21:20 -HTTP METHOD : GET
2019-03-14 11:21:20 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-14 11:21:20 -参数 : [{limit=10, offset=0}]
2019-03-14 11:21:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-14 11:21:20 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:21:20 -<==      Total: 3
2019-03-14 11:21:20 -==>  Preparing: select count(*) from heat_log 
2019-03-14 11:21:20 -==> Parameters: 
2019-03-14 11:21:20 -<==      Total: 1
2019-03-14 11:21:20 -耗时 : 9
2019-03-14 11:21:20 -返回值 : com.bootdo.common.utils.PageUtils@36d67d9d
2019-03-14 11:21:23 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 11:21:23 -HTTP METHOD : GET
2019-03-14 11:21:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 11:21:23 -参数 : []
2019-03-14 11:21:23 -耗时 : 1
2019-03-14 11:21:23 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 11:21:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 11:21:23 -HTTP METHOD : GET
2019-03-14 11:21:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:21:23 -参数 : [userType]
2019-03-14 11:21:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:21:23 -==> Parameters: userType(String)
2019-03-14 11:21:23 -<==      Total: 2
2019-03-14 11:21:23 -耗时 : 6
2019-03-14 11:21:23 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 11:21:23 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:21:23 -HTTP METHOD : GET
2019-03-14 11:21:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:21:23 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 11:21:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-14 11:21:23 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:21:23 -<==      Total: 3
2019-03-14 11:21:23 -==>  Preparing: select count(*) from elec_log 
2019-03-14 11:21:23 -==> Parameters: 
2019-03-14 11:21:23 -<==      Total: 1
2019-03-14 11:21:23 -耗时 : 10
2019-03-14 11:21:23 -返回值 : com.bootdo.common.utils.PageUtils@59b5bcd5
2019-03-14 11:21:24 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-14 11:21:24 -HTTP METHOD : GET
2019-03-14 11:21:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-14 11:21:24 -参数 : []
2019-03-14 11:21:24 -耗时 : 1
2019-03-14 11:21:24 -返回值 : /moneyLog/heatLog/heatLog
2019-03-14 11:21:24 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-14 11:21:24 -HTTP METHOD : GET
2019-03-14 11:21:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-14 11:21:24 -参数 : [{limit=10, offset=0}]
2019-03-14 11:21:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-14 11:21:24 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:21:24 -<==      Total: 3
2019-03-14 11:21:24 -==>  Preparing: select count(*) from heat_log 
2019-03-14 11:21:24 -==> Parameters: 
2019-03-14 11:21:24 -<==      Total: 1
2019-03-14 11:21:24 -耗时 : 8
2019-03-14 11:21:24 -返回值 : com.bootdo.common.utils.PageUtils@703ffb6f
2019-03-14 11:21:24 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-14 11:21:24 -HTTP METHOD : GET
2019-03-14 11:21:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-14 11:21:24 -参数 : []
2019-03-14 11:21:24 -耗时 : 0
2019-03-14 11:21:24 -返回值 : /moneyLog/waterLog/waterLog
2019-03-14 11:21:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 11:21:24 -HTTP METHOD : GET
2019-03-14 11:21:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:21:24 -参数 : [userType]
2019-03-14 11:21:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:21:24 -==> Parameters: userType(String)
2019-03-14 11:21:24 -<==      Total: 2
2019-03-14 11:21:24 -耗时 : 5
2019-03-14 11:21:24 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 11:21:25 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-14 11:21:25 -HTTP METHOD : GET
2019-03-14 11:21:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-14 11:21:25 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 11:21:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-14 11:21:25 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:21:25 -<==      Total: 3
2019-03-14 11:21:25 -==>  Preparing: select count(*) from water_log 
2019-03-14 11:21:25 -==> Parameters: 
2019-03-14 11:21:25 -<==      Total: 1
2019-03-14 11:21:25 -耗时 : 11
2019-03-14 11:21:25 -返回值 : com.bootdo.common.utils.PageUtils@6fd4adf9
2019-03-14 11:21:25 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-14 11:21:25 -HTTP METHOD : GET
2019-03-14 11:21:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-14 11:21:25 -参数 : []
2019-03-14 11:21:25 -耗时 : 1
2019-03-14 11:21:25 -返回值 : /moneyLog/heatLog/heatLog
2019-03-14 11:21:26 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-14 11:21:26 -HTTP METHOD : GET
2019-03-14 11:21:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-14 11:21:26 -参数 : [{limit=10, offset=0}]
2019-03-14 11:21:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-14 11:21:26 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:21:26 -<==      Total: 3
2019-03-14 11:21:26 -==>  Preparing: select count(*) from heat_log 
2019-03-14 11:21:26 -==> Parameters: 
2019-03-14 11:21:26 -<==      Total: 1
2019-03-14 11:21:26 -耗时 : 7
2019-03-14 11:21:26 -返回值 : com.bootdo.common.utils.PageUtils@4ccbb203
2019-03-14 11:23:30 -请求地址 : http://localhost:8081/
2019-03-14 11:23:30 -HTTP METHOD : GET
2019-03-14 11:23:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-03-14 11:23:30 -参数 : [{}]
2019-03-14 11:23:30 -耗时 : 0
2019-03-14 11:23:30 -返回值 : redirect:/index
2019-03-14 11:23:30 -请求地址 : http://localhost:8081/login;JSESSIONID=8abb2919-e2b0-437c-8f6d-6de8133ad4fa
2019-03-14 11:23:30 -HTTP METHOD : GET
2019-03-14 11:23:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-14 11:23:30 -参数 : [{}]
2019-03-14 11:23:30 -耗时 : 2
2019-03-14 11:23:30 -返回值 : login
2019-03-14 11:23:31 -请求地址 : http://localhost:8081/getVerify
2019-03-14 11:23:31 -HTTP METHOD : GET
2019-03-14 11:23:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-14 11:23:31 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1ea5be6a, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7bef333a]
2019-03-14 11:23:31 -2763
2019-03-14 11:23:31 -耗时 : 15
2019-03-14 11:23:31 -返回值 : null
2019-03-14 11:23:31 -请求地址 : http://localhost:8081/login
2019-03-14 11:23:31 -HTTP METHOD : GET
2019-03-14 11:23:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-14 11:23:31 -参数 : [{}]
2019-03-14 11:23:31 -耗时 : 0
2019-03-14 11:23:31 -返回值 : login
2019-03-14 11:23:37 -请求地址 : http://localhost:8081/login
2019-03-14 11:23:37 -HTTP METHOD : POST
2019-03-14 11:23:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-14 11:23:37 -参数 : [admin, 111111, 2763, org.apache.shiro.web.servlet.ShiroHttpServletRequest@3b0f9792]
2019-03-14 11:23:38 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-14 11:23:38 -==> Parameters: admin(String)
2019-03-14 11:23:38 -<==      Total: 1
2019-03-14 11:23:38 -耗时 : 47
2019-03-14 11:23:38 -返回值 : {msg=操作成功, code=0}
2019-03-14 11:23:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 11:23:38 -==> Parameters: 1(Long), admin(String), 登录(String), 48(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-14 11:23:38.046(Timestamp)
2019-03-14 11:23:38 -请求地址 : http://localhost:8081/index
2019-03-14 11:23:38 -HTTP METHOD : GET
2019-03-14 11:23:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 11:23:38 -参数 : [{}]
2019-03-14 11:23:38 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 11:23:38 -==> Parameters: 1(Long)
2019-03-14 11:23:38 -<==    Updates: 1
2019-03-14 11:23:38 -<==      Total: 45
2019-03-14 11:23:38 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 11:23:38 -==> Parameters: 138(Long)
2019-03-14 11:23:38 -<==      Total: 1
2019-03-14 11:23:38 -耗时 : 130
2019-03-14 11:23:38 -返回值 : index_v1
2019-03-14 11:23:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 11:23:38 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 130(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 11:23:38.197(Timestamp)
2019-03-14 11:23:38 -<==    Updates: 1
2019-03-14 11:23:38 -请求地址 : http://localhost:8081/main
2019-03-14 11:23:38 -HTTP METHOD : GET
2019-03-14 11:23:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 11:23:38 -参数 : []
2019-03-14 11:23:38 -耗时 : 0
2019-03-14 11:23:38 -返回值 : main
2019-03-14 11:23:38 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 11:23:38 -HTTP METHOD : GET
2019-03-14 11:23:38 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 11:23:38 -参数 : []
2019-03-14 11:23:38 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 11:23:38 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 11:23:38 -<==      Total: 0
2019-03-14 11:23:38 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 11:23:38 -==> Parameters: 1(Long), 0(String)
2019-03-14 11:23:38 -<==      Total: 1
2019-03-14 11:23:38 -耗时 : 26
2019-03-14 11:23:38 -返回值 : com.bootdo.common.utils.PageUtils@1dab75e2
2019-03-14 11:23:38 -请求地址 : http://localhost:8081/main
2019-03-14 11:23:38 -HTTP METHOD : GET
2019-03-14 11:23:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 11:23:38 -参数 : []
2019-03-14 11:23:38 -耗时 : 0
2019-03-14 11:23:38 -返回值 : main
2019-03-14 11:25:08 -请求地址 : http://localhost:8081/index
2019-03-14 11:25:08 -HTTP METHOD : GET
2019-03-14 11:25:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 11:25:08 -参数 : [{}]
2019-03-14 11:25:08 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 11:25:08 -==> Parameters: 1(Long)
2019-03-14 11:25:08 -<==      Total: 45
2019-03-14 11:25:08 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 11:25:08 -==> Parameters: 138(Long)
2019-03-14 11:25:08 -<==      Total: 1
2019-03-14 11:25:08 -耗时 : 29
2019-03-14 11:25:08 -返回值 : index_v1
2019-03-14 11:25:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 11:25:08 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 30(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 11:25:08.516(Timestamp)
2019-03-14 11:25:08 -请求地址 : http://localhost:8081/main
2019-03-14 11:25:08 -HTTP METHOD : GET
2019-03-14 11:25:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 11:25:08 -参数 : []
2019-03-14 11:25:08 -耗时 : 0
2019-03-14 11:25:08 -返回值 : main
2019-03-14 11:25:08 -<==    Updates: 1
2019-03-14 11:25:08 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 11:25:08 -HTTP METHOD : GET
2019-03-14 11:25:08 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 11:25:08 -参数 : []
2019-03-14 11:25:08 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 11:25:08 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 11:25:08 -<==      Total: 0
2019-03-14 11:25:08 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 11:25:08 -==> Parameters: 1(Long), 0(String)
2019-03-14 11:25:08 -<==      Total: 1
2019-03-14 11:25:08 -耗时 : 24
2019-03-14 11:25:08 -返回值 : com.bootdo.common.utils.PageUtils@74a98c8
2019-03-14 11:25:08 -请求地址 : http://localhost:8081/main
2019-03-14 11:25:08 -HTTP METHOD : GET
2019-03-14 11:25:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 11:25:08 -参数 : []
2019-03-14 11:25:08 -耗时 : 1
2019-03-14 11:25:08 -返回值 : main
2019-03-14 11:25:33 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-14 11:25:33 -==> Parameters: 1(Long)
2019-03-14 11:25:33 -<==      Total: 86
2019-03-14 11:25:33 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 11:25:33 -HTTP METHOD : GET
2019-03-14 11:25:33 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 11:25:33 -参数 : []
2019-03-14 11:25:33 -耗时 : 1
2019-03-14 11:25:33 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 11:25:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 11:25:34 -HTTP METHOD : GET
2019-03-14 11:25:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:25:34 -参数 : [userType]
2019-03-14 11:25:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:25:34 -==> Parameters: userType(String)
2019-03-14 11:25:34 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:25:34 -HTTP METHOD : GET
2019-03-14 11:25:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:25:34 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 11:25:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-14 11:25:34 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:25:34 -<==      Total: 3
2019-03-14 11:25:34 -==>  Preparing: select count(*) from elec_log 
2019-03-14 11:25:34 -==> Parameters: 
2019-03-14 11:25:34 -<==      Total: 1
2019-03-14 11:25:34 -耗时 : 9
2019-03-14 11:25:34 -返回值 : com.bootdo.common.utils.PageUtils@67606811
2019-03-14 11:25:34 -<==      Total: 2
2019-03-14 11:25:34 -耗时 : 161
2019-03-14 11:25:34 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 11:25:35 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-14 11:25:35 -HTTP METHOD : GET
2019-03-14 11:25:35 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-14 11:25:35 -参数 : []
2019-03-14 11:25:35 -耗时 : 1
2019-03-14 11:25:35 -返回值 : /moneyLog/heatLog/heatLog
2019-03-14 11:25:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 11:25:35 -HTTP METHOD : GET
2019-03-14 11:25:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:25:35 -参数 : [userType]
2019-03-14 11:25:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:25:35 -==> Parameters: userType(String)
2019-03-14 11:25:35 -<==      Total: 2
2019-03-14 11:25:35 -耗时 : 4
2019-03-14 11:25:35 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 11:25:35 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-14 11:25:35 -HTTP METHOD : GET
2019-03-14 11:25:35 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-14 11:25:35 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 11:25:35 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-14 11:25:35 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:25:35 -<==      Total: 3
2019-03-14 11:25:35 -==>  Preparing: select count(*) from heat_log 
2019-03-14 11:25:35 -==> Parameters: 
2019-03-14 11:25:35 -<==      Total: 1
2019-03-14 11:25:35 -耗时 : 42
2019-03-14 11:25:35 -返回值 : com.bootdo.common.utils.PageUtils@1e9f61db
2019-03-14 11:25:38 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-14 11:25:38 -HTTP METHOD : GET
2019-03-14 11:25:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-14 11:25:38 -参数 : []
2019-03-14 11:25:38 -耗时 : 1
2019-03-14 11:25:38 -返回值 : /moneyLog/waterLog/waterLog
2019-03-14 11:25:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 11:25:39 -HTTP METHOD : GET
2019-03-14 11:25:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:25:39 -参数 : [userType]
2019-03-14 11:25:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:25:39 -==> Parameters: userType(String)
2019-03-14 11:25:39 -<==      Total: 2
2019-03-14 11:25:39 -耗时 : 7
2019-03-14 11:25:39 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 11:25:39 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-14 11:25:39 -HTTP METHOD : GET
2019-03-14 11:25:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-14 11:25:39 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 11:25:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-14 11:25:39 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:25:39 -<==      Total: 3
2019-03-14 11:25:39 -==>  Preparing: select count(*) from water_log 
2019-03-14 11:25:39 -==> Parameters: 
2019-03-14 11:25:39 -<==      Total: 1
2019-03-14 11:25:39 -耗时 : 30
2019-03-14 11:25:39 -返回值 : com.bootdo.common.utils.PageUtils@4afa54b0
2019-03-14 11:25:40 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-14 11:25:40 -HTTP METHOD : GET
2019-03-14 11:25:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-14 11:25:40 -参数 : []
2019-03-14 11:25:40 -耗时 : 0
2019-03-14 11:25:40 -返回值 : /moneyLog/heatLog/heatLog
2019-03-14 11:25:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 11:25:40 -HTTP METHOD : GET
2019-03-14 11:25:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:25:40 -参数 : [userType]
2019-03-14 11:25:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:25:40 -==> Parameters: userType(String)
2019-03-14 11:25:40 -<==      Total: 2
2019-03-14 11:25:40 -耗时 : 6
2019-03-14 11:25:40 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 11:25:40 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-14 11:25:40 -HTTP METHOD : GET
2019-03-14 11:25:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-14 11:25:40 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 11:25:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-14 11:25:40 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:25:40 -<==      Total: 3
2019-03-14 11:25:40 -==>  Preparing: select count(*) from heat_log 
2019-03-14 11:25:40 -==> Parameters: 
2019-03-14 11:25:40 -<==      Total: 1
2019-03-14 11:25:40 -耗时 : 6
2019-03-14 11:25:40 -返回值 : com.bootdo.common.utils.PageUtils@67fbf04c
2019-03-14 11:25:40 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 11:25:40 -HTTP METHOD : GET
2019-03-14 11:25:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 11:25:40 -参数 : []
2019-03-14 11:25:40 -耗时 : 1
2019-03-14 11:25:40 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 11:25:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 11:25:40 -HTTP METHOD : GET
2019-03-14 11:25:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:25:40 -参数 : [userType]
2019-03-14 11:25:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:25:40 -==> Parameters: userType(String)
2019-03-14 11:25:40 -<==      Total: 2
2019-03-14 11:25:40 -耗时 : 5
2019-03-14 11:25:40 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 11:25:40 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:25:40 -HTTP METHOD : GET
2019-03-14 11:25:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:25:40 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 11:25:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-14 11:25:40 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:25:40 -<==      Total: 3
2019-03-14 11:25:40 -==>  Preparing: select count(*) from elec_log 
2019-03-14 11:25:40 -==> Parameters: 
2019-03-14 11:25:40 -<==      Total: 1
2019-03-14 11:25:40 -耗时 : 16
2019-03-14 11:25:40 -返回值 : com.bootdo.common.utils.PageUtils@50c830e2
2019-03-14 11:25:41 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-14 11:25:41 -HTTP METHOD : GET
2019-03-14 11:25:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-14 11:25:41 -参数 : []
2019-03-14 11:25:41 -耗时 : 1
2019-03-14 11:25:41 -返回值 : /moneyLog/heatLog/heatLog
2019-03-14 11:25:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 11:25:41 -HTTP METHOD : GET
2019-03-14 11:25:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:25:41 -参数 : [userType]
2019-03-14 11:25:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:25:41 -==> Parameters: userType(String)
2019-03-14 11:25:41 -<==      Total: 2
2019-03-14 11:25:41 -耗时 : 4
2019-03-14 11:25:41 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 11:25:42 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-14 11:25:42 -HTTP METHOD : GET
2019-03-14 11:25:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-14 11:25:42 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 11:25:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-14 11:25:42 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:25:42 -<==      Total: 3
2019-03-14 11:25:42 -==>  Preparing: select count(*) from heat_log 
2019-03-14 11:25:42 -==> Parameters: 
2019-03-14 11:25:42 -<==      Total: 1
2019-03-14 11:25:42 -耗时 : 8
2019-03-14 11:25:42 -返回值 : com.bootdo.common.utils.PageUtils@1cc726ef
2019-03-14 11:25:42 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-14 11:25:42 -HTTP METHOD : GET
2019-03-14 11:25:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-14 11:25:42 -参数 : []
2019-03-14 11:25:42 -耗时 : 1
2019-03-14 11:25:42 -返回值 : /moneyLog/waterLog/waterLog
2019-03-14 11:25:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 11:25:42 -HTTP METHOD : GET
2019-03-14 11:25:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:25:42 -参数 : [userType]
2019-03-14 11:25:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:25:42 -==> Parameters: userType(String)
2019-03-14 11:25:42 -<==      Total: 2
2019-03-14 11:25:42 -耗时 : 4
2019-03-14 11:25:42 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 11:25:42 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-14 11:25:42 -HTTP METHOD : GET
2019-03-14 11:25:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-14 11:25:42 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 11:25:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-14 11:25:42 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:25:42 -<==      Total: 3
2019-03-14 11:25:42 -==>  Preparing: select count(*) from water_log 
2019-03-14 11:25:42 -==> Parameters: 
2019-03-14 11:25:42 -<==      Total: 1
2019-03-14 11:25:42 -耗时 : 7
2019-03-14 11:25:42 -返回值 : com.bootdo.common.utils.PageUtils@641c8fe9
2019-03-14 11:25:44 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 11:25:44 -HTTP METHOD : GET
2019-03-14 11:25:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 11:25:44 -参数 : []
2019-03-14 11:25:44 -耗时 : 0
2019-03-14 11:25:44 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 11:25:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 11:25:45 -HTTP METHOD : GET
2019-03-14 11:25:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:25:45 -参数 : [userType]
2019-03-14 11:25:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:25:45 -==> Parameters: userType(String)
2019-03-14 11:25:45 -<==      Total: 2
2019-03-14 11:25:45 -耗时 : 4
2019-03-14 11:25:45 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 11:25:45 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:25:45 -HTTP METHOD : GET
2019-03-14 11:25:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:25:45 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 11:25:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-14 11:25:45 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:25:45 -<==      Total: 3
2019-03-14 11:25:45 -==>  Preparing: select count(*) from elec_log 
2019-03-14 11:25:45 -==> Parameters: 
2019-03-14 11:25:45 -<==      Total: 1
2019-03-14 11:25:45 -耗时 : 6
2019-03-14 11:25:45 -返回值 : com.bootdo.common.utils.PageUtils@67c7ee30
2019-03-14 11:26:00 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:26:00 -HTTP METHOD : GET
2019-03-14 11:26:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:26:00 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-09}]
2019-03-14 11:26:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE create_time = ? and `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-14 11:26:00 -==> Parameters: 2019-03-09(String), 2019-03-09 00:00:00(String), 2019-03-09 23:59:59(String), 0(Integer), 10(Integer)
2019-03-14 11:26:00 -<==      Total: 0
2019-03-14 11:26:00 -==>  Preparing: select count(*) from elec_log WHERE create_time = ? 
2019-03-14 11:26:00 -==> Parameters: 2019-03-09(String)
2019-03-14 11:26:00 -<==      Total: 1
2019-03-14 11:26:00 -耗时 : 9
2019-03-14 11:26:00 -返回值 : com.bootdo.common.utils.PageUtils@d7b6822
2019-03-14 11:26:05 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:26:05 -HTTP METHOD : GET
2019-03-14 11:26:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:26:05 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-08}]
2019-03-14 11:26:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE create_time = ? and `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-14 11:26:05 -==> Parameters: 2019-03-08(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-03-14 11:26:05 -<==      Total: 0
2019-03-14 11:26:05 -==>  Preparing: select count(*) from elec_log WHERE create_time = ? 
2019-03-14 11:26:05 -==> Parameters: 2019-03-08(String)
2019-03-14 11:26:05 -<==      Total: 1
2019-03-14 11:26:05 -耗时 : 13
2019-03-14 11:26:05 -返回值 : com.bootdo.common.utils.PageUtils@2236a421
2019-03-14 11:26:05 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:26:05 -HTTP METHOD : GET
2019-03-14 11:26:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:26:05 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-08}]
2019-03-14 11:26:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE create_time = ? and `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-14 11:26:05 -==> Parameters: 2019-03-08(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-03-14 11:26:05 -<==      Total: 0
2019-03-14 11:26:05 -==>  Preparing: select count(*) from elec_log WHERE create_time = ? 
2019-03-14 11:26:05 -==> Parameters: 2019-03-08(String)
2019-03-14 11:26:05 -<==      Total: 1
2019-03-14 11:26:05 -耗时 : 5
2019-03-14 11:26:05 -返回值 : com.bootdo.common.utils.PageUtils@86ecb57
2019-03-14 11:26:17 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:26:17 -HTTP METHOD : GET
2019-03-14 11:26:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:26:17 -参数 : [{limit=10, offset=0, userType=B, userOrg=, userId=, createTime=2019-03-08, type=B}]
2019-03-14 11:26:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and create_time = ? and `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-14 11:26:17 -==> Parameters: B(String), 2019-03-08(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-03-14 11:26:17 -<==      Total: 0
2019-03-14 11:26:17 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and create_time = ? 
2019-03-14 11:26:17 -==> Parameters: B(String), 2019-03-08(String)
2019-03-14 11:26:17 -<==      Total: 1
2019-03-14 11:26:17 -耗时 : 20
2019-03-14 11:26:17 -返回值 : com.bootdo.common.utils.PageUtils@695fa0ce
2019-03-14 11:26:18 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:26:18 -HTTP METHOD : GET
2019-03-14 11:26:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:26:18 -参数 : [{limit=10, offset=0, userType=B, userOrg=, userId=, createTime=2019-03-08}]
2019-03-14 11:26:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and create_time = ? and `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-14 11:26:18 -==> Parameters: B(String), 2019-03-08(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-03-14 11:26:18 -<==      Total: 0
2019-03-14 11:26:18 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and create_time = ? 
2019-03-14 11:26:18 -==> Parameters: B(String), 2019-03-08(String)
2019-03-14 11:26:18 -<==      Total: 1
2019-03-14 11:26:18 -耗时 : 5
2019-03-14 11:26:18 -返回值 : com.bootdo.common.utils.PageUtils@6cc5090e
2019-03-14 11:26:20 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:26:20 -HTTP METHOD : GET
2019-03-14 11:26:20 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:26:20 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, createTime=2019-03-08, type=A}]
2019-03-14 11:26:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and create_time = ? and `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-14 11:26:20 -==> Parameters: A(String), 2019-03-08(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-03-14 11:26:20 -<==      Total: 0
2019-03-14 11:26:20 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and create_time = ? 
2019-03-14 11:26:20 -==> Parameters: A(String), 2019-03-08(String)
2019-03-14 11:26:20 -<==      Total: 1
2019-03-14 11:26:20 -耗时 : 19
2019-03-14 11:26:20 -返回值 : com.bootdo.common.utils.PageUtils@3b4846c1
2019-03-14 11:26:21 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:26:21 -HTTP METHOD : GET
2019-03-14 11:26:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:26:21 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, createTime=2019-03-08}]
2019-03-14 11:26:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and create_time = ? and `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-14 11:26:21 -==> Parameters: A(String), 2019-03-08(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-03-14 11:26:21 -<==      Total: 0
2019-03-14 11:26:21 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and create_time = ? 
2019-03-14 11:26:21 -==> Parameters: A(String), 2019-03-08(String)
2019-03-14 11:26:21 -<==      Total: 1
2019-03-14 11:26:21 -耗时 : 26
2019-03-14 11:26:21 -返回值 : com.bootdo.common.utils.PageUtils@2b42caf9
2019-03-14 11:26:21 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:26:21 -HTTP METHOD : GET
2019-03-14 11:26:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:26:21 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, createTime=2019-03-08}]
2019-03-14 11:26:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and create_time = ? and `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-14 11:26:21 -==> Parameters: A(String), 2019-03-08(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-03-14 11:26:21 -<==      Total: 0
2019-03-14 11:26:21 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and create_time = ? 
2019-03-14 11:26:21 -==> Parameters: A(String), 2019-03-08(String)
2019-03-14 11:26:21 -<==      Total: 1
2019-03-14 11:26:21 -耗时 : 7
2019-03-14 11:26:21 -返回值 : com.bootdo.common.utils.PageUtils@e42f544
2019-03-14 11:26:22 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-14 11:26:22 -HTTP METHOD : GET
2019-03-14 11:26:22 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-14 11:26:22 -参数 : []
2019-03-14 11:26:22 -耗时 : 1
2019-03-14 11:26:22 -返回值 : system/dept/deptTree
2019-03-14 11:26:22 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-14 11:26:22 -HTTP METHOD : GET
2019-03-14 11:26:22 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-14 11:26:22 -参数 : []
2019-03-14 11:26:22 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-14 11:26:22 -==> Parameters: 
2019-03-14 11:26:22 -<==      Total: 3
2019-03-14 11:26:22 -耗时 : 21
2019-03-14 11:26:22 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-14 11:26:24 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:26:24 -HTTP METHOD : GET
2019-03-14 11:26:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:26:24 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, createTime=2019-03-08}]
2019-03-14 11:26:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and userc_org = ? and create_time = ? and `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-14 11:26:24 -==> Parameters: A(String), 2(String), 2019-03-08(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-03-14 11:26:25 -{conn-10001, pstmt-20034} execute error. select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log
         WHERE  user_type = ? 
			     and userc_org = ? 
			  
			  
	 		   and create_time = ? 
	 		  
	 		  
	 		  
	 		  
	 		  
	 		  
			         and  `create_time` >= ?
			 
			  
			         and  `create_time` <= ? 
         
                order by id asc
			 
		 
			limit ?, ?
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor140.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:22)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:63)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor127.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$3053a910.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-14 11:26:25 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-03-14 11:26:25 -SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2019-03-14 11:26:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 11:26:25 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/elecLog/list(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log          WHERE  user_type = ?          and userc_org = ?                     and create_time = ?                                                        and  `create_time` >= ?                        and  `create_time` <= ?                            order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'(String), null, 2019-03-14 11:26:25.325(Timestamp)
2019-03-14 11:26:25 -
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log          WHERE  user_type = ?          and userc_org = ?                     and create_time = ?                                                        and  `create_time` >= ?                        and  `create_time` <= ?                            order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log          WHERE  user_type = ?          and userc_org = ?                     and create_time = ?                                                        and  `create_time` >= ?                        and  `create_time` <= ?                            order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:22)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:63)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor127.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$3053a910.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor140.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
2019-03-14 11:26:25 -<==    Updates: 1
2019-03-14 11:26:25 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:26:25 -HTTP METHOD : GET
2019-03-14 11:26:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:26:25 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, createTime=2019-03-08}]
2019-03-14 11:26:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and userc_org = ? and create_time = ? and `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-14 11:26:25 -==> Parameters: A(String), 2(String), 2019-03-08(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-03-14 11:26:25 -{conn-10001, pstmt-20035} execute error. select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log
         WHERE  user_type = ? 
			     and userc_org = ? 
			  
			  
	 		   and create_time = ? 
	 		  
	 		  
	 		  
	 		  
	 		  
	 		  
			         and  `create_time` >= ?
			 
			  
			         and  `create_time` <= ? 
         
                order by id asc
			 
		 
			limit ?, ?
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor140.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:22)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:63)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor127.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$3053a910.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-14 11:26:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 11:26:25 -
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log          WHERE  user_type = ?          and userc_org = ?                     and create_time = ?                                                        and  `create_time` >= ?                        and  `create_time` <= ?                            order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log          WHERE  user_type = ?          and userc_org = ?                     and create_time = ?                                                        and  `create_time` >= ?                        and  `create_time` <= ?                            order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:22)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:63)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor127.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$3053a910.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor140.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
2019-03-14 11:26:25 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/elecLog/list(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log          WHERE  user_type = ?          and userc_org = ?                     and create_time = ?                                                        and  `create_time` >= ?                        and  `create_time` <= ?                            order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'(String), null, 2019-03-14 11:26:25.718(Timestamp)
2019-03-14 11:26:25 -<==    Updates: 1
2019-03-14 11:26:26 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:26:26 -HTTP METHOD : GET
2019-03-14 11:26:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:26:26 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, createTime=2019-03-08}]
2019-03-14 11:26:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and userc_org = ? and create_time = ? and `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-14 11:26:26 -==> Parameters: A(String), 2(String), 2019-03-08(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-03-14 11:26:26 -{conn-10001, pstmt-20036} execute error. select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log
         WHERE  user_type = ? 
			     and userc_org = ? 
			  
			  
	 		   and create_time = ? 
	 		  
	 		  
	 		  
	 		  
	 		  
	 		  
			         and  `create_time` >= ?
			 
			  
			         and  `create_time` <= ? 
         
                order by id asc
			 
		 
			limit ?, ?
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor140.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:22)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:63)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor127.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$3053a910.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-14 11:26:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 11:26:26 -
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log          WHERE  user_type = ?          and userc_org = ?                     and create_time = ?                                                        and  `create_time` >= ?                        and  `create_time` <= ?                            order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log          WHERE  user_type = ?          and userc_org = ?                     and create_time = ?                                                        and  `create_time` >= ?                        and  `create_time` <= ?                            order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:22)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:63)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor127.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$3053a910.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor140.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 104 common frames omitted
2019-03-14 11:26:26 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/elecLog/list(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log          WHERE  user_type = ?          and userc_org = ?                     and create_time = ?                                                        and  `create_time` >= ?                        and  `create_time` <= ?                            order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'(String), null, 2019-03-14 11:26:26.093(Timestamp)
2019-03-14 11:26:26 -<==    Updates: 1
2019-03-14 11:26:26 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:26:26 -HTTP METHOD : GET
2019-03-14 11:26:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:26:26 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, createTime=2019-03-08}]
2019-03-14 11:26:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and userc_org = ? and create_time = ? and `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-14 11:26:26 -==> Parameters: A(String), 2(String), 2019-03-08(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-03-14 11:26:26 -{conn-10001, pstmt-20037} execute error. select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log
         WHERE  user_type = ? 
			     and userc_org = ? 
			  
			  
	 		   and create_time = ? 
	 		  
	 		  
	 		  
	 		  
	 		  
	 		  
			         and  `create_time` >= ?
			 
			  
			         and  `create_time` <= ? 
         
                order by id asc
			 
		 
			limit ?, ?
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor140.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:22)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:63)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor127.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$3053a910.list(<generated>)
	at sun.reflect.GeneratedMethodAccessor193.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-14 11:26:26 -
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log          WHERE  user_type = ?          and userc_org = ?                     and create_time = ?                                                        and  `create_time` >= ?                        and  `create_time` <= ?                            order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log          WHERE  user_type = ?          and userc_org = ?                     and create_time = ?                                                        and  `create_time` >= ?                        and  `create_time` <= ?                            order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:234)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy118.list(Unknown Source)
	at com.bootdo.moneyLog.service.impl.ElecLogServiceImpl.list(ElecLogServiceImpl.java:22)
	at com.bootdo.moneyLog.controller.ElecLogController.list(ElecLogController.java:63)
	at com.bootdo.moneyLog.controller.ElecLogController$$FastClassBySpringCGLIB$$33bdc0ef.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor127.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$3053a910.list(<generated>)
	at sun.reflect.GeneratedMethodAccessor193.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor124.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy171.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor140.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-03-14 11:26:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 11:26:26 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/elecLog/list(String), org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyLog\ElecLogMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log          WHERE  user_type = ?          and userc_org = ?                     and create_time = ?                                                        and  `create_time` >= ?                        and  `create_time` <= ?                            order by id asc             limit ?, ?
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'userc_org' in 'where clause'(String), null, 2019-03-14 11:26:26.339(Timestamp)
2019-03-14 11:26:26 -<==    Updates: 1
2019-03-14 11:34:06 -Starting BootdoApplication on ZJZL-20180906VX with PID 14752 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-14 11:34:06 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-14 11:34:06 -The following profiles are active: dev
2019-03-14 11:34:06 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a5bd950: startup date [Thu Mar 14 11:34:06 CST 2019]; root of context hierarchy
2019-03-14 11:34:10 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-14 11:34:12 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ab378cb3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 11:34:12 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$9d90bb5a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 11:34:13 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 11:34:14 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 11:34:14 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 11:34:14 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-14 11:34:14 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-14 11:34:14 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 11:34:14 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 11:34:14 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 11:34:14 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 11:34:15 -Tomcat initialized with port(s): 8081 (http)
2019-03-14 11:34:15 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-14 11:34:15 -Starting service [Tomcat]
2019-03-14 11:34:15 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-14 11:34:15 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;D:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-14 11:34:16 -Initializing Spring embedded WebApplicationContext
2019-03-14 11:34:16 -Root WebApplicationContext: initialization completed in 9870 ms
2019-03-14 11:34:17 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-14 11:34:17 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-14 11:34:17 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-14 11:34:17 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-14 11:34:17 -Filter xssFilter was not registered (disabled)
2019-03-14 11:34:17 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-14 11:34:17 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-14 11:34:17 -Servlet statViewServlet mapped to [/druid/*]
2019-03-14 11:34:17 -Servlet dispatcherServlet mapped to [/]
2019-03-14 11:34:20 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a5bd950: startup date [Thu Mar 14 11:34:06 CST 2019]; root of context hierarchy
2019-03-14 11:34:20 -Using default implementation for ThreadExecutor
2019-03-14 11:34:20 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-14 11:34:20 -Quartz Scheduler v.2.2.1 created.
2019-03-14 11:34:20 -RAMJobStore initialized.
2019-03-14 11:34:20 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-14 11:34:20 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-14 11:34:20 -Quartz scheduler version: 2.2.1
2019-03-14 11:34:20 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@44392e64
2019-03-14 11:34:21 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-14 11:34:21 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-14 11:34:24 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-14 11:34:24 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-14 11:34:24 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-14 11:34:24 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-14 11:34:24 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-14 11:34:24 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-14 11:34:24 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-14 11:34:24 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-14 11:34:24 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-14 11:34:24 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 11:34:24 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-14 11:34:24 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-14 11:34:24 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 11:34:24 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-14 11:34:24 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-14 11:34:24 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-14 11:34:24 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-14 11:34:24 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-14 11:34:24 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-14 11:34:24 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-14 11:34:24 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 11:34:24 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-14 11:34:24 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-14 11:34:24 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 11:34:24 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-14 11:34:24 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-14 11:34:24 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 11:34:24 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-14 11:34:24 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-14 11:34:24 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-14 11:34:24 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-14 11:34:24 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-14 11:34:24 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-14 11:34:24 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-14 11:34:24 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-14 11:34:24 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-14 11:34:24 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 11:34:24 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-14 11:34:24 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-14 11:34:24 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 11:34:24 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-14 11:34:24 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-14 11:34:24 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-14 11:34:24 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-14 11:34:24 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 11:34:24 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-14 11:34:24 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-14 11:34:24 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-14 11:34:24 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-14 11:34:24 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-14 11:34:24 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-14 11:34:24 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-14 11:34:24 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-14 11:34:24 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-14 11:34:24 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-14 11:34:24 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 11:34:24 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-14 11:34:24 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2019-03-14 11:34:24 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-14 11:34:24 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-14 11:34:24 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-14 11:34:24 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-14 11:34:24 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-14 11:34:24 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-14 11:34:24 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 11:34:24 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-14 11:34:24 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 11:34:24 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-14 11:34:24 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-14 11:34:24 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-14 11:34:24 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-14 11:34:24 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-14 11:34:24 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-14 11:34:24 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-14 11:34:24 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 11:34:24 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-14 11:34:24 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-14 11:34:24 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-14 11:34:24 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-14 11:34:24 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-14 11:34:24 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-14 11:34:24 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-14 11:34:24 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-14 11:34:24 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 11:34:24 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-14 11:34:24 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 11:34:24 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-14 11:34:24 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-14 11:34:24 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-14 11:34:24 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-14 11:34:24 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-14 11:34:24 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-03-14 11:34:24 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-14 11:34:24 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-14 11:34:24 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-14 11:34:24 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-14 11:34:24 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 11:34:24 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-14 11:34:24 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 11:34:24 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-14 11:34:24 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-14 11:34:24 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-14 11:34:24 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-14 11:34:24 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-14 11:34:24 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 11:34:24 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-14 11:34:24 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 11:34:24 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-14 11:34:24 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-14 11:34:24 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-14 11:34:24 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-14 11:34:24 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-14 11:34:24 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 11:34:24 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-14 11:34:24 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 11:34:24 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-14 11:34:24 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-14 11:34:24 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-14 11:34:24 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-14 11:34:24 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-14 11:34:24 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-14 11:34:24 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 11:34:24 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-14 11:34:24 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-14 11:34:24 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 11:34:24 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-14 11:34:24 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 11:34:24 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-14 11:34:24 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-14 11:34:24 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-14 11:34:24 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-14 11:34:24 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-14 11:34:24 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 11:34:24 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-14 11:34:24 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 11:34:24 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-14 11:34:24 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 11:34:24 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-14 11:34:24 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-14 11:34:24 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-14 11:34:24 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-14 11:34:24 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-14 11:34:24 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-14 11:34:24 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-14 11:34:24 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-14 11:34:24 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-14 11:34:24 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 11:34:24 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-14 11:34:24 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-14 11:34:24 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-14 11:34:24 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-14 11:34:24 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-14 11:34:24 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-14 11:34:24 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-14 11:34:24 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-14 11:34:24 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-14 11:34:24 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-14 11:34:24 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 11:34:24 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-14 11:34:24 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-14 11:34:24 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-14 11:34:24 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-14 11:34:24 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-14 11:34:24 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-14 11:34:24 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-14 11:34:24 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-14 11:34:24 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-14 11:34:24 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-14 11:34:24 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-14 11:34:24 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-14 11:34:24 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 11:34:24 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-14 11:34:24 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-14 11:34:24 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-14 11:34:24 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-14 11:34:24 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 11:34:24 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-14 11:34:24 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-14 11:34:24 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-14 11:34:24 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 11:34:24 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-14 11:34:24 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-14 11:34:24 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-14 11:34:24 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-14 11:34:24 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-14 11:34:24 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-14 11:34:24 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-14 11:34:24 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-14 11:34:24 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-14 11:34:24 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-14 11:34:24 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-14 11:34:24 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-14 11:34:24 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-14 11:34:24 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-14 11:34:24 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-14 11:34:24 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-14 11:34:24 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-14 11:34:24 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 11:34:24 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-14 11:34:24 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-14 11:34:24 -Mapped "{[/water/water/queryWater],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.queryWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 11:34:24 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 11:34:24 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 11:34:24 -Mapped "{[/water/waterCost/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.add()
2019-03-14 11:34:24 -Mapped "{[/water/waterCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long)
2019-03-14 11:34:24 -Mapped "{[/water/waterCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long[])
2019-03-14 11:34:24 -Mapped "{[/water/waterCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.update(com.bootdo.water.domain.WaterCostDO)
2019-03-14 11:34:24 -Mapped "{[/water/waterCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 11:34:24 -Mapped "{[/water/waterCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.save(com.bootdo.water.domain.WaterCostDO)
2019-03-14 11:34:24 -Mapped "{[/water/waterCost],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.WaterCost()
2019-03-14 11:34:24 -Mapped "{[/water/waterCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 11:34:24 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2019-03-14 11:34:24 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-14 11:34:24 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-14 11:34:24 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-14 11:34:24 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-14 11:34:24 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-14 11:34:24 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 11:34:24 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-14 11:34:24 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-14 11:34:24 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 11:34:24 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-14 11:34:24 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 11:34:24 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-14 11:34:24 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-14 11:34:24 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-14 11:34:24 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-14 11:34:25 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-14 11:34:25 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-14 11:34:25 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-14 11:34:26 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-14 11:34:26 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a5bd950: startup date [Thu Mar 14 11:34:06 CST 2019]; root of context hierarchy
2019-03-14 11:34:26 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-14 11:34:26 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-14 11:34:26 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-14 11:34:26 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-14 11:34:26 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-14 11:34:29 -Registering beans for JMX exposure on startup
2019-03-14 11:34:29 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-14 11:34:29 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-14 11:34:29 -Starting beans in phase 2147483647
2019-03-14 11:34:29 -Context refreshed
2019-03-14 11:34:29 -Found 1 custom documentation plugin(s)
2019-03-14 11:34:29 -Scanning for api listing references
2019-03-14 11:34:29 -Generating unique operation named: removeUsingPOST_1
2019-03-14 11:34:30 -Generating unique operation named: addUsingGET_1
2019-03-14 11:34:30 -Generating unique operation named: editUsingGET_1
2019-03-14 11:34:30 -Generating unique operation named: listUsingGET_1
2019-03-14 11:34:30 -Generating unique operation named: removeUsingPOST_2
2019-03-14 11:34:30 -Generating unique operation named: removeUsingPOST_3
2019-03-14 11:34:30 -Generating unique operation named: saveUsingPOST_1
2019-03-14 11:34:30 -Generating unique operation named: updateUsingGET_1
2019-03-14 11:34:30 -Generating unique operation named: updateUsingHEAD_1
2019-03-14 11:34:30 -Generating unique operation named: updateUsingPOST_1
2019-03-14 11:34:30 -Generating unique operation named: updateUsingPUT_1
2019-03-14 11:34:30 -Generating unique operation named: updateUsingPATCH_1
2019-03-14 11:34:30 -Generating unique operation named: updateUsingDELETE_1
2019-03-14 11:34:30 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-14 11:34:30 -Generating unique operation named: updateUsingTRACE_1
2019-03-14 11:34:30 -Generating unique operation named: addUsingGET_2
2019-03-14 11:34:30 -Generating unique operation named: editUsingGET_2
2019-03-14 11:34:30 -Generating unique operation named: listUsingGET_2
2019-03-14 11:34:30 -Generating unique operation named: removeUsingPOST_4
2019-03-14 11:34:30 -Generating unique operation named: removeUsingPOST_5
2019-03-14 11:34:30 -Generating unique operation named: saveUsingPOST_2
2019-03-14 11:34:30 -Generating unique operation named: updateUsingGET_2
2019-03-14 11:34:30 -Generating unique operation named: updateUsingHEAD_2
2019-03-14 11:34:30 -Generating unique operation named: updateUsingPOST_2
2019-03-14 11:34:30 -Generating unique operation named: updateUsingPUT_2
2019-03-14 11:34:30 -Generating unique operation named: updateUsingPATCH_2
2019-03-14 11:34:30 -Generating unique operation named: updateUsingDELETE_2
2019-03-14 11:34:30 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-14 11:34:30 -Generating unique operation named: updateUsingTRACE_2
2019-03-14 11:34:30 -Generating unique operation named: addUsingGET_3
2019-03-14 11:34:30 -Generating unique operation named: editUsingGET_3
2019-03-14 11:34:30 -Generating unique operation named: listUsingGET_3
2019-03-14 11:34:30 -Generating unique operation named: removeUsingPOST_6
2019-03-14 11:34:30 -Generating unique operation named: removeUsingPOST_7
2019-03-14 11:34:30 -Generating unique operation named: saveUsingPOST_3
2019-03-14 11:34:30 -Generating unique operation named: updateUsingGET_3
2019-03-14 11:34:30 -Generating unique operation named: updateUsingHEAD_3
2019-03-14 11:34:30 -Generating unique operation named: updateUsingPOST_3
2019-03-14 11:34:30 -Generating unique operation named: updateUsingPUT_3
2019-03-14 11:34:30 -Generating unique operation named: updateUsingPATCH_3
2019-03-14 11:34:30 -Generating unique operation named: updateUsingDELETE_3
2019-03-14 11:34:30 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-14 11:34:30 -Generating unique operation named: updateUsingTRACE_3
2019-03-14 11:34:30 -Generating unique operation named: addUsingGET_4
2019-03-14 11:34:30 -Generating unique operation named: editUsingGET_4
2019-03-14 11:34:30 -Generating unique operation named: listUsingGET_4
2019-03-14 11:34:30 -Generating unique operation named: removeUsingPOST_8
2019-03-14 11:34:30 -Generating unique operation named: removeUsingPOST_9
2019-03-14 11:34:30 -Generating unique operation named: saveUsingPOST_4
2019-03-14 11:34:30 -Generating unique operation named: updateUsingGET_4
2019-03-14 11:34:30 -Generating unique operation named: updateUsingHEAD_4
2019-03-14 11:34:30 -Generating unique operation named: updateUsingPOST_4
2019-03-14 11:34:30 -Generating unique operation named: updateUsingPUT_4
2019-03-14 11:34:30 -Generating unique operation named: updateUsingPATCH_4
2019-03-14 11:34:30 -Generating unique operation named: updateUsingDELETE_4
2019-03-14 11:34:30 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-14 11:34:30 -Generating unique operation named: updateUsingTRACE_4
2019-03-14 11:34:30 -Generating unique operation named: ElecUsingGET_1
2019-03-14 11:34:30 -Generating unique operation named: addUsingGET_5
2019-03-14 11:34:30 -Generating unique operation named: editUsingGET_5
2019-03-14 11:34:30 -Generating unique operation named: listUsingGET_5
2019-03-14 11:34:30 -Generating unique operation named: removeUsingPOST_10
2019-03-14 11:34:30 -Generating unique operation named: removeUsingPOST_11
2019-03-14 11:34:30 -Generating unique operation named: saveUsingPOST_5
2019-03-14 11:34:30 -Generating unique operation named: updateUsingGET_5
2019-03-14 11:34:30 -Generating unique operation named: updateUsingHEAD_5
2019-03-14 11:34:30 -Generating unique operation named: updateUsingPOST_5
2019-03-14 11:34:30 -Generating unique operation named: updateUsingPUT_5
2019-03-14 11:34:30 -Generating unique operation named: updateUsingPATCH_5
2019-03-14 11:34:30 -Generating unique operation named: updateUsingDELETE_5
2019-03-14 11:34:30 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-14 11:34:30 -Generating unique operation named: updateUsingTRACE_5
2019-03-14 11:34:30 -Generating unique operation named: editUsingGET_6
2019-03-14 11:34:30 -Generating unique operation named: listUsingGET_6
2019-03-14 11:34:30 -Generating unique operation named: updateUsingPOST_6
2019-03-14 11:34:30 -Generating unique operation named: addUsingGET_6
2019-03-14 11:34:30 -Generating unique operation named: editUsingGET_7
2019-03-14 11:34:30 -Generating unique operation named: listUsingGET_7
2019-03-14 11:34:30 -Generating unique operation named: removeUsingPOST_12
2019-03-14 11:34:30 -Generating unique operation named: removeUsingPOST_13
2019-03-14 11:34:31 -Generating unique operation named: saveUsingPOST_6
2019-03-14 11:34:31 -Generating unique operation named: updateUsingGET_6
2019-03-14 11:34:31 -Generating unique operation named: updateUsingHEAD_6
2019-03-14 11:34:31 -Generating unique operation named: updateUsingPOST_7
2019-03-14 11:34:31 -Generating unique operation named: updateUsingPUT_6
2019-03-14 11:34:31 -Generating unique operation named: updateUsingPATCH_6
2019-03-14 11:34:31 -Generating unique operation named: updateUsingDELETE_6
2019-03-14 11:34:31 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-14 11:34:31 -Generating unique operation named: updateUsingTRACE_6
2019-03-14 11:34:31 -Generating unique operation named: addUsingGET_7
2019-03-14 11:34:31 -Generating unique operation named: editUsingGET_8
2019-03-14 11:34:31 -Generating unique operation named: listUsingGET_8
2019-03-14 11:34:31 -Generating unique operation named: removeUsingPOST_14
2019-03-14 11:34:31 -Generating unique operation named: removeUsingPOST_15
2019-03-14 11:34:31 -Generating unique operation named: saveUsingPOST_7
2019-03-14 11:34:31 -Generating unique operation named: updateUsingGET_7
2019-03-14 11:34:31 -Generating unique operation named: updateUsingHEAD_7
2019-03-14 11:34:31 -Generating unique operation named: updateUsingPOST_8
2019-03-14 11:34:31 -Generating unique operation named: updateUsingPUT_7
2019-03-14 11:34:31 -Generating unique operation named: updateUsingPATCH_7
2019-03-14 11:34:31 -Generating unique operation named: updateUsingDELETE_7
2019-03-14 11:34:31 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-14 11:34:31 -Generating unique operation named: updateUsingTRACE_7
2019-03-14 11:34:31 -Generating unique operation named: addUsingGET_8
2019-03-14 11:34:31 -Generating unique operation named: editUsingGET_9
2019-03-14 11:34:31 -Generating unique operation named: listUsingGET_9
2019-03-14 11:34:31 -Generating unique operation named: removeUsingPOST_16
2019-03-14 11:34:31 -Generating unique operation named: removeUsingPOST_17
2019-03-14 11:34:31 -Generating unique operation named: saveUsingPOST_8
2019-03-14 11:34:31 -Generating unique operation named: updateUsingGET_8
2019-03-14 11:34:31 -Generating unique operation named: updateUsingHEAD_8
2019-03-14 11:34:31 -Generating unique operation named: updateUsingPOST_9
2019-03-14 11:34:31 -Generating unique operation named: updateUsingPUT_8
2019-03-14 11:34:31 -Generating unique operation named: updateUsingPATCH_8
2019-03-14 11:34:31 -Generating unique operation named: updateUsingDELETE_8
2019-03-14 11:34:31 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-14 11:34:31 -Generating unique operation named: updateUsingTRACE_8
2019-03-14 11:34:31 -Generating unique operation named: addUsingGET_9
2019-03-14 11:34:31 -Generating unique operation named: editUsingGET_10
2019-03-14 11:34:31 -Generating unique operation named: infoUsingGET_1
2019-03-14 11:34:31 -Generating unique operation named: infoUsingHEAD_1
2019-03-14 11:34:31 -Generating unique operation named: infoUsingPOST_1
2019-03-14 11:34:31 -Generating unique operation named: infoUsingPUT_1
2019-03-14 11:34:31 -Generating unique operation named: infoUsingPATCH_1
2019-03-14 11:34:31 -Generating unique operation named: infoUsingDELETE_1
2019-03-14 11:34:31 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-14 11:34:31 -Generating unique operation named: infoUsingTRACE_1
2019-03-14 11:34:31 -Generating unique operation named: listUsingGET_10
2019-03-14 11:34:31 -Generating unique operation named: removeUsingPOST_18
2019-03-14 11:34:31 -Generating unique operation named: removeUsingPOST_19
2019-03-14 11:34:31 -Generating unique operation named: saveUsingPOST_9
2019-03-14 11:34:31 -Generating unique operation named: updateUsingPOST_10
2019-03-14 11:34:31 -Generating unique operation named: listUsingGET_11
2019-03-14 11:34:31 -Generating unique operation named: removeUsingPOST_20
2019-03-14 11:34:31 -Generating unique operation named: welcomeUsingGET_1
2019-03-14 11:34:31 -Generating unique operation named: addUsingGET_10
2019-03-14 11:34:31 -Generating unique operation named: editUsingGET_11
2019-03-14 11:34:31 -Generating unique operation named: listUsingGET_12
2019-03-14 11:34:31 -Generating unique operation named: removeUsingPOST_21
2019-03-14 11:34:31 -Generating unique operation named: saveUsingPOST_10
2019-03-14 11:34:31 -Generating unique operation named: treeUsingGET_1
2019-03-14 11:34:31 -Generating unique operation named: treeUsingGET_2
2019-03-14 11:34:31 -Generating unique operation named: updateUsingPOST_11
2019-03-14 11:34:31 -Generating unique operation named: addUsingGET_11
2019-03-14 11:34:31 -Generating unique operation named: editUsingGET_12
2019-03-14 11:34:31 -Generating unique operation named: listUsingGET_13
2019-03-14 11:34:31 -Generating unique operation named: removeUsingPOST_22
2019-03-14 11:34:31 -Generating unique operation named: removeUsingPOST_23
2019-03-14 11:34:31 -Generating unique operation named: saveUsingPOST_11
2019-03-14 11:34:31 -Generating unique operation named: updateUsingGET_9
2019-03-14 11:34:31 -Generating unique operation named: updateUsingHEAD_9
2019-03-14 11:34:31 -Generating unique operation named: updateUsingPOST_12
2019-03-14 11:34:31 -Generating unique operation named: updateUsingPUT_9
2019-03-14 11:34:31 -Generating unique operation named: updateUsingPATCH_9
2019-03-14 11:34:31 -Generating unique operation named: updateUsingDELETE_9
2019-03-14 11:34:31 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-14 11:34:31 -Generating unique operation named: updateUsingTRACE_9
2019-03-14 11:34:31 -Generating unique operation named: addUsingGET_12
2019-03-14 11:34:31 -Generating unique operation named: editUsingGET_13
2019-03-14 11:34:31 -Generating unique operation named: listUsingGET_14
2019-03-14 11:34:31 -Generating unique operation named: removeUsingPOST_24
2019-03-14 11:34:31 -Generating unique operation named: removeUsingPOST_25
2019-03-14 11:34:31 -Generating unique operation named: saveUsingPOST_12
2019-03-14 11:34:31 -Generating unique operation named: updateUsingGET_10
2019-03-14 11:34:31 -Generating unique operation named: updateUsingHEAD_10
2019-03-14 11:34:31 -Generating unique operation named: updateUsingPOST_13
2019-03-14 11:34:31 -Generating unique operation named: updateUsingPUT_10
2019-03-14 11:34:31 -Generating unique operation named: updateUsingPATCH_10
2019-03-14 11:34:31 -Generating unique operation named: updateUsingDELETE_10
2019-03-14 11:34:31 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-14 11:34:31 -Generating unique operation named: updateUsingTRACE_10
2019-03-14 11:34:31 -Generating unique operation named: addUsingGET_13
2019-03-14 11:34:31 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-14 11:34:31 -Generating unique operation named: editUsingGET_14
2019-03-14 11:34:31 -Generating unique operation named: listUsingGET_15
2019-03-14 11:34:31 -Generating unique operation named: saveUsingPOST_13
2019-03-14 11:34:31 -Generating unique operation named: saveUsingPOST_14
2019-03-14 11:34:31 -Generating unique operation named: updateUsingPOST_14
2019-03-14 11:34:31 -Generating unique operation named: listUsingGET_16
2019-03-14 11:34:31 -Generating unique operation named: listUsingHEAD_1
2019-03-14 11:34:31 -Generating unique operation named: listUsingPOST_1
2019-03-14 11:34:31 -Generating unique operation named: listUsingPUT_1
2019-03-14 11:34:31 -Generating unique operation named: listUsingPATCH_1
2019-03-14 11:34:31 -Generating unique operation named: listUsingDELETE_1
2019-03-14 11:34:31 -Generating unique operation named: listUsingOPTIONS_1
2019-03-14 11:34:31 -Generating unique operation named: listUsingTRACE_1
2019-03-14 11:34:31 -Generating unique operation named: addUsingGET_14
2019-03-14 11:34:32 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-14 11:34:32 -Generating unique operation named: editUsingGET_15
2019-03-14 11:34:32 -Generating unique operation named: listUsingGET_17
2019-03-14 11:34:32 -Generating unique operation named: removeUsingPOST_26
2019-03-14 11:34:32 -Generating unique operation named: saveUsingPOST_15
2019-03-14 11:34:32 -Generating unique operation named: treeUsingGET_3
2019-03-14 11:34:32 -Generating unique operation named: treeViewUsingGET_1
2019-03-14 11:34:32 -Generating unique operation named: updateUsingPOST_15
2019-03-14 11:34:32 -Generating unique operation named: addUsingGET_15
2019-03-14 11:34:32 -Generating unique operation named: editUsingGET_16
2019-03-14 11:34:32 -Generating unique operation named: listUsingGET_18
2019-03-14 11:34:32 -Generating unique operation named: removeUsingPOST_27
2019-03-14 11:34:32 -Generating unique operation named: removeUsingPOST_28
2019-03-14 11:34:32 -Generating unique operation named: saveUsingPOST_16
2019-03-14 11:34:32 -Generating unique operation named: updateUsingGET_11
2019-03-14 11:34:32 -Generating unique operation named: updateUsingHEAD_11
2019-03-14 11:34:32 -Generating unique operation named: updateUsingPOST_16
2019-03-14 11:34:32 -Generating unique operation named: updateUsingPUT_11
2019-03-14 11:34:32 -Generating unique operation named: updateUsingPATCH_11
2019-03-14 11:34:32 -Generating unique operation named: updateUsingDELETE_11
2019-03-14 11:34:32 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-14 11:34:32 -Generating unique operation named: updateUsingTRACE_11
2019-03-14 11:34:32 -Generating unique operation named: addUsingGET_16
2019-03-14 11:34:32 -Generating unique operation named: editUsingGET_17
2019-03-14 11:34:32 -Generating unique operation named: listUsingGET_19
2019-03-14 11:34:32 -Generating unique operation named: removeUsingPOST_29
2019-03-14 11:34:32 -Generating unique operation named: removeUsingPOST_30
2019-03-14 11:34:32 -Generating unique operation named: saveUsingPOST_17
2019-03-14 11:34:32 -Generating unique operation named: updateUsingGET_12
2019-03-14 11:34:32 -Generating unique operation named: updateUsingHEAD_12
2019-03-14 11:34:32 -Generating unique operation named: updateUsingPOST_17
2019-03-14 11:34:32 -Generating unique operation named: updateUsingPUT_12
2019-03-14 11:34:32 -Generating unique operation named: updateUsingPATCH_12
2019-03-14 11:34:32 -Generating unique operation named: updateUsingDELETE_12
2019-03-14 11:34:32 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-14 11:34:32 -Generating unique operation named: updateUsingTRACE_12
2019-03-14 11:34:32 -Generating unique operation named: addUsingGET_17
2019-03-14 11:34:32 -Generating unique operation named: editUsingGET_18
2019-03-14 11:34:32 -Generating unique operation named: listUsingGET_20
2019-03-14 11:34:32 -Generating unique operation named: removeUsingPOST_31
2019-03-14 11:34:32 -Generating unique operation named: removeUsingPOST_32
2019-03-14 11:34:32 -Generating unique operation named: saveUsingPOST_18
2019-03-14 11:34:32 -Generating unique operation named: updateUsingGET_13
2019-03-14 11:34:32 -Generating unique operation named: updateUsingHEAD_13
2019-03-14 11:34:32 -Generating unique operation named: updateUsingPOST_18
2019-03-14 11:34:32 -Generating unique operation named: updateUsingPUT_13
2019-03-14 11:34:32 -Generating unique operation named: updateUsingPATCH_13
2019-03-14 11:34:32 -Generating unique operation named: updateUsingDELETE_13
2019-03-14 11:34:32 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-14 11:34:32 -Generating unique operation named: updateUsingTRACE_13
2019-03-14 11:34:32 -Generating unique operation named: addUsingGET_18
2019-03-14 11:34:32 -Generating unique operation named: editUsingGET_19
2019-03-14 11:34:32 -Generating unique operation named: listUsingGET_21
2019-03-14 11:34:32 -Generating unique operation named: removeUsingPOST_33
2019-03-14 11:34:32 -Generating unique operation named: removeUsingPOST_34
2019-03-14 11:34:32 -Generating unique operation named: saveUsingPOST_19
2019-03-14 11:34:32 -Generating unique operation named: updateUsingGET_14
2019-03-14 11:34:32 -Generating unique operation named: updateUsingHEAD_14
2019-03-14 11:34:32 -Generating unique operation named: updateUsingPOST_19
2019-03-14 11:34:32 -Generating unique operation named: updateUsingPUT_14
2019-03-14 11:34:32 -Generating unique operation named: updateUsingPATCH_14
2019-03-14 11:34:32 -Generating unique operation named: updateUsingDELETE_14
2019-03-14 11:34:32 -Generating unique operation named: updateUsingOPTIONS_14
2019-03-14 11:34:32 -Generating unique operation named: updateUsingTRACE_14
2019-03-14 11:34:32 -Starting Quartz Scheduler now
2019-03-14 11:34:32 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-14 11:34:32 -Starting...
2019-03-14 11:34:32 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-14 11:34:32 -Started.
2019-03-14 11:34:32 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-14 11:34:32 -Using a shared selector for servlet write/read
2019-03-14 11:34:32 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-14 11:34:32 -Started BootdoApplication in 28.752 seconds (JVM running for 30.488)
2019-03-14 11:34:32 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-14 11:34:33 -==> Parameters: 
2019-03-14 11:34:33 -<==      Total: 1
2019-03-14 11:35:25 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-14 11:35:29 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-14 11:35:29 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-14 11:35:29 -FrameworkServlet 'dispatcherServlet': initialization completed in 115 ms
2019-03-14 11:35:29 -Enabling session validation scheduler...
2019-03-14 11:35:29 -请求地址 : http://localhost:8081/
2019-03-14 11:35:29 -HTTP METHOD : GET
2019-03-14 11:35:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-03-14 11:35:29 -参数 : [{}]
2019-03-14 11:35:29 -耗时 : 3
2019-03-14 11:35:29 -返回值 : redirect:/index
2019-03-14 11:35:29 -请求地址 : http://localhost:8081/login;JSESSIONID=24da266a-3acb-42de-a62e-7247061e53f2
2019-03-14 11:35:29 -HTTP METHOD : GET
2019-03-14 11:35:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-14 11:35:29 -参数 : [{}]
2019-03-14 11:35:29 -耗时 : 1
2019-03-14 11:35:29 -返回值 : login
2019-03-14 11:35:31 -请求地址 : http://localhost:8081/getVerify
2019-03-14 11:35:31 -HTTP METHOD : GET
2019-03-14 11:35:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-14 11:35:31 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@46085bc5, org.apache.shiro.web.servlet.ShiroHttpServletResponse@48cfbd74]
2019-03-14 11:35:41 -5036
2019-03-14 11:35:42 -耗时 : 10573
2019-03-14 11:35:42 -返回值 : null
2019-03-14 11:35:54 -请求地址 : http://localhost:8081/login
2019-03-14 11:35:54 -HTTP METHOD : POST
2019-03-14 11:35:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-14 11:35:54 -参数 : [admin, 111111, 5036, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6dda7e3f]
2019-03-14 11:35:54 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-14 11:35:54 -==> Parameters: admin(String)
2019-03-14 11:35:54 -<==      Total: 1
2019-03-14 11:35:54 -耗时 : 291
2019-03-14 11:35:54 -返回值 : {msg=操作成功, code=0}
2019-03-14 11:35:54 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-14 11:35:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 11:35:54 -==> Parameters: 1(Long), admin(String), 登录(String), 291(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-14 11:35:54.845(Timestamp)
2019-03-14 11:35:55 -<==    Updates: 1
2019-03-14 11:35:55 -请求地址 : http://localhost:8081/index
2019-03-14 11:35:55 -HTTP METHOD : GET
2019-03-14 11:35:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 11:35:55 -参数 : [{}]
2019-03-14 11:35:55 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 11:35:55 -==> Parameters: 1(Long)
2019-03-14 11:35:55 -<==      Total: 45
2019-03-14 11:35:55 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 11:35:55 -==> Parameters: 138(Long)
2019-03-14 11:35:55 -<==      Total: 1
2019-03-14 11:35:55 -耗时 : 679
2019-03-14 11:35:55 -返回值 : index_v1
2019-03-14 11:35:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 11:35:56 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 679(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 11:35:56.081(Timestamp)
2019-03-14 11:35:56 -<==    Updates: 1
2019-03-14 11:35:56 -请求地址 : http://localhost:8081/main
2019-03-14 11:35:56 -HTTP METHOD : GET
2019-03-14 11:35:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 11:35:56 -参数 : []
2019-03-14 11:35:56 -耗时 : 1
2019-03-14 11:35:56 -返回值 : main
2019-03-14 11:35:57 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 11:35:57 -HTTP METHOD : GET
2019-03-14 11:35:57 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 11:35:57 -参数 : []
2019-03-14 11:35:57 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 11:35:57 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 11:35:57 -请求地址 : http://localhost:8081/main
2019-03-14 11:35:57 -HTTP METHOD : GET
2019-03-14 11:35:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 11:35:57 -参数 : []
2019-03-14 11:35:57 -耗时 : 0
2019-03-14 11:35:57 -返回值 : main
2019-03-14 11:35:57 -<==      Total: 0
2019-03-14 11:35:57 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 11:35:57 -==> Parameters: 1(Long), 0(String)
2019-03-14 11:35:57 -<==      Total: 1
2019-03-14 11:35:57 -耗时 : 163
2019-03-14 11:35:57 -返回值 : com.bootdo.common.utils.PageUtils@59165a20
2019-03-14 11:36:02 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-14 11:36:02 -==> Parameters: 1(Long)
2019-03-14 11:36:02 -<==      Total: 86
2019-03-14 11:36:02 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 11:36:02 -HTTP METHOD : GET
2019-03-14 11:36:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 11:36:02 -参数 : []
2019-03-14 11:36:02 -耗时 : 1
2019-03-14 11:36:02 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 11:36:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 11:36:03 -HTTP METHOD : GET
2019-03-14 11:36:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:36:03 -参数 : [userType]
2019-03-14 11:36:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:36:03 -==> Parameters: userType(String)
2019-03-14 11:36:03 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:36:03 -HTTP METHOD : GET
2019-03-14 11:36:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:36:03 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 11:36:03 -<==      Total: 2
2019-03-14 11:36:03 -耗时 : 84
2019-03-14 11:36:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-14 11:36:03 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 11:36:03 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:36:03 -<==      Total: 3
2019-03-14 11:36:03 -==>  Preparing: select count(*) from elec_log 
2019-03-14 11:36:03 -==> Parameters: 
2019-03-14 11:36:03 -<==      Total: 1
2019-03-14 11:36:03 -耗时 : 153
2019-03-14 11:36:03 -返回值 : com.bootdo.common.utils.PageUtils@4c255c97
2019-03-14 11:36:38 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:36:38 -HTTP METHOD : GET
2019-03-14 11:36:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:36:38 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-09}]
2019-03-14 11:36:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE create_time = ? and `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-14 11:36:38 -==> Parameters: 2019-03-09(String), 2019-03-09 00:00:00(String), 2019-03-09 23:59:59(String), 0(Integer), 10(Integer)
2019-03-14 11:36:38 -<==      Total: 0
2019-03-14 11:36:38 -==>  Preparing: select count(*) from elec_log WHERE create_time = ? 
2019-03-14 11:36:38 -==> Parameters: 2019-03-09(String)
2019-03-14 11:36:38 -<==      Total: 1
2019-03-14 11:36:38 -耗时 : 14
2019-03-14 11:36:38 -返回值 : com.bootdo.common.utils.PageUtils@7753e89f
2019-03-14 11:36:45 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:36:45 -HTTP METHOD : GET
2019-03-14 11:36:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:36:45 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-08}]
2019-03-14 11:36:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE create_time = ? and `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-14 11:36:45 -==> Parameters: 2019-03-08(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-03-14 11:36:45 -<==      Total: 0
2019-03-14 11:36:45 -==>  Preparing: select count(*) from elec_log WHERE create_time = ? 
2019-03-14 11:36:45 -==> Parameters: 2019-03-08(String)
2019-03-14 11:36:46 -<==      Total: 1
2019-03-14 11:36:46 -耗时 : 10
2019-03-14 11:36:46 -返回值 : com.bootdo.common.utils.PageUtils@721c5430
2019-03-14 11:36:46 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:36:46 -HTTP METHOD : GET
2019-03-14 11:36:46 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:36:46 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-08}]
2019-03-14 11:36:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE create_time = ? and `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-14 11:36:46 -==> Parameters: 2019-03-08(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-03-14 11:36:46 -<==      Total: 0
2019-03-14 11:36:46 -==>  Preparing: select count(*) from elec_log WHERE create_time = ? 
2019-03-14 11:36:46 -==> Parameters: 2019-03-08(String)
2019-03-14 11:36:46 -<==      Total: 1
2019-03-14 11:36:46 -耗时 : 12
2019-03-14 11:36:46 -返回值 : com.bootdo.common.utils.PageUtils@3c0eb260
2019-03-14 11:36:53 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:36:53 -HTTP METHOD : GET
2019-03-14 11:36:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:36:53 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-10}]
2019-03-14 11:36:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE create_time = ? and `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-14 11:36:53 -==> Parameters: 2019-03-10(String), 2019-03-10 00:00:00(String), 2019-03-10 23:59:59(String), 0(Integer), 10(Integer)
2019-03-14 11:36:53 -<==      Total: 0
2019-03-14 11:36:53 -==>  Preparing: select count(*) from elec_log WHERE create_time = ? 
2019-03-14 11:36:53 -==> Parameters: 2019-03-10(String)
2019-03-14 11:36:53 -<==      Total: 1
2019-03-14 11:36:53 -耗时 : 7
2019-03-14 11:36:53 -返回值 : com.bootdo.common.utils.PageUtils@69cc51d2
2019-03-14 11:36:53 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:36:53 -HTTP METHOD : GET
2019-03-14 11:36:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:36:53 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-10}]
2019-03-14 11:36:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE create_time = ? and `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-14 11:36:53 -==> Parameters: 2019-03-10(String), 2019-03-10 00:00:00(String), 2019-03-10 23:59:59(String), 0(Integer), 10(Integer)
2019-03-14 11:36:53 -<==      Total: 0
2019-03-14 11:36:53 -==>  Preparing: select count(*) from elec_log WHERE create_time = ? 
2019-03-14 11:36:53 -==> Parameters: 2019-03-10(String)
2019-03-14 11:36:53 -<==      Total: 1
2019-03-14 11:36:53 -耗时 : 10
2019-03-14 11:36:53 -返回值 : com.bootdo.common.utils.PageUtils@1097f38e
2019-03-14 11:36:53 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:36:53 -HTTP METHOD : GET
2019-03-14 11:36:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:36:53 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-10}]
2019-03-14 11:36:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE create_time = ? and `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-14 11:36:53 -==> Parameters: 2019-03-10(String), 2019-03-10 00:00:00(String), 2019-03-10 23:59:59(String), 0(Integer), 10(Integer)
2019-03-14 11:36:53 -<==      Total: 0
2019-03-14 11:36:53 -==>  Preparing: select count(*) from elec_log WHERE create_time = ? 
2019-03-14 11:36:53 -==> Parameters: 2019-03-10(String)
2019-03-14 11:36:53 -<==      Total: 1
2019-03-14 11:36:53 -耗时 : 6
2019-03-14 11:36:53 -返回值 : com.bootdo.common.utils.PageUtils@4b5bfec6
2019-03-14 11:36:54 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:36:54 -HTTP METHOD : GET
2019-03-14 11:36:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:36:54 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-03-10}]
2019-03-14 11:36:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE create_time = ? and `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-14 11:36:54 -==> Parameters: 2019-03-10(String), 2019-03-10 00:00:00(String), 2019-03-10 23:59:59(String), 0(Integer), 10(Integer)
2019-03-14 11:36:54 -<==      Total: 0
2019-03-14 11:36:54 -==>  Preparing: select count(*) from elec_log WHERE create_time = ? 
2019-03-14 11:36:54 -==> Parameters: 2019-03-10(String)
2019-03-14 11:36:54 -<==      Total: 1
2019-03-14 11:36:54 -耗时 : 7
2019-03-14 11:36:54 -返回值 : com.bootdo.common.utils.PageUtils@3ca99b9d
2019-03-14 11:36:59 -请求地址 : http://localhost:8081/index
2019-03-14 11:36:59 -HTTP METHOD : GET
2019-03-14 11:36:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 11:36:59 -参数 : [{}]
2019-03-14 11:36:59 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 11:36:59 -==> Parameters: 1(Long)
2019-03-14 11:36:59 -<==      Total: 45
2019-03-14 11:36:59 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 11:36:59 -==> Parameters: 138(Long)
2019-03-14 11:36:59 -<==      Total: 1
2019-03-14 11:36:59 -耗时 : 32
2019-03-14 11:36:59 -返回值 : index_v1
2019-03-14 11:36:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 11:36:59 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 32(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 11:36:59.412(Timestamp)
2019-03-14 11:36:59 -请求地址 : http://localhost:8081/main
2019-03-14 11:36:59 -HTTP METHOD : GET
2019-03-14 11:36:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 11:36:59 -参数 : []
2019-03-14 11:36:59 -耗时 : 0
2019-03-14 11:36:59 -返回值 : main
2019-03-14 11:36:59 -<==    Updates: 1
2019-03-14 11:36:59 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 11:36:59 -HTTP METHOD : GET
2019-03-14 11:36:59 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 11:36:59 -参数 : []
2019-03-14 11:36:59 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 11:36:59 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 11:36:59 -<==      Total: 0
2019-03-14 11:36:59 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 11:36:59 -==> Parameters: 1(Long), 0(String)
2019-03-14 11:36:59 -<==      Total: 1
2019-03-14 11:36:59 -耗时 : 10
2019-03-14 11:36:59 -返回值 : com.bootdo.common.utils.PageUtils@5c24804
2019-03-14 11:36:59 -请求地址 : http://localhost:8081/main
2019-03-14 11:36:59 -HTTP METHOD : GET
2019-03-14 11:36:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 11:36:59 -参数 : []
2019-03-14 11:36:59 -耗时 : 1
2019-03-14 11:36:59 -返回值 : main
2019-03-14 11:37:02 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 11:37:02 -HTTP METHOD : GET
2019-03-14 11:37:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 11:37:02 -参数 : []
2019-03-14 11:37:02 -耗时 : 0
2019-03-14 11:37:02 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 11:37:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 11:37:02 -HTTP METHOD : GET
2019-03-14 11:37:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:37:02 -参数 : [userType]
2019-03-14 11:37:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:37:02 -==> Parameters: userType(String)
2019-03-14 11:37:02 -<==      Total: 2
2019-03-14 11:37:02 -耗时 : 47
2019-03-14 11:37:02 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 11:37:02 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:37:02 -HTTP METHOD : GET
2019-03-14 11:37:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:37:02 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 11:37:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-14 11:37:02 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:37:02 -<==      Total: 3
2019-03-14 11:37:02 -==>  Preparing: select count(*) from elec_log 
2019-03-14 11:37:02 -==> Parameters: 
2019-03-14 11:37:02 -<==      Total: 1
2019-03-14 11:37:02 -耗时 : 8
2019-03-14 11:37:02 -返回值 : com.bootdo.common.utils.PageUtils@38377237
2019-03-14 11:37:03 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-14 11:37:03 -HTTP METHOD : GET
2019-03-14 11:37:03 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-14 11:37:03 -参数 : []
2019-03-14 11:37:03 -耗时 : 1
2019-03-14 11:37:03 -返回值 : system/dept/deptTree
2019-03-14 11:37:04 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-14 11:37:04 -HTTP METHOD : GET
2019-03-14 11:37:04 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-14 11:37:04 -参数 : []
2019-03-14 11:37:04 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-14 11:37:04 -==> Parameters: 
2019-03-14 11:37:04 -<==      Total: 3
2019-03-14 11:37:04 -耗时 : 18
2019-03-14 11:37:04 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-14 11:37:05 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:37:05 -HTTP METHOD : GET
2019-03-14 11:37:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:37:05 -参数 : [{limit=10, offset=0, userType=, userOrg=2, userId=, createTime=}]
2019-03-14 11:37:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_org = ? order by id asc limit ?, ? 
2019-03-14 11:37:05 -==> Parameters: 2(String), 0(Integer), 10(Integer)
2019-03-14 11:37:05 -<==      Total: 2
2019-03-14 11:37:05 -==>  Preparing: select count(*) from elec_log WHERE user_org = ? 
2019-03-14 11:37:05 -==> Parameters: 2(String)
2019-03-14 11:37:05 -<==      Total: 1
2019-03-14 11:37:05 -耗时 : 13
2019-03-14 11:37:05 -返回值 : com.bootdo.common.utils.PageUtils@71156558
2019-03-14 11:37:06 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:37:06 -HTTP METHOD : GET
2019-03-14 11:37:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:37:06 -参数 : [{limit=10, offset=0, userType=, userOrg=2, userId=, createTime=}]
2019-03-14 11:37:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_org = ? order by id asc limit ?, ? 
2019-03-14 11:37:06 -==> Parameters: 2(String), 0(Integer), 10(Integer)
2019-03-14 11:37:06 -<==      Total: 2
2019-03-14 11:37:06 -==>  Preparing: select count(*) from elec_log WHERE user_org = ? 
2019-03-14 11:37:06 -==> Parameters: 2(String)
2019-03-14 11:37:06 -<==      Total: 1
2019-03-14 11:37:06 -耗时 : 9
2019-03-14 11:37:06 -返回值 : com.bootdo.common.utils.PageUtils@47864046
2019-03-14 11:37:21 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:37:21 -HTTP METHOD : GET
2019-03-14 11:37:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:37:21 -参数 : [{limit=10, offset=0, userType=, userOrg=2, userId=, createTime=2019-03-10}]
2019-03-14 11:37:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_org = ? and create_time = ? and `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-14 11:37:21 -==> Parameters: 2(String), 2019-03-10(String), 2019-03-10 00:00:00(String), 2019-03-10 23:59:59(String), 0(Integer), 10(Integer)
2019-03-14 11:37:21 -<==      Total: 0
2019-03-14 11:37:21 -==>  Preparing: select count(*) from elec_log WHERE user_org = ? and create_time = ? 
2019-03-14 11:37:21 -==> Parameters: 2(String), 2019-03-10(String)
2019-03-14 11:37:21 -<==      Total: 1
2019-03-14 11:37:21 -耗时 : 17
2019-03-14 11:37:21 -返回值 : com.bootdo.common.utils.PageUtils@38680cf7
2019-03-14 11:37:24 -请求地址 : http://localhost:8081/index
2019-03-14 11:37:24 -HTTP METHOD : GET
2019-03-14 11:37:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 11:37:24 -参数 : [{}]
2019-03-14 11:37:24 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 11:37:24 -==> Parameters: 1(Long)
2019-03-14 11:37:24 -<==      Total: 45
2019-03-14 11:37:24 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 11:37:24 -==> Parameters: 138(Long)
2019-03-14 11:37:24 -<==      Total: 1
2019-03-14 11:37:24 -耗时 : 26
2019-03-14 11:37:24 -返回值 : index_v1
2019-03-14 11:37:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 11:37:25 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 11:37:24.979(Timestamp)
2019-03-14 11:37:25 -请求地址 : http://localhost:8081/main
2019-03-14 11:37:25 -HTTP METHOD : GET
2019-03-14 11:37:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 11:37:25 -参数 : []
2019-03-14 11:37:25 -耗时 : 0
2019-03-14 11:37:25 -返回值 : main
2019-03-14 11:37:25 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 11:37:25 -HTTP METHOD : GET
2019-03-14 11:37:25 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 11:37:25 -参数 : []
2019-03-14 11:37:25 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 11:37:25 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 11:37:25 -<==    Updates: 1
2019-03-14 11:37:25 -请求地址 : http://localhost:8081/main
2019-03-14 11:37:25 -HTTP METHOD : GET
2019-03-14 11:37:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 11:37:25 -参数 : []
2019-03-14 11:37:25 -耗时 : 0
2019-03-14 11:37:25 -返回值 : main
2019-03-14 11:37:25 -<==      Total: 0
2019-03-14 11:37:25 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 11:37:25 -==> Parameters: 1(Long), 0(String)
2019-03-14 11:37:25 -<==      Total: 1
2019-03-14 11:37:25 -耗时 : 299
2019-03-14 11:37:25 -返回值 : com.bootdo.common.utils.PageUtils@240afc50
2019-03-14 11:37:39 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 11:37:39 -HTTP METHOD : GET
2019-03-14 11:37:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 11:37:39 -参数 : []
2019-03-14 11:37:39 -耗时 : 1
2019-03-14 11:37:39 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 11:37:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 11:37:39 -HTTP METHOD : GET
2019-03-14 11:37:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:37:39 -参数 : [userType]
2019-03-14 11:37:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:37:39 -==> Parameters: userType(String)
2019-03-14 11:37:39 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:37:39 -HTTP METHOD : GET
2019-03-14 11:37:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:37:39 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 11:37:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-14 11:37:39 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:37:39 -<==      Total: 3
2019-03-14 11:37:39 -==>  Preparing: select count(*) from elec_log 
2019-03-14 11:37:39 -==> Parameters: 
2019-03-14 11:37:39 -<==      Total: 1
2019-03-14 11:37:39 -耗时 : 8
2019-03-14 11:37:39 -返回值 : com.bootdo.common.utils.PageUtils@5e834263
2019-03-14 11:37:40 -<==      Total: 2
2019-03-14 11:37:40 -耗时 : 126
2019-03-14 11:37:40 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 11:37:41 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:37:41 -HTTP METHOD : GET
2019-03-14 11:37:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:37:41 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, createTime=, type=A}]
2019-03-14 11:37:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? order by id asc limit ?, ? 
2019-03-14 11:37:41 -==> Parameters: A(String), 0(Integer), 10(Integer)
2019-03-14 11:37:41 -<==      Total: 2
2019-03-14 11:37:41 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? 
2019-03-14 11:37:41 -==> Parameters: A(String)
2019-03-14 11:37:41 -<==      Total: 1
2019-03-14 11:37:41 -耗时 : 171
2019-03-14 11:37:41 -返回值 : com.bootdo.common.utils.PageUtils@680f3e68
2019-03-14 11:37:44 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:37:44 -HTTP METHOD : GET
2019-03-14 11:37:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:37:44 -参数 : [{limit=10, offset=0, userType=B, userOrg=, userId=, createTime=, type=B}]
2019-03-14 11:37:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? order by id asc limit ?, ? 
2019-03-14 11:37:44 -==> Parameters: B(String), 0(Integer), 10(Integer)
2019-03-14 11:37:44 -<==      Total: 1
2019-03-14 11:37:44 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? 
2019-03-14 11:37:44 -==> Parameters: B(String)
2019-03-14 11:37:44 -<==      Total: 1
2019-03-14 11:37:44 -耗时 : 31
2019-03-14 11:37:44 -返回值 : com.bootdo.common.utils.PageUtils@24a2535e
2019-03-14 11:37:45 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-14 11:37:45 -HTTP METHOD : GET
2019-03-14 11:37:45 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-14 11:37:45 -参数 : []
2019-03-14 11:37:45 -耗时 : 0
2019-03-14 11:37:45 -返回值 : system/dept/deptTree
2019-03-14 11:37:45 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-14 11:37:45 -HTTP METHOD : GET
2019-03-14 11:37:45 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-14 11:37:45 -参数 : []
2019-03-14 11:37:45 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-14 11:37:45 -==> Parameters: 
2019-03-14 11:37:45 -<==      Total: 3
2019-03-14 11:37:45 -耗时 : 5
2019-03-14 11:37:45 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-14 11:37:48 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:37:48 -HTTP METHOD : GET
2019-03-14 11:37:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:37:48 -参数 : [{limit=10, offset=0, userType=B, userOrg=3, userId=, createTime=}]
2019-03-14 11:37:48 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? order by id asc limit ?, ? 
2019-03-14 11:37:48 -==> Parameters: B(String), 3(String), 0(Integer), 10(Integer)
2019-03-14 11:37:48 -<==      Total: 1
2019-03-14 11:37:48 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and user_org = ? 
2019-03-14 11:37:48 -==> Parameters: B(String), 3(String)
2019-03-14 11:37:48 -<==      Total: 1
2019-03-14 11:37:48 -耗时 : 11
2019-03-14 11:37:48 -返回值 : com.bootdo.common.utils.PageUtils@70d075c7
2019-03-14 11:37:49 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-14 11:37:49 -HTTP METHOD : GET
2019-03-14 11:37:49 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-14 11:37:49 -参数 : []
2019-03-14 11:37:49 -耗时 : 0
2019-03-14 11:37:49 -返回值 : system/dept/deptTree
2019-03-14 11:37:49 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-14 11:37:49 -HTTP METHOD : GET
2019-03-14 11:37:49 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-14 11:37:49 -参数 : []
2019-03-14 11:37:49 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-14 11:37:49 -==> Parameters: 
2019-03-14 11:37:49 -<==      Total: 3
2019-03-14 11:37:49 -耗时 : 3
2019-03-14 11:37:49 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-14 11:37:50 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:37:50 -HTTP METHOD : GET
2019-03-14 11:37:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:37:50 -参数 : [{limit=10, offset=0, userType=B, userOrg=2, userId=, createTime=}]
2019-03-14 11:37:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? order by id asc limit ?, ? 
2019-03-14 11:37:50 -==> Parameters: B(String), 2(String), 0(Integer), 10(Integer)
2019-03-14 11:37:50 -<==      Total: 0
2019-03-14 11:37:50 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and user_org = ? 
2019-03-14 11:37:50 -==> Parameters: B(String), 2(String)
2019-03-14 11:37:50 -<==      Total: 1
2019-03-14 11:37:50 -耗时 : 6
2019-03-14 11:37:50 -返回值 : com.bootdo.common.utils.PageUtils@44b9b5aa
2019-03-14 11:37:51 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:37:51 -HTTP METHOD : GET
2019-03-14 11:37:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:37:51 -参数 : [{limit=10, offset=0, userType=B, userOrg=2, userId=, createTime=}]
2019-03-14 11:37:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? order by id asc limit ?, ? 
2019-03-14 11:37:51 -==> Parameters: B(String), 2(String), 0(Integer), 10(Integer)
2019-03-14 11:37:51 -<==      Total: 0
2019-03-14 11:37:51 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and user_org = ? 
2019-03-14 11:37:51 -==> Parameters: B(String), 2(String)
2019-03-14 11:37:51 -<==      Total: 1
2019-03-14 11:37:51 -耗时 : 7
2019-03-14 11:37:51 -返回值 : com.bootdo.common.utils.PageUtils@321bbca4
2019-03-14 11:37:55 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:37:55 -HTTP METHOD : GET
2019-03-14 11:37:55 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:37:55 -参数 : [{limit=10, offset=0, userType=B, userOrg=2, userId=, createTime=2019-03-09}]
2019-03-14 11:37:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and create_time = ? and `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-14 11:37:55 -==> Parameters: B(String), 2(String), 2019-03-09(String), 2019-03-09 00:00:00(String), 2019-03-09 23:59:59(String), 0(Integer), 10(Integer)
2019-03-14 11:37:55 -<==      Total: 0
2019-03-14 11:37:55 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and user_org = ? and create_time = ? 
2019-03-14 11:37:55 -==> Parameters: B(String), 2(String), 2019-03-09(String)
2019-03-14 11:37:55 -<==      Total: 1
2019-03-14 11:37:55 -耗时 : 14
2019-03-14 11:37:55 -返回值 : com.bootdo.common.utils.PageUtils@7d392029
2019-03-14 11:37:56 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:37:56 -HTTP METHOD : GET
2019-03-14 11:37:56 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:37:56 -参数 : [{limit=10, offset=0, userType=B, userOrg=2, userId=, createTime=2019-03-09}]
2019-03-14 11:37:56 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and create_time = ? and `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-14 11:37:56 -==> Parameters: B(String), 2(String), 2019-03-09(String), 2019-03-09 00:00:00(String), 2019-03-09 23:59:59(String), 0(Integer), 10(Integer)
2019-03-14 11:37:56 -<==      Total: 0
2019-03-14 11:37:56 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and user_org = ? and create_time = ? 
2019-03-14 11:37:56 -==> Parameters: B(String), 2(String), 2019-03-09(String)
2019-03-14 11:37:56 -<==      Total: 1
2019-03-14 11:37:56 -耗时 : 8
2019-03-14 11:37:56 -返回值 : com.bootdo.common.utils.PageUtils@3beac35c
2019-03-14 11:38:00 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:38:00 -HTTP METHOD : GET
2019-03-14 11:38:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:38:00 -参数 : [{limit=10, offset=0, userType=B, userOrg=2, userId=, createTime=2019-03-10}]
2019-03-14 11:38:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and create_time = ? and `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-14 11:38:00 -==> Parameters: B(String), 2(String), 2019-03-10(String), 2019-03-10 00:00:00(String), 2019-03-10 23:59:59(String), 0(Integer), 10(Integer)
2019-03-14 11:38:00 -<==      Total: 0
2019-03-14 11:38:00 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and user_org = ? and create_time = ? 
2019-03-14 11:38:00 -==> Parameters: B(String), 2(String), 2019-03-10(String)
2019-03-14 11:38:00 -<==      Total: 1
2019-03-14 11:38:00 -耗时 : 6
2019-03-14 11:38:00 -返回值 : com.bootdo.common.utils.PageUtils@657e091b
2019-03-14 11:38:00 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:38:01 -HTTP METHOD : GET
2019-03-14 11:38:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:38:01 -参数 : [{limit=10, offset=0, userType=B, userOrg=2, userId=, createTime=2019-03-10}]
2019-03-14 11:38:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and create_time = ? and `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-14 11:38:01 -==> Parameters: B(String), 2(String), 2019-03-10(String), 2019-03-10 00:00:00(String), 2019-03-10 23:59:59(String), 0(Integer), 10(Integer)
2019-03-14 11:38:01 -<==      Total: 0
2019-03-14 11:38:01 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and user_org = ? and create_time = ? 
2019-03-14 11:38:01 -==> Parameters: B(String), 2(String), 2019-03-10(String)
2019-03-14 11:38:01 -<==      Total: 1
2019-03-14 11:38:01 -耗时 : 45
2019-03-14 11:38:01 -返回值 : com.bootdo.common.utils.PageUtils@6cd4b177
2019-03-14 11:38:01 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:38:01 -HTTP METHOD : GET
2019-03-14 11:38:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:38:01 -参数 : [{limit=10, offset=0, userType=B, userOrg=2, userId=, createTime=2019-03-10}]
2019-03-14 11:38:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and create_time = ? and `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-14 11:38:01 -==> Parameters: B(String), 2(String), 2019-03-10(String), 2019-03-10 00:00:00(String), 2019-03-10 23:59:59(String), 0(Integer), 10(Integer)
2019-03-14 11:38:01 -<==      Total: 0
2019-03-14 11:38:01 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and user_org = ? and create_time = ? 
2019-03-14 11:38:01 -==> Parameters: B(String), 2(String), 2019-03-10(String)
2019-03-14 11:38:01 -<==      Total: 1
2019-03-14 11:38:01 -耗时 : 7
2019-03-14 11:38:01 -返回值 : com.bootdo.common.utils.PageUtils@1995028c
2019-03-14 11:38:01 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:38:01 -HTTP METHOD : GET
2019-03-14 11:38:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:38:01 -参数 : [{limit=10, offset=0, userType=B, userOrg=2, userId=, createTime=2019-03-10}]
2019-03-14 11:38:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and create_time = ? and `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-14 11:38:01 -==> Parameters: B(String), 2(String), 2019-03-10(String), 2019-03-10 00:00:00(String), 2019-03-10 23:59:59(String), 0(Integer), 10(Integer)
2019-03-14 11:38:01 -<==      Total: 0
2019-03-14 11:38:01 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and user_org = ? and create_time = ? 
2019-03-14 11:38:01 -==> Parameters: B(String), 2(String), 2019-03-10(String)
2019-03-14 11:38:01 -<==      Total: 1
2019-03-14 11:38:01 -耗时 : 11
2019-03-14 11:38:01 -返回值 : com.bootdo.common.utils.PageUtils@411a596e
2019-03-14 11:38:14 -请求地址 : http://localhost:8081/sys/user/personal
2019-03-14 11:38:14 -HTTP METHOD : GET
2019-03-14 11:38:14 -CLASS_METHOD : com.bootdo.system.controller.UserController.personal
2019-03-14 11:38:14 -参数 : [{}]
2019-03-14 11:38:15 -==>  Preparing: select role_id from sys_user_role where user_id=? 
2019-03-14 11:38:15 -==> Parameters: 1(Long)
2019-03-14 11:38:15 -<==      Total: 1
2019-03-14 11:38:15 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2019-03-14 11:38:15 -==> Parameters: 1(Long)
2019-03-14 11:38:15 -<==      Total: 1
2019-03-14 11:38:15 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept where dept_id = ? 
2019-03-14 11:38:15 -==> Parameters: 13(Long)
2019-03-14 11:38:15 -<==      Total: 0
2019-03-14 11:38:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 11:38:15 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/sys/user/personal(String), java.lang.NullPointerException(String), null, 2019-03-14 11:38:15.385(Timestamp)
2019-03-14 11:38:15 -null
java.lang.NullPointerException: null
	at com.bootdo.system.service.impl.UserServiceImpl.get(UserServiceImpl.java:57)
	at com.bootdo.system.service.impl.UserServiceImpl$$FastClassBySpringCGLIB$$2c95b2d0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.system.service.impl.UserServiceImpl$$EnhancerBySpringCGLIB$$4123664a.get(<generated>)
	at com.bootdo.system.controller.UserController.personal(UserController.java:218)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor135.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.system.controller.UserController$$EnhancerBySpringCGLIB$$c3a971ce.personal(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-14 11:38:15 -<==    Updates: 1
2019-03-14 11:38:27 -请求地址 : http://localhost:8081/oa/notify/selfNotify
2019-03-14 11:38:27 -HTTP METHOD : GET
2019-03-14 11:38:27 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.selefNotify
2019-03-14 11:38:27 -参数 : []
2019-03-14 11:38:27 -耗时 : 1
2019-03-14 11:38:27 -返回值 : oa/notify/selfNotify
2019-03-14 11:38:27 -请求地址 : http://localhost:8081/oa/notify/selfList
2019-03-14 11:38:27 -HTTP METHOD : GET
2019-03-14 11:38:27 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.selfList
2019-03-14 11:38:27 -参数 : [{limit=10, offset=0}]
2019-03-14 11:38:27 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 11:38:27 -==> Parameters: 1(Long), 0(Integer), 10(Integer)
2019-03-14 11:38:27 -<==      Total: 5
2019-03-14 11:38:27 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2019-03-14 11:38:27 -==> Parameters: 1(Long)
2019-03-14 11:38:27 -<==      Total: 1
2019-03-14 11:38:27 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2019-03-14 11:38:27 -==> Parameters: 1(Long)
2019-03-14 11:38:27 -<==      Total: 1
2019-03-14 11:38:27 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2019-03-14 11:38:27 -==> Parameters: 1(Long)
2019-03-14 11:38:27 -<==      Total: 1
2019-03-14 11:38:27 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2019-03-14 11:38:27 -==> Parameters: 1(Long)
2019-03-14 11:38:27 -<==      Total: 1
2019-03-14 11:38:27 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2019-03-14 11:38:27 -==> Parameters: 1(Long)
2019-03-14 11:38:27 -<==      Total: 1
2019-03-14 11:38:27 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 11:38:27 -==> Parameters: 1(Long), null
2019-03-14 11:38:27 -<==      Total: 1
2019-03-14 11:38:27 -耗时 : 159
2019-03-14 11:38:27 -返回值 : com.bootdo.common.utils.PageUtils@34369006
2019-03-14 11:38:58 -请求地址 : http://localhost:8081/index
2019-03-14 11:38:58 -HTTP METHOD : GET
2019-03-14 11:38:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 11:38:58 -参数 : [{}]
2019-03-14 11:38:58 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 11:38:58 -==> Parameters: 1(Long)
2019-03-14 11:38:58 -<==      Total: 45
2019-03-14 11:38:58 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 11:38:58 -==> Parameters: 138(Long)
2019-03-14 11:38:58 -<==      Total: 1
2019-03-14 11:38:58 -耗时 : 49
2019-03-14 11:38:58 -返回值 : index_v1
2019-03-14 11:38:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 11:38:58 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 49(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 11:38:58.778(Timestamp)
2019-03-14 11:38:58 -<==    Updates: 1
2019-03-14 11:38:58 -请求地址 : http://localhost:8081/main
2019-03-14 11:38:58 -HTTP METHOD : GET
2019-03-14 11:38:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 11:38:58 -参数 : []
2019-03-14 11:38:58 -耗时 : 0
2019-03-14 11:38:58 -返回值 : main
2019-03-14 11:38:58 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 11:38:58 -HTTP METHOD : GET
2019-03-14 11:38:58 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 11:38:58 -参数 : []
2019-03-14 11:38:58 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 11:38:58 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 11:38:58 -<==      Total: 0
2019-03-14 11:38:58 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 11:38:58 -==> Parameters: 1(Long), 0(String)
2019-03-14 11:38:58 -<==      Total: 1
2019-03-14 11:38:58 -耗时 : 9
2019-03-14 11:38:58 -返回值 : com.bootdo.common.utils.PageUtils@3b90d684
2019-03-14 11:38:59 -请求地址 : http://localhost:8081/main
2019-03-14 11:38:59 -HTTP METHOD : GET
2019-03-14 11:38:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 11:38:59 -参数 : []
2019-03-14 11:38:59 -耗时 : 2
2019-03-14 11:38:59 -返回值 : main
2019-03-14 11:39:00 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 11:39:00 -HTTP METHOD : GET
2019-03-14 11:39:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 11:39:00 -参数 : []
2019-03-14 11:39:00 -耗时 : 0
2019-03-14 11:39:00 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 11:39:00 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 11:39:00 -HTTP METHOD : GET
2019-03-14 11:39:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:39:00 -参数 : [userType]
2019-03-14 11:39:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:39:00 -==> Parameters: userType(String)
2019-03-14 11:39:00 -<==      Total: 2
2019-03-14 11:39:00 -耗时 : 6
2019-03-14 11:39:00 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 11:39:00 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:39:00 -HTTP METHOD : GET
2019-03-14 11:39:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:39:00 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 11:39:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-14 11:39:00 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:39:00 -<==      Total: 3
2019-03-14 11:39:00 -==>  Preparing: select count(*) from elec_log 
2019-03-14 11:39:00 -==> Parameters: 
2019-03-14 11:39:00 -<==      Total: 1
2019-03-14 11:39:00 -耗时 : 8
2019-03-14 11:39:00 -返回值 : com.bootdo.common.utils.PageUtils@17e5f9d5
2019-03-14 11:39:03 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/1
2019-03-14 11:39:03 -HTTP METHOD : GET
2019-03-14 11:39:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-03-14 11:39:03 -参数 : [1, {}]
2019-03-14 11:39:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-03-14 11:39:03 -==> Parameters: 1(Long)
2019-03-14 11:39:03 -<==      Total: 1
2019-03-14 11:39:03 -耗时 : 8
2019-03-14 11:39:03 -返回值 : moneyLog/elecLog/edit
2019-03-14 11:39:03 -请求地址 : http://localhost:8081/common/dict/list/userArea
2019-03-14 11:39:03 -HTTP METHOD : GET
2019-03-14 11:39:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:39:03 -参数 : [userArea]
2019-03-14 11:39:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:39:03 -==> Parameters: userArea(String)
2019-03-14 11:39:03 -<==      Total: 0
2019-03-14 11:39:03 -耗时 : 9
2019-03-14 11:39:03 -返回值 : []
2019-03-14 11:39:03 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-03-14 11:39:03 -HTTP METHOD : GET
2019-03-14 11:39:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:39:03 -参数 : [userOrg]
2019-03-14 11:39:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:39:03 -==> Parameters: userOrg(String)
2019-03-14 11:39:03 -<==      Total: 0
2019-03-14 11:39:03 -耗时 : 4
2019-03-14 11:39:03 -返回值 : []
2019-03-14 11:39:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 11:39:03 -HTTP METHOD : GET
2019-03-14 11:39:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:39:03 -参数 : [userType]
2019-03-14 11:39:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:39:03 -==> Parameters: userType(String)
2019-03-14 11:39:03 -<==      Total: 2
2019-03-14 11:39:03 -耗时 : 25
2019-03-14 11:39:03 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 11:39:16 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/1
2019-03-14 11:39:16 -HTTP METHOD : GET
2019-03-14 11:39:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-03-14 11:39:16 -参数 : [1, {}]
2019-03-14 11:39:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-03-14 11:39:16 -==> Parameters: 1(Long)
2019-03-14 11:39:16 -<==      Total: 1
2019-03-14 11:39:16 -耗时 : 11
2019-03-14 11:39:16 -返回值 : moneyLog/elecLog/edit
2019-03-14 11:39:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 11:39:17 -HTTP METHOD : GET
2019-03-14 11:39:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:39:17 -参数 : [userType]
2019-03-14 11:39:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:39:17 -==> Parameters: userType(String)
2019-03-14 11:39:17 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-03-14 11:39:17 -<==      Total: 2
2019-03-14 11:39:17 -请求地址 : http://localhost:8081/common/dict/list/userArea
2019-03-14 11:39:17 -HTTP METHOD : GET
2019-03-14 11:39:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:39:17 -参数 : [userArea]
2019-03-14 11:39:17 -耗时 : 5
2019-03-14 11:39:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:39:17 -HTTP METHOD : GET
2019-03-14 11:39:17 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 11:39:17 -==> Parameters: userArea(String)
2019-03-14 11:39:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:39:17 -参数 : [userOrg]
2019-03-14 11:39:17 -<==      Total: 0
2019-03-14 11:39:17 -耗时 : 9
2019-03-14 11:39:17 -返回值 : []
2019-03-14 11:39:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:39:17 -==> Parameters: userOrg(String)
2019-03-14 11:39:17 -<==      Total: 0
2019-03-14 11:39:17 -耗时 : 16
2019-03-14 11:39:17 -返回值 : []
2019-03-14 11:39:21 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-14 11:39:21 -HTTP METHOD : GET
2019-03-14 11:39:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-14 11:39:21 -参数 : []
2019-03-14 11:39:21 -耗时 : 1
2019-03-14 11:39:21 -返回值 : /moneyLog/heatLog/heatLog
2019-03-14 11:39:21 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 11:39:21 -HTTP METHOD : GET
2019-03-14 11:39:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:39:21 -参数 : [userType]
2019-03-14 11:39:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:39:21 -==> Parameters: userType(String)
2019-03-14 11:39:21 -<==      Total: 2
2019-03-14 11:39:21 -耗时 : 5
2019-03-14 11:39:21 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 11:39:21 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-14 11:39:21 -HTTP METHOD : GET
2019-03-14 11:39:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-14 11:39:21 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 11:39:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-14 11:39:21 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:39:21 -<==      Total: 3
2019-03-14 11:39:21 -==>  Preparing: select count(*) from heat_log 
2019-03-14 11:39:21 -==> Parameters: 
2019-03-14 11:39:21 -<==      Total: 1
2019-03-14 11:39:21 -耗时 : 47
2019-03-14 11:39:21 -返回值 : com.bootdo.common.utils.PageUtils@1100cf12
2019-03-14 11:39:22 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-14 11:39:22 -HTTP METHOD : GET
2019-03-14 11:39:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-14 11:39:22 -参数 : []
2019-03-14 11:39:22 -耗时 : 0
2019-03-14 11:39:22 -返回值 : /moneyLog/waterLog/waterLog
2019-03-14 11:39:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 11:39:23 -HTTP METHOD : GET
2019-03-14 11:39:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:39:23 -参数 : [userType]
2019-03-14 11:39:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:39:23 -==> Parameters: userType(String)
2019-03-14 11:39:23 -<==      Total: 2
2019-03-14 11:39:23 -耗时 : 11
2019-03-14 11:39:23 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 11:39:23 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-14 11:39:23 -HTTP METHOD : GET
2019-03-14 11:39:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-14 11:39:23 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 11:39:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-14 11:39:23 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:39:23 -<==      Total: 3
2019-03-14 11:39:23 -==>  Preparing: select count(*) from water_log 
2019-03-14 11:39:23 -==> Parameters: 
2019-03-14 11:39:23 -<==      Total: 1
2019-03-14 11:39:23 -耗时 : 33
2019-03-14 11:39:23 -返回值 : com.bootdo.common.utils.PageUtils@60975f7b
2019-03-14 11:39:23 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-14 11:39:23 -HTTP METHOD : GET
2019-03-14 11:39:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-14 11:39:23 -参数 : []
2019-03-14 11:39:23 -耗时 : 1
2019-03-14 11:39:23 -返回值 : /moneyLog/heatLog/heatLog
2019-03-14 11:39:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 11:39:24 -HTTP METHOD : GET
2019-03-14 11:39:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:39:24 -参数 : [userType]
2019-03-14 11:39:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:39:24 -==> Parameters: userType(String)
2019-03-14 11:39:24 -<==      Total: 2
2019-03-14 11:39:24 -耗时 : 3
2019-03-14 11:39:24 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 11:39:24 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-14 11:39:24 -HTTP METHOD : GET
2019-03-14 11:39:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-14 11:39:24 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 11:39:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-14 11:39:24 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:39:24 -<==      Total: 3
2019-03-14 11:39:24 -==>  Preparing: select count(*) from heat_log 
2019-03-14 11:39:24 -==> Parameters: 
2019-03-14 11:39:24 -<==      Total: 1
2019-03-14 11:39:24 -耗时 : 7
2019-03-14 11:39:24 -返回值 : com.bootdo.common.utils.PageUtils@1a66f6ce
2019-03-14 11:39:24 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 11:39:24 -HTTP METHOD : GET
2019-03-14 11:39:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 11:39:24 -参数 : []
2019-03-14 11:39:24 -耗时 : 0
2019-03-14 11:39:24 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 11:39:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 11:39:25 -HTTP METHOD : GET
2019-03-14 11:39:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:39:25 -参数 : [userType]
2019-03-14 11:39:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:39:25 -==> Parameters: userType(String)
2019-03-14 11:39:25 -<==      Total: 2
2019-03-14 11:39:25 -耗时 : 6
2019-03-14 11:39:25 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 11:39:25 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:39:25 -HTTP METHOD : GET
2019-03-14 11:39:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:39:25 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 11:39:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-14 11:39:25 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:39:25 -<==      Total: 3
2019-03-14 11:39:25 -==>  Preparing: select count(*) from elec_log 
2019-03-14 11:39:25 -==> Parameters: 
2019-03-14 11:39:25 -<==      Total: 1
2019-03-14 11:39:25 -耗时 : 7
2019-03-14 11:39:25 -返回值 : com.bootdo.common.utils.PageUtils@5775430c
2019-03-14 11:39:25 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-14 11:39:25 -HTTP METHOD : GET
2019-03-14 11:39:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-14 11:39:25 -参数 : []
2019-03-14 11:39:25 -耗时 : 1
2019-03-14 11:39:25 -返回值 : /moneyLog/heatLog/heatLog
2019-03-14 11:39:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 11:39:25 -HTTP METHOD : GET
2019-03-14 11:39:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:39:25 -参数 : [userType]
2019-03-14 11:39:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:39:25 -==> Parameters: userType(String)
2019-03-14 11:39:25 -<==      Total: 2
2019-03-14 11:39:25 -耗时 : 6
2019-03-14 11:39:25 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 11:39:25 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-14 11:39:25 -HTTP METHOD : GET
2019-03-14 11:39:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-14 11:39:25 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 11:39:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-14 11:39:25 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:39:25 -<==      Total: 3
2019-03-14 11:39:25 -==>  Preparing: select count(*) from heat_log 
2019-03-14 11:39:25 -==> Parameters: 
2019-03-14 11:39:25 -<==      Total: 1
2019-03-14 11:39:25 -耗时 : 9
2019-03-14 11:39:25 -返回值 : com.bootdo.common.utils.PageUtils@79428dca
2019-03-14 11:39:26 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-14 11:39:26 -HTTP METHOD : GET
2019-03-14 11:39:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-14 11:39:26 -参数 : []
2019-03-14 11:39:26 -耗时 : 0
2019-03-14 11:39:26 -返回值 : /moneyLog/waterLog/waterLog
2019-03-14 11:39:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 11:39:26 -HTTP METHOD : GET
2019-03-14 11:39:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:39:26 -参数 : [userType]
2019-03-14 11:39:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:39:26 -==> Parameters: userType(String)
2019-03-14 11:39:26 -<==      Total: 2
2019-03-14 11:39:26 -耗时 : 5
2019-03-14 11:39:26 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 11:39:26 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-14 11:39:26 -HTTP METHOD : GET
2019-03-14 11:39:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-14 11:39:26 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 11:39:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-14 11:39:26 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:39:26 -<==      Total: 3
2019-03-14 11:39:26 -==>  Preparing: select count(*) from water_log 
2019-03-14 11:39:26 -==> Parameters: 
2019-03-14 11:39:26 -<==      Total: 1
2019-03-14 11:39:26 -耗时 : 6
2019-03-14 11:39:26 -返回值 : com.bootdo.common.utils.PageUtils@12a154b
2019-03-14 11:39:27 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-14 11:39:27 -HTTP METHOD : GET
2019-03-14 11:39:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-14 11:39:27 -参数 : []
2019-03-14 11:39:27 -耗时 : 0
2019-03-14 11:39:27 -返回值 : /moneyLog/heatLog/heatLog
2019-03-14 11:39:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 11:39:27 -HTTP METHOD : GET
2019-03-14 11:39:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:39:27 -参数 : [userType]
2019-03-14 11:39:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:39:27 -==> Parameters: userType(String)
2019-03-14 11:39:27 -<==      Total: 2
2019-03-14 11:39:27 -耗时 : 4
2019-03-14 11:39:27 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 11:39:27 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-14 11:39:27 -HTTP METHOD : GET
2019-03-14 11:39:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-14 11:39:27 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 11:39:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-14 11:39:27 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:39:27 -<==      Total: 3
2019-03-14 11:39:27 -==>  Preparing: select count(*) from heat_log 
2019-03-14 11:39:27 -==> Parameters: 
2019-03-14 11:39:27 -<==      Total: 1
2019-03-14 11:39:27 -耗时 : 6
2019-03-14 11:39:27 -返回值 : com.bootdo.common.utils.PageUtils@7a1de9e4
2019-03-14 11:39:27 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 11:39:27 -HTTP METHOD : GET
2019-03-14 11:39:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 11:39:27 -参数 : []
2019-03-14 11:39:27 -耗时 : 1
2019-03-14 11:39:27 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 11:39:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 11:39:27 -HTTP METHOD : GET
2019-03-14 11:39:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:39:27 -参数 : [userType]
2019-03-14 11:39:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:39:27 -==> Parameters: userType(String)
2019-03-14 11:39:27 -<==      Total: 2
2019-03-14 11:39:27 -耗时 : 4
2019-03-14 11:39:27 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 11:39:27 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:39:27 -HTTP METHOD : GET
2019-03-14 11:39:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:39:27 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 11:39:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-14 11:39:27 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:39:27 -<==      Total: 3
2019-03-14 11:39:27 -==>  Preparing: select count(*) from elec_log 
2019-03-14 11:39:27 -==> Parameters: 
2019-03-14 11:39:27 -<==      Total: 1
2019-03-14 11:39:27 -耗时 : 6
2019-03-14 11:39:27 -返回值 : com.bootdo.common.utils.PageUtils@687b4f17
2019-03-14 11:39:28 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-14 11:39:28 -HTTP METHOD : GET
2019-03-14 11:39:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-14 11:39:28 -参数 : []
2019-03-14 11:39:28 -耗时 : 0
2019-03-14 11:39:28 -返回值 : /moneyLog/heatLog/heatLog
2019-03-14 11:39:28 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 11:39:28 -HTTP METHOD : GET
2019-03-14 11:39:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:39:28 -参数 : [userType]
2019-03-14 11:39:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:39:28 -==> Parameters: userType(String)
2019-03-14 11:39:28 -<==      Total: 2
2019-03-14 11:39:28 -耗时 : 5
2019-03-14 11:39:28 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 11:39:28 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-14 11:39:28 -HTTP METHOD : GET
2019-03-14 11:39:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-14 11:39:28 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 11:39:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-14 11:39:28 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:39:28 -<==      Total: 3
2019-03-14 11:39:28 -==>  Preparing: select count(*) from heat_log 
2019-03-14 11:39:28 -==> Parameters: 
2019-03-14 11:39:28 -<==      Total: 1
2019-03-14 11:39:28 -耗时 : 8
2019-03-14 11:39:28 -返回值 : com.bootdo.common.utils.PageUtils@4398453f
2019-03-14 11:39:28 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-14 11:39:28 -HTTP METHOD : GET
2019-03-14 11:39:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-14 11:39:28 -参数 : []
2019-03-14 11:39:28 -耗时 : 1
2019-03-14 11:39:28 -返回值 : /moneyLog/waterLog/waterLog
2019-03-14 11:39:29 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 11:39:29 -HTTP METHOD : GET
2019-03-14 11:39:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:39:29 -参数 : [userType]
2019-03-14 11:39:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:39:29 -==> Parameters: userType(String)
2019-03-14 11:39:29 -<==      Total: 2
2019-03-14 11:39:29 -耗时 : 6
2019-03-14 11:39:29 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 11:39:29 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-14 11:39:29 -HTTP METHOD : GET
2019-03-14 11:39:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-14 11:39:29 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 11:39:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-14 11:39:29 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:39:29 -<==      Total: 3
2019-03-14 11:39:29 -==>  Preparing: select count(*) from water_log 
2019-03-14 11:39:29 -==> Parameters: 
2019-03-14 11:39:29 -<==      Total: 1
2019-03-14 11:39:29 -耗时 : 8
2019-03-14 11:39:29 -返回值 : com.bootdo.common.utils.PageUtils@2d5ca6ad
2019-03-14 11:39:29 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-14 11:39:29 -HTTP METHOD : GET
2019-03-14 11:39:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-14 11:39:29 -参数 : []
2019-03-14 11:39:29 -耗时 : 0
2019-03-14 11:39:29 -返回值 : /moneyLog/heatLog/heatLog
2019-03-14 11:39:29 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 11:39:29 -HTTP METHOD : GET
2019-03-14 11:39:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:39:29 -参数 : [userType]
2019-03-14 11:39:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:39:29 -==> Parameters: userType(String)
2019-03-14 11:39:29 -<==      Total: 2
2019-03-14 11:39:29 -耗时 : 3
2019-03-14 11:39:29 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 11:39:29 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-14 11:39:29 -HTTP METHOD : GET
2019-03-14 11:39:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-14 11:39:29 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 11:39:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-14 11:39:29 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:39:29 -<==      Total: 3
2019-03-14 11:39:29 -==>  Preparing: select count(*) from heat_log 
2019-03-14 11:39:29 -==> Parameters: 
2019-03-14 11:39:29 -<==      Total: 1
2019-03-14 11:39:29 -耗时 : 10
2019-03-14 11:39:29 -返回值 : com.bootdo.common.utils.PageUtils@73b10deb
2019-03-14 11:39:30 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 11:39:30 -HTTP METHOD : GET
2019-03-14 11:39:30 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 11:39:30 -参数 : []
2019-03-14 11:39:30 -耗时 : 1
2019-03-14 11:39:30 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 11:39:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 11:39:30 -HTTP METHOD : GET
2019-03-14 11:39:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:39:30 -参数 : [userType]
2019-03-14 11:39:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:39:30 -==> Parameters: userType(String)
2019-03-14 11:39:30 -<==      Total: 2
2019-03-14 11:39:30 -耗时 : 5
2019-03-14 11:39:30 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 11:39:30 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:39:30 -HTTP METHOD : GET
2019-03-14 11:39:30 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:39:30 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 11:39:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-14 11:39:30 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:39:30 -<==      Total: 3
2019-03-14 11:39:30 -==>  Preparing: select count(*) from elec_log 
2019-03-14 11:39:30 -==> Parameters: 
2019-03-14 11:39:30 -<==      Total: 1
2019-03-14 11:39:30 -耗时 : 7
2019-03-14 11:39:30 -返回值 : com.bootdo.common.utils.PageUtils@6abe8530
2019-03-14 11:39:31 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-14 11:39:31 -HTTP METHOD : GET
2019-03-14 11:39:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-14 11:39:31 -参数 : []
2019-03-14 11:39:31 -耗时 : 1
2019-03-14 11:39:31 -返回值 : /moneyLog/waterLog/waterLog
2019-03-14 11:39:31 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 11:39:31 -HTTP METHOD : GET
2019-03-14 11:39:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:39:31 -参数 : [userType]
2019-03-14 11:39:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:39:31 -==> Parameters: userType(String)
2019-03-14 11:39:31 -<==      Total: 2
2019-03-14 11:39:31 -耗时 : 3
2019-03-14 11:39:31 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 11:39:31 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-14 11:39:31 -HTTP METHOD : GET
2019-03-14 11:39:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-14 11:39:31 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 11:39:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-14 11:39:31 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:39:31 -<==      Total: 3
2019-03-14 11:39:31 -==>  Preparing: select count(*) from water_log 
2019-03-14 11:39:31 -==> Parameters: 
2019-03-14 11:39:31 -<==      Total: 1
2019-03-14 11:39:31 -耗时 : 6
2019-03-14 11:39:31 -返回值 : com.bootdo.common.utils.PageUtils@262945b1
2019-03-14 11:39:31 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-14 11:39:31 -HTTP METHOD : GET
2019-03-14 11:39:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-14 11:39:31 -参数 : []
2019-03-14 11:39:31 -耗时 : 0
2019-03-14 11:39:31 -返回值 : /moneyLog/heatLog/heatLog
2019-03-14 11:39:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 11:39:32 -HTTP METHOD : GET
2019-03-14 11:39:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:39:32 -参数 : [userType]
2019-03-14 11:39:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:39:32 -==> Parameters: userType(String)
2019-03-14 11:39:32 -<==      Total: 2
2019-03-14 11:39:32 -耗时 : 3
2019-03-14 11:39:32 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 11:39:32 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-14 11:39:32 -HTTP METHOD : GET
2019-03-14 11:39:32 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-14 11:39:32 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 11:39:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-14 11:39:32 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:39:32 -<==      Total: 3
2019-03-14 11:39:32 -==>  Preparing: select count(*) from heat_log 
2019-03-14 11:39:32 -==> Parameters: 
2019-03-14 11:39:32 -<==      Total: 1
2019-03-14 11:39:32 -耗时 : 5
2019-03-14 11:39:32 -返回值 : com.bootdo.common.utils.PageUtils@6132c876
2019-03-14 11:39:32 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 11:39:32 -HTTP METHOD : GET
2019-03-14 11:39:32 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 11:39:32 -参数 : []
2019-03-14 11:39:32 -耗时 : 1
2019-03-14 11:39:32 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 11:39:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 11:39:32 -HTTP METHOD : GET
2019-03-14 11:39:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:39:32 -参数 : [userType]
2019-03-14 11:39:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:39:32 -==> Parameters: userType(String)
2019-03-14 11:39:32 -<==      Total: 2
2019-03-14 11:39:32 -耗时 : 3
2019-03-14 11:39:32 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 11:39:32 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:39:32 -HTTP METHOD : GET
2019-03-14 11:39:32 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:39:32 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 11:39:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-14 11:39:32 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:39:32 -<==      Total: 3
2019-03-14 11:39:32 -==>  Preparing: select count(*) from elec_log 
2019-03-14 11:39:32 -==> Parameters: 
2019-03-14 11:39:32 -<==      Total: 1
2019-03-14 11:39:32 -耗时 : 5
2019-03-14 11:39:32 -返回值 : com.bootdo.common.utils.PageUtils@9e72690
2019-03-14 11:39:33 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-14 11:39:33 -HTTP METHOD : GET
2019-03-14 11:39:33 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-14 11:39:33 -参数 : []
2019-03-14 11:39:33 -耗时 : 1
2019-03-14 11:39:33 -返回值 : /moneyLog/heatLog/heatLog
2019-03-14 11:39:33 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 11:39:33 -HTTP METHOD : GET
2019-03-14 11:39:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:39:33 -参数 : [userType]
2019-03-14 11:39:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:39:33 -==> Parameters: userType(String)
2019-03-14 11:39:33 -<==      Total: 2
2019-03-14 11:39:33 -耗时 : 3
2019-03-14 11:39:33 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 11:39:33 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-14 11:39:33 -HTTP METHOD : GET
2019-03-14 11:39:33 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-14 11:39:33 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 11:39:33 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-14 11:39:33 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:39:33 -<==      Total: 3
2019-03-14 11:39:33 -==>  Preparing: select count(*) from heat_log 
2019-03-14 11:39:33 -==> Parameters: 
2019-03-14 11:39:33 -<==      Total: 1
2019-03-14 11:39:33 -耗时 : 6
2019-03-14 11:39:33 -返回值 : com.bootdo.common.utils.PageUtils@341d7fbe
2019-03-14 11:39:34 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-14 11:39:34 -HTTP METHOD : GET
2019-03-14 11:39:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-14 11:39:34 -参数 : []
2019-03-14 11:39:34 -耗时 : 1
2019-03-14 11:39:34 -返回值 : /moneyLog/waterLog/waterLog
2019-03-14 11:39:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 11:39:34 -HTTP METHOD : GET
2019-03-14 11:39:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:39:34 -参数 : [userType]
2019-03-14 11:39:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:39:34 -==> Parameters: userType(String)
2019-03-14 11:39:34 -<==      Total: 2
2019-03-14 11:39:34 -耗时 : 4
2019-03-14 11:39:34 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 11:39:34 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-14 11:39:34 -HTTP METHOD : GET
2019-03-14 11:39:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-14 11:39:34 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 11:39:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-14 11:39:34 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:39:34 -<==      Total: 3
2019-03-14 11:39:34 -==>  Preparing: select count(*) from water_log 
2019-03-14 11:39:34 -==> Parameters: 
2019-03-14 11:39:34 -<==      Total: 1
2019-03-14 11:39:34 -耗时 : 5
2019-03-14 11:39:34 -返回值 : com.bootdo.common.utils.PageUtils@76e3ffc8
2019-03-14 11:39:35 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-14 11:39:35 -HTTP METHOD : GET
2019-03-14 11:39:35 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-14 11:39:35 -参数 : []
2019-03-14 11:39:35 -耗时 : 1
2019-03-14 11:39:35 -返回值 : /moneyLog/heatLog/heatLog
2019-03-14 11:39:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 11:39:35 -HTTP METHOD : GET
2019-03-14 11:39:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:39:35 -参数 : [userType]
2019-03-14 11:39:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:39:35 -==> Parameters: userType(String)
2019-03-14 11:39:35 -<==      Total: 2
2019-03-14 11:39:35 -耗时 : 4
2019-03-14 11:39:35 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 11:39:35 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-14 11:39:35 -HTTP METHOD : GET
2019-03-14 11:39:35 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-14 11:39:35 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 11:39:35 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-14 11:39:35 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:39:35 -<==      Total: 3
2019-03-14 11:39:35 -==>  Preparing: select count(*) from heat_log 
2019-03-14 11:39:35 -==> Parameters: 
2019-03-14 11:39:35 -<==      Total: 1
2019-03-14 11:39:35 -耗时 : 8
2019-03-14 11:39:35 -返回值 : com.bootdo.common.utils.PageUtils@6982f160
2019-03-14 11:39:36 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 11:39:36 -HTTP METHOD : GET
2019-03-14 11:39:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 11:39:36 -参数 : []
2019-03-14 11:39:36 -耗时 : 0
2019-03-14 11:39:36 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 11:39:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 11:39:36 -HTTP METHOD : GET
2019-03-14 11:39:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:39:36 -参数 : [userType]
2019-03-14 11:39:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:39:36 -==> Parameters: userType(String)
2019-03-14 11:39:36 -<==      Total: 2
2019-03-14 11:39:36 -耗时 : 5
2019-03-14 11:39:36 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 11:39:36 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:39:36 -HTTP METHOD : GET
2019-03-14 11:39:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:39:36 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 11:39:36 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-14 11:39:36 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:39:36 -<==      Total: 3
2019-03-14 11:39:36 -==>  Preparing: select count(*) from elec_log 
2019-03-14 11:39:36 -==> Parameters: 
2019-03-14 11:39:36 -<==      Total: 1
2019-03-14 11:39:36 -耗时 : 6
2019-03-14 11:39:36 -返回值 : com.bootdo.common.utils.PageUtils@42b6ed5b
2019-03-14 11:39:37 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-14 11:39:37 -HTTP METHOD : GET
2019-03-14 11:39:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-14 11:39:37 -参数 : []
2019-03-14 11:39:37 -耗时 : 1
2019-03-14 11:39:37 -返回值 : /moneyLog/waterLog/waterLog
2019-03-14 11:39:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 11:39:38 -HTTP METHOD : GET
2019-03-14 11:39:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:39:38 -参数 : [userType]
2019-03-14 11:39:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:39:38 -==> Parameters: userType(String)
2019-03-14 11:39:38 -<==      Total: 2
2019-03-14 11:39:38 -耗时 : 5
2019-03-14 11:39:38 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 11:39:38 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-14 11:39:38 -HTTP METHOD : GET
2019-03-14 11:39:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-14 11:39:38 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 11:39:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-14 11:39:38 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:39:38 -<==      Total: 3
2019-03-14 11:39:38 -==>  Preparing: select count(*) from water_log 
2019-03-14 11:39:38 -==> Parameters: 
2019-03-14 11:39:38 -<==      Total: 1
2019-03-14 11:39:38 -耗时 : 11
2019-03-14 11:39:38 -返回值 : com.bootdo.common.utils.PageUtils@5f9b63f0
2019-03-14 11:39:38 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 11:39:38 -HTTP METHOD : GET
2019-03-14 11:39:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 11:39:38 -参数 : []
2019-03-14 11:39:38 -耗时 : 0
2019-03-14 11:39:38 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 11:39:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 11:39:38 -HTTP METHOD : GET
2019-03-14 11:39:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:39:38 -参数 : [userType]
2019-03-14 11:39:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:39:38 -==> Parameters: userType(String)
2019-03-14 11:39:38 -<==      Total: 2
2019-03-14 11:39:38 -耗时 : 3
2019-03-14 11:39:38 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 11:39:38 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 11:39:38 -HTTP METHOD : GET
2019-03-14 11:39:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 11:39:38 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 11:39:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-14 11:39:38 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:39:38 -<==      Total: 3
2019-03-14 11:39:38 -==>  Preparing: select count(*) from elec_log 
2019-03-14 11:39:38 -==> Parameters: 
2019-03-14 11:39:38 -<==      Total: 1
2019-03-14 11:39:38 -耗时 : 5
2019-03-14 11:39:38 -返回值 : com.bootdo.common.utils.PageUtils@7a346722
2019-03-14 11:39:41 -请求地址 : http://localhost:8081/water/waterPrice
2019-03-14 11:39:41 -HTTP METHOD : GET
2019-03-14 11:39:41 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.WaterPrice
2019-03-14 11:39:41 -参数 : []
2019-03-14 11:39:41 -耗时 : 1
2019-03-14 11:39:41 -返回值 : water/waterPrice/waterPrice
2019-03-14 11:39:41 -请求地址 : http://localhost:8081/water/waterPrice/list
2019-03-14 11:39:41 -HTTP METHOD : GET
2019-03-14 11:39:41 -CLASS_METHOD : com.bootdo.water.controller.WaterPriceController.list
2019-03-14 11:39:41 -参数 : [{limit=10, offset=0}]
2019-03-14 11:39:41 -==>  Preparing: select `id`,`water_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `water_org`) AS waterOrgName,`business_water`,`civil_water`,`special_1`,`special_2`,`special_3`,`special_4`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_price order by id desc limit ?, ? 
2019-03-14 11:39:41 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:39:41 -<==      Total: 2
2019-03-14 11:39:41 -==>  Preparing: select count(*) from water_price 
2019-03-14 11:39:41 -==> Parameters: 
2019-03-14 11:39:41 -<==      Total: 1
2019-03-14 11:39:41 -耗时 : 272
2019-03-14 11:39:41 -返回值 : com.bootdo.common.utils.PageUtils@3aad3607
2019-03-14 11:39:45 -请求地址 : http://localhost:8081/print/print
2019-03-14 11:39:45 -HTTP METHOD : GET
2019-03-14 11:39:45 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-14 11:39:45 -参数 : []
2019-03-14 11:39:45 -耗时 : 1
2019-03-14 11:39:45 -返回值 : print/print/print
2019-03-14 11:39:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 11:39:45 -HTTP METHOD : GET
2019-03-14 11:39:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:39:45 -参数 : [userType]
2019-03-14 11:39:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:39:45 -==> Parameters: userType(String)
2019-03-14 11:39:45 -<==      Total: 2
2019-03-14 11:39:45 -耗时 : 5
2019-03-14 11:39:45 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 11:39:45 -请求地址 : http://localhost:8081/print/print/list
2019-03-14 11:39:45 -HTTP METHOD : GET
2019-03-14 11:39:45 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-14 11:39:45 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 11:39:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-14 11:39:45 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:39:45 -<==      Total: 3
2019-03-14 11:39:45 -==>  Preparing: select count(*) from print 
2019-03-14 11:39:45 -==> Parameters: 
2019-03-14 11:39:45 -<==      Total: 1
2019-03-14 11:39:45 -耗时 : 146
2019-03-14 11:39:45 -返回值 : com.bootdo.common.utils.PageUtils@9dab32d
2019-03-14 11:39:53 -请求地址 : http://localhost:8081/print/print/list
2019-03-14 11:39:53 -HTTP METHOD : GET
2019-03-14 11:39:53 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-14 11:39:53 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, createTime=, type=A}]
2019-03-14 11:39:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? order by id asc limit ?, ? 
2019-03-14 11:39:53 -==> Parameters: A(String), 0(Integer), 10(Integer)
2019-03-14 11:39:53 -<==      Total: 2
2019-03-14 11:39:53 -==>  Preparing: select count(*) from print WHERE user_type = ? 
2019-03-14 11:39:53 -==> Parameters: A(String)
2019-03-14 11:39:53 -<==      Total: 1
2019-03-14 11:39:53 -耗时 : 18
2019-03-14 11:39:53 -返回值 : com.bootdo.common.utils.PageUtils@6fce7104
2019-03-14 11:39:55 -请求地址 : http://localhost:8081/print/print/list
2019-03-14 11:39:55 -HTTP METHOD : GET
2019-03-14 11:39:55 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-14 11:39:55 -参数 : [{limit=10, offset=0, userType=B, userOrg=, userId=, createTime=, type=B}]
2019-03-14 11:39:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? order by id asc limit ?, ? 
2019-03-14 11:39:55 -==> Parameters: B(String), 0(Integer), 10(Integer)
2019-03-14 11:39:55 -<==      Total: 1
2019-03-14 11:39:55 -==>  Preparing: select count(*) from print WHERE user_type = ? 
2019-03-14 11:39:55 -==> Parameters: B(String)
2019-03-14 11:39:55 -<==      Total: 1
2019-03-14 11:39:55 -耗时 : 27
2019-03-14 11:39:55 -返回值 : com.bootdo.common.utils.PageUtils@2fb472de
2019-03-14 11:39:56 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-14 11:39:56 -HTTP METHOD : GET
2019-03-14 11:39:56 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-14 11:39:56 -参数 : []
2019-03-14 11:39:56 -耗时 : 1
2019-03-14 11:39:56 -返回值 : system/dept/deptTree
2019-03-14 11:39:56 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-14 11:39:56 -HTTP METHOD : GET
2019-03-14 11:39:56 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-14 11:39:56 -参数 : []
2019-03-14 11:39:56 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-14 11:39:56 -==> Parameters: 
2019-03-14 11:39:56 -<==      Total: 3
2019-03-14 11:39:56 -耗时 : 3
2019-03-14 11:39:56 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-14 11:40:00 -请求地址 : http://localhost:8081/print/print/list
2019-03-14 11:40:00 -HTTP METHOD : GET
2019-03-14 11:40:00 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-14 11:40:00 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, createTime=, type=A}]
2019-03-14 11:40:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? order by id asc limit ?, ? 
2019-03-14 11:40:00 -==> Parameters: A(String), 0(Integer), 10(Integer)
2019-03-14 11:40:00 -<==      Total: 2
2019-03-14 11:40:00 -==>  Preparing: select count(*) from print WHERE user_type = ? 
2019-03-14 11:40:00 -==> Parameters: A(String)
2019-03-14 11:40:00 -<==      Total: 1
2019-03-14 11:40:00 -耗时 : 14
2019-03-14 11:40:00 -返回值 : com.bootdo.common.utils.PageUtils@633eff19
2019-03-14 11:40:25 -请求地址 : http://localhost:8081/print/print/list
2019-03-14 11:40:25 -HTTP METHOD : GET
2019-03-14 11:40:25 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-14 11:40:25 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, createTime=2019-03-12}]
2019-03-14 11:40:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-14 11:40:25 -==> Parameters: A(String), 2019-03-12 00:00:00(String), 2019-03-12 23:59:59(String), 0(Integer), 10(Integer)
2019-03-14 11:40:25 -<==      Total: 1
2019-03-14 11:40:25 -==>  Preparing: select count(*) from print WHERE user_type = ? and `create_time` >= ? and `create_time` <= ? 
2019-03-14 11:40:25 -==> Parameters: A(String), 2019-03-12 00:00:00(String), 2019-03-12 23:59:59(String)
2019-03-14 11:40:25 -<==      Total: 1
2019-03-14 11:40:25 -耗时 : 9
2019-03-14 11:40:25 -返回值 : com.bootdo.common.utils.PageUtils@6fa425d9
2019-03-14 11:40:26 -请求地址 : http://localhost:8081/print/print/list
2019-03-14 11:40:26 -HTTP METHOD : GET
2019-03-14 11:40:26 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-14 11:40:26 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, createTime=2019-03-12}]
2019-03-14 11:40:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-14 11:40:26 -==> Parameters: A(String), 2019-03-12 00:00:00(String), 2019-03-12 23:59:59(String), 0(Integer), 10(Integer)
2019-03-14 11:40:26 -<==      Total: 1
2019-03-14 11:40:26 -==>  Preparing: select count(*) from print WHERE user_type = ? and `create_time` >= ? and `create_time` <= ? 
2019-03-14 11:40:26 -==> Parameters: A(String), 2019-03-12 00:00:00(String), 2019-03-12 23:59:59(String)
2019-03-14 11:40:26 -<==      Total: 1
2019-03-14 11:40:26 -耗时 : 9
2019-03-14 11:40:26 -返回值 : com.bootdo.common.utils.PageUtils@1676ad20
2019-03-14 11:40:32 -请求地址 : http://localhost:8081/index
2019-03-14 11:40:32 -HTTP METHOD : GET
2019-03-14 11:40:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 11:40:32 -参数 : [{}]
2019-03-14 11:40:32 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 11:40:32 -==> Parameters: 1(Long)
2019-03-14 11:40:32 -<==      Total: 45
2019-03-14 11:40:32 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 11:40:32 -==> Parameters: 138(Long)
2019-03-14 11:40:32 -<==      Total: 1
2019-03-14 11:40:32 -耗时 : 31
2019-03-14 11:40:32 -返回值 : index_v1
2019-03-14 11:40:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 11:40:32 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 31(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 11:40:32.209(Timestamp)
2019-03-14 11:40:32 -请求地址 : http://localhost:8081/main
2019-03-14 11:40:32 -HTTP METHOD : GET
2019-03-14 11:40:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 11:40:32 -参数 : []
2019-03-14 11:40:32 -耗时 : 0
2019-03-14 11:40:32 -返回值 : main
2019-03-14 11:40:32 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 11:40:32 -HTTP METHOD : GET
2019-03-14 11:40:32 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 11:40:32 -参数 : []
2019-03-14 11:40:32 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 11:40:32 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 11:40:32 -<==    Updates: 1
2019-03-14 11:40:32 -<==      Total: 0
2019-03-14 11:40:32 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 11:40:32 -==> Parameters: 1(Long), 0(String)
2019-03-14 11:40:32 -<==      Total: 1
2019-03-14 11:40:32 -耗时 : 28
2019-03-14 11:40:32 -返回值 : com.bootdo.common.utils.PageUtils@68f6e58a
2019-03-14 11:40:32 -请求地址 : http://localhost:8081/main
2019-03-14 11:40:32 -HTTP METHOD : GET
2019-03-14 11:40:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 11:40:32 -参数 : []
2019-03-14 11:40:32 -耗时 : 1
2019-03-14 11:40:32 -返回值 : main
2019-03-14 11:40:40 -请求地址 : http://localhost:8081/print/print
2019-03-14 11:40:40 -HTTP METHOD : GET
2019-03-14 11:40:40 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-14 11:40:40 -参数 : []
2019-03-14 11:40:40 -耗时 : 0
2019-03-14 11:40:40 -返回值 : print/print/print
2019-03-14 11:40:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 11:40:40 -HTTP METHOD : GET
2019-03-14 11:40:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 11:40:40 -参数 : [userType]
2019-03-14 11:40:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 11:40:40 -==> Parameters: userType(String)
2019-03-14 11:40:40 -<==      Total: 2
2019-03-14 11:40:40 -耗时 : 4
2019-03-14 11:40:40 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 11:40:40 -请求地址 : http://localhost:8081/print/print/list
2019-03-14 11:40:40 -HTTP METHOD : GET
2019-03-14 11:40:40 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-14 11:40:40 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 11:40:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-14 11:40:40 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 11:40:40 -<==      Total: 3
2019-03-14 11:40:40 -==>  Preparing: select count(*) from print 
2019-03-14 11:40:40 -==> Parameters: 
2019-03-14 11:40:40 -<==      Total: 1
2019-03-14 11:40:40 -耗时 : 136
2019-03-14 11:40:40 -返回值 : com.bootdo.common.utils.PageUtils@46c8241e
2019-03-14 11:40:52 -请求地址 : http://localhost:8081/print/print/list
2019-03-14 11:40:52 -HTTP METHOD : GET
2019-03-14 11:40:52 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-14 11:40:52 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-02-23}]
2019-03-14 11:40:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-14 11:40:52 -==> Parameters: 2019-02-23 00:00:00(String), 2019-02-23 23:59:59(String), 0(Integer), 10(Integer)
2019-03-14 11:40:52 -<==      Total: 1
2019-03-14 11:40:52 -==>  Preparing: select count(*) from print WHERE `create_time` >= ? and `create_time` <= ? 
2019-03-14 11:40:52 -==> Parameters: 2019-02-23 00:00:00(String), 2019-02-23 23:59:59(String)
2019-03-14 11:40:52 -<==      Total: 1
2019-03-14 11:40:52 -耗时 : 9
2019-03-14 11:40:52 -返回值 : com.bootdo.common.utils.PageUtils@6db3a6cb
2019-03-14 11:40:58 -请求地址 : http://localhost:8081/print/print/list
2019-03-14 11:40:58 -HTTP METHOD : GET
2019-03-14 11:40:58 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-14 11:40:58 -参数 : [{limit=10, offset=0, userType=B, userOrg=, userId=, createTime=2019-02-23, type=B}]
2019-03-14 11:40:58 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-14 11:40:58 -==> Parameters: B(String), 2019-02-23 00:00:00(String), 2019-02-23 23:59:59(String), 0(Integer), 10(Integer)
2019-03-14 11:40:58 -<==      Total: 0
2019-03-14 11:40:58 -==>  Preparing: select count(*) from print WHERE user_type = ? and `create_time` >= ? and `create_time` <= ? 
2019-03-14 11:40:58 -==> Parameters: B(String), 2019-02-23 00:00:00(String), 2019-02-23 23:59:59(String)
2019-03-14 11:40:58 -<==      Total: 1
2019-03-14 11:40:58 -耗时 : 21
2019-03-14 11:40:58 -返回值 : com.bootdo.common.utils.PageUtils@e5a85f1
2019-03-14 11:41:00 -请求地址 : http://localhost:8081/print/print/list
2019-03-14 11:41:00 -HTTP METHOD : GET
2019-03-14 11:41:00 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-14 11:41:00 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, createTime=2019-02-23, type=A}]
2019-03-14 11:41:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-14 11:41:00 -==> Parameters: A(String), 2019-02-23 00:00:00(String), 2019-02-23 23:59:59(String), 0(Integer), 10(Integer)
2019-03-14 11:41:00 -<==      Total: 1
2019-03-14 11:41:00 -==>  Preparing: select count(*) from print WHERE user_type = ? and `create_time` >= ? and `create_time` <= ? 
2019-03-14 11:41:00 -==> Parameters: A(String), 2019-02-23 00:00:00(String), 2019-02-23 23:59:59(String)
2019-03-14 11:41:00 -<==      Total: 1
2019-03-14 11:41:00 -耗时 : 9
2019-03-14 11:41:00 -返回值 : com.bootdo.common.utils.PageUtils@3d9d285c
2019-03-14 11:41:01 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-14 11:41:01 -HTTP METHOD : GET
2019-03-14 11:41:01 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-14 11:41:01 -参数 : []
2019-03-14 11:41:01 -耗时 : 0
2019-03-14 11:41:01 -返回值 : system/dept/deptTree
2019-03-14 11:41:01 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-14 11:41:01 -HTTP METHOD : GET
2019-03-14 11:41:01 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-14 11:41:01 -参数 : []
2019-03-14 11:41:01 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-14 11:41:01 -==> Parameters: 
2019-03-14 11:41:01 -<==      Total: 3
2019-03-14 11:41:01 -耗时 : 5
2019-03-14 11:41:01 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-14 11:41:04 -请求地址 : http://localhost:8081/print/print/list
2019-03-14 11:41:04 -HTTP METHOD : GET
2019-03-14 11:41:04 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-14 11:41:04 -参数 : [{limit=10, offset=0, userType=A, userOrg=3, userId=, createTime=2019-02-23}]
2019-03-14 11:41:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? and `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-14 11:41:04 -==> Parameters: A(String), 3(String), 2019-02-23 00:00:00(String), 2019-02-23 23:59:59(String), 0(Integer), 10(Integer)
2019-03-14 11:41:04 -<==      Total: 0
2019-03-14 11:41:04 -==>  Preparing: select count(*) from print WHERE user_type = ? and user_org = ? and `create_time` >= ? and `create_time` <= ? 
2019-03-14 11:41:04 -==> Parameters: A(String), 3(String), 2019-02-23 00:00:00(String), 2019-02-23 23:59:59(String)
2019-03-14 11:41:04 -<==      Total: 1
2019-03-14 11:41:04 -耗时 : 10
2019-03-14 11:41:04 -返回值 : com.bootdo.common.utils.PageUtils@2a99ed0f
2019-03-14 11:41:05 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-14 11:41:05 -HTTP METHOD : GET
2019-03-14 11:41:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-14 11:41:05 -参数 : []
2019-03-14 11:41:05 -耗时 : 0
2019-03-14 11:41:05 -返回值 : system/dept/deptTree
2019-03-14 11:41:05 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-14 11:41:05 -HTTP METHOD : GET
2019-03-14 11:41:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-14 11:41:05 -参数 : []
2019-03-14 11:41:05 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-14 11:41:05 -==> Parameters: 
2019-03-14 11:41:05 -<==      Total: 3
2019-03-14 11:41:05 -耗时 : 9
2019-03-14 11:41:05 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-14 11:41:07 -请求地址 : http://localhost:8081/print/print/list
2019-03-14 11:41:07 -HTTP METHOD : GET
2019-03-14 11:41:07 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-14 11:41:07 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, createTime=2019-02-23}]
2019-03-14 11:41:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? and `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-14 11:41:07 -==> Parameters: A(String), 2(String), 2019-02-23 00:00:00(String), 2019-02-23 23:59:59(String), 0(Integer), 10(Integer)
2019-03-14 11:41:07 -<==      Total: 1
2019-03-14 11:41:07 -==>  Preparing: select count(*) from print WHERE user_type = ? and user_org = ? and `create_time` >= ? and `create_time` <= ? 
2019-03-14 11:41:07 -==> Parameters: A(String), 2(String), 2019-02-23 00:00:00(String), 2019-02-23 23:59:59(String)
2019-03-14 11:41:07 -<==      Total: 1
2019-03-14 11:41:07 -耗时 : 16
2019-03-14 11:41:07 -返回值 : com.bootdo.common.utils.PageUtils@1153069f
2019-03-14 11:41:18 -请求地址 : http://localhost:8081/print/print/printEdit/1
2019-03-14 11:41:18 -HTTP METHOD : GET
2019-03-14 11:41:18 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printEdit
2019-03-14 11:41:18 -参数 : [1, {}]
2019-03-14 11:41:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-03-14 11:41:18 -==> Parameters: 1(Long)
2019-03-14 11:41:18 -<==      Total: 1
2019-03-14 11:41:18 -耗时 : 12
2019-03-14 11:41:18 -返回值 : print/print/printEdit
2019-03-14 12:05:25 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 5 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(5)-CONNECTED(5)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 60], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 10], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 366]
2019-03-14 12:35:25 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 5 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(5)-CONNECTED(5)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 60], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 10], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 727]
2019-03-14 12:48:21 -Validating all active sessions...
2019-03-14 12:48:21 -Finished session validation.  [1] sessions were stopped.
2019-03-14 13:05:25 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 5 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(5)-CONNECTED(5)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 60], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 10], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 1088]
2019-03-14 13:35:25 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 5 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(5)-CONNECTED(5)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 60], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 10], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 1449]
2019-03-14 13:35:29 -Validating all active sessions...
2019-03-14 13:35:29 -Finished session validation.  No sessions were stopped.
2019-03-14 14:12:19 -Starting BootdoApplication on ZJZL-20180906VX with PID 12508 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-14 14:12:19 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-14 14:12:19 -The following profiles are active: dev
2019-03-14 14:12:19 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@60a2630a: startup date [Thu Mar 14 14:12:19 CST 2019]; root of context hierarchy
2019-03-14 14:12:23 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-14 14:12:26 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c445fd0a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 14:12:26 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$b69f2bb1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 14:12:27 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 14:12:28 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 14:12:28 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 14:12:28 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-14 14:12:28 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-14 14:12:28 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 14:12:28 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 14:12:28 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 14:12:28 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 14:12:30 -Tomcat initialized with port(s): 8081 (http)
2019-03-14 14:12:30 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-14 14:12:30 -Starting service [Tomcat]
2019-03-14 14:12:30 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-14 14:12:30 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;D:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-14 14:12:31 -Initializing Spring embedded WebApplicationContext
2019-03-14 14:12:31 -Root WebApplicationContext: initialization completed in 11419 ms
2019-03-14 14:12:32 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-14 14:12:32 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-14 14:12:32 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-14 14:12:32 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-14 14:12:32 -Filter xssFilter was not registered (disabled)
2019-03-14 14:12:32 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-14 14:12:32 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-14 14:12:32 -Servlet statViewServlet mapped to [/druid/*]
2019-03-14 14:12:32 -Servlet dispatcherServlet mapped to [/]
2019-03-14 14:12:35 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@60a2630a: startup date [Thu Mar 14 14:12:19 CST 2019]; root of context hierarchy
2019-03-14 14:12:36 -Using default implementation for ThreadExecutor
2019-03-14 14:12:36 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-14 14:12:36 -Quartz Scheduler v.2.2.1 created.
2019-03-14 14:12:36 -RAMJobStore initialized.
2019-03-14 14:12:36 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-14 14:12:36 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-14 14:12:36 -Quartz scheduler version: 2.2.1
2019-03-14 14:12:36 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@134955bb
2019-03-14 14:12:37 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-14 14:12:37 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-14 14:12:40 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-14 14:12:40 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-14 14:12:40 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-14 14:12:40 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-14 14:12:40 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-14 14:12:40 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-14 14:12:40 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-14 14:12:40 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-14 14:12:40 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-14 14:12:40 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 14:12:41 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-14 14:12:41 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-14 14:12:41 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-14 14:12:41 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-14 14:12:41 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 14:12:41 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-14 14:12:41 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-14 14:12:41 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-14 14:12:41 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-14 14:12:41 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-14 14:12:41 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 14:12:41 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-14 14:12:41 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-14 14:12:41 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-14 14:12:41 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 14:12:41 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-14 14:12:41 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 14:12:41 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-14 14:12:41 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-14 14:12:41 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-14 14:12:41 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-14 14:12:41 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-14 14:12:41 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-14 14:12:41 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-14 14:12:41 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-14 14:12:41 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-14 14:12:41 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 14:12:41 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-14 14:12:41 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-14 14:12:41 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 14:12:41 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-14 14:12:41 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-14 14:12:41 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-14 14:12:41 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-14 14:12:41 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 14:12:41 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-14 14:12:41 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-14 14:12:41 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-14 14:12:41 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-14 14:12:41 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-14 14:12:41 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-14 14:12:41 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-14 14:12:41 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-14 14:12:41 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-14 14:12:41 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-14 14:12:41 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 14:12:41 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-14 14:12:41 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2019-03-14 14:12:41 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-14 14:12:41 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-14 14:12:41 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-14 14:12:41 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-14 14:12:41 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-14 14:12:41 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-14 14:12:41 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 14:12:41 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-14 14:12:41 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 14:12:41 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-14 14:12:41 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-14 14:12:41 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-14 14:12:41 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-14 14:12:41 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-14 14:12:41 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-14 14:12:41 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-14 14:12:41 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 14:12:41 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-14 14:12:41 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-14 14:12:41 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-14 14:12:41 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-14 14:12:41 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-14 14:12:41 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-14 14:12:41 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-14 14:12:41 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-14 14:12:41 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 14:12:41 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-14 14:12:41 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 14:12:41 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-14 14:12:41 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-14 14:12:41 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-14 14:12:41 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-14 14:12:41 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-14 14:12:41 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019-03-14 14:12:41 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-14 14:12:41 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-14 14:12:41 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-14 14:12:41 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-14 14:12:41 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 14:12:41 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-14 14:12:41 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 14:12:41 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-14 14:12:41 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-14 14:12:41 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-14 14:12:41 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-14 14:12:41 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-14 14:12:41 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 14:12:41 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-14 14:12:41 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 14:12:41 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-14 14:12:41 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-14 14:12:41 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-14 14:12:41 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-14 14:12:41 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-14 14:12:41 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 14:12:41 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-14 14:12:41 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 14:12:41 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-14 14:12:41 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-14 14:12:41 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-14 14:12:41 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-14 14:12:41 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-14 14:12:41 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-14 14:12:41 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 14:12:41 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-14 14:12:41 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-14 14:12:41 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 14:12:41 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 14:12:41 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-14 14:12:41 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-14 14:12:41 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-14 14:12:41 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-14 14:12:41 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-14 14:12:41 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-14 14:12:41 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 14:12:41 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-14 14:12:41 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 14:12:41 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 14:12:41 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-14 14:12:41 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-14 14:12:41 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-14 14:12:41 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-14 14:12:41 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-14 14:12:41 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-14 14:12:41 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-14 14:12:41 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-14 14:12:41 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 14:12:41 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-14 14:12:41 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-14 14:12:41 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-14 14:12:41 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-14 14:12:41 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-14 14:12:41 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-14 14:12:41 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-14 14:12:41 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-14 14:12:41 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-14 14:12:41 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-14 14:12:41 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-14 14:12:41 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-14 14:12:41 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 14:12:41 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-14 14:12:41 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-14 14:12:41 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-14 14:12:41 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-14 14:12:41 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-14 14:12:41 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-14 14:12:41 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-14 14:12:41 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-14 14:12:41 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-14 14:12:41 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-14 14:12:41 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-14 14:12:41 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-14 14:12:41 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 14:12:41 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-14 14:12:41 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-14 14:12:41 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-14 14:12:41 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-14 14:12:41 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 14:12:41 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-14 14:12:41 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-14 14:12:41 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-14 14:12:41 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 14:12:41 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-14 14:12:41 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-14 14:12:41 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-14 14:12:41 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-14 14:12:41 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-14 14:12:41 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-14 14:12:41 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-14 14:12:41 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-14 14:12:41 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-14 14:12:41 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-14 14:12:41 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-14 14:12:41 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-14 14:12:41 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-14 14:12:41 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-14 14:12:41 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-14 14:12:41 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-14 14:12:41 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-14 14:12:41 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 14:12:41 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-14 14:12:41 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-14 14:12:41 -Mapped "{[/water/water/queryWater],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.queryWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 14:12:41 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 14:12:41 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 14:12:41 -Mapped "{[/water/waterCost/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.add()
2019-03-14 14:12:41 -Mapped "{[/water/waterCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long)
2019-03-14 14:12:41 -Mapped "{[/water/waterCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long[])
2019-03-14 14:12:41 -Mapped "{[/water/waterCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.update(com.bootdo.water.domain.WaterCostDO)
2019-03-14 14:12:41 -Mapped "{[/water/waterCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 14:12:41 -Mapped "{[/water/waterCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.save(com.bootdo.water.domain.WaterCostDO)
2019-03-14 14:12:41 -Mapped "{[/water/waterCost],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.WaterCost()
2019-03-14 14:12:41 -Mapped "{[/water/waterCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 14:12:41 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-14 14:12:41 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2019-03-14 14:12:41 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-14 14:12:41 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-14 14:12:41 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-14 14:12:41 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-14 14:12:41 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 14:12:41 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-14 14:12:41 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-14 14:12:41 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 14:12:41 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 14:12:41 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-14 14:12:41 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-14 14:12:41 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-14 14:12:41 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-14 14:12:41 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-14 14:12:41 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-14 14:12:41 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-14 14:12:41 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-14 14:12:42 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-14 14:12:42 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@60a2630a: startup date [Thu Mar 14 14:12:19 CST 2019]; root of context hierarchy
2019-03-14 14:12:42 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-14 14:12:42 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-14 14:12:42 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-14 14:12:43 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-14 14:12:43 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-14 14:12:45 -Registering beans for JMX exposure on startup
2019-03-14 14:12:45 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-14 14:12:45 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-14 14:12:45 -Starting beans in phase 2147483647
2019-03-14 14:12:45 -Context refreshed
2019-03-14 14:12:45 -Found 1 custom documentation plugin(s)
2019-03-14 14:12:45 -Scanning for api listing references
2019-03-14 14:12:46 -Generating unique operation named: removeUsingPOST_1
2019-03-14 14:12:46 -Generating unique operation named: addUsingGET_1
2019-03-14 14:12:46 -Generating unique operation named: editUsingGET_1
2019-03-14 14:12:46 -Generating unique operation named: listUsingGET_1
2019-03-14 14:12:46 -Generating unique operation named: removeUsingPOST_2
2019-03-14 14:12:46 -Generating unique operation named: removeUsingPOST_3
2019-03-14 14:12:46 -Generating unique operation named: saveUsingPOST_1
2019-03-14 14:12:46 -Generating unique operation named: updateUsingGET_1
2019-03-14 14:12:46 -Generating unique operation named: updateUsingHEAD_1
2019-03-14 14:12:46 -Generating unique operation named: updateUsingPOST_1
2019-03-14 14:12:46 -Generating unique operation named: updateUsingPUT_1
2019-03-14 14:12:46 -Generating unique operation named: updateUsingPATCH_1
2019-03-14 14:12:46 -Generating unique operation named: updateUsingDELETE_1
2019-03-14 14:12:46 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-14 14:12:46 -Generating unique operation named: updateUsingTRACE_1
2019-03-14 14:12:46 -Generating unique operation named: addUsingGET_2
2019-03-14 14:12:46 -Generating unique operation named: editUsingGET_2
2019-03-14 14:12:46 -Generating unique operation named: listUsingGET_2
2019-03-14 14:12:46 -Generating unique operation named: removeUsingPOST_4
2019-03-14 14:12:46 -Generating unique operation named: removeUsingPOST_5
2019-03-14 14:12:46 -Generating unique operation named: saveUsingPOST_2
2019-03-14 14:12:46 -Generating unique operation named: updateUsingGET_2
2019-03-14 14:12:46 -Generating unique operation named: updateUsingHEAD_2
2019-03-14 14:12:46 -Generating unique operation named: updateUsingPOST_2
2019-03-14 14:12:46 -Generating unique operation named: updateUsingPUT_2
2019-03-14 14:12:46 -Generating unique operation named: updateUsingPATCH_2
2019-03-14 14:12:46 -Generating unique operation named: updateUsingDELETE_2
2019-03-14 14:12:46 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-14 14:12:46 -Generating unique operation named: updateUsingTRACE_2
2019-03-14 14:12:46 -Generating unique operation named: addUsingGET_3
2019-03-14 14:12:46 -Generating unique operation named: editUsingGET_3
2019-03-14 14:12:46 -Generating unique operation named: listUsingGET_3
2019-03-14 14:12:47 -Generating unique operation named: removeUsingPOST_6
2019-03-14 14:12:47 -Generating unique operation named: removeUsingPOST_7
2019-03-14 14:12:47 -Generating unique operation named: saveUsingPOST_3
2019-03-14 14:12:47 -Generating unique operation named: updateUsingGET_3
2019-03-14 14:12:47 -Generating unique operation named: updateUsingHEAD_3
2019-03-14 14:12:47 -Generating unique operation named: updateUsingPOST_3
2019-03-14 14:12:47 -Generating unique operation named: updateUsingPUT_3
2019-03-14 14:12:47 -Generating unique operation named: updateUsingPATCH_3
2019-03-14 14:12:47 -Generating unique operation named: updateUsingDELETE_3
2019-03-14 14:12:47 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-14 14:12:47 -Generating unique operation named: updateUsingTRACE_3
2019-03-14 14:12:47 -Generating unique operation named: addUsingGET_4
2019-03-14 14:12:47 -Generating unique operation named: editUsingGET_4
2019-03-14 14:12:47 -Generating unique operation named: listUsingGET_4
2019-03-14 14:12:47 -Generating unique operation named: removeUsingPOST_8
2019-03-14 14:12:47 -Generating unique operation named: removeUsingPOST_9
2019-03-14 14:12:47 -Generating unique operation named: saveUsingPOST_4
2019-03-14 14:12:47 -Generating unique operation named: updateUsingGET_4
2019-03-14 14:12:47 -Generating unique operation named: updateUsingHEAD_4
2019-03-14 14:12:47 -Generating unique operation named: updateUsingPOST_4
2019-03-14 14:12:47 -Generating unique operation named: updateUsingPUT_4
2019-03-14 14:12:47 -Generating unique operation named: updateUsingPATCH_4
2019-03-14 14:12:47 -Generating unique operation named: updateUsingDELETE_4
2019-03-14 14:12:47 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-14 14:12:47 -Generating unique operation named: updateUsingTRACE_4
2019-03-14 14:12:47 -Generating unique operation named: ElecUsingGET_1
2019-03-14 14:12:47 -Generating unique operation named: addUsingGET_5
2019-03-14 14:12:47 -Generating unique operation named: editUsingGET_5
2019-03-14 14:12:47 -Generating unique operation named: listUsingGET_5
2019-03-14 14:12:47 -Generating unique operation named: removeUsingPOST_10
2019-03-14 14:12:47 -Generating unique operation named: removeUsingPOST_11
2019-03-14 14:12:47 -Generating unique operation named: saveUsingPOST_5
2019-03-14 14:12:47 -Generating unique operation named: updateUsingGET_5
2019-03-14 14:12:47 -Generating unique operation named: updateUsingHEAD_5
2019-03-14 14:12:47 -Generating unique operation named: updateUsingPOST_5
2019-03-14 14:12:47 -Generating unique operation named: updateUsingPUT_5
2019-03-14 14:12:47 -Generating unique operation named: updateUsingPATCH_5
2019-03-14 14:12:47 -Generating unique operation named: updateUsingDELETE_5
2019-03-14 14:12:47 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-14 14:12:47 -Generating unique operation named: updateUsingTRACE_5
2019-03-14 14:12:47 -Generating unique operation named: editUsingGET_6
2019-03-14 14:12:47 -Generating unique operation named: listUsingGET_6
2019-03-14 14:12:47 -Generating unique operation named: updateUsingPOST_6
2019-03-14 14:12:47 -Generating unique operation named: addUsingGET_6
2019-03-14 14:12:47 -Generating unique operation named: editUsingGET_7
2019-03-14 14:12:47 -Generating unique operation named: listUsingGET_7
2019-03-14 14:12:47 -Generating unique operation named: removeUsingPOST_12
2019-03-14 14:12:47 -Generating unique operation named: removeUsingPOST_13
2019-03-14 14:12:47 -Generating unique operation named: saveUsingPOST_6
2019-03-14 14:12:47 -Generating unique operation named: updateUsingGET_6
2019-03-14 14:12:47 -Generating unique operation named: updateUsingHEAD_6
2019-03-14 14:12:47 -Generating unique operation named: updateUsingPOST_7
2019-03-14 14:12:47 -Generating unique operation named: updateUsingPUT_6
2019-03-14 14:12:47 -Generating unique operation named: updateUsingPATCH_6
2019-03-14 14:12:47 -Generating unique operation named: updateUsingDELETE_6
2019-03-14 14:12:47 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-14 14:12:47 -Generating unique operation named: updateUsingTRACE_6
2019-03-14 14:12:47 -Generating unique operation named: addUsingGET_7
2019-03-14 14:12:47 -Generating unique operation named: editUsingGET_8
2019-03-14 14:12:47 -Generating unique operation named: listUsingGET_8
2019-03-14 14:12:47 -Generating unique operation named: removeUsingPOST_14
2019-03-14 14:12:47 -Generating unique operation named: removeUsingPOST_15
2019-03-14 14:12:47 -Generating unique operation named: saveUsingPOST_7
2019-03-14 14:12:47 -Generating unique operation named: updateUsingGET_7
2019-03-14 14:12:47 -Generating unique operation named: updateUsingHEAD_7
2019-03-14 14:12:47 -Generating unique operation named: updateUsingPOST_8
2019-03-14 14:12:47 -Generating unique operation named: updateUsingPUT_7
2019-03-14 14:12:47 -Generating unique operation named: updateUsingPATCH_7
2019-03-14 14:12:47 -Generating unique operation named: updateUsingDELETE_7
2019-03-14 14:12:47 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-14 14:12:47 -Generating unique operation named: updateUsingTRACE_7
2019-03-14 14:12:47 -Generating unique operation named: addUsingGET_8
2019-03-14 14:12:47 -Generating unique operation named: editUsingGET_9
2019-03-14 14:12:47 -Generating unique operation named: listUsingGET_9
2019-03-14 14:12:47 -Generating unique operation named: removeUsingPOST_16
2019-03-14 14:12:47 -Generating unique operation named: removeUsingPOST_17
2019-03-14 14:12:47 -Generating unique operation named: saveUsingPOST_8
2019-03-14 14:12:47 -Generating unique operation named: updateUsingGET_8
2019-03-14 14:12:47 -Generating unique operation named: updateUsingHEAD_8
2019-03-14 14:12:47 -Generating unique operation named: updateUsingPOST_9
2019-03-14 14:12:47 -Generating unique operation named: updateUsingPUT_8
2019-03-14 14:12:47 -Generating unique operation named: updateUsingPATCH_8
2019-03-14 14:12:47 -Generating unique operation named: updateUsingDELETE_8
2019-03-14 14:12:47 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-14 14:12:47 -Generating unique operation named: updateUsingTRACE_8
2019-03-14 14:12:47 -Generating unique operation named: addUsingGET_9
2019-03-14 14:12:47 -Generating unique operation named: editUsingGET_10
2019-03-14 14:12:47 -Generating unique operation named: infoUsingGET_1
2019-03-14 14:12:47 -Generating unique operation named: infoUsingHEAD_1
2019-03-14 14:12:47 -Generating unique operation named: infoUsingPOST_1
2019-03-14 14:12:47 -Generating unique operation named: infoUsingPUT_1
2019-03-14 14:12:47 -Generating unique operation named: infoUsingPATCH_1
2019-03-14 14:12:47 -Generating unique operation named: infoUsingDELETE_1
2019-03-14 14:12:47 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-14 14:12:47 -Generating unique operation named: infoUsingTRACE_1
2019-03-14 14:12:47 -Generating unique operation named: listUsingGET_10
2019-03-14 14:12:47 -Generating unique operation named: removeUsingPOST_18
2019-03-14 14:12:47 -Generating unique operation named: removeUsingPOST_19
2019-03-14 14:12:47 -Generating unique operation named: saveUsingPOST_9
2019-03-14 14:12:47 -Generating unique operation named: updateUsingPOST_10
2019-03-14 14:12:47 -Generating unique operation named: listUsingGET_11
2019-03-14 14:12:47 -Generating unique operation named: removeUsingPOST_20
2019-03-14 14:12:47 -Generating unique operation named: welcomeUsingGET_1
2019-03-14 14:12:47 -Generating unique operation named: addUsingGET_10
2019-03-14 14:12:47 -Generating unique operation named: editUsingGET_11
2019-03-14 14:12:48 -Generating unique operation named: listUsingGET_12
2019-03-14 14:12:48 -Generating unique operation named: removeUsingPOST_21
2019-03-14 14:12:48 -Generating unique operation named: saveUsingPOST_10
2019-03-14 14:12:48 -Generating unique operation named: treeUsingGET_1
2019-03-14 14:12:48 -Generating unique operation named: treeUsingGET_2
2019-03-14 14:12:48 -Generating unique operation named: updateUsingPOST_11
2019-03-14 14:12:48 -Generating unique operation named: addUsingGET_11
2019-03-14 14:12:48 -Generating unique operation named: editUsingGET_12
2019-03-14 14:12:48 -Generating unique operation named: listUsingGET_13
2019-03-14 14:12:48 -Generating unique operation named: removeUsingPOST_22
2019-03-14 14:12:48 -Generating unique operation named: removeUsingPOST_23
2019-03-14 14:12:48 -Generating unique operation named: saveUsingPOST_11
2019-03-14 14:12:48 -Generating unique operation named: updateUsingGET_9
2019-03-14 14:12:48 -Generating unique operation named: updateUsingHEAD_9
2019-03-14 14:12:48 -Generating unique operation named: updateUsingPOST_12
2019-03-14 14:12:48 -Generating unique operation named: updateUsingPUT_9
2019-03-14 14:12:48 -Generating unique operation named: updateUsingPATCH_9
2019-03-14 14:12:48 -Generating unique operation named: updateUsingDELETE_9
2019-03-14 14:12:48 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-14 14:12:48 -Generating unique operation named: updateUsingTRACE_9
2019-03-14 14:12:48 -Generating unique operation named: addUsingGET_12
2019-03-14 14:12:48 -Generating unique operation named: editUsingGET_13
2019-03-14 14:12:48 -Generating unique operation named: listUsingGET_14
2019-03-14 14:12:48 -Generating unique operation named: removeUsingPOST_24
2019-03-14 14:12:48 -Generating unique operation named: removeUsingPOST_25
2019-03-14 14:12:48 -Generating unique operation named: saveUsingPOST_12
2019-03-14 14:12:48 -Generating unique operation named: updateUsingGET_10
2019-03-14 14:12:48 -Generating unique operation named: updateUsingHEAD_10
2019-03-14 14:12:48 -Generating unique operation named: updateUsingPOST_13
2019-03-14 14:12:48 -Generating unique operation named: updateUsingPUT_10
2019-03-14 14:12:48 -Generating unique operation named: updateUsingPATCH_10
2019-03-14 14:12:48 -Generating unique operation named: updateUsingDELETE_10
2019-03-14 14:12:48 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-14 14:12:48 -Generating unique operation named: updateUsingTRACE_10
2019-03-14 14:12:48 -Generating unique operation named: addUsingGET_13
2019-03-14 14:12:48 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-14 14:12:48 -Generating unique operation named: editUsingGET_14
2019-03-14 14:12:48 -Generating unique operation named: listUsingGET_15
2019-03-14 14:12:48 -Generating unique operation named: saveUsingPOST_13
2019-03-14 14:12:48 -Generating unique operation named: saveUsingPOST_14
2019-03-14 14:12:48 -Generating unique operation named: updateUsingPOST_14
2019-03-14 14:12:48 -Generating unique operation named: listUsingGET_16
2019-03-14 14:12:48 -Generating unique operation named: listUsingHEAD_1
2019-03-14 14:12:48 -Generating unique operation named: listUsingPOST_1
2019-03-14 14:12:48 -Generating unique operation named: listUsingPUT_1
2019-03-14 14:12:48 -Generating unique operation named: listUsingPATCH_1
2019-03-14 14:12:48 -Generating unique operation named: listUsingDELETE_1
2019-03-14 14:12:48 -Generating unique operation named: listUsingOPTIONS_1
2019-03-14 14:12:48 -Generating unique operation named: listUsingTRACE_1
2019-03-14 14:12:48 -Generating unique operation named: addUsingGET_14
2019-03-14 14:12:48 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-14 14:12:48 -Generating unique operation named: editUsingGET_15
2019-03-14 14:12:48 -Generating unique operation named: listUsingGET_17
2019-03-14 14:12:48 -Generating unique operation named: removeUsingPOST_26
2019-03-14 14:12:48 -Generating unique operation named: saveUsingPOST_15
2019-03-14 14:12:48 -Generating unique operation named: treeUsingGET_3
2019-03-14 14:12:48 -Generating unique operation named: treeViewUsingGET_1
2019-03-14 14:12:48 -Generating unique operation named: updateUsingPOST_15
2019-03-14 14:12:48 -Generating unique operation named: addUsingGET_15
2019-03-14 14:12:48 -Generating unique operation named: editUsingGET_16
2019-03-14 14:12:48 -Generating unique operation named: listUsingGET_18
2019-03-14 14:12:48 -Generating unique operation named: removeUsingPOST_27
2019-03-14 14:12:48 -Generating unique operation named: removeUsingPOST_28
2019-03-14 14:12:48 -Generating unique operation named: saveUsingPOST_16
2019-03-14 14:12:48 -Generating unique operation named: updateUsingGET_11
2019-03-14 14:12:48 -Generating unique operation named: updateUsingHEAD_11
2019-03-14 14:12:48 -Generating unique operation named: updateUsingPOST_16
2019-03-14 14:12:48 -Generating unique operation named: updateUsingPUT_11
2019-03-14 14:12:48 -Generating unique operation named: updateUsingPATCH_11
2019-03-14 14:12:48 -Generating unique operation named: updateUsingDELETE_11
2019-03-14 14:12:48 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-14 14:12:48 -Generating unique operation named: updateUsingTRACE_11
2019-03-14 14:12:48 -Generating unique operation named: addUsingGET_16
2019-03-14 14:12:48 -Generating unique operation named: editUsingGET_17
2019-03-14 14:12:48 -Generating unique operation named: listUsingGET_19
2019-03-14 14:12:48 -Generating unique operation named: removeUsingPOST_29
2019-03-14 14:12:48 -Generating unique operation named: removeUsingPOST_30
2019-03-14 14:12:48 -Generating unique operation named: saveUsingPOST_17
2019-03-14 14:12:48 -Generating unique operation named: updateUsingGET_12
2019-03-14 14:12:48 -Generating unique operation named: updateUsingHEAD_12
2019-03-14 14:12:48 -Generating unique operation named: updateUsingPOST_17
2019-03-14 14:12:48 -Generating unique operation named: updateUsingPUT_12
2019-03-14 14:12:48 -Generating unique operation named: updateUsingPATCH_12
2019-03-14 14:12:48 -Generating unique operation named: updateUsingDELETE_12
2019-03-14 14:12:48 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-14 14:12:48 -Generating unique operation named: updateUsingTRACE_12
2019-03-14 14:12:48 -Generating unique operation named: addUsingGET_17
2019-03-14 14:12:48 -Generating unique operation named: editUsingGET_18
2019-03-14 14:12:48 -Generating unique operation named: listUsingGET_20
2019-03-14 14:12:48 -Generating unique operation named: removeUsingPOST_31
2019-03-14 14:12:48 -Generating unique operation named: removeUsingPOST_32
2019-03-14 14:12:48 -Generating unique operation named: saveUsingPOST_18
2019-03-14 14:12:48 -Generating unique operation named: updateUsingGET_13
2019-03-14 14:12:48 -Generating unique operation named: updateUsingHEAD_13
2019-03-14 14:12:48 -Generating unique operation named: updateUsingPOST_18
2019-03-14 14:12:48 -Generating unique operation named: updateUsingPUT_13
2019-03-14 14:12:48 -Generating unique operation named: updateUsingPATCH_13
2019-03-14 14:12:49 -Generating unique operation named: updateUsingDELETE_13
2019-03-14 14:12:49 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-14 14:12:49 -Generating unique operation named: updateUsingTRACE_13
2019-03-14 14:12:49 -Generating unique operation named: addUsingGET_18
2019-03-14 14:12:49 -Generating unique operation named: editUsingGET_19
2019-03-14 14:12:49 -Generating unique operation named: listUsingGET_21
2019-03-14 14:12:49 -Generating unique operation named: removeUsingPOST_33
2019-03-14 14:12:49 -Generating unique operation named: removeUsingPOST_34
2019-03-14 14:12:49 -Generating unique operation named: saveUsingPOST_19
2019-03-14 14:12:49 -Generating unique operation named: updateUsingGET_14
2019-03-14 14:12:49 -Generating unique operation named: updateUsingHEAD_14
2019-03-14 14:12:49 -Generating unique operation named: updateUsingPOST_19
2019-03-14 14:12:49 -Generating unique operation named: updateUsingPUT_14
2019-03-14 14:12:49 -Generating unique operation named: updateUsingPATCH_14
2019-03-14 14:12:49 -Generating unique operation named: updateUsingDELETE_14
2019-03-14 14:12:49 -Generating unique operation named: updateUsingOPTIONS_14
2019-03-14 14:12:49 -Generating unique operation named: updateUsingTRACE_14
2019-03-14 14:12:49 -Starting Quartz Scheduler now
2019-03-14 14:12:49 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-14 14:12:49 -Starting...
2019-03-14 14:12:49 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-14 14:12:49 -Started.
2019-03-14 14:12:49 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-14 14:12:49 -Using a shared selector for servlet write/read
2019-03-14 14:12:49 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-14 14:12:49 -Started BootdoApplication in 31.849 seconds (JVM running for 34.134)
2019-03-14 14:12:49 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-14 14:12:50 -==> Parameters: 
2019-03-14 14:12:50 -<==      Total: 1
2019-03-14 14:12:54 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-14 14:12:54 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-14 14:12:54 -FrameworkServlet 'dispatcherServlet': initialization completed in 76 ms
2019-03-14 14:12:55 -Enabling session validation scheduler...
2019-03-14 14:12:55 -请求地址 : http://localhost:8081/
2019-03-14 14:12:55 -HTTP METHOD : GET
2019-03-14 14:12:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-03-14 14:12:55 -参数 : [{}]
2019-03-14 14:12:55 -耗时 : 3
2019-03-14 14:12:55 -返回值 : redirect:/index
2019-03-14 14:12:55 -请求地址 : http://localhost:8081/login;JSESSIONID=3e034cd5-7fda-453a-adbc-241f2848c843
2019-03-14 14:12:55 -HTTP METHOD : GET
2019-03-14 14:12:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-14 14:12:55 -参数 : [{}]
2019-03-14 14:12:55 -耗时 : 1
2019-03-14 14:12:55 -返回值 : login
2019-03-14 14:12:57 -请求地址 : http://localhost:8081/getVerify
2019-03-14 14:12:57 -HTTP METHOD : GET
2019-03-14 14:12:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-14 14:12:57 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4f116592, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1328a805]
2019-03-14 14:13:06 -9891
2019-03-14 14:13:06 -耗时 : 9443
2019-03-14 14:13:06 -返回值 : null
2019-03-14 14:13:13 -请求地址 : http://localhost:8081/login
2019-03-14 14:13:13 -HTTP METHOD : POST
2019-03-14 14:13:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-14 14:13:13 -参数 : [admin, 111111, 9891, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1dc851bf]
2019-03-14 14:13:13 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-14 14:13:13 -==> Parameters: admin(String)
2019-03-14 14:13:13 -<==      Total: 1
2019-03-14 14:13:13 -耗时 : 310
2019-03-14 14:13:13 -返回值 : {msg=操作成功, code=0}
2019-03-14 14:13:14 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-14 14:13:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 14:13:14 -==> Parameters: 1(Long), admin(String), 登录(String), 310(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-14 14:13:14.051(Timestamp)
2019-03-14 14:13:14 -<==    Updates: 1
2019-03-14 14:13:14 -请求地址 : http://localhost:8081/index
2019-03-14 14:13:14 -HTTP METHOD : GET
2019-03-14 14:13:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 14:13:14 -参数 : [{}]
2019-03-14 14:13:14 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 14:13:14 -==> Parameters: 1(Long)
2019-03-14 14:13:14 -<==      Total: 45
2019-03-14 14:13:14 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 14:13:14 -==> Parameters: 138(Long)
2019-03-14 14:13:14 -<==      Total: 1
2019-03-14 14:13:14 -耗时 : 292
2019-03-14 14:13:14 -返回值 : index_v1
2019-03-14 14:13:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 14:13:14 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 292(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 14:13:14.781(Timestamp)
2019-03-14 14:13:14 -<==    Updates: 1
2019-03-14 14:13:15 -请求地址 : http://localhost:8081/main
2019-03-14 14:13:15 -HTTP METHOD : GET
2019-03-14 14:13:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 14:13:15 -参数 : []
2019-03-14 14:13:15 -耗时 : 1
2019-03-14 14:13:15 -返回值 : main
2019-03-14 14:13:15 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 14:13:15 -HTTP METHOD : GET
2019-03-14 14:13:15 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 14:13:15 -参数 : []
2019-03-14 14:13:15 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 14:13:15 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 14:13:15 -<==      Total: 0
2019-03-14 14:13:15 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 14:13:15 -==> Parameters: 1(Long), 0(String)
2019-03-14 14:13:15 -<==      Total: 1
2019-03-14 14:13:15 -耗时 : 60
2019-03-14 14:13:15 -返回值 : com.bootdo.common.utils.PageUtils@631e4400
2019-03-14 14:13:15 -请求地址 : http://localhost:8081/main
2019-03-14 14:13:15 -HTTP METHOD : GET
2019-03-14 14:13:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 14:13:15 -参数 : []
2019-03-14 14:13:15 -耗时 : 1
2019-03-14 14:13:15 -返回值 : main
2019-03-14 14:13:41 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 5]
2019-03-14 14:17:49 -请求地址 : http://localhost:8081/index
2019-03-14 14:17:49 -HTTP METHOD : GET
2019-03-14 14:17:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 14:17:49 -参数 : [{}]
2019-03-14 14:17:49 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 14:17:49 -==> Parameters: 1(Long)
2019-03-14 14:17:49 -<==      Total: 45
2019-03-14 14:17:49 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 14:17:49 -==> Parameters: 138(Long)
2019-03-14 14:17:49 -<==      Total: 1
2019-03-14 14:17:49 -耗时 : 40
2019-03-14 14:17:49 -返回值 : index_v1
2019-03-14 14:17:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 14:17:49 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 40(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 14:17:49.297(Timestamp)
2019-03-14 14:17:49 -<==    Updates: 1
2019-03-14 14:17:49 -请求地址 : http://localhost:8081/main
2019-03-14 14:17:49 -HTTP METHOD : GET
2019-03-14 14:17:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 14:17:49 -参数 : []
2019-03-14 14:17:49 -耗时 : 0
2019-03-14 14:17:49 -返回值 : main
2019-03-14 14:17:49 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 14:17:49 -HTTP METHOD : GET
2019-03-14 14:17:49 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 14:17:49 -参数 : []
2019-03-14 14:17:49 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 14:17:49 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 14:17:49 -<==      Total: 0
2019-03-14 14:17:49 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 14:17:49 -==> Parameters: 1(Long), 0(String)
2019-03-14 14:17:49 -<==      Total: 1
2019-03-14 14:17:49 -耗时 : 19
2019-03-14 14:17:49 -返回值 : com.bootdo.common.utils.PageUtils@66674003
2019-03-14 14:17:49 -请求地址 : http://localhost:8081/main
2019-03-14 14:17:49 -HTTP METHOD : GET
2019-03-14 14:17:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 14:17:49 -参数 : []
2019-03-14 14:17:49 -耗时 : 0
2019-03-14 14:17:49 -返回值 : main
2019-03-14 14:18:18 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-14 14:19:28 -请求地址 : http://localhost:8081/index
2019-03-14 14:19:28 -HTTP METHOD : GET
2019-03-14 14:19:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 14:19:28 -参数 : [{}]
2019-03-14 14:19:28 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 14:19:28 -==> Parameters: 1(Long)
2019-03-14 14:19:28 -<==      Total: 45
2019-03-14 14:19:28 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 14:19:28 -==> Parameters: 138(Long)
2019-03-14 14:19:28 -<==      Total: 1
2019-03-14 14:19:28 -耗时 : 33
2019-03-14 14:19:28 -返回值 : index_v1
2019-03-14 14:19:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 14:19:28 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 33(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 14:19:28.547(Timestamp)
2019-03-14 14:19:28 -<==    Updates: 1
2019-03-14 14:19:28 -请求地址 : http://localhost:8081/main
2019-03-14 14:19:28 -HTTP METHOD : GET
2019-03-14 14:19:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 14:19:28 -参数 : []
2019-03-14 14:19:28 -耗时 : 0
2019-03-14 14:19:28 -返回值 : main
2019-03-14 14:19:29 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 14:19:29 -HTTP METHOD : GET
2019-03-14 14:19:29 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 14:19:29 -参数 : []
2019-03-14 14:19:29 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 14:19:29 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 14:19:29 -<==      Total: 0
2019-03-14 14:19:29 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 14:19:29 -==> Parameters: 1(Long), 0(String)
2019-03-14 14:19:29 -<==      Total: 1
2019-03-14 14:19:29 -耗时 : 9
2019-03-14 14:19:29 -返回值 : com.bootdo.common.utils.PageUtils@26f5fffa
2019-03-14 14:19:29 -请求地址 : http://localhost:8081/main
2019-03-14 14:19:29 -HTTP METHOD : GET
2019-03-14 14:19:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 14:19:29 -参数 : []
2019-03-14 14:19:29 -耗时 : 1
2019-03-14 14:19:29 -返回值 : main
2019-03-14 14:20:52 -请求地址 : http://localhost:8081/index
2019-03-14 14:20:52 -HTTP METHOD : GET
2019-03-14 14:20:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 14:20:52 -参数 : [{}]
2019-03-14 14:20:52 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 14:20:52 -==> Parameters: 1(Long)
2019-03-14 14:20:52 -<==      Total: 45
2019-03-14 14:20:52 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 14:20:52 -==> Parameters: 138(Long)
2019-03-14 14:20:52 -<==      Total: 1
2019-03-14 14:20:52 -耗时 : 31
2019-03-14 14:20:52 -返回值 : index_v1
2019-03-14 14:20:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 14:20:52 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 31(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 14:20:52.669(Timestamp)
2019-03-14 14:20:52 -请求地址 : http://localhost:8081/main
2019-03-14 14:20:52 -HTTP METHOD : GET
2019-03-14 14:20:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 14:20:52 -参数 : []
2019-03-14 14:20:52 -耗时 : 0
2019-03-14 14:20:52 -返回值 : main
2019-03-14 14:20:52 -<==    Updates: 1
2019-03-14 14:20:53 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 14:20:53 -HTTP METHOD : GET
2019-03-14 14:20:53 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 14:20:53 -参数 : []
2019-03-14 14:20:53 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 14:20:53 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 14:20:53 -<==      Total: 0
2019-03-14 14:20:53 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 14:20:53 -==> Parameters: 1(Long), 0(String)
2019-03-14 14:20:53 -<==      Total: 1
2019-03-14 14:20:53 -耗时 : 9
2019-03-14 14:20:53 -返回值 : com.bootdo.common.utils.PageUtils@4b0cad40
2019-03-14 14:20:53 -请求地址 : http://localhost:8081/main
2019-03-14 14:20:53 -HTTP METHOD : GET
2019-03-14 14:20:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 14:20:53 -参数 : []
2019-03-14 14:20:53 -耗时 : 3
2019-03-14 14:20:53 -返回值 : main
2019-03-14 14:22:11 -请求地址 : http://localhost:8081/index
2019-03-14 14:22:11 -HTTP METHOD : GET
2019-03-14 14:22:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 14:22:11 -参数 : [{}]
2019-03-14 14:22:11 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 14:22:11 -==> Parameters: 1(Long)
2019-03-14 14:22:11 -<==      Total: 45
2019-03-14 14:22:11 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 14:22:11 -==> Parameters: 138(Long)
2019-03-14 14:22:11 -<==      Total: 1
2019-03-14 14:22:11 -耗时 : 32
2019-03-14 14:22:11 -返回值 : index_v1
2019-03-14 14:22:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 14:22:11 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 32(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 14:22:11.131(Timestamp)
2019-03-14 14:22:11 -请求地址 : http://localhost:8081/main
2019-03-14 14:22:11 -HTTP METHOD : GET
2019-03-14 14:22:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 14:22:11 -参数 : []
2019-03-14 14:22:11 -耗时 : 0
2019-03-14 14:22:11 -返回值 : main
2019-03-14 14:22:11 -<==    Updates: 1
2019-03-14 14:22:11 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 14:22:11 -HTTP METHOD : GET
2019-03-14 14:22:11 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 14:22:11 -参数 : []
2019-03-14 14:22:11 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 14:22:11 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 14:22:11 -<==      Total: 0
2019-03-14 14:22:11 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 14:22:11 -==> Parameters: 1(Long), 0(String)
2019-03-14 14:22:11 -<==      Total: 1
2019-03-14 14:22:11 -耗时 : 10
2019-03-14 14:22:11 -返回值 : com.bootdo.common.utils.PageUtils@437f1837
2019-03-14 14:22:11 -请求地址 : http://localhost:8081/main
2019-03-14 14:22:11 -HTTP METHOD : GET
2019-03-14 14:22:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 14:22:11 -参数 : []
2019-03-14 14:22:11 -耗时 : 1
2019-03-14 14:22:11 -返回值 : main
2019-03-14 14:26:05 -请求地址 : http://localhost:8081/index
2019-03-14 14:26:05 -HTTP METHOD : GET
2019-03-14 14:26:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 14:26:05 -参数 : [{}]
2019-03-14 14:26:05 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 14:26:05 -==> Parameters: 1(Long)
2019-03-14 14:26:05 -<==      Total: 45
2019-03-14 14:26:05 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 14:26:05 -==> Parameters: 138(Long)
2019-03-14 14:26:05 -<==      Total: 1
2019-03-14 14:26:05 -耗时 : 28
2019-03-14 14:26:05 -返回值 : index_v1
2019-03-14 14:26:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 14:26:05 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 28(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 14:26:05.451(Timestamp)
2019-03-14 14:26:05 -<==    Updates: 1
2019-03-14 14:26:05 -请求地址 : http://localhost:8081/main
2019-03-14 14:26:05 -HTTP METHOD : GET
2019-03-14 14:26:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 14:26:05 -参数 : []
2019-03-14 14:26:05 -耗时 : 1
2019-03-14 14:26:05 -返回值 : main
2019-03-14 14:26:05 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 14:26:05 -HTTP METHOD : GET
2019-03-14 14:26:05 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 14:26:05 -参数 : []
2019-03-14 14:26:05 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 14:26:05 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 14:26:05 -<==      Total: 0
2019-03-14 14:26:05 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 14:26:05 -==> Parameters: 1(Long), 0(String)
2019-03-14 14:26:05 -<==      Total: 1
2019-03-14 14:26:05 -耗时 : 7
2019-03-14 14:26:05 -返回值 : com.bootdo.common.utils.PageUtils@37e448bb
2019-03-14 14:26:05 -请求地址 : http://localhost:8081/main
2019-03-14 14:26:05 -HTTP METHOD : GET
2019-03-14 14:26:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 14:26:05 -参数 : []
2019-03-14 14:26:05 -耗时 : 1
2019-03-14 14:26:05 -返回值 : main
2019-03-14 14:27:04 -请求地址 : http://localhost:8081/index
2019-03-14 14:27:04 -HTTP METHOD : GET
2019-03-14 14:27:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 14:27:04 -参数 : [{}]
2019-03-14 14:27:04 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 14:27:04 -==> Parameters: 1(Long)
2019-03-14 14:27:04 -<==      Total: 45
2019-03-14 14:27:04 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 14:27:04 -==> Parameters: 138(Long)
2019-03-14 14:27:04 -<==      Total: 1
2019-03-14 14:27:04 -耗时 : 22
2019-03-14 14:27:04 -返回值 : index_v1
2019-03-14 14:27:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 14:27:04 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 22(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 14:27:04.065(Timestamp)
2019-03-14 14:27:04 -请求地址 : http://localhost:8081/main
2019-03-14 14:27:04 -HTTP METHOD : GET
2019-03-14 14:27:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 14:27:04 -参数 : []
2019-03-14 14:27:04 -耗时 : 3
2019-03-14 14:27:04 -返回值 : main
2019-03-14 14:27:04 -<==    Updates: 1
2019-03-14 14:27:04 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 14:27:04 -HTTP METHOD : GET
2019-03-14 14:27:04 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 14:27:04 -参数 : []
2019-03-14 14:27:04 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 14:27:04 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 14:27:04 -<==      Total: 0
2019-03-14 14:27:04 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 14:27:04 -==> Parameters: 1(Long), 0(String)
2019-03-14 14:27:04 -<==      Total: 1
2019-03-14 14:27:04 -耗时 : 15
2019-03-14 14:27:04 -返回值 : com.bootdo.common.utils.PageUtils@6d74dd6
2019-03-14 14:27:04 -请求地址 : http://localhost:8081/main
2019-03-14 14:27:04 -HTTP METHOD : GET
2019-03-14 14:27:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 14:27:04 -参数 : []
2019-03-14 14:27:04 -耗时 : 2
2019-03-14 14:27:04 -返回值 : main
2019-03-14 14:27:46 -请求地址 : http://localhost:8081/index
2019-03-14 14:27:46 -HTTP METHOD : GET
2019-03-14 14:27:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 14:27:46 -参数 : [{}]
2019-03-14 14:27:46 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 14:27:46 -==> Parameters: 1(Long)
2019-03-14 14:27:46 -<==      Total: 45
2019-03-14 14:27:46 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 14:27:46 -==> Parameters: 138(Long)
2019-03-14 14:27:46 -<==      Total: 1
2019-03-14 14:27:46 -耗时 : 27
2019-03-14 14:27:46 -返回值 : index_v1
2019-03-14 14:27:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 14:27:46 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 14:27:46.721(Timestamp)
2019-03-14 14:27:46 -请求地址 : http://localhost:8081/main
2019-03-14 14:27:46 -HTTP METHOD : GET
2019-03-14 14:27:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 14:27:46 -参数 : []
2019-03-14 14:27:46 -耗时 : 0
2019-03-14 14:27:46 -返回值 : main
2019-03-14 14:27:47 -<==    Updates: 1
2019-03-14 14:27:47 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 14:27:47 -HTTP METHOD : GET
2019-03-14 14:27:47 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 14:27:47 -参数 : []
2019-03-14 14:27:47 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 14:27:47 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 14:27:47 -<==      Total: 0
2019-03-14 14:27:47 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 14:27:47 -==> Parameters: 1(Long), 0(String)
2019-03-14 14:27:47 -<==      Total: 1
2019-03-14 14:27:47 -耗时 : 7
2019-03-14 14:27:47 -返回值 : com.bootdo.common.utils.PageUtils@1b46220a
2019-03-14 14:27:47 -请求地址 : http://localhost:8081/main
2019-03-14 14:27:47 -HTTP METHOD : GET
2019-03-14 14:27:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 14:27:47 -参数 : []
2019-03-14 14:27:47 -耗时 : 1
2019-03-14 14:27:47 -返回值 : main
2019-03-14 14:28:25 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-14 14:28:25 -==> Parameters: 1(Long)
2019-03-14 14:28:25 -<==      Total: 86
2019-03-14 14:28:25 -请求地址 : http://localhost:8081/elec/elecInto
2019-03-14 14:28:25 -HTTP METHOD : GET
2019-03-14 14:28:25 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-03-14 14:28:25 -参数 : []
2019-03-14 14:28:25 -耗时 : 1
2019-03-14 14:28:25 -返回值 : elec/elecInto/elecInto
2019-03-14 14:29:28 -请求地址 : http://localhost:8081/index
2019-03-14 14:29:28 -HTTP METHOD : GET
2019-03-14 14:29:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 14:29:28 -参数 : [{}]
2019-03-14 14:29:28 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 14:29:28 -==> Parameters: 1(Long)
2019-03-14 14:29:28 -<==      Total: 45
2019-03-14 14:29:28 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 14:29:28 -==> Parameters: 138(Long)
2019-03-14 14:29:28 -<==      Total: 1
2019-03-14 14:29:28 -耗时 : 22
2019-03-14 14:29:28 -返回值 : index_v1
2019-03-14 14:29:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 14:29:28 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 22(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 14:29:28.978(Timestamp)
2019-03-14 14:29:29 -请求地址 : http://localhost:8081/main
2019-03-14 14:29:29 -HTTP METHOD : GET
2019-03-14 14:29:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 14:29:29 -参数 : []
2019-03-14 14:29:29 -耗时 : 1
2019-03-14 14:29:29 -返回值 : main
2019-03-14 14:29:29 -<==    Updates: 1
2019-03-14 14:29:29 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 14:29:29 -HTTP METHOD : GET
2019-03-14 14:29:29 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 14:29:29 -参数 : []
2019-03-14 14:29:29 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 14:29:29 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 14:29:29 -<==      Total: 0
2019-03-14 14:29:29 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 14:29:29 -==> Parameters: 1(Long), 0(String)
2019-03-14 14:29:29 -<==      Total: 1
2019-03-14 14:29:29 -耗时 : 7
2019-03-14 14:29:29 -返回值 : com.bootdo.common.utils.PageUtils@228f5503
2019-03-14 14:29:29 -请求地址 : http://localhost:8081/main
2019-03-14 14:29:29 -HTTP METHOD : GET
2019-03-14 14:29:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 14:29:29 -参数 : []
2019-03-14 14:29:29 -耗时 : 1
2019-03-14 14:29:29 -返回值 : main
2019-03-14 14:32:04 -请求地址 : http://localhost:8081/index
2019-03-14 14:32:04 -HTTP METHOD : GET
2019-03-14 14:32:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 14:32:04 -参数 : [{}]
2019-03-14 14:32:04 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 14:32:04 -==> Parameters: 1(Long)
2019-03-14 14:32:04 -<==      Total: 45
2019-03-14 14:32:04 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 14:32:04 -==> Parameters: 138(Long)
2019-03-14 14:32:04 -<==      Total: 1
2019-03-14 14:32:04 -耗时 : 21
2019-03-14 14:32:04 -返回值 : index_v1
2019-03-14 14:32:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 14:32:04 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 14:32:04.731(Timestamp)
2019-03-14 14:32:05 -<==    Updates: 1
2019-03-14 14:32:05 -请求地址 : http://localhost:8081/main
2019-03-14 14:32:05 -HTTP METHOD : GET
2019-03-14 14:32:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 14:32:05 -参数 : []
2019-03-14 14:32:05 -耗时 : 0
2019-03-14 14:32:05 -返回值 : main
2019-03-14 14:32:05 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 14:32:05 -HTTP METHOD : GET
2019-03-14 14:32:05 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 14:32:05 -参数 : []
2019-03-14 14:32:05 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 14:32:05 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 14:32:05 -<==      Total: 0
2019-03-14 14:32:05 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 14:32:05 -==> Parameters: 1(Long), 0(String)
2019-03-14 14:32:05 -<==      Total: 1
2019-03-14 14:32:05 -耗时 : 8
2019-03-14 14:32:05 -返回值 : com.bootdo.common.utils.PageUtils@421fb426
2019-03-14 14:32:05 -请求地址 : http://localhost:8081/main
2019-03-14 14:32:05 -HTTP METHOD : GET
2019-03-14 14:32:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 14:32:05 -参数 : []
2019-03-14 14:32:05 -耗时 : 0
2019-03-14 14:32:05 -返回值 : main
2019-03-14 14:35:31 -请求地址 : http://localhost:8081/index
2019-03-14 14:35:31 -HTTP METHOD : GET
2019-03-14 14:35:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 14:35:31 -参数 : [{}]
2019-03-14 14:35:31 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 14:35:31 -==> Parameters: 1(Long)
2019-03-14 14:35:31 -<==      Total: 45
2019-03-14 14:35:31 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 14:35:31 -==> Parameters: 138(Long)
2019-03-14 14:35:31 -<==      Total: 1
2019-03-14 14:35:31 -耗时 : 23
2019-03-14 14:35:31 -返回值 : index_v1
2019-03-14 14:35:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 14:35:31 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 14:35:31.08(Timestamp)
2019-03-14 14:35:31 -请求地址 : http://localhost:8081/main
2019-03-14 14:35:31 -HTTP METHOD : GET
2019-03-14 14:35:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 14:35:31 -参数 : []
2019-03-14 14:35:31 -耗时 : 0
2019-03-14 14:35:31 -返回值 : main
2019-03-14 14:35:31 -<==    Updates: 1
2019-03-14 14:35:31 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 14:35:31 -HTTP METHOD : GET
2019-03-14 14:35:31 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 14:35:31 -参数 : []
2019-03-14 14:35:31 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 14:35:31 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 14:35:31 -<==      Total: 0
2019-03-14 14:35:31 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 14:35:31 -==> Parameters: 1(Long), 0(String)
2019-03-14 14:35:31 -<==      Total: 1
2019-03-14 14:35:31 -耗时 : 9
2019-03-14 14:35:31 -返回值 : com.bootdo.common.utils.PageUtils@58dec4b1
2019-03-14 14:35:31 -请求地址 : http://localhost:8081/main
2019-03-14 14:35:31 -HTTP METHOD : GET
2019-03-14 14:35:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 14:35:31 -参数 : []
2019-03-14 14:35:31 -耗时 : 0
2019-03-14 14:35:31 -返回值 : main
2019-03-14 14:36:25 -请求地址 : http://localhost:8081/index
2019-03-14 14:36:25 -HTTP METHOD : GET
2019-03-14 14:36:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 14:36:25 -参数 : [{}]
2019-03-14 14:36:25 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 14:36:25 -==> Parameters: 1(Long)
2019-03-14 14:36:25 -<==      Total: 45
2019-03-14 14:36:25 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 14:36:25 -==> Parameters: 138(Long)
2019-03-14 14:36:25 -<==      Total: 1
2019-03-14 14:36:25 -耗时 : 29
2019-03-14 14:36:25 -返回值 : index_v1
2019-03-14 14:36:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 14:36:25 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 30(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 14:36:25.641(Timestamp)
2019-03-14 14:36:25 -请求地址 : http://localhost:8081/main
2019-03-14 14:36:25 -HTTP METHOD : GET
2019-03-14 14:36:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 14:36:25 -参数 : []
2019-03-14 14:36:25 -耗时 : 1
2019-03-14 14:36:25 -返回值 : main
2019-03-14 14:36:25 -<==    Updates: 1
2019-03-14 14:36:26 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 14:36:26 -HTTP METHOD : GET
2019-03-14 14:36:26 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 14:36:26 -参数 : []
2019-03-14 14:36:26 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 14:36:26 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 14:36:26 -<==      Total: 0
2019-03-14 14:36:26 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 14:36:26 -==> Parameters: 1(Long), 0(String)
2019-03-14 14:36:26 -<==      Total: 1
2019-03-14 14:36:26 -耗时 : 7
2019-03-14 14:36:26 -返回值 : com.bootdo.common.utils.PageUtils@621edb89
2019-03-14 14:36:26 -请求地址 : http://localhost:8081/main
2019-03-14 14:36:26 -HTTP METHOD : GET
2019-03-14 14:36:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 14:36:26 -参数 : []
2019-03-14 14:36:26 -耗时 : 0
2019-03-14 14:36:26 -返回值 : main
2019-03-14 14:37:11 -请求地址 : http://localhost:8081/index
2019-03-14 14:37:11 -HTTP METHOD : GET
2019-03-14 14:37:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 14:37:11 -参数 : [{}]
2019-03-14 14:37:11 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 14:37:11 -==> Parameters: 1(Long)
2019-03-14 14:37:11 -<==      Total: 45
2019-03-14 14:37:11 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 14:37:11 -==> Parameters: 138(Long)
2019-03-14 14:37:11 -<==      Total: 1
2019-03-14 14:37:11 -耗时 : 23
2019-03-14 14:37:11 -返回值 : index_v1
2019-03-14 14:37:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 14:37:11 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 14:37:11.615(Timestamp)
2019-03-14 14:37:11 -请求地址 : http://localhost:8081/main
2019-03-14 14:37:11 -HTTP METHOD : GET
2019-03-14 14:37:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 14:37:11 -参数 : []
2019-03-14 14:37:11 -耗时 : 0
2019-03-14 14:37:11 -返回值 : main
2019-03-14 14:37:11 -<==    Updates: 1
2019-03-14 14:37:12 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 14:37:12 -HTTP METHOD : GET
2019-03-14 14:37:12 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 14:37:12 -参数 : []
2019-03-14 14:37:12 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 14:37:12 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 14:37:12 -<==      Total: 0
2019-03-14 14:37:12 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 14:37:12 -==> Parameters: 1(Long), 0(String)
2019-03-14 14:37:12 -<==      Total: 1
2019-03-14 14:37:12 -耗时 : 8
2019-03-14 14:37:12 -返回值 : com.bootdo.common.utils.PageUtils@7d4a44f5
2019-03-14 14:37:12 -请求地址 : http://localhost:8081/main
2019-03-14 14:37:12 -HTTP METHOD : GET
2019-03-14 14:37:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 14:37:12 -参数 : []
2019-03-14 14:37:12 -耗时 : 0
2019-03-14 14:37:12 -返回值 : main
2019-03-14 14:41:19 -请求地址 : http://localhost:8081/index
2019-03-14 14:41:19 -HTTP METHOD : GET
2019-03-14 14:41:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 14:41:19 -参数 : [{}]
2019-03-14 14:41:19 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 14:41:19 -==> Parameters: 1(Long)
2019-03-14 14:41:19 -<==      Total: 45
2019-03-14 14:41:19 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 14:41:19 -==> Parameters: 138(Long)
2019-03-14 14:41:19 -<==      Total: 1
2019-03-14 14:41:19 -耗时 : 29
2019-03-14 14:41:19 -返回值 : index_v1
2019-03-14 14:41:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 14:41:19 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 14:41:19.437(Timestamp)
2019-03-14 14:41:19 -请求地址 : http://localhost:8081/main
2019-03-14 14:41:19 -HTTP METHOD : GET
2019-03-14 14:41:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 14:41:19 -参数 : []
2019-03-14 14:41:19 -耗时 : 1
2019-03-14 14:41:19 -返回值 : main
2019-03-14 14:41:19 -<==    Updates: 1
2019-03-14 14:41:19 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 14:41:19 -HTTP METHOD : GET
2019-03-14 14:41:19 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 14:41:19 -参数 : []
2019-03-14 14:41:19 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 14:41:19 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 14:41:19 -<==      Total: 0
2019-03-14 14:41:19 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 14:41:19 -==> Parameters: 1(Long), 0(String)
2019-03-14 14:41:19 -<==      Total: 1
2019-03-14 14:41:19 -耗时 : 7
2019-03-14 14:41:19 -返回值 : com.bootdo.common.utils.PageUtils@7459a7b9
2019-03-14 14:41:20 -请求地址 : http://localhost:8081/main
2019-03-14 14:41:20 -HTTP METHOD : GET
2019-03-14 14:41:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 14:41:20 -参数 : []
2019-03-14 14:41:20 -耗时 : 2
2019-03-14 14:41:20 -返回值 : main
2019-03-14 14:43:41 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 15 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(14)-CONNECTED(14)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 168], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 28], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 434]
2019-03-14 14:44:08 -请求地址 : http://localhost:8081/index
2019-03-14 14:44:08 -HTTP METHOD : GET
2019-03-14 14:44:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 14:44:08 -参数 : [{}]
2019-03-14 14:44:08 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 14:44:08 -==> Parameters: 1(Long)
2019-03-14 14:44:08 -<==      Total: 45
2019-03-14 14:44:08 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 14:44:08 -==> Parameters: 138(Long)
2019-03-14 14:44:08 -<==      Total: 1
2019-03-14 14:44:08 -耗时 : 32
2019-03-14 14:44:08 -返回值 : index_v1
2019-03-14 14:44:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 14:44:08 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 32(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 14:44:08.362(Timestamp)
2019-03-14 14:44:08 -请求地址 : http://localhost:8081/main
2019-03-14 14:44:08 -HTTP METHOD : GET
2019-03-14 14:44:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 14:44:08 -参数 : []
2019-03-14 14:44:08 -耗时 : 0
2019-03-14 14:44:08 -返回值 : main
2019-03-14 14:44:08 -<==    Updates: 1
2019-03-14 14:44:08 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 14:44:08 -HTTP METHOD : GET
2019-03-14 14:44:08 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 14:44:08 -参数 : []
2019-03-14 14:44:08 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 14:44:08 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 14:44:08 -<==      Total: 0
2019-03-14 14:44:08 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 14:44:08 -==> Parameters: 1(Long), 0(String)
2019-03-14 14:44:08 -<==      Total: 1
2019-03-14 14:44:08 -耗时 : 8
2019-03-14 14:44:08 -返回值 : com.bootdo.common.utils.PageUtils@2ed4401a
2019-03-14 14:44:08 -请求地址 : http://localhost:8081/main
2019-03-14 14:44:08 -HTTP METHOD : GET
2019-03-14 14:44:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 14:44:08 -参数 : []
2019-03-14 14:44:08 -耗时 : 0
2019-03-14 14:44:08 -返回值 : main
2019-03-14 14:44:43 -请求地址 : http://localhost:8081/index
2019-03-14 14:44:43 -HTTP METHOD : GET
2019-03-14 14:44:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 14:44:43 -参数 : [{}]
2019-03-14 14:44:43 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 14:44:43 -==> Parameters: 1(Long)
2019-03-14 14:44:43 -<==      Total: 45
2019-03-14 14:44:43 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 14:44:43 -==> Parameters: 138(Long)
2019-03-14 14:44:43 -<==      Total: 1
2019-03-14 14:44:43 -耗时 : 27
2019-03-14 14:44:43 -返回值 : index_v1
2019-03-14 14:44:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 14:44:43 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 14:44:43.205(Timestamp)
2019-03-14 14:44:43 -请求地址 : http://localhost:8081/main
2019-03-14 14:44:43 -HTTP METHOD : GET
2019-03-14 14:44:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 14:44:43 -参数 : []
2019-03-14 14:44:43 -耗时 : 1
2019-03-14 14:44:43 -返回值 : main
2019-03-14 14:44:43 -<==    Updates: 1
2019-03-14 14:44:43 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 14:44:43 -HTTP METHOD : GET
2019-03-14 14:44:43 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 14:44:43 -参数 : []
2019-03-14 14:44:43 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 14:44:43 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 14:44:43 -<==      Total: 0
2019-03-14 14:44:43 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 14:44:43 -==> Parameters: 1(Long), 0(String)
2019-03-14 14:44:43 -<==      Total: 1
2019-03-14 14:44:43 -耗时 : 6
2019-03-14 14:44:43 -返回值 : com.bootdo.common.utils.PageUtils@35037123
2019-03-14 14:44:43 -请求地址 : http://localhost:8081/main
2019-03-14 14:44:43 -HTTP METHOD : GET
2019-03-14 14:44:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 14:44:43 -参数 : []
2019-03-14 14:44:43 -耗时 : 0
2019-03-14 14:44:43 -返回值 : main
2019-03-14 14:44:45 -请求地址 : http://localhost:8081/index
2019-03-14 14:44:45 -HTTP METHOD : GET
2019-03-14 14:44:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 14:44:45 -参数 : [{}]
2019-03-14 14:44:45 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 14:44:45 -==> Parameters: 1(Long)
2019-03-14 14:44:45 -<==      Total: 45
2019-03-14 14:44:45 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 14:44:45 -==> Parameters: 138(Long)
2019-03-14 14:44:45 -<==      Total: 1
2019-03-14 14:44:45 -耗时 : 18
2019-03-14 14:44:45 -返回值 : index_v1
2019-03-14 14:44:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 14:44:45 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 18(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 14:44:45.653(Timestamp)
2019-03-14 14:44:45 -<==    Updates: 1
2019-03-14 14:44:45 -请求地址 : http://localhost:8081/main
2019-03-14 14:44:45 -HTTP METHOD : GET
2019-03-14 14:44:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 14:44:45 -参数 : []
2019-03-14 14:44:45 -耗时 : 67
2019-03-14 14:44:45 -返回值 : main
2019-03-14 14:44:46 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 14:44:46 -HTTP METHOD : GET
2019-03-14 14:44:46 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 14:44:46 -参数 : []
2019-03-14 14:44:46 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 14:44:46 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 14:44:46 -<==      Total: 0
2019-03-14 14:44:46 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 14:44:46 -==> Parameters: 1(Long), 0(String)
2019-03-14 14:44:46 -<==      Total: 1
2019-03-14 14:44:46 -耗时 : 8
2019-03-14 14:44:46 -返回值 : com.bootdo.common.utils.PageUtils@2ceed43e
2019-03-14 14:44:46 -请求地址 : http://localhost:8081/main
2019-03-14 14:44:46 -HTTP METHOD : GET
2019-03-14 14:44:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 14:44:46 -参数 : []
2019-03-14 14:44:46 -耗时 : 0
2019-03-14 14:44:46 -返回值 : main
2019-03-14 14:45:33 -请求地址 : http://localhost:8081/index
2019-03-14 14:45:33 -HTTP METHOD : GET
2019-03-14 14:45:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 14:45:33 -参数 : [{}]
2019-03-14 14:45:33 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 14:45:33 -==> Parameters: 1(Long)
2019-03-14 14:45:33 -<==      Total: 45
2019-03-14 14:45:33 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 14:45:33 -==> Parameters: 138(Long)
2019-03-14 14:45:33 -<==      Total: 1
2019-03-14 14:45:33 -耗时 : 21
2019-03-14 14:45:33 -返回值 : index_v1
2019-03-14 14:45:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 14:45:33 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 14:45:33.448(Timestamp)
2019-03-14 14:45:33 -请求地址 : http://localhost:8081/main
2019-03-14 14:45:33 -HTTP METHOD : GET
2019-03-14 14:45:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 14:45:33 -参数 : []
2019-03-14 14:45:33 -耗时 : 0
2019-03-14 14:45:33 -返回值 : main
2019-03-14 14:45:33 -<==    Updates: 1
2019-03-14 14:45:34 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 14:45:34 -HTTP METHOD : GET
2019-03-14 14:45:34 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 14:45:34 -参数 : []
2019-03-14 14:45:34 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 14:45:34 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 14:45:34 -<==      Total: 0
2019-03-14 14:45:34 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 14:45:34 -==> Parameters: 1(Long), 0(String)
2019-03-14 14:45:34 -<==      Total: 1
2019-03-14 14:45:34 -耗时 : 8
2019-03-14 14:45:34 -返回值 : com.bootdo.common.utils.PageUtils@747ddfe7
2019-03-14 14:45:34 -请求地址 : http://localhost:8081/main
2019-03-14 14:45:34 -HTTP METHOD : GET
2019-03-14 14:45:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 14:45:34 -参数 : []
2019-03-14 14:45:34 -耗时 : 1
2019-03-14 14:45:34 -返回值 : main
2019-03-14 14:47:19 -请求地址 : http://localhost:8081/index
2019-03-14 14:47:19 -HTTP METHOD : GET
2019-03-14 14:47:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 14:47:19 -参数 : [{}]
2019-03-14 14:47:19 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 14:47:19 -==> Parameters: 1(Long)
2019-03-14 14:47:19 -<==      Total: 45
2019-03-14 14:47:19 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 14:47:19 -==> Parameters: 138(Long)
2019-03-14 14:47:19 -<==      Total: 1
2019-03-14 14:47:19 -耗时 : 25
2019-03-14 14:47:19 -返回值 : index_v1
2019-03-14 14:47:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 14:47:19 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 14:47:19.962(Timestamp)
2019-03-14 14:47:20 -请求地址 : http://localhost:8081/main
2019-03-14 14:47:20 -HTTP METHOD : GET
2019-03-14 14:47:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 14:47:20 -参数 : []
2019-03-14 14:47:20 -耗时 : 1
2019-03-14 14:47:20 -返回值 : main
2019-03-14 14:47:20 -<==    Updates: 1
2019-03-14 14:47:20 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 14:47:20 -HTTP METHOD : GET
2019-03-14 14:47:20 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 14:47:20 -参数 : []
2019-03-14 14:47:20 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 14:47:20 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 14:47:20 -<==      Total: 0
2019-03-14 14:47:20 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 14:47:20 -==> Parameters: 1(Long), 0(String)
2019-03-14 14:47:20 -<==      Total: 1
2019-03-14 14:47:20 -耗时 : 9
2019-03-14 14:47:20 -返回值 : com.bootdo.common.utils.PageUtils@64c256ad
2019-03-14 14:47:20 -请求地址 : http://localhost:8081/main
2019-03-14 14:47:20 -HTTP METHOD : GET
2019-03-14 14:47:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 14:47:20 -参数 : []
2019-03-14 14:47:20 -耗时 : 0
2019-03-14 14:47:20 -返回值 : main
2019-03-14 14:49:09 -请求地址 : http://localhost:8081/index
2019-03-14 14:49:09 -HTTP METHOD : GET
2019-03-14 14:49:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 14:49:09 -参数 : [{}]
2019-03-14 14:49:09 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 14:49:09 -==> Parameters: 1(Long)
2019-03-14 14:49:09 -<==      Total: 45
2019-03-14 14:49:09 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 14:49:09 -==> Parameters: 138(Long)
2019-03-14 14:49:09 -<==      Total: 1
2019-03-14 14:49:09 -耗时 : 27
2019-03-14 14:49:09 -返回值 : index_v1
2019-03-14 14:49:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 14:49:09 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 14:49:09.941(Timestamp)
2019-03-14 14:49:10 -请求地址 : http://localhost:8081/main
2019-03-14 14:49:10 -HTTP METHOD : GET
2019-03-14 14:49:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 14:49:10 -参数 : []
2019-03-14 14:49:10 -耗时 : 0
2019-03-14 14:49:10 -返回值 : main
2019-03-14 14:49:10 -<==    Updates: 1
2019-03-14 14:49:10 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 14:49:10 -HTTP METHOD : GET
2019-03-14 14:49:10 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 14:49:10 -参数 : []
2019-03-14 14:49:10 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 14:49:10 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 14:49:10 -<==      Total: 0
2019-03-14 14:49:10 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 14:49:10 -==> Parameters: 1(Long), 0(String)
2019-03-14 14:49:10 -<==      Total: 1
2019-03-14 14:49:10 -耗时 : 10
2019-03-14 14:49:10 -返回值 : com.bootdo.common.utils.PageUtils@750a574a
2019-03-14 14:49:10 -请求地址 : http://localhost:8081/main
2019-03-14 14:49:10 -HTTP METHOD : GET
2019-03-14 14:49:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 14:49:10 -参数 : []
2019-03-14 14:49:10 -耗时 : 1
2019-03-14 14:49:10 -返回值 : main
2019-03-14 14:49:17 -请求地址 : http://localhost:8081/index
2019-03-14 14:49:17 -HTTP METHOD : GET
2019-03-14 14:49:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 14:49:17 -参数 : [{}]
2019-03-14 14:49:17 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 14:49:17 -==> Parameters: 1(Long)
2019-03-14 14:49:17 -<==      Total: 45
2019-03-14 14:49:17 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 14:49:17 -==> Parameters: 138(Long)
2019-03-14 14:49:17 -<==      Total: 1
2019-03-14 14:49:17 -耗时 : 25
2019-03-14 14:49:17 -返回值 : index_v1
2019-03-14 14:49:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 14:49:17 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 25(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 14:49:17.339(Timestamp)
2019-03-14 14:49:17 -<==    Updates: 1
2019-03-14 14:49:17 -请求地址 : http://localhost:8081/main
2019-03-14 14:49:17 -HTTP METHOD : GET
2019-03-14 14:49:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 14:49:17 -参数 : []
2019-03-14 14:49:17 -耗时 : 2
2019-03-14 14:49:17 -返回值 : main
2019-03-14 14:49:17 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 14:49:17 -HTTP METHOD : GET
2019-03-14 14:49:17 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 14:49:17 -参数 : []
2019-03-14 14:49:17 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 14:49:17 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 14:49:17 -<==      Total: 0
2019-03-14 14:49:17 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 14:49:17 -==> Parameters: 1(Long), 0(String)
2019-03-14 14:49:17 -<==      Total: 1
2019-03-14 14:49:17 -耗时 : 7
2019-03-14 14:49:17 -返回值 : com.bootdo.common.utils.PageUtils@5f4579d4
2019-03-14 14:49:17 -请求地址 : http://localhost:8081/main
2019-03-14 14:49:17 -HTTP METHOD : GET
2019-03-14 14:49:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 14:49:17 -参数 : []
2019-03-14 14:49:17 -耗时 : 0
2019-03-14 14:49:17 -返回值 : main
2019-03-14 14:49:31 -请求地址 : http://localhost:8081/sys/user/personal
2019-03-14 14:49:31 -HTTP METHOD : GET
2019-03-14 14:49:31 -CLASS_METHOD : com.bootdo.system.controller.UserController.personal
2019-03-14 14:49:31 -参数 : [{}]
2019-03-14 14:49:31 -==>  Preparing: select role_id from sys_user_role where user_id=? 
2019-03-14 14:49:31 -==> Parameters: 1(Long)
2019-03-14 14:49:31 -<==      Total: 1
2019-03-14 14:49:31 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2019-03-14 14:49:31 -==> Parameters: 1(Long)
2019-03-14 14:49:31 -<==      Total: 1
2019-03-14 14:49:31 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept where dept_id = ? 
2019-03-14 14:49:31 -==> Parameters: 13(Long)
2019-03-14 14:49:31 -<==      Total: 0
2019-03-14 14:49:31 -null
java.lang.NullPointerException: null
	at com.bootdo.system.service.impl.UserServiceImpl.get(UserServiceImpl.java:57)
	at com.bootdo.system.service.impl.UserServiceImpl$$FastClassBySpringCGLIB$$2c95b2d0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.system.service.impl.UserServiceImpl$$EnhancerBySpringCGLIB$$86b55283.get(<generated>)
	at com.bootdo.system.controller.UserController.personal(UserController.java:218)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor131.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.system.controller.UserController$$EnhancerBySpringCGLIB$$d862042b.personal(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-14 14:49:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 14:49:31 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/sys/user/personal(String), java.lang.NullPointerException(String), null, 2019-03-14 14:49:31.855(Timestamp)
2019-03-14 14:49:31 -<==    Updates: 1
2019-03-14 14:59:12 -请求地址 : http://localhost:8081/index
2019-03-14 14:59:12 -HTTP METHOD : GET
2019-03-14 14:59:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 14:59:12 -参数 : [{}]
2019-03-14 14:59:12 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 14:59:12 -==> Parameters: 1(Long)
2019-03-14 14:59:12 -<==      Total: 45
2019-03-14 14:59:12 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 14:59:12 -==> Parameters: 138(Long)
2019-03-14 14:59:12 -<==      Total: 1
2019-03-14 14:59:12 -耗时 : 22
2019-03-14 14:59:12 -返回值 : index_v1
2019-03-14 14:59:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 14:59:12 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 22(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 14:59:12.904(Timestamp)
2019-03-14 14:59:12 -<==    Updates: 1
2019-03-14 14:59:13 -请求地址 : http://localhost:8081/main
2019-03-14 14:59:13 -HTTP METHOD : GET
2019-03-14 14:59:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 14:59:13 -参数 : []
2019-03-14 14:59:13 -耗时 : 1
2019-03-14 14:59:13 -返回值 : main
2019-03-14 14:59:13 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 14:59:13 -HTTP METHOD : GET
2019-03-14 14:59:13 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 14:59:13 -参数 : []
2019-03-14 14:59:13 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 14:59:13 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 14:59:13 -<==      Total: 0
2019-03-14 14:59:13 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 14:59:13 -==> Parameters: 1(Long), 0(String)
2019-03-14 14:59:13 -<==      Total: 1
2019-03-14 14:59:13 -耗时 : 15
2019-03-14 14:59:13 -返回值 : com.bootdo.common.utils.PageUtils@6dfd6c2
2019-03-14 14:59:13 -请求地址 : http://localhost:8081/main
2019-03-14 14:59:13 -HTTP METHOD : GET
2019-03-14 14:59:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 14:59:13 -参数 : []
2019-03-14 14:59:13 -耗时 : 2
2019-03-14 14:59:13 -返回值 : main
2019-03-14 15:00:27 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-14 15:00:27 -==> Parameters: 1(Long)
2019-03-14 15:00:27 -<==      Total: 86
2019-03-14 15:00:27 -请求地址 : http://localhost:8081/elec/elecInto
2019-03-14 15:00:27 -HTTP METHOD : GET
2019-03-14 15:00:27 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-03-14 15:00:27 -参数 : []
2019-03-14 15:00:27 -耗时 : 1
2019-03-14 15:00:27 -返回值 : elec/elecInto/elecInto
2019-03-14 15:00:28 -请求地址 : http://localhost:8081/file/downImport/userInto
2019-03-14 15:00:28 -HTTP METHOD : GET
2019-03-14 15:00:28 -CLASS_METHOD : com.bootdo.temple.controller.TempletController.downImport
2019-03-14 15:00:28 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletResponse@2412726e, userInto]
2019-03-14 15:00:28 -耗时 : 117
2019-03-14 15:00:28 -返回值 : null
2019-03-14 15:00:32 -请求地址 : http://localhost:8081/file/downImport/userInto
2019-03-14 15:00:32 -HTTP METHOD : GET
2019-03-14 15:00:32 -CLASS_METHOD : com.bootdo.temple.controller.TempletController.downImport
2019-03-14 15:00:32 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletResponse@334bb06, userInto]
2019-03-14 15:00:32 -耗时 : 4
2019-03-14 15:00:32 -返回值 : null
2019-03-14 15:00:33 -请求地址 : http://localhost:8081/file/downImport/userInto
2019-03-14 15:00:33 -HTTP METHOD : GET
2019-03-14 15:00:33 -CLASS_METHOD : com.bootdo.temple.controller.TempletController.downImport
2019-03-14 15:00:33 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletResponse@26934e4a, userInto]
2019-03-14 15:00:33 -耗时 : 2
2019-03-14 15:00:33 -返回值 : null
2019-03-14 15:00:34 -请求地址 : http://localhost:8081/file/downImport/userInto
2019-03-14 15:00:34 -HTTP METHOD : GET
2019-03-14 15:00:34 -CLASS_METHOD : com.bootdo.temple.controller.TempletController.downImport
2019-03-14 15:00:34 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletResponse@630859a8, userInto]
2019-03-14 15:00:34 -耗时 : 2
2019-03-14 15:00:34 -返回值 : null
2019-03-14 15:00:35 -请求地址 : http://localhost:8081/file/downImport/userInto
2019-03-14 15:00:35 -HTTP METHOD : GET
2019-03-14 15:00:35 -CLASS_METHOD : com.bootdo.temple.controller.TempletController.downImport
2019-03-14 15:00:35 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletResponse@7718847d, userInto]
2019-03-14 15:00:35 -耗时 : 2
2019-03-14 15:00:35 -返回值 : null
2019-03-14 15:03:20 -请求地址 : http://localhost:8081/elec/elec
2019-03-14 15:03:20 -HTTP METHOD : GET
2019-03-14 15:03:20 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-14 15:03:20 -参数 : []
2019-03-14 15:03:20 -耗时 : 0
2019-03-14 15:03:20 -返回值 : elec/elec/elec
2019-03-14 15:03:20 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 15:03:20 -HTTP METHOD : GET
2019-03-14 15:03:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:03:20 -参数 : [userType]
2019-03-14 15:03:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:03:20 -==> Parameters: userType(String)
2019-03-14 15:03:20 -<==      Total: 2
2019-03-14 15:03:20 -耗时 : 39
2019-03-14 15:03:20 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 15:03:20 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-14 15:03:20 -HTTP METHOD : GET
2019-03-14 15:03:20 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-14 15:03:20 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}, com.bootdo.elec.domain.ElecDO@380744c2]
2019-03-14 15:03:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-14 15:03:20 -==> Parameters: 0(Integer), 3(Integer)
2019-03-14 15:03:20 -<==      Total: 3
2019-03-14 15:03:20 -==>  Preparing: select count(*) from elec 
2019-03-14 15:03:20 -==> Parameters: 
2019-03-14 15:03:20 -<==      Total: 1
2019-03-14 15:03:20 -耗时 : 96
2019-03-14 15:03:20 -返回值 : com.bootdo.common.utils.PageUtils@1974e6c9
2019-03-14 15:03:27 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-14 15:03:27 -HTTP METHOD : GET
2019-03-14 15:03:27 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-14 15:03:27 -参数 : [{limit=3, offset=9, userType=, userOrg=, userId=, createTime=}, com.bootdo.elec.domain.ElecDO@55d302ef]
2019-03-14 15:03:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-14 15:03:27 -==> Parameters: 9(Integer), 3(Integer)
2019-03-14 15:03:27 -<==      Total: 2
2019-03-14 15:03:27 -==>  Preparing: select count(*) from elec 
2019-03-14 15:03:27 -==> Parameters: 
2019-03-14 15:03:27 -<==      Total: 1
2019-03-14 15:03:27 -耗时 : 11
2019-03-14 15:03:27 -返回值 : com.bootdo.common.utils.PageUtils@53ebe7d3
2019-03-14 15:03:32 -请求地址 : http://localhost:8081/elec/elec/edit/10
2019-03-14 15:03:32 -HTTP METHOD : GET
2019-03-14 15:03:32 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-14 15:03:32 -参数 : [10, {}]
2019-03-14 15:03:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-14 15:03:32 -==> Parameters: 10(Long)
2019-03-14 15:03:32 -<==      Total: 1
2019-03-14 15:03:32 -耗时 : 10
2019-03-14 15:03:32 -返回值 : elec/elec/edit
2019-03-14 15:03:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 15:03:32 -HTTP METHOD : GET
2019-03-14 15:03:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:03:32 -参数 : [userType]
2019-03-14 15:03:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:03:32 -==> Parameters: userType(String)
2019-03-14 15:03:32 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-14 15:03:32 -HTTP METHOD : GET
2019-03-14 15:03:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:03:32 -参数 : [userState]
2019-03-14 15:03:32 -<==      Total: 2
2019-03-14 15:03:32 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-14 15:03:32 -HTTP METHOD : GET
2019-03-14 15:03:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:03:32 -耗时 : 4
2019-03-14 15:03:32 -参数 : [elecType]
2019-03-14 15:03:32 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 15:03:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:03:32 -==> Parameters: userState(String)
2019-03-14 15:03:32 -<==      Total: 2
2019-03-14 15:03:32 -耗时 : 12
2019-03-14 15:03:32 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 15:03:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:03:32 -==> Parameters: elecType(String)
2019-03-14 15:03:33 -<==      Total: 2
2019-03-14 15:03:33 -耗时 : 20
2019-03-14 15:03:33 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 15:03:34 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-14 15:03:34 -HTTP METHOD : GET
2019-03-14 15:03:34 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-14 15:03:34 -参数 : []
2019-03-14 15:03:34 -耗时 : 0
2019-03-14 15:03:34 -返回值 : system/dept/deptTree
2019-03-14 15:03:34 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-14 15:03:34 -HTTP METHOD : GET
2019-03-14 15:03:34 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-14 15:03:34 -参数 : []
2019-03-14 15:03:34 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-14 15:03:34 -==> Parameters: 
2019-03-14 15:03:35 -<==      Total: 3
2019-03-14 15:03:35 -耗时 : 56
2019-03-14 15:03:35 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-14 15:03:49 -请求地址 : http://localhost:8081/elec/elec/add
2019-03-14 15:03:49 -HTTP METHOD : GET
2019-03-14 15:03:49 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.add
2019-03-14 15:03:49 -参数 : []
2019-03-14 15:03:49 -耗时 : 0
2019-03-14 15:03:49 -返回值 : elec/elec/add
2019-03-14 15:03:49 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 15:03:49 -HTTP METHOD : GET
2019-03-14 15:03:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:03:49 -参数 : [userType]
2019-03-14 15:03:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:03:49 -==> Parameters: userType(String)
2019-03-14 15:03:49 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-14 15:03:49 -HTTP METHOD : GET
2019-03-14 15:03:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:03:49 -参数 : [userState]
2019-03-14 15:03:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:03:49 -==> Parameters: userState(String)
2019-03-14 15:03:49 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-14 15:03:49 -HTTP METHOD : GET
2019-03-14 15:03:49 -<==      Total: 2
2019-03-14 15:03:49 -耗时 : 7
2019-03-14 15:03:49 -<==      Total: 2
2019-03-14 15:03:49 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 15:03:49 -耗时 : 5
2019-03-14 15:03:49 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 15:03:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:03:49 -参数 : [elecType]
2019-03-14 15:03:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:03:49 -==> Parameters: elecType(String)
2019-03-14 15:03:49 -<==      Total: 2
2019-03-14 15:03:49 -耗时 : 11
2019-03-14 15:03:49 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 15:03:51 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-14 15:03:51 -HTTP METHOD : GET
2019-03-14 15:03:51 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-14 15:03:51 -参数 : []
2019-03-14 15:03:51 -耗时 : 0
2019-03-14 15:03:51 -返回值 : system/dept/deptTree
2019-03-14 15:03:51 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-14 15:03:51 -HTTP METHOD : GET
2019-03-14 15:03:51 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-14 15:03:51 -参数 : []
2019-03-14 15:03:51 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-14 15:03:51 -==> Parameters: 
2019-03-14 15:03:51 -<==      Total: 3
2019-03-14 15:03:51 -耗时 : 5
2019-03-14 15:03:51 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-14 15:03:56 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-14 15:03:56 -HTTP METHOD : GET
2019-03-14 15:03:56 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-14 15:03:56 -参数 : []
2019-03-14 15:03:56 -耗时 : 1
2019-03-14 15:03:56 -返回值 : system/dept/deptTree
2019-03-14 15:03:57 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-14 15:03:57 -HTTP METHOD : GET
2019-03-14 15:03:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-14 15:03:57 -参数 : []
2019-03-14 15:03:57 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-14 15:03:57 -==> Parameters: 
2019-03-14 15:03:57 -<==      Total: 3
2019-03-14 15:03:57 -耗时 : 3
2019-03-14 15:03:57 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-14 15:06:41 -请求地址 : http://localhost:8081/index
2019-03-14 15:06:41 -HTTP METHOD : GET
2019-03-14 15:06:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 15:06:41 -参数 : [{}]
2019-03-14 15:06:41 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 15:06:41 -==> Parameters: 1(Long)
2019-03-14 15:06:41 -<==      Total: 45
2019-03-14 15:06:41 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 15:06:41 -==> Parameters: 138(Long)
2019-03-14 15:06:41 -<==      Total: 1
2019-03-14 15:06:41 -耗时 : 28
2019-03-14 15:06:41 -返回值 : index_v1
2019-03-14 15:06:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 15:06:41 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 15:06:41.951(Timestamp)
2019-03-14 15:06:42 -请求地址 : http://localhost:8081/main
2019-03-14 15:06:42 -HTTP METHOD : GET
2019-03-14 15:06:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 15:06:42 -参数 : []
2019-03-14 15:06:42 -耗时 : 1
2019-03-14 15:06:42 -返回值 : main
2019-03-14 15:06:42 -<==    Updates: 1
2019-03-14 15:06:42 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 15:06:42 -HTTP METHOD : GET
2019-03-14 15:06:42 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 15:06:42 -参数 : []
2019-03-14 15:06:42 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 15:06:42 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 15:06:42 -<==      Total: 0
2019-03-14 15:06:42 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 15:06:42 -==> Parameters: 1(Long), 0(String)
2019-03-14 15:06:42 -<==      Total: 1
2019-03-14 15:06:42 -耗时 : 8
2019-03-14 15:06:42 -返回值 : com.bootdo.common.utils.PageUtils@19d5924b
2019-03-14 15:06:42 -请求地址 : http://localhost:8081/main
2019-03-14 15:06:42 -HTTP METHOD : GET
2019-03-14 15:06:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 15:06:42 -参数 : []
2019-03-14 15:06:42 -耗时 : 0
2019-03-14 15:06:42 -返回值 : main
2019-03-14 15:06:44 -请求地址 : http://localhost:8081/elec/elec
2019-03-14 15:06:44 -HTTP METHOD : GET
2019-03-14 15:06:44 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-14 15:06:44 -参数 : []
2019-03-14 15:06:44 -耗时 : 0
2019-03-14 15:06:44 -返回值 : elec/elec/elec
2019-03-14 15:06:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 15:06:44 -HTTP METHOD : GET
2019-03-14 15:06:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:06:44 -参数 : [userType]
2019-03-14 15:06:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:06:44 -==> Parameters: userType(String)
2019-03-14 15:06:44 -<==      Total: 2
2019-03-14 15:06:44 -耗时 : 8
2019-03-14 15:06:44 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 15:06:44 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-14 15:06:44 -HTTP METHOD : GET
2019-03-14 15:06:44 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-14 15:06:44 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}, com.bootdo.elec.domain.ElecDO@64327c0a]
2019-03-14 15:06:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-14 15:06:44 -==> Parameters: 0(Integer), 3(Integer)
2019-03-14 15:06:44 -<==      Total: 3
2019-03-14 15:06:44 -==>  Preparing: select count(*) from elec 
2019-03-14 15:06:44 -==> Parameters: 
2019-03-14 15:06:44 -<==      Total: 1
2019-03-14 15:06:44 -耗时 : 9
2019-03-14 15:06:44 -返回值 : com.bootdo.common.utils.PageUtils@41d0b7ac
2019-03-14 15:06:56 -请求地址 : http://localhost:8081/elec/elec/edit/1
2019-03-14 15:06:56 -HTTP METHOD : GET
2019-03-14 15:06:56 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-14 15:06:56 -参数 : [1, {}]
2019-03-14 15:06:56 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-14 15:06:56 -==> Parameters: 1(Long)
2019-03-14 15:06:56 -<==      Total: 1
2019-03-14 15:06:56 -耗时 : 4
2019-03-14 15:06:56 -返回值 : elec/elec/edit
2019-03-14 15:06:56 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 15:06:56 -HTTP METHOD : GET
2019-03-14 15:06:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:06:56 -参数 : [userType]
2019-03-14 15:06:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:06:56 -==> Parameters: userType(String)
2019-03-14 15:06:56 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-14 15:06:56 -HTTP METHOD : GET
2019-03-14 15:06:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:06:56 -参数 : [userState]
2019-03-14 15:06:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:06:56 -==> Parameters: userState(String)
2019-03-14 15:06:56 -<==      Total: 2
2019-03-14 15:06:56 -耗时 : 5
2019-03-14 15:06:56 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 15:06:56 -<==      Total: 2
2019-03-14 15:06:56 -耗时 : 5
2019-03-14 15:06:56 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 15:06:56 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-14 15:06:56 -HTTP METHOD : GET
2019-03-14 15:06:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:06:56 -参数 : [elecType]
2019-03-14 15:06:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:06:56 -==> Parameters: elecType(String)
2019-03-14 15:06:56 -<==      Total: 2
2019-03-14 15:06:56 -耗时 : 6
2019-03-14 15:06:56 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 15:07:00 -请求地址 : http://localhost:8081/elec/elec/edit/1
2019-03-14 15:07:00 -HTTP METHOD : GET
2019-03-14 15:07:00 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-14 15:07:00 -参数 : [1, {}]
2019-03-14 15:07:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-14 15:07:00 -==> Parameters: 1(Long)
2019-03-14 15:07:00 -<==      Total: 1
2019-03-14 15:07:00 -耗时 : 243
2019-03-14 15:07:00 -返回值 : elec/elec/edit
2019-03-14 15:07:00 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 15:07:00 -HTTP METHOD : GET
2019-03-14 15:07:00 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-14 15:07:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:07:00 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-14 15:07:00 -参数 : [userType]
2019-03-14 15:07:00 -HTTP METHOD : GET
2019-03-14 15:07:00 -HTTP METHOD : GET
2019-03-14 15:07:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:07:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:07:00 -参数 : [userState]
2019-03-14 15:07:00 -参数 : [elecType]
2019-03-14 15:07:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:07:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:07:00 -==> Parameters: userType(String)
2019-03-14 15:07:00 -==> Parameters: elecType(String)
2019-03-14 15:07:00 -<==      Total: 2
2019-03-14 15:07:00 -<==      Total: 2
2019-03-14 15:07:00 -耗时 : 4
2019-03-14 15:07:00 -耗时 : 5
2019-03-14 15:07:00 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 15:07:00 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 15:07:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:07:00 -==> Parameters: userState(String)
2019-03-14 15:07:00 -<==      Total: 2
2019-03-14 15:07:00 -耗时 : 7
2019-03-14 15:07:00 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 15:07:05 -请求地址 : http://localhost:8081/elec/elec/add
2019-03-14 15:07:05 -HTTP METHOD : GET
2019-03-14 15:07:05 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.add
2019-03-14 15:07:05 -参数 : []
2019-03-14 15:07:05 -耗时 : 1
2019-03-14 15:07:05 -返回值 : elec/elec/add
2019-03-14 15:07:06 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 15:07:06 -HTTP METHOD : GET
2019-03-14 15:07:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:07:06 -参数 : [userType]
2019-03-14 15:07:06 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-14 15:07:06 -HTTP METHOD : GET
2019-03-14 15:07:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:07:06 -参数 : [userState]
2019-03-14 15:07:06 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-14 15:07:06 -HTTP METHOD : GET
2019-03-14 15:07:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:07:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:07:06 -==> Parameters: userState(String)
2019-03-14 15:07:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:07:06 -参数 : [elecType]
2019-03-14 15:07:06 -==> Parameters: userType(String)
2019-03-14 15:07:06 -<==      Total: 2
2019-03-14 15:07:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:07:06 -耗时 : 5
2019-03-14 15:07:06 -==> Parameters: elecType(String)
2019-03-14 15:07:06 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 15:07:06 -<==      Total: 2
2019-03-14 15:07:06 -耗时 : 12
2019-03-14 15:07:06 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 15:07:06 -<==      Total: 2
2019-03-14 15:07:06 -耗时 : 98
2019-03-14 15:07:06 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 15:07:08 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-14 15:07:08 -HTTP METHOD : GET
2019-03-14 15:07:08 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-14 15:07:08 -参数 : []
2019-03-14 15:07:08 -耗时 : 1
2019-03-14 15:07:08 -返回值 : system/dept/deptTree
2019-03-14 15:07:08 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-14 15:07:08 -HTTP METHOD : GET
2019-03-14 15:07:08 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-14 15:07:08 -参数 : []
2019-03-14 15:07:08 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-14 15:07:08 -==> Parameters: 
2019-03-14 15:07:08 -<==      Total: 3
2019-03-14 15:07:08 -耗时 : 4
2019-03-14 15:07:08 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-14 15:07:35 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 15:07:35 -HTTP METHOD : GET
2019-03-14 15:07:35 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 15:07:35 -参数 : []
2019-03-14 15:07:35 -耗时 : 1
2019-03-14 15:07:35 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 15:07:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 15:07:35 -HTTP METHOD : GET
2019-03-14 15:07:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:07:35 -参数 : [userType]
2019-03-14 15:07:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:07:35 -==> Parameters: userType(String)
2019-03-14 15:07:35 -<==      Total: 2
2019-03-14 15:07:35 -耗时 : 5
2019-03-14 15:07:35 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 15:07:35 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 15:07:35 -HTTP METHOD : GET
2019-03-14 15:07:35 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 15:07:35 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 15:07:35 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-14 15:07:35 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 15:07:35 -<==      Total: 3
2019-03-14 15:07:35 -==>  Preparing: select count(*) from elec_log 
2019-03-14 15:07:35 -==> Parameters: 
2019-03-14 15:07:35 -<==      Total: 1
2019-03-14 15:07:35 -耗时 : 43
2019-03-14 15:07:35 -返回值 : com.bootdo.common.utils.PageUtils@71d3aa48
2019-03-14 15:07:39 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-14 15:07:39 -HTTP METHOD : GET
2019-03-14 15:07:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-14 15:07:39 -参数 : []
2019-03-14 15:07:39 -耗时 : 0
2019-03-14 15:07:39 -返回值 : /moneyLog/heatLog/heatLog
2019-03-14 15:07:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 15:07:39 -HTTP METHOD : GET
2019-03-14 15:07:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:07:39 -参数 : [userType]
2019-03-14 15:07:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:07:39 -==> Parameters: userType(String)
2019-03-14 15:07:39 -<==      Total: 2
2019-03-14 15:07:39 -耗时 : 3
2019-03-14 15:07:39 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 15:07:39 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-14 15:07:39 -HTTP METHOD : GET
2019-03-14 15:07:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-14 15:07:39 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 15:07:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-14 15:07:39 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 15:07:39 -<==      Total: 3
2019-03-14 15:07:39 -==>  Preparing: select count(*) from heat_log 
2019-03-14 15:07:39 -==> Parameters: 
2019-03-14 15:07:39 -<==      Total: 1
2019-03-14 15:07:39 -耗时 : 37
2019-03-14 15:07:39 -返回值 : com.bootdo.common.utils.PageUtils@38f4bc62
2019-03-14 15:07:40 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-14 15:07:40 -HTTP METHOD : GET
2019-03-14 15:07:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-14 15:07:40 -参数 : []
2019-03-14 15:07:40 -耗时 : 0
2019-03-14 15:07:40 -返回值 : /moneyLog/waterLog/waterLog
2019-03-14 15:07:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 15:07:40 -HTTP METHOD : GET
2019-03-14 15:07:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:07:40 -参数 : [userType]
2019-03-14 15:07:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:07:40 -==> Parameters: userType(String)
2019-03-14 15:07:40 -<==      Total: 2
2019-03-14 15:07:40 -耗时 : 3
2019-03-14 15:07:40 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 15:07:40 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-14 15:07:40 -HTTP METHOD : GET
2019-03-14 15:07:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-14 15:07:40 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 15:07:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-14 15:07:40 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 15:07:40 -<==      Total: 3
2019-03-14 15:07:40 -==>  Preparing: select count(*) from water_log 
2019-03-14 15:07:40 -==> Parameters: 
2019-03-14 15:07:40 -<==      Total: 1
2019-03-14 15:07:40 -耗时 : 45
2019-03-14 15:07:40 -返回值 : com.bootdo.common.utils.PageUtils@7dce6851
2019-03-14 15:07:41 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-14 15:07:41 -HTTP METHOD : GET
2019-03-14 15:07:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-14 15:07:41 -参数 : []
2019-03-14 15:07:41 -耗时 : 1
2019-03-14 15:07:41 -返回值 : /moneyLog/heatLog/heatLog
2019-03-14 15:07:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 15:07:41 -HTTP METHOD : GET
2019-03-14 15:07:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:07:41 -参数 : [userType]
2019-03-14 15:07:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:07:41 -==> Parameters: userType(String)
2019-03-14 15:07:41 -<==      Total: 2
2019-03-14 15:07:41 -耗时 : 3
2019-03-14 15:07:41 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 15:07:41 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-14 15:07:41 -HTTP METHOD : GET
2019-03-14 15:07:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-14 15:07:41 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 15:07:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-14 15:07:41 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 15:07:41 -<==      Total: 3
2019-03-14 15:07:41 -==>  Preparing: select count(*) from heat_log 
2019-03-14 15:07:41 -==> Parameters: 
2019-03-14 15:07:41 -<==      Total: 1
2019-03-14 15:07:41 -耗时 : 7
2019-03-14 15:07:41 -返回值 : com.bootdo.common.utils.PageUtils@74ca7779
2019-03-14 15:07:42 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 15:07:42 -HTTP METHOD : GET
2019-03-14 15:07:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 15:07:42 -参数 : []
2019-03-14 15:07:42 -耗时 : 0
2019-03-14 15:07:42 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 15:07:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 15:07:42 -HTTP METHOD : GET
2019-03-14 15:07:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:07:42 -参数 : [userType]
2019-03-14 15:07:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:07:42 -==> Parameters: userType(String)
2019-03-14 15:07:42 -<==      Total: 2
2019-03-14 15:07:42 -耗时 : 2
2019-03-14 15:07:42 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 15:07:42 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 15:07:42 -HTTP METHOD : GET
2019-03-14 15:07:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 15:07:42 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 15:07:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-14 15:07:42 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 15:07:42 -<==      Total: 3
2019-03-14 15:07:42 -==>  Preparing: select count(*) from elec_log 
2019-03-14 15:07:42 -==> Parameters: 
2019-03-14 15:07:42 -<==      Total: 1
2019-03-14 15:07:42 -耗时 : 7
2019-03-14 15:07:42 -返回值 : com.bootdo.common.utils.PageUtils@74f01af8
2019-03-14 15:07:42 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-14 15:07:42 -HTTP METHOD : GET
2019-03-14 15:07:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-14 15:07:42 -参数 : []
2019-03-14 15:07:42 -耗时 : 1
2019-03-14 15:07:42 -返回值 : /moneyLog/heatLog/heatLog
2019-03-14 15:07:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 15:07:42 -HTTP METHOD : GET
2019-03-14 15:07:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:07:42 -参数 : [userType]
2019-03-14 15:07:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:07:42 -==> Parameters: userType(String)
2019-03-14 15:07:42 -<==      Total: 2
2019-03-14 15:07:42 -耗时 : 6
2019-03-14 15:07:42 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 15:07:43 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-14 15:07:43 -HTTP METHOD : GET
2019-03-14 15:07:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-14 15:07:43 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 15:07:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-14 15:07:43 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 15:07:43 -<==      Total: 3
2019-03-14 15:07:43 -==>  Preparing: select count(*) from heat_log 
2019-03-14 15:07:43 -==> Parameters: 
2019-03-14 15:07:43 -<==      Total: 1
2019-03-14 15:07:43 -耗时 : 6
2019-03-14 15:07:43 -返回值 : com.bootdo.common.utils.PageUtils@43483d41
2019-03-14 15:07:43 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-14 15:07:43 -HTTP METHOD : GET
2019-03-14 15:07:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-14 15:07:43 -参数 : []
2019-03-14 15:07:43 -耗时 : 1
2019-03-14 15:07:43 -返回值 : /moneyLog/waterLog/waterLog
2019-03-14 15:07:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 15:07:43 -HTTP METHOD : GET
2019-03-14 15:07:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:07:43 -参数 : [userType]
2019-03-14 15:07:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:07:43 -==> Parameters: userType(String)
2019-03-14 15:07:43 -<==      Total: 2
2019-03-14 15:07:43 -耗时 : 5
2019-03-14 15:07:43 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 15:07:43 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-14 15:07:43 -HTTP METHOD : GET
2019-03-14 15:07:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-14 15:07:43 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 15:07:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-14 15:07:43 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 15:07:43 -<==      Total: 3
2019-03-14 15:07:43 -==>  Preparing: select count(*) from water_log 
2019-03-14 15:07:43 -==> Parameters: 
2019-03-14 15:07:43 -<==      Total: 1
2019-03-14 15:07:43 -耗时 : 6
2019-03-14 15:07:43 -返回值 : com.bootdo.common.utils.PageUtils@39c6af3c
2019-03-14 15:07:44 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-14 15:07:44 -HTTP METHOD : GET
2019-03-14 15:07:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-14 15:07:44 -参数 : []
2019-03-14 15:07:44 -耗时 : 1
2019-03-14 15:07:44 -返回值 : /moneyLog/heatLog/heatLog
2019-03-14 15:07:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 15:07:44 -HTTP METHOD : GET
2019-03-14 15:07:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:07:44 -参数 : [userType]
2019-03-14 15:07:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:07:44 -==> Parameters: userType(String)
2019-03-14 15:07:44 -<==      Total: 2
2019-03-14 15:07:44 -耗时 : 4
2019-03-14 15:07:44 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 15:07:44 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-14 15:07:44 -HTTP METHOD : GET
2019-03-14 15:07:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-14 15:07:44 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 15:07:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-14 15:07:44 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 15:07:44 -<==      Total: 3
2019-03-14 15:07:44 -==>  Preparing: select count(*) from heat_log 
2019-03-14 15:07:44 -==> Parameters: 
2019-03-14 15:07:44 -<==      Total: 1
2019-03-14 15:07:44 -耗时 : 7
2019-03-14 15:07:44 -返回值 : com.bootdo.common.utils.PageUtils@63faf1cc
2019-03-14 15:07:45 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 15:07:45 -HTTP METHOD : GET
2019-03-14 15:07:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 15:07:45 -参数 : []
2019-03-14 15:07:45 -耗时 : 1
2019-03-14 15:07:45 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 15:07:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 15:07:45 -HTTP METHOD : GET
2019-03-14 15:07:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:07:45 -参数 : [userType]
2019-03-14 15:07:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:07:45 -==> Parameters: userType(String)
2019-03-14 15:07:46 -<==      Total: 2
2019-03-14 15:07:46 -耗时 : 5
2019-03-14 15:07:46 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 15:07:46 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 15:07:46 -HTTP METHOD : GET
2019-03-14 15:07:46 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 15:07:46 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 15:07:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-14 15:07:46 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 15:07:46 -<==      Total: 3
2019-03-14 15:07:46 -==>  Preparing: select count(*) from elec_log 
2019-03-14 15:07:46 -==> Parameters: 
2019-03-14 15:07:46 -<==      Total: 1
2019-03-14 15:07:46 -耗时 : 6
2019-03-14 15:07:46 -返回值 : com.bootdo.common.utils.PageUtils@7fb20cc6
2019-03-14 15:07:46 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-14 15:07:46 -HTTP METHOD : GET
2019-03-14 15:07:46 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-14 15:07:46 -参数 : []
2019-03-14 15:07:46 -耗时 : 1
2019-03-14 15:07:46 -返回值 : /moneyLog/heatLog/heatLog
2019-03-14 15:07:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 15:07:47 -HTTP METHOD : GET
2019-03-14 15:07:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:07:47 -参数 : [userType]
2019-03-14 15:07:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:07:47 -==> Parameters: userType(String)
2019-03-14 15:07:47 -<==      Total: 2
2019-03-14 15:07:47 -耗时 : 4
2019-03-14 15:07:47 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 15:07:47 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-14 15:07:47 -HTTP METHOD : GET
2019-03-14 15:07:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-14 15:07:47 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 15:07:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-14 15:07:47 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 15:07:47 -<==      Total: 3
2019-03-14 15:07:47 -==>  Preparing: select count(*) from heat_log 
2019-03-14 15:07:47 -==> Parameters: 
2019-03-14 15:07:47 -<==      Total: 1
2019-03-14 15:07:47 -耗时 : 7
2019-03-14 15:07:47 -返回值 : com.bootdo.common.utils.PageUtils@172351ad
2019-03-14 15:07:47 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-14 15:07:47 -HTTP METHOD : GET
2019-03-14 15:07:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-14 15:07:47 -参数 : []
2019-03-14 15:07:47 -耗时 : 0
2019-03-14 15:07:47 -返回值 : /moneyLog/waterLog/waterLog
2019-03-14 15:07:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 15:07:47 -HTTP METHOD : GET
2019-03-14 15:07:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:07:47 -参数 : [userType]
2019-03-14 15:07:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:07:47 -==> Parameters: userType(String)
2019-03-14 15:07:47 -<==      Total: 2
2019-03-14 15:07:47 -耗时 : 4
2019-03-14 15:07:47 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 15:07:47 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-14 15:07:47 -HTTP METHOD : GET
2019-03-14 15:07:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-14 15:07:47 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 15:07:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-14 15:07:47 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 15:07:47 -<==      Total: 3
2019-03-14 15:07:47 -==>  Preparing: select count(*) from water_log 
2019-03-14 15:07:47 -==> Parameters: 
2019-03-14 15:07:47 -<==      Total: 1
2019-03-14 15:07:47 -耗时 : 9
2019-03-14 15:07:47 -返回值 : com.bootdo.common.utils.PageUtils@4975accb
2019-03-14 15:07:48 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-14 15:07:48 -HTTP METHOD : GET
2019-03-14 15:07:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-14 15:07:48 -参数 : []
2019-03-14 15:07:48 -耗时 : 0
2019-03-14 15:07:48 -返回值 : /moneyLog/heatLog/heatLog
2019-03-14 15:07:48 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 15:07:48 -HTTP METHOD : GET
2019-03-14 15:07:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:07:48 -参数 : [userType]
2019-03-14 15:07:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:07:48 -==> Parameters: userType(String)
2019-03-14 15:07:48 -<==      Total: 2
2019-03-14 15:07:48 -耗时 : 3
2019-03-14 15:07:48 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 15:07:48 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-14 15:07:48 -HTTP METHOD : GET
2019-03-14 15:07:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-14 15:07:48 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 15:07:48 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-14 15:07:48 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 15:07:48 -<==      Total: 3
2019-03-14 15:07:48 -==>  Preparing: select count(*) from heat_log 
2019-03-14 15:07:48 -==> Parameters: 
2019-03-14 15:07:48 -<==      Total: 1
2019-03-14 15:07:48 -耗时 : 11
2019-03-14 15:07:48 -返回值 : com.bootdo.common.utils.PageUtils@2f6ffbb1
2019-03-14 15:07:51 -请求地址 : http://localhost:8081/moneyLog/heatLog/edit/1
2019-03-14 15:07:51 -HTTP METHOD : GET
2019-03-14 15:07:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.edit
2019-03-14 15:07:51 -参数 : [1, {}]
2019-03-14 15:07:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log where id = ? 
2019-03-14 15:07:51 -==> Parameters: 1(Long)
2019-03-14 15:07:51 -<==      Total: 1
2019-03-14 15:07:51 -耗时 : 6
2019-03-14 15:07:51 -返回值 : moneyLog/heatLog/edit
2019-03-14 15:07:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 15:07:51 -HTTP METHOD : GET
2019-03-14 15:07:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:07:51 -参数 : [userType]
2019-03-14 15:07:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:07:51 -==> Parameters: userType(String)
2019-03-14 15:07:51 -<==      Total: 2
2019-03-14 15:07:51 -耗时 : 6
2019-03-14 15:07:51 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 15:07:51 -请求地址 : http://localhost:8081/common/dict/list/userArea
2019-03-14 15:07:51 -HTTP METHOD : GET
2019-03-14 15:07:51 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-03-14 15:07:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:07:51 -HTTP METHOD : GET
2019-03-14 15:07:51 -参数 : [userArea]
2019-03-14 15:07:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:07:51 -参数 : [userOrg]
2019-03-14 15:07:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:07:51 -==> Parameters: userOrg(String)
2019-03-14 15:07:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:07:51 -==> Parameters: userArea(String)
2019-03-14 15:07:51 -<==      Total: 0
2019-03-14 15:07:51 -<==      Total: 0
2019-03-14 15:07:51 -耗时 : 5
2019-03-14 15:07:51 -耗时 : 5
2019-03-14 15:07:51 -返回值 : []
2019-03-14 15:07:51 -返回值 : []
2019-03-14 15:10:35 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-14 15:10:35 -==> Parameters: 1(Long)
2019-03-14 15:10:35 -<==      Total: 86
2019-03-14 15:10:35 -请求地址 : http://localhost:8081/moneyLog/heatLog/edit/1
2019-03-14 15:10:35 -HTTP METHOD : GET
2019-03-14 15:10:35 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.edit
2019-03-14 15:10:35 -参数 : [1, {}]
2019-03-14 15:10:35 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log where id = ? 
2019-03-14 15:10:35 -==> Parameters: 1(Long)
2019-03-14 15:10:35 -<==      Total: 1
2019-03-14 15:10:35 -耗时 : 9
2019-03-14 15:10:35 -返回值 : moneyLog/heatLog/edit
2019-03-14 15:10:36 -请求地址 : http://localhost:8081/common/dict/list/userArea
2019-03-14 15:10:36 -HTTP METHOD : GET
2019-03-14 15:10:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:10:36 -参数 : [userArea]
2019-03-14 15:10:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:10:36 -==> Parameters: userArea(String)
2019-03-14 15:10:36 -<==      Total: 0
2019-03-14 15:10:36 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-03-14 15:10:36 -耗时 : 7
2019-03-14 15:10:36 -返回值 : []
2019-03-14 15:10:36 -HTTP METHOD : GET
2019-03-14 15:10:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:10:36 -参数 : [userOrg]
2019-03-14 15:10:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:10:36 -==> Parameters: userOrg(String)
2019-03-14 15:10:36 -<==      Total: 0
2019-03-14 15:10:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 15:10:36 -耗时 : 7
2019-03-14 15:10:36 -HTTP METHOD : GET
2019-03-14 15:10:36 -返回值 : []
2019-03-14 15:10:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:10:36 -参数 : [userType]
2019-03-14 15:10:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:10:36 -==> Parameters: userType(String)
2019-03-14 15:10:36 -<==      Total: 2
2019-03-14 15:10:36 -耗时 : 6
2019-03-14 15:10:36 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 15:10:40 -请求地址 : http://localhost:8081/moneyLog/heatLog/edit/1
2019-03-14 15:10:40 -HTTP METHOD : GET
2019-03-14 15:10:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.edit
2019-03-14 15:10:40 -参数 : [1, {}]
2019-03-14 15:10:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log where id = ? 
2019-03-14 15:10:40 -==> Parameters: 1(Long)
2019-03-14 15:10:40 -<==      Total: 1
2019-03-14 15:10:40 -耗时 : 4
2019-03-14 15:10:40 -返回值 : moneyLog/heatLog/edit
2019-03-14 15:10:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 15:10:41 -HTTP METHOD : GET
2019-03-14 15:10:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:10:41 -参数 : [userType]
2019-03-14 15:10:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:10:41 -==> Parameters: userType(String)
2019-03-14 15:10:41 -请求地址 : http://localhost:8081/common/dict/list/userArea
2019-03-14 15:10:41 -HTTP METHOD : GET
2019-03-14 15:10:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:10:41 -参数 : [userArea]
2019-03-14 15:10:41 -<==      Total: 2
2019-03-14 15:10:41 -耗时 : 6
2019-03-14 15:10:41 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 15:10:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:10:41 -==> Parameters: userArea(String)
2019-03-14 15:10:41 -<==      Total: 0
2019-03-14 15:10:41 -耗时 : 6
2019-03-14 15:10:41 -返回值 : []
2019-03-14 15:10:41 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-03-14 15:10:41 -HTTP METHOD : GET
2019-03-14 15:10:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:10:41 -参数 : [userOrg]
2019-03-14 15:10:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:10:41 -==> Parameters: userOrg(String)
2019-03-14 15:10:41 -<==      Total: 0
2019-03-14 15:10:41 -耗时 : 6
2019-03-14 15:10:41 -返回值 : []
2019-03-14 15:10:47 -请求地址 : http://localhost:8081/index
2019-03-14 15:10:47 -HTTP METHOD : GET
2019-03-14 15:10:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 15:10:47 -参数 : [{}]
2019-03-14 15:10:47 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 15:10:47 -==> Parameters: 1(Long)
2019-03-14 15:10:47 -<==      Total: 45
2019-03-14 15:10:47 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 15:10:47 -==> Parameters: 138(Long)
2019-03-14 15:10:47 -<==      Total: 1
2019-03-14 15:10:47 -耗时 : 72
2019-03-14 15:10:47 -返回值 : index_v1
2019-03-14 15:10:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 15:10:47 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 72(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 15:10:47.405(Timestamp)
2019-03-14 15:10:47 -<==    Updates: 1
2019-03-14 15:10:47 -请求地址 : http://localhost:8081/main
2019-03-14 15:10:47 -HTTP METHOD : GET
2019-03-14 15:10:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 15:10:47 -参数 : []
2019-03-14 15:10:47 -耗时 : 1
2019-03-14 15:10:47 -返回值 : main
2019-03-14 15:10:48 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 15:10:48 -HTTP METHOD : GET
2019-03-14 15:10:48 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 15:10:48 -参数 : []
2019-03-14 15:10:48 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 15:10:48 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 15:10:48 -<==      Total: 0
2019-03-14 15:10:48 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 15:10:48 -==> Parameters: 1(Long), 0(String)
2019-03-14 15:10:48 -<==      Total: 1
2019-03-14 15:10:48 -耗时 : 7
2019-03-14 15:10:48 -返回值 : com.bootdo.common.utils.PageUtils@4641d337
2019-03-14 15:10:48 -请求地址 : http://localhost:8081/main
2019-03-14 15:10:48 -HTTP METHOD : GET
2019-03-14 15:10:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 15:10:48 -参数 : []
2019-03-14 15:10:48 -耗时 : 0
2019-03-14 15:10:48 -返回值 : main
2019-03-14 15:10:51 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 15:10:51 -HTTP METHOD : GET
2019-03-14 15:10:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 15:10:51 -参数 : []
2019-03-14 15:10:51 -耗时 : 2
2019-03-14 15:10:51 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 15:10:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 15:10:51 -HTTP METHOD : GET
2019-03-14 15:10:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:10:51 -参数 : [userType]
2019-03-14 15:10:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:10:51 -==> Parameters: userType(String)
2019-03-14 15:10:51 -<==      Total: 2
2019-03-14 15:10:51 -耗时 : 4
2019-03-14 15:10:51 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 15:10:51 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 15:10:51 -HTTP METHOD : GET
2019-03-14 15:10:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 15:10:51 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 15:10:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-14 15:10:51 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 15:10:51 -<==      Total: 3
2019-03-14 15:10:51 -==>  Preparing: select count(*) from elec_log 
2019-03-14 15:10:51 -==> Parameters: 
2019-03-14 15:10:51 -<==      Total: 1
2019-03-14 15:10:51 -耗时 : 8
2019-03-14 15:10:51 -返回值 : com.bootdo.common.utils.PageUtils@39d8d21b
2019-03-14 15:10:52 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/1
2019-03-14 15:10:52 -HTTP METHOD : GET
2019-03-14 15:10:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-03-14 15:10:52 -参数 : [1, {}]
2019-03-14 15:10:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-03-14 15:10:52 -==> Parameters: 1(Long)
2019-03-14 15:10:52 -<==      Total: 1
2019-03-14 15:10:52 -耗时 : 6
2019-03-14 15:10:52 -返回值 : moneyLog/elecLog/edit
2019-03-14 15:10:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 15:10:52 -HTTP METHOD : GET
2019-03-14 15:10:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:10:52 -参数 : [userType]
2019-03-14 15:10:52 -请求地址 : http://localhost:8081/common/dict/list/userArea
2019-03-14 15:10:52 -HTTP METHOD : GET
2019-03-14 15:10:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:10:52 -参数 : [userArea]
2019-03-14 15:10:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:10:52 -==> Parameters: userType(String)
2019-03-14 15:10:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:10:52 -==> Parameters: userArea(String)
2019-03-14 15:10:52 -<==      Total: 0
2019-03-14 15:10:52 -耗时 : 5
2019-03-14 15:10:52 -返回值 : []
2019-03-14 15:10:52 -<==      Total: 2
2019-03-14 15:10:52 -耗时 : 13
2019-03-14 15:10:52 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 15:10:52 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-03-14 15:10:52 -HTTP METHOD : GET
2019-03-14 15:10:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:10:52 -参数 : [userOrg]
2019-03-14 15:10:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:10:52 -==> Parameters: userOrg(String)
2019-03-14 15:10:52 -<==      Total: 0
2019-03-14 15:10:52 -耗时 : 10
2019-03-14 15:10:52 -返回值 : []
2019-03-14 15:12:55 -Validating all active sessions...
2019-03-14 15:12:55 -Finished session validation.  No sessions were stopped.
2019-03-14 15:13:41 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 25 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(24)-CONNECTED(24)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 288], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 48], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 861]
2019-03-14 15:18:55 -Starting BootdoApplication on ZJZL-20180906VX with PID 3356 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-14 15:18:55 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-14 15:18:55 -The following profiles are active: dev
2019-03-14 15:18:56 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@78fb9a67: startup date [Thu Mar 14 15:18:56 CST 2019]; root of context hierarchy
2019-03-14 15:18:59 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-14 15:19:02 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$cbf0b7b8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 15:19:02 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$be49e65f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 15:19:03 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 15:19:04 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 15:19:04 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 15:19:04 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-14 15:19:04 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-14 15:19:04 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 15:19:04 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 15:19:04 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 15:19:04 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-14 15:19:05 -Tomcat initialized with port(s): 8081 (http)
2019-03-14 15:19:05 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-14 15:19:06 -Starting service [Tomcat]
2019-03-14 15:19:06 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-14 15:19:06 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;D:\Oracle\app\oracle\product\10.2.0\server\bin;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-14 15:19:06 -Initializing Spring embedded WebApplicationContext
2019-03-14 15:19:06 -Root WebApplicationContext: initialization completed in 10440 ms
2019-03-14 15:19:07 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-14 15:19:07 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-14 15:19:07 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-14 15:19:07 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-14 15:19:07 -Filter xssFilter was not registered (disabled)
2019-03-14 15:19:07 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-14 15:19:07 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-14 15:19:07 -Servlet statViewServlet mapped to [/druid/*]
2019-03-14 15:19:07 -Servlet dispatcherServlet mapped to [/]
2019-03-14 15:19:10 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@78fb9a67: startup date [Thu Mar 14 15:18:56 CST 2019]; root of context hierarchy
2019-03-14 15:19:11 -Using default implementation for ThreadExecutor
2019-03-14 15:19:11 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-14 15:19:11 -Quartz Scheduler v.2.2.1 created.
2019-03-14 15:19:11 -RAMJobStore initialized.
2019-03-14 15:19:11 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-14 15:19:11 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-14 15:19:11 -Quartz scheduler version: 2.2.1
2019-03-14 15:19:11 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@2f60e66a
2019-03-14 15:19:11 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-14 15:19:11 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-14 15:19:14 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-14 15:19:14 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-14 15:19:14 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-14 15:19:14 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-14 15:19:14 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-14 15:19:14 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-14 15:19:14 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-14 15:19:14 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-14 15:19:14 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-14 15:19:14 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 15:19:14 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-14 15:19:14 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-14 15:19:14 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 15:19:14 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-14 15:19:14 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-14 15:19:14 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-14 15:19:14 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-14 15:19:14 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-14 15:19:14 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-14 15:19:14 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-14 15:19:14 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 15:19:14 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-14 15:19:14 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-14 15:19:14 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 15:19:14 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-14 15:19:14 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-14 15:19:14 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 15:19:14 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-14 15:19:14 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-14 15:19:14 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-14 15:19:14 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-14 15:19:14 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-14 15:19:14 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-14 15:19:14 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-14 15:19:14 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-14 15:19:14 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-14 15:19:14 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 15:19:14 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-14 15:19:14 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-14 15:19:14 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 15:19:14 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-14 15:19:14 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-14 15:19:14 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-14 15:19:14 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-14 15:19:14 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 15:19:14 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-14 15:19:14 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-14 15:19:14 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-14 15:19:14 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-14 15:19:14 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-14 15:19:14 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-14 15:19:14 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-14 15:19:14 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-14 15:19:14 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-14 15:19:14 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-14 15:19:14 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 15:19:14 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-14 15:19:14 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2019-03-14 15:19:14 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-14 15:19:14 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-14 15:19:14 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-14 15:19:14 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-14 15:19:14 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-14 15:19:14 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-14 15:19:14 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 15:19:14 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-14 15:19:14 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 15:19:14 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-14 15:19:14 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-14 15:19:14 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-14 15:19:14 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-14 15:19:14 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-14 15:19:14 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-14 15:19:14 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-14 15:19:14 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 15:19:14 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-14 15:19:14 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-14 15:19:14 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-14 15:19:14 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-14 15:19:14 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-14 15:19:14 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-14 15:19:14 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-14 15:19:14 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-14 15:19:14 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 15:19:14 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-14 15:19:14 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-14 15:19:14 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 15:19:14 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-14 15:19:14 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-14 15:19:14 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-14 15:19:14 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-14 15:19:14 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-14 15:19:14 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-14 15:19:14 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-14 15:19:14 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-14 15:19:14 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-14 15:19:14 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 15:19:14 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-14 15:19:14 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-14 15:19:14 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 15:19:14 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-14 15:19:14 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-14 15:19:14 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-14 15:19:14 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-14 15:19:14 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 15:19:14 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-14 15:19:14 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-14 15:19:14 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 15:19:14 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-14 15:19:14 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-14 15:19:14 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-14 15:19:14 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-14 15:19:14 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 15:19:14 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-14 15:19:14 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-14 15:19:14 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 15:19:14 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-14 15:19:14 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-14 15:19:14 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-14 15:19:14 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-14 15:19:14 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-14 15:19:14 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 15:19:14 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-14 15:19:14 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-14 15:19:14 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-14 15:19:14 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 15:19:14 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-14 15:19:14 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 15:19:14 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-14 15:19:14 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-14 15:19:14 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-14 15:19:14 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-14 15:19:14 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 15:19:14 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-14 15:19:14 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-14 15:19:14 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 15:19:14 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 15:19:14 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-14 15:19:14 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-14 15:19:14 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-14 15:19:14 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-14 15:19:14 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-14 15:19:14 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-14 15:19:14 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-14 15:19:14 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-14 15:19:14 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-14 15:19:14 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 15:19:14 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-14 15:19:14 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-14 15:19:14 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-14 15:19:14 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-14 15:19:14 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-14 15:19:14 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-14 15:19:14 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-14 15:19:14 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-14 15:19:14 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-14 15:19:14 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-14 15:19:14 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 15:19:14 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-14 15:19:14 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-14 15:19:14 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-14 15:19:14 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-14 15:19:14 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-14 15:19:14 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-14 15:19:14 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-14 15:19:14 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-14 15:19:14 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-14 15:19:14 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-14 15:19:14 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-14 15:19:14 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-14 15:19:14 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 15:19:14 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-14 15:19:14 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-14 15:19:14 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-14 15:19:14 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-14 15:19:14 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 15:19:14 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-14 15:19:14 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-14 15:19:14 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-14 15:19:14 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 15:19:14 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-14 15:19:14 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-14 15:19:14 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-14 15:19:14 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-14 15:19:14 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-14 15:19:14 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-14 15:19:14 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-14 15:19:14 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-14 15:19:14 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-14 15:19:14 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-14 15:19:14 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-14 15:19:14 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-14 15:19:14 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-14 15:19:14 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-14 15:19:14 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-14 15:19:14 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-14 15:19:14 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-14 15:19:14 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 15:19:14 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-14 15:19:14 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 15:19:14 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-14 15:19:14 -Mapped "{[/water/water/queryWater],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.queryWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 15:19:14 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 15:19:14 -Mapped "{[/water/waterCost/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.add()
2019-03-14 15:19:14 -Mapped "{[/water/waterCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long)
2019-03-14 15:19:14 -Mapped "{[/water/waterCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long[])
2019-03-14 15:19:14 -Mapped "{[/water/waterCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.update(com.bootdo.water.domain.WaterCostDO)
2019-03-14 15:19:14 -Mapped "{[/water/waterCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 15:19:14 -Mapped "{[/water/waterCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.save(com.bootdo.water.domain.WaterCostDO)
2019-03-14 15:19:14 -Mapped "{[/water/waterCost],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.WaterCost()
2019-03-14 15:19:14 -Mapped "{[/water/waterCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 15:19:14 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-14 15:19:14 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2019-03-14 15:19:14 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-14 15:19:14 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-14 15:19:14 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-14 15:19:14 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-14 15:19:14 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 15:19:14 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-14 15:19:14 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-14 15:19:14 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-14 15:19:14 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-14 15:19:14 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-14 15:19:14 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-14 15:19:14 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-14 15:19:14 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-14 15:19:14 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-14 15:19:15 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-14 15:19:15 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-14 15:19:15 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-14 15:19:15 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-14 15:19:16 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@78fb9a67: startup date [Thu Mar 14 15:18:56 CST 2019]; root of context hierarchy
2019-03-14 15:19:16 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-14 15:19:16 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-14 15:19:16 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-14 15:19:16 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-14 15:19:16 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-14 15:19:18 -Registering beans for JMX exposure on startup
2019-03-14 15:19:18 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-14 15:19:18 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-14 15:19:18 -Starting beans in phase 2147483647
2019-03-14 15:19:18 -Context refreshed
2019-03-14 15:19:18 -Found 1 custom documentation plugin(s)
2019-03-14 15:19:18 -Scanning for api listing references
2019-03-14 15:19:19 -Generating unique operation named: removeUsingPOST_1
2019-03-14 15:19:19 -Generating unique operation named: addUsingGET_1
2019-03-14 15:19:19 -Generating unique operation named: editUsingGET_1
2019-03-14 15:19:19 -Generating unique operation named: listUsingGET_1
2019-03-14 15:19:19 -Generating unique operation named: removeUsingPOST_2
2019-03-14 15:19:19 -Generating unique operation named: removeUsingPOST_3
2019-03-14 15:19:19 -Generating unique operation named: saveUsingPOST_1
2019-03-14 15:19:19 -Generating unique operation named: updateUsingGET_1
2019-03-14 15:19:19 -Generating unique operation named: updateUsingHEAD_1
2019-03-14 15:19:19 -Generating unique operation named: updateUsingPOST_1
2019-03-14 15:19:19 -Generating unique operation named: updateUsingPUT_1
2019-03-14 15:19:19 -Generating unique operation named: updateUsingPATCH_1
2019-03-14 15:19:19 -Generating unique operation named: updateUsingDELETE_1
2019-03-14 15:19:19 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-14 15:19:19 -Generating unique operation named: updateUsingTRACE_1
2019-03-14 15:19:19 -Generating unique operation named: addUsingGET_2
2019-03-14 15:19:19 -Generating unique operation named: editUsingGET_2
2019-03-14 15:19:19 -Generating unique operation named: listUsingGET_2
2019-03-14 15:19:19 -Generating unique operation named: removeUsingPOST_4
2019-03-14 15:19:19 -Generating unique operation named: removeUsingPOST_5
2019-03-14 15:19:19 -Generating unique operation named: saveUsingPOST_2
2019-03-14 15:19:19 -Generating unique operation named: updateUsingGET_2
2019-03-14 15:19:19 -Generating unique operation named: updateUsingHEAD_2
2019-03-14 15:19:19 -Generating unique operation named: updateUsingPOST_2
2019-03-14 15:19:19 -Generating unique operation named: updateUsingPUT_2
2019-03-14 15:19:19 -Generating unique operation named: updateUsingPATCH_2
2019-03-14 15:19:19 -Generating unique operation named: updateUsingDELETE_2
2019-03-14 15:19:19 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-14 15:19:19 -Generating unique operation named: updateUsingTRACE_2
2019-03-14 15:19:19 -Generating unique operation named: addUsingGET_3
2019-03-14 15:19:19 -Generating unique operation named: editUsingGET_3
2019-03-14 15:19:19 -Generating unique operation named: listUsingGET_3
2019-03-14 15:19:19 -Generating unique operation named: removeUsingPOST_6
2019-03-14 15:19:19 -Generating unique operation named: removeUsingPOST_7
2019-03-14 15:19:19 -Generating unique operation named: saveUsingPOST_3
2019-03-14 15:19:19 -Generating unique operation named: updateUsingGET_3
2019-03-14 15:19:19 -Generating unique operation named: updateUsingHEAD_3
2019-03-14 15:19:19 -Generating unique operation named: updateUsingPOST_3
2019-03-14 15:19:19 -Generating unique operation named: updateUsingPUT_3
2019-03-14 15:19:19 -Generating unique operation named: updateUsingPATCH_3
2019-03-14 15:19:19 -Generating unique operation named: updateUsingDELETE_3
2019-03-14 15:19:19 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-14 15:19:19 -Generating unique operation named: updateUsingTRACE_3
2019-03-14 15:19:19 -Generating unique operation named: addUsingGET_4
2019-03-14 15:19:19 -Generating unique operation named: editUsingGET_4
2019-03-14 15:19:19 -Generating unique operation named: listUsingGET_4
2019-03-14 15:19:19 -Generating unique operation named: removeUsingPOST_8
2019-03-14 15:19:19 -Generating unique operation named: removeUsingPOST_9
2019-03-14 15:19:19 -Generating unique operation named: saveUsingPOST_4
2019-03-14 15:19:19 -Generating unique operation named: updateUsingGET_4
2019-03-14 15:19:19 -Generating unique operation named: updateUsingHEAD_4
2019-03-14 15:19:19 -Generating unique operation named: updateUsingPOST_4
2019-03-14 15:19:19 -Generating unique operation named: updateUsingPUT_4
2019-03-14 15:19:19 -Generating unique operation named: updateUsingPATCH_4
2019-03-14 15:19:19 -Generating unique operation named: updateUsingDELETE_4
2019-03-14 15:19:19 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-14 15:19:19 -Generating unique operation named: updateUsingTRACE_4
2019-03-14 15:19:19 -Generating unique operation named: ElecUsingGET_1
2019-03-14 15:19:19 -Generating unique operation named: addUsingGET_5
2019-03-14 15:19:19 -Generating unique operation named: editUsingGET_5
2019-03-14 15:19:19 -Generating unique operation named: listUsingGET_5
2019-03-14 15:19:19 -Generating unique operation named: removeUsingPOST_10
2019-03-14 15:19:19 -Generating unique operation named: removeUsingPOST_11
2019-03-14 15:19:20 -Generating unique operation named: saveUsingPOST_5
2019-03-14 15:19:20 -Generating unique operation named: updateUsingGET_5
2019-03-14 15:19:20 -Generating unique operation named: updateUsingHEAD_5
2019-03-14 15:19:20 -Generating unique operation named: updateUsingPOST_5
2019-03-14 15:19:20 -Generating unique operation named: updateUsingPUT_5
2019-03-14 15:19:20 -Generating unique operation named: updateUsingPATCH_5
2019-03-14 15:19:20 -Generating unique operation named: updateUsingDELETE_5
2019-03-14 15:19:20 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-14 15:19:20 -Generating unique operation named: updateUsingTRACE_5
2019-03-14 15:19:20 -Generating unique operation named: editUsingGET_6
2019-03-14 15:19:20 -Generating unique operation named: listUsingGET_6
2019-03-14 15:19:20 -Generating unique operation named: updateUsingPOST_6
2019-03-14 15:19:20 -Generating unique operation named: addUsingGET_6
2019-03-14 15:19:20 -Generating unique operation named: editUsingGET_7
2019-03-14 15:19:20 -Generating unique operation named: listUsingGET_7
2019-03-14 15:19:20 -Generating unique operation named: removeUsingPOST_12
2019-03-14 15:19:20 -Generating unique operation named: removeUsingPOST_13
2019-03-14 15:19:20 -Generating unique operation named: saveUsingPOST_6
2019-03-14 15:19:20 -Generating unique operation named: updateUsingGET_6
2019-03-14 15:19:20 -Generating unique operation named: updateUsingHEAD_6
2019-03-14 15:19:20 -Generating unique operation named: updateUsingPOST_7
2019-03-14 15:19:20 -Generating unique operation named: updateUsingPUT_6
2019-03-14 15:19:20 -Generating unique operation named: updateUsingPATCH_6
2019-03-14 15:19:20 -Generating unique operation named: updateUsingDELETE_6
2019-03-14 15:19:20 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-14 15:19:20 -Generating unique operation named: updateUsingTRACE_6
2019-03-14 15:19:20 -Generating unique operation named: addUsingGET_7
2019-03-14 15:19:20 -Generating unique operation named: editUsingGET_8
2019-03-14 15:19:20 -Generating unique operation named: listUsingGET_8
2019-03-14 15:19:20 -Generating unique operation named: removeUsingPOST_14
2019-03-14 15:19:20 -Generating unique operation named: removeUsingPOST_15
2019-03-14 15:19:20 -Generating unique operation named: saveUsingPOST_7
2019-03-14 15:19:20 -Generating unique operation named: updateUsingGET_7
2019-03-14 15:19:20 -Generating unique operation named: updateUsingHEAD_7
2019-03-14 15:19:20 -Generating unique operation named: updateUsingPOST_8
2019-03-14 15:19:20 -Generating unique operation named: updateUsingPUT_7
2019-03-14 15:19:20 -Generating unique operation named: updateUsingPATCH_7
2019-03-14 15:19:20 -Generating unique operation named: updateUsingDELETE_7
2019-03-14 15:19:20 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-14 15:19:20 -Generating unique operation named: updateUsingTRACE_7
2019-03-14 15:19:20 -Generating unique operation named: addUsingGET_8
2019-03-14 15:19:20 -Generating unique operation named: editUsingGET_9
2019-03-14 15:19:20 -Generating unique operation named: listUsingGET_9
2019-03-14 15:19:20 -Generating unique operation named: removeUsingPOST_16
2019-03-14 15:19:20 -Generating unique operation named: removeUsingPOST_17
2019-03-14 15:19:20 -Generating unique operation named: saveUsingPOST_8
2019-03-14 15:19:20 -Generating unique operation named: updateUsingGET_8
2019-03-14 15:19:20 -Generating unique operation named: updateUsingHEAD_8
2019-03-14 15:19:20 -Generating unique operation named: updateUsingPOST_9
2019-03-14 15:19:20 -Generating unique operation named: updateUsingPUT_8
2019-03-14 15:19:20 -Generating unique operation named: updateUsingPATCH_8
2019-03-14 15:19:20 -Generating unique operation named: updateUsingDELETE_8
2019-03-14 15:19:20 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-14 15:19:20 -Generating unique operation named: updateUsingTRACE_8
2019-03-14 15:19:20 -Generating unique operation named: addUsingGET_9
2019-03-14 15:19:20 -Generating unique operation named: editUsingGET_10
2019-03-14 15:19:20 -Generating unique operation named: infoUsingGET_1
2019-03-14 15:19:20 -Generating unique operation named: infoUsingHEAD_1
2019-03-14 15:19:20 -Generating unique operation named: infoUsingPOST_1
2019-03-14 15:19:20 -Generating unique operation named: infoUsingPUT_1
2019-03-14 15:19:20 -Generating unique operation named: infoUsingPATCH_1
2019-03-14 15:19:20 -Generating unique operation named: infoUsingDELETE_1
2019-03-14 15:19:20 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-14 15:19:20 -Generating unique operation named: infoUsingTRACE_1
2019-03-14 15:19:20 -Generating unique operation named: listUsingGET_10
2019-03-14 15:19:20 -Generating unique operation named: removeUsingPOST_18
2019-03-14 15:19:20 -Generating unique operation named: removeUsingPOST_19
2019-03-14 15:19:20 -Generating unique operation named: saveUsingPOST_9
2019-03-14 15:19:20 -Generating unique operation named: updateUsingPOST_10
2019-03-14 15:19:20 -Generating unique operation named: listUsingGET_11
2019-03-14 15:19:20 -Generating unique operation named: removeUsingPOST_20
2019-03-14 15:19:20 -Generating unique operation named: welcomeUsingGET_1
2019-03-14 15:19:20 -Generating unique operation named: addUsingGET_10
2019-03-14 15:19:20 -Generating unique operation named: editUsingGET_11
2019-03-14 15:19:20 -Generating unique operation named: listUsingGET_12
2019-03-14 15:19:20 -Generating unique operation named: removeUsingPOST_21
2019-03-14 15:19:20 -Generating unique operation named: saveUsingPOST_10
2019-03-14 15:19:20 -Generating unique operation named: treeUsingGET_1
2019-03-14 15:19:20 -Generating unique operation named: treeUsingGET_2
2019-03-14 15:19:20 -Generating unique operation named: updateUsingPOST_11
2019-03-14 15:19:20 -Generating unique operation named: addUsingGET_11
2019-03-14 15:19:20 -Generating unique operation named: editUsingGET_12
2019-03-14 15:19:20 -Generating unique operation named: listUsingGET_13
2019-03-14 15:19:20 -Generating unique operation named: removeUsingPOST_22
2019-03-14 15:19:20 -Generating unique operation named: removeUsingPOST_23
2019-03-14 15:19:20 -Generating unique operation named: saveUsingPOST_11
2019-03-14 15:19:20 -Generating unique operation named: updateUsingGET_9
2019-03-14 15:19:20 -Generating unique operation named: updateUsingHEAD_9
2019-03-14 15:19:20 -Generating unique operation named: updateUsingPOST_12
2019-03-14 15:19:20 -Generating unique operation named: updateUsingPUT_9
2019-03-14 15:19:20 -Generating unique operation named: updateUsingPATCH_9
2019-03-14 15:19:20 -Generating unique operation named: updateUsingDELETE_9
2019-03-14 15:19:20 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-14 15:19:20 -Generating unique operation named: updateUsingTRACE_9
2019-03-14 15:19:20 -Generating unique operation named: addUsingGET_12
2019-03-14 15:19:20 -Generating unique operation named: editUsingGET_13
2019-03-14 15:19:20 -Generating unique operation named: listUsingGET_14
2019-03-14 15:19:20 -Generating unique operation named: removeUsingPOST_24
2019-03-14 15:19:20 -Generating unique operation named: removeUsingPOST_25
2019-03-14 15:19:20 -Generating unique operation named: saveUsingPOST_12
2019-03-14 15:19:21 -Generating unique operation named: updateUsingGET_10
2019-03-14 15:19:21 -Generating unique operation named: updateUsingHEAD_10
2019-03-14 15:19:21 -Generating unique operation named: updateUsingPOST_13
2019-03-14 15:19:21 -Generating unique operation named: updateUsingPUT_10
2019-03-14 15:19:21 -Generating unique operation named: updateUsingPATCH_10
2019-03-14 15:19:21 -Generating unique operation named: updateUsingDELETE_10
2019-03-14 15:19:21 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-14 15:19:21 -Generating unique operation named: updateUsingTRACE_10
2019-03-14 15:19:21 -Generating unique operation named: addUsingGET_13
2019-03-14 15:19:21 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-14 15:19:21 -Generating unique operation named: editUsingGET_14
2019-03-14 15:19:21 -Generating unique operation named: listUsingGET_15
2019-03-14 15:19:21 -Generating unique operation named: saveUsingPOST_13
2019-03-14 15:19:21 -Generating unique operation named: saveUsingPOST_14
2019-03-14 15:19:21 -Generating unique operation named: updateUsingPOST_14
2019-03-14 15:19:21 -Generating unique operation named: listUsingGET_16
2019-03-14 15:19:21 -Generating unique operation named: listUsingHEAD_1
2019-03-14 15:19:21 -Generating unique operation named: listUsingPOST_1
2019-03-14 15:19:21 -Generating unique operation named: listUsingPUT_1
2019-03-14 15:19:21 -Generating unique operation named: listUsingPATCH_1
2019-03-14 15:19:21 -Generating unique operation named: listUsingDELETE_1
2019-03-14 15:19:21 -Generating unique operation named: listUsingOPTIONS_1
2019-03-14 15:19:21 -Generating unique operation named: listUsingTRACE_1
2019-03-14 15:19:21 -Generating unique operation named: addUsingGET_14
2019-03-14 15:19:21 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-14 15:19:21 -Generating unique operation named: editUsingGET_15
2019-03-14 15:19:21 -Generating unique operation named: listUsingGET_17
2019-03-14 15:19:21 -Generating unique operation named: removeUsingPOST_26
2019-03-14 15:19:21 -Generating unique operation named: saveUsingPOST_15
2019-03-14 15:19:21 -Generating unique operation named: treeUsingGET_3
2019-03-14 15:19:21 -Generating unique operation named: treeViewUsingGET_1
2019-03-14 15:19:21 -Generating unique operation named: updateUsingPOST_15
2019-03-14 15:19:21 -Generating unique operation named: addUsingGET_15
2019-03-14 15:19:21 -Generating unique operation named: editUsingGET_16
2019-03-14 15:19:21 -Generating unique operation named: listUsingGET_18
2019-03-14 15:19:21 -Generating unique operation named: removeUsingPOST_27
2019-03-14 15:19:21 -Generating unique operation named: removeUsingPOST_28
2019-03-14 15:19:21 -Generating unique operation named: saveUsingPOST_16
2019-03-14 15:19:21 -Generating unique operation named: updateUsingGET_11
2019-03-14 15:19:21 -Generating unique operation named: updateUsingHEAD_11
2019-03-14 15:19:21 -Generating unique operation named: updateUsingPOST_16
2019-03-14 15:19:21 -Generating unique operation named: updateUsingPUT_11
2019-03-14 15:19:21 -Generating unique operation named: updateUsingPATCH_11
2019-03-14 15:19:21 -Generating unique operation named: updateUsingDELETE_11
2019-03-14 15:19:21 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-14 15:19:21 -Generating unique operation named: updateUsingTRACE_11
2019-03-14 15:19:21 -Generating unique operation named: addUsingGET_16
2019-03-14 15:19:21 -Generating unique operation named: editUsingGET_17
2019-03-14 15:19:21 -Generating unique operation named: listUsingGET_19
2019-03-14 15:19:21 -Generating unique operation named: removeUsingPOST_29
2019-03-14 15:19:21 -Generating unique operation named: removeUsingPOST_30
2019-03-14 15:19:21 -Generating unique operation named: saveUsingPOST_17
2019-03-14 15:19:21 -Generating unique operation named: updateUsingGET_12
2019-03-14 15:19:21 -Generating unique operation named: updateUsingHEAD_12
2019-03-14 15:19:21 -Generating unique operation named: updateUsingPOST_17
2019-03-14 15:19:21 -Generating unique operation named: updateUsingPUT_12
2019-03-14 15:19:21 -Generating unique operation named: updateUsingPATCH_12
2019-03-14 15:19:21 -Generating unique operation named: updateUsingDELETE_12
2019-03-14 15:19:21 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-14 15:19:21 -Generating unique operation named: updateUsingTRACE_12
2019-03-14 15:19:21 -Generating unique operation named: addUsingGET_17
2019-03-14 15:19:21 -Generating unique operation named: editUsingGET_18
2019-03-14 15:19:21 -Generating unique operation named: listUsingGET_20
2019-03-14 15:19:21 -Generating unique operation named: removeUsingPOST_31
2019-03-14 15:19:21 -Generating unique operation named: removeUsingPOST_32
2019-03-14 15:19:21 -Generating unique operation named: saveUsingPOST_18
2019-03-14 15:19:21 -Generating unique operation named: updateUsingGET_13
2019-03-14 15:19:21 -Generating unique operation named: updateUsingHEAD_13
2019-03-14 15:19:21 -Generating unique operation named: updateUsingPOST_18
2019-03-14 15:19:21 -Generating unique operation named: updateUsingPUT_13
2019-03-14 15:19:21 -Generating unique operation named: updateUsingPATCH_13
2019-03-14 15:19:21 -Generating unique operation named: updateUsingDELETE_13
2019-03-14 15:19:21 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-14 15:19:21 -Generating unique operation named: updateUsingTRACE_13
2019-03-14 15:19:21 -Generating unique operation named: addUsingGET_18
2019-03-14 15:19:21 -Generating unique operation named: editUsingGET_19
2019-03-14 15:19:21 -Generating unique operation named: listUsingGET_21
2019-03-14 15:19:21 -Generating unique operation named: removeUsingPOST_33
2019-03-14 15:19:21 -Generating unique operation named: removeUsingPOST_34
2019-03-14 15:19:21 -Generating unique operation named: saveUsingPOST_19
2019-03-14 15:19:21 -Generating unique operation named: updateUsingGET_14
2019-03-14 15:19:21 -Generating unique operation named: updateUsingHEAD_14
2019-03-14 15:19:21 -Generating unique operation named: updateUsingPOST_19
2019-03-14 15:19:21 -Generating unique operation named: updateUsingPUT_14
2019-03-14 15:19:21 -Generating unique operation named: updateUsingPATCH_14
2019-03-14 15:19:21 -Generating unique operation named: updateUsingDELETE_14
2019-03-14 15:19:21 -Generating unique operation named: updateUsingOPTIONS_14
2019-03-14 15:19:21 -Generating unique operation named: updateUsingTRACE_14
2019-03-14 15:19:21 -Starting Quartz Scheduler now
2019-03-14 15:19:21 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-14 15:19:21 -Starting...
2019-03-14 15:19:21 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-14 15:19:21 -Started.
2019-03-14 15:19:21 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-14 15:19:21 -Using a shared selector for servlet write/read
2019-03-14 15:19:21 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-14 15:19:21 -Started BootdoApplication in 27.928 seconds (JVM running for 29.479)
2019-03-14 15:19:21 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-14 15:19:22 -==> Parameters: 
2019-03-14 15:19:22 -<==      Total: 1
2019-03-14 15:20:07 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-14 15:20:07 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-14 15:20:07 -FrameworkServlet 'dispatcherServlet': initialization completed in 61 ms
2019-03-14 15:20:07 -Enabling session validation scheduler...
2019-03-14 15:20:08 -请求地址 : http://localhost:8081/
2019-03-14 15:20:08 -HTTP METHOD : GET
2019-03-14 15:20:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-03-14 15:20:08 -参数 : [{}]
2019-03-14 15:20:08 -耗时 : 5
2019-03-14 15:20:08 -返回值 : redirect:/index
2019-03-14 15:20:08 -请求地址 : http://localhost:8081/login;JSESSIONID=e9115e16-f528-411e-95fa-38d6fbc0fa2c
2019-03-14 15:20:08 -HTTP METHOD : GET
2019-03-14 15:20:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-14 15:20:08 -参数 : [{}]
2019-03-14 15:20:08 -耗时 : 2
2019-03-14 15:20:08 -返回值 : login
2019-03-14 15:20:10 -请求地址 : http://localhost:8081/getVerify
2019-03-14 15:20:10 -HTTP METHOD : GET
2019-03-14 15:20:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-14 15:20:10 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@10507d95, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1e9791ef]
2019-03-14 15:20:11 -8787
2019-03-14 15:20:11 -耗时 : 514
2019-03-14 15:20:11 -返回值 : null
2019-03-14 15:20:14 -请求地址 : http://localhost:8081/login
2019-03-14 15:20:14 -HTTP METHOD : POST
2019-03-14 15:20:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-14 15:20:14 -参数 : [admin, 111111, 8787, org.apache.shiro.web.servlet.ShiroHttpServletRequest@4d707893]
2019-03-14 15:20:14 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-14 15:20:14 -==> Parameters: admin(String)
2019-03-14 15:20:14 -<==      Total: 1
2019-03-14 15:20:14 -耗时 : 80
2019-03-14 15:20:14 -返回值 : {msg=操作成功, code=0}
2019-03-14 15:20:14 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-14 15:20:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 15:20:14 -==> Parameters: 1(Long), admin(String), 登录(String), 80(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-14 15:20:14.927(Timestamp)
2019-03-14 15:20:14 -请求地址 : http://localhost:8081/index
2019-03-14 15:20:14 -HTTP METHOD : GET
2019-03-14 15:20:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 15:20:14 -参数 : [{}]
2019-03-14 15:20:15 -<==    Updates: 1
2019-03-14 15:20:15 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 15:20:15 -==> Parameters: 1(Long)
2019-03-14 15:20:15 -<==      Total: 45
2019-03-14 15:20:15 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 15:20:15 -==> Parameters: 138(Long)
2019-03-14 15:20:15 -<==      Total: 1
2019-03-14 15:20:15 -耗时 : 254
2019-03-14 15:20:15 -返回值 : index_v1
2019-03-14 15:20:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 15:20:15 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 255(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 15:20:15.328(Timestamp)
2019-03-14 15:20:15 -<==    Updates: 1
2019-03-14 15:20:15 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-14 15:20:15 -请求地址 : http://localhost:8081/main
2019-03-14 15:20:15 -HTTP METHOD : GET
2019-03-14 15:20:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 15:20:15 -参数 : []
2019-03-14 15:20:15 -耗时 : 1
2019-03-14 15:20:15 -返回值 : main
2019-03-14 15:20:15 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 15:20:15 -HTTP METHOD : GET
2019-03-14 15:20:15 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 15:20:15 -参数 : []
2019-03-14 15:20:15 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 15:20:15 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 15:20:15 -<==      Total: 0
2019-03-14 15:20:15 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 15:20:15 -==> Parameters: 1(Long), 0(String)
2019-03-14 15:20:15 -<==      Total: 1
2019-03-14 15:20:15 -耗时 : 94
2019-03-14 15:20:15 -返回值 : com.bootdo.common.utils.PageUtils@7ed907cd
2019-03-14 15:20:15 -请求地址 : http://localhost:8081/main
2019-03-14 15:20:15 -HTTP METHOD : GET
2019-03-14 15:20:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 15:20:15 -参数 : []
2019-03-14 15:20:15 -耗时 : 0
2019-03-14 15:20:15 -返回值 : main
2019-03-14 15:20:24 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-14 15:20:24 -==> Parameters: 1(Long)
2019-03-14 15:20:24 -<==      Total: 86
2019-03-14 15:20:24 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 15:20:24 -HTTP METHOD : GET
2019-03-14 15:20:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 15:20:24 -参数 : []
2019-03-14 15:20:24 -耗时 : 1
2019-03-14 15:20:24 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 15:20:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 15:20:24 -HTTP METHOD : GET
2019-03-14 15:20:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:20:24 -参数 : [userType]
2019-03-14 15:20:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:20:24 -==> Parameters: userType(String)
2019-03-14 15:20:24 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 15:20:24 -HTTP METHOD : GET
2019-03-14 15:20:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 15:20:24 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 15:20:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-14 15:20:24 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 15:20:24 -<==      Total: 2
2019-03-14 15:20:24 -耗时 : 107
2019-03-14 15:20:24 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 15:20:24 -<==      Total: 3
2019-03-14 15:20:24 -==>  Preparing: select count(*) from elec_log 
2019-03-14 15:20:24 -==> Parameters: 
2019-03-14 15:20:24 -<==      Total: 1
2019-03-14 15:20:24 -耗时 : 84
2019-03-14 15:20:24 -返回值 : com.bootdo.common.utils.PageUtils@47c43028
2019-03-14 15:20:43 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/1
2019-03-14 15:20:43 -HTTP METHOD : GET
2019-03-14 15:20:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-03-14 15:20:43 -参数 : [1, {}]
2019-03-14 15:20:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-03-14 15:20:43 -==> Parameters: 1(Long)
2019-03-14 15:20:43 -<==      Total: 1
2019-03-14 15:20:43 -耗时 : 11
2019-03-14 15:20:43 -返回值 : moneyLog/elecLog/edit
2019-03-14 15:20:43 -请求地址 : http://localhost:8081/common/dict/list/userArea
2019-03-14 15:20:43 -HTTP METHOD : GET
2019-03-14 15:20:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:20:43 -参数 : [userArea]
2019-03-14 15:20:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 15:20:43 -HTTP METHOD : GET
2019-03-14 15:20:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:20:43 -参数 : [userType]
2019-03-14 15:20:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:20:43 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-03-14 15:20:43 -==> Parameters: userArea(String)
2019-03-14 15:20:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:20:43 -==> Parameters: userType(String)
2019-03-14 15:20:43 -HTTP METHOD : GET
2019-03-14 15:20:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:20:43 -参数 : [userOrg]
2019-03-14 15:20:43 -<==      Total: 2
2019-03-14 15:20:43 -耗时 : 9
2019-03-14 15:20:43 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 15:20:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:20:43 -==> Parameters: userOrg(String)
2019-03-14 15:20:43 -<==      Total: 0
2019-03-14 15:20:43 -耗时 : 16
2019-03-14 15:20:43 -返回值 : []
2019-03-14 15:20:43 -<==      Total: 0
2019-03-14 15:20:43 -耗时 : 62
2019-03-14 15:20:43 -返回值 : []
2019-03-14 15:22:23 -请求地址 : http://localhost:8081/
2019-03-14 15:22:23 -HTTP METHOD : GET
2019-03-14 15:22:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-03-14 15:22:23 -参数 : [{}]
2019-03-14 15:22:23 -耗时 : 2
2019-03-14 15:22:23 -返回值 : redirect:/index
2019-03-14 15:22:23 -请求地址 : http://localhost:8081/login;JSESSIONID=ff87c0c3-64aa-430c-8517-6a4070228ac4
2019-03-14 15:22:23 -HTTP METHOD : GET
2019-03-14 15:22:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-14 15:22:23 -参数 : [{}]
2019-03-14 15:22:23 -耗时 : 0
2019-03-14 15:22:23 -返回值 : login
2019-03-14 15:22:24 -请求地址 : http://localhost:8081/getVerify
2019-03-14 15:22:24 -HTTP METHOD : GET
2019-03-14 15:22:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-14 15:22:24 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@2834a3fb, org.apache.shiro.web.servlet.ShiroHttpServletResponse@34520295]
2019-03-14 15:22:24 -7528
2019-03-14 15:22:24 -耗时 : 14
2019-03-14 15:22:24 -返回值 : null
2019-03-14 15:22:24 -请求地址 : http://localhost:8081/login
2019-03-14 15:22:24 -HTTP METHOD : GET
2019-03-14 15:22:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-14 15:22:24 -参数 : [{}]
2019-03-14 15:22:24 -耗时 : 1
2019-03-14 15:22:24 -返回值 : login
2019-03-14 15:22:31 -请求地址 : http://localhost:8081/login
2019-03-14 15:22:31 -HTTP METHOD : POST
2019-03-14 15:22:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-14 15:22:31 -参数 : [admin, 111111, 7528, org.apache.shiro.web.servlet.ShiroHttpServletRequest@356fffa8]
2019-03-14 15:22:31 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-14 15:22:31 -==> Parameters: admin(String)
2019-03-14 15:22:31 -<==      Total: 1
2019-03-14 15:22:31 -耗时 : 92
2019-03-14 15:22:31 -返回值 : {msg=操作成功, code=0}
2019-03-14 15:22:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 15:22:31 -==> Parameters: 1(Long), admin(String), 登录(String), 93(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-14 15:22:31.129(Timestamp)
2019-03-14 15:22:31 -请求地址 : http://localhost:8081/index
2019-03-14 15:22:31 -HTTP METHOD : GET
2019-03-14 15:22:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 15:22:31 -参数 : [{}]
2019-03-14 15:22:31 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 15:22:31 -==> Parameters: 1(Long)
2019-03-14 15:22:31 -<==      Total: 45
2019-03-14 15:22:31 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 15:22:31 -==> Parameters: 138(Long)
2019-03-14 15:22:31 -<==      Total: 1
2019-03-14 15:22:31 -耗时 : 26
2019-03-14 15:22:31 -返回值 : index_v1
2019-03-14 15:22:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 15:22:31 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 26(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 15:22:31.184(Timestamp)
2019-03-14 15:22:31 -<==    Updates: 1
2019-03-14 15:22:31 -请求地址 : http://localhost:8081/main
2019-03-14 15:22:31 -HTTP METHOD : GET
2019-03-14 15:22:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 15:22:31 -参数 : []
2019-03-14 15:22:31 -耗时 : 1
2019-03-14 15:22:31 -返回值 : main
2019-03-14 15:22:31 -<==    Updates: 1
2019-03-14 15:22:31 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 15:22:31 -HTTP METHOD : GET
2019-03-14 15:22:31 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 15:22:32 -参数 : []
2019-03-14 15:22:32 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 15:22:32 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 15:22:32 -<==      Total: 0
2019-03-14 15:22:32 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 15:22:32 -==> Parameters: 1(Long), 0(String)
2019-03-14 15:22:32 -<==      Total: 1
2019-03-14 15:22:32 -耗时 : 11
2019-03-14 15:22:32 -返回值 : com.bootdo.common.utils.PageUtils@2498edbf
2019-03-14 15:22:32 -请求地址 : http://localhost:8081/main
2019-03-14 15:22:32 -HTTP METHOD : GET
2019-03-14 15:22:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 15:22:32 -参数 : []
2019-03-14 15:22:32 -耗时 : 1
2019-03-14 15:22:32 -返回值 : main
2019-03-14 15:22:38 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-14 15:22:38 -==> Parameters: 1(Long)
2019-03-14 15:22:38 -<==      Total: 86
2019-03-14 15:22:38 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 15:22:38 -HTTP METHOD : GET
2019-03-14 15:22:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 15:22:38 -参数 : []
2019-03-14 15:22:38 -耗时 : 0
2019-03-14 15:22:38 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 15:22:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 15:22:39 -HTTP METHOD : GET
2019-03-14 15:22:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:22:39 -参数 : [userType]
2019-03-14 15:22:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:22:39 -==> Parameters: userType(String)
2019-03-14 15:22:39 -<==      Total: 2
2019-03-14 15:22:39 -耗时 : 5
2019-03-14 15:22:39 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 15:22:39 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 15:22:39 -HTTP METHOD : GET
2019-03-14 15:22:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 15:22:39 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 15:22:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-14 15:22:39 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 15:22:39 -<==      Total: 3
2019-03-14 15:22:39 -==>  Preparing: select count(*) from elec_log 
2019-03-14 15:22:39 -==> Parameters: 
2019-03-14 15:22:39 -<==      Total: 1
2019-03-14 15:22:39 -耗时 : 126
2019-03-14 15:22:39 -返回值 : com.bootdo.common.utils.PageUtils@178eb1ca
2019-03-14 15:22:40 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/1
2019-03-14 15:22:40 -HTTP METHOD : GET
2019-03-14 15:22:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-03-14 15:22:40 -参数 : [1, {}]
2019-03-14 15:22:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-03-14 15:22:40 -==> Parameters: 1(Long)
2019-03-14 15:22:40 -<==      Total: 1
2019-03-14 15:22:40 -耗时 : 6
2019-03-14 15:22:40 -返回值 : moneyLog/elecLog/edit
2019-03-14 15:22:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 15:22:40 -HTTP METHOD : GET
2019-03-14 15:22:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:22:40 -参数 : [userType]
2019-03-14 15:22:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:22:40 -==> Parameters: userType(String)
2019-03-14 15:22:40 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-03-14 15:22:40 -HTTP METHOD : GET
2019-03-14 15:22:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:22:40 -参数 : [userOrg]
2019-03-14 15:22:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:22:40 -==> Parameters: userOrg(String)
2019-03-14 15:22:40 -<==      Total: 2
2019-03-14 15:22:40 -耗时 : 8
2019-03-14 15:22:40 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 15:22:40 -<==      Total: 0
2019-03-14 15:22:40 -耗时 : 8
2019-03-14 15:22:40 -返回值 : []
2019-03-14 15:23:24 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-14 15:23:24 -HTTP METHOD : GET
2019-03-14 15:23:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-14 15:23:24 -参数 : []
2019-03-14 15:23:24 -耗时 : 1
2019-03-14 15:23:24 -返回值 : /moneyLog/waterLog/waterLog
2019-03-14 15:23:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 15:23:24 -HTTP METHOD : GET
2019-03-14 15:23:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:23:24 -参数 : [userType]
2019-03-14 15:23:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:23:24 -==> Parameters: userType(String)
2019-03-14 15:23:24 -<==      Total: 2
2019-03-14 15:23:24 -耗时 : 5
2019-03-14 15:23:24 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 15:23:24 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-14 15:23:24 -HTTP METHOD : GET
2019-03-14 15:23:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-14 15:23:24 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 15:23:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-14 15:23:25 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 15:23:25 -<==      Total: 3
2019-03-14 15:23:25 -==>  Preparing: select count(*) from water_log 
2019-03-14 15:23:25 -==> Parameters: 
2019-03-14 15:23:25 -<==      Total: 1
2019-03-14 15:23:25 -耗时 : 76
2019-03-14 15:23:25 -返回值 : com.bootdo.common.utils.PageUtils@1c25014d
2019-03-14 15:23:25 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 15:23:25 -HTTP METHOD : GET
2019-03-14 15:23:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 15:23:25 -参数 : []
2019-03-14 15:23:25 -耗时 : 1
2019-03-14 15:23:25 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 15:23:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 15:23:25 -HTTP METHOD : GET
2019-03-14 15:23:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:23:25 -参数 : [userType]
2019-03-14 15:23:25 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 15:23:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:23:25 -HTTP METHOD : GET
2019-03-14 15:23:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 15:23:25 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 15:23:25 -==> Parameters: userType(String)
2019-03-14 15:23:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-14 15:23:25 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 15:23:25 -<==      Total: 2
2019-03-14 15:23:25 -耗时 : 6
2019-03-14 15:23:25 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 15:23:25 -<==      Total: 3
2019-03-14 15:23:25 -==>  Preparing: select count(*) from elec_log 
2019-03-14 15:23:25 -==> Parameters: 
2019-03-14 15:23:25 -<==      Total: 1
2019-03-14 15:23:25 -耗时 : 13
2019-03-14 15:23:25 -返回值 : com.bootdo.common.utils.PageUtils@3909a0f7
2019-03-14 15:23:27 -请求地址 : http://localhost:8081/moneyLog/elecLog/add
2019-03-14 15:23:27 -HTTP METHOD : GET
2019-03-14 15:23:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.add
2019-03-14 15:23:27 -参数 : []
2019-03-14 15:23:27 -耗时 : 1
2019-03-14 15:23:27 -返回值 : moneyLog/elecLog/add
2019-03-14 15:24:27 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 15:24:27 -HTTP METHOD : GET
2019-03-14 15:24:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 15:24:27 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, createTime=, type=A}]
2019-03-14 15:24:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? order by id asc limit ?, ? 
2019-03-14 15:24:27 -==> Parameters: A(String), 0(Integer), 10(Integer)
2019-03-14 15:24:27 -<==      Total: 2
2019-03-14 15:24:27 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? 
2019-03-14 15:24:27 -==> Parameters: A(String)
2019-03-14 15:24:27 -<==      Total: 1
2019-03-14 15:24:27 -耗时 : 54
2019-03-14 15:24:27 -返回值 : com.bootdo.common.utils.PageUtils@50ff6b56
2019-03-14 15:24:28 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-14 15:24:28 -HTTP METHOD : GET
2019-03-14 15:24:28 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-14 15:24:28 -参数 : []
2019-03-14 15:24:28 -耗时 : 0
2019-03-14 15:24:28 -返回值 : system/dept/deptTree
2019-03-14 15:24:28 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-14 15:24:28 -HTTP METHOD : GET
2019-03-14 15:24:28 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-14 15:24:28 -参数 : []
2019-03-14 15:24:28 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-14 15:24:28 -==> Parameters: 
2019-03-14 15:24:28 -<==      Total: 3
2019-03-14 15:24:28 -耗时 : 30
2019-03-14 15:24:28 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-14 15:24:31 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 15:24:31 -HTTP METHOD : GET
2019-03-14 15:24:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 15:24:31 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, createTime=}]
2019-03-14 15:24:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? order by id asc limit ?, ? 
2019-03-14 15:24:31 -==> Parameters: A(String), 2(String), 0(Integer), 10(Integer)
2019-03-14 15:24:31 -<==      Total: 2
2019-03-14 15:24:31 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and user_org = ? 
2019-03-14 15:24:31 -==> Parameters: A(String), 2(String)
2019-03-14 15:24:31 -<==      Total: 1
2019-03-14 15:24:31 -耗时 : 12
2019-03-14 15:24:31 -返回值 : com.bootdo.common.utils.PageUtils@43f01202
2019-03-14 15:24:32 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 15:24:32 -HTTP METHOD : GET
2019-03-14 15:24:32 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 15:24:32 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, createTime=}]
2019-03-14 15:24:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? order by id asc limit ?, ? 
2019-03-14 15:24:32 -==> Parameters: A(String), 2(String), 0(Integer), 10(Integer)
2019-03-14 15:24:32 -<==      Total: 2
2019-03-14 15:24:32 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and user_org = ? 
2019-03-14 15:24:32 -==> Parameters: A(String), 2(String)
2019-03-14 15:24:32 -<==      Total: 1
2019-03-14 15:24:32 -耗时 : 15
2019-03-14 15:24:32 -返回值 : com.bootdo.common.utils.PageUtils@3a7c5aa0
2019-03-14 15:24:34 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-14 15:24:34 -HTTP METHOD : GET
2019-03-14 15:24:34 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-14 15:24:34 -参数 : []
2019-03-14 15:24:34 -耗时 : 1
2019-03-14 15:24:34 -返回值 : system/dept/deptTree
2019-03-14 15:24:34 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-14 15:24:34 -HTTP METHOD : GET
2019-03-14 15:24:34 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-14 15:24:34 -参数 : []
2019-03-14 15:24:34 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-14 15:24:34 -==> Parameters: 
2019-03-14 15:24:34 -<==      Total: 3
2019-03-14 15:24:34 -耗时 : 4
2019-03-14 15:24:34 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-14 15:24:36 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 15:24:36 -HTTP METHOD : GET
2019-03-14 15:24:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 15:24:36 -参数 : [{limit=10, offset=0, userType=A, userOrg=3, userId=, createTime=}]
2019-03-14 15:24:36 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? order by id asc limit ?, ? 
2019-03-14 15:24:36 -==> Parameters: A(String), 3(String), 0(Integer), 10(Integer)
2019-03-14 15:24:36 -<==      Total: 0
2019-03-14 15:24:36 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and user_org = ? 
2019-03-14 15:24:36 -==> Parameters: A(String), 3(String)
2019-03-14 15:24:36 -<==      Total: 1
2019-03-14 15:24:36 -耗时 : 8
2019-03-14 15:24:36 -返回值 : com.bootdo.common.utils.PageUtils@330d34de
2019-03-14 15:24:47 -请求地址 : http://localhost:8081/print/print
2019-03-14 15:24:47 -HTTP METHOD : GET
2019-03-14 15:24:47 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-14 15:24:47 -参数 : []
2019-03-14 15:24:47 -耗时 : 2
2019-03-14 15:24:47 -返回值 : print/print/print
2019-03-14 15:24:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 15:24:47 -HTTP METHOD : GET
2019-03-14 15:24:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:24:47 -参数 : [userType]
2019-03-14 15:24:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:24:47 -==> Parameters: userType(String)
2019-03-14 15:24:47 -<==      Total: 2
2019-03-14 15:24:47 -耗时 : 5
2019-03-14 15:24:47 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 15:24:47 -请求地址 : http://localhost:8081/print/print/list
2019-03-14 15:24:47 -HTTP METHOD : GET
2019-03-14 15:24:47 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-14 15:24:47 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 15:24:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-14 15:24:47 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 15:24:47 -<==      Total: 3
2019-03-14 15:24:47 -==>  Preparing: select count(*) from print 
2019-03-14 15:24:47 -==> Parameters: 
2019-03-14 15:24:47 -<==      Total: 1
2019-03-14 15:24:47 -耗时 : 103
2019-03-14 15:24:47 -返回值 : com.bootdo.common.utils.PageUtils@5e8a1773
2019-03-14 15:24:56 -请求地址 : http://localhost:8081/print/print/list
2019-03-14 15:24:56 -HTTP METHOD : GET
2019-03-14 15:24:56 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-14 15:24:56 -参数 : [{limit=10, offset=0, userType=B, userOrg=, userId=, createTime=, type=B}]
2019-03-14 15:24:56 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? order by id asc limit ?, ? 
2019-03-14 15:24:56 -==> Parameters: B(String), 0(Integer), 10(Integer)
2019-03-14 15:24:56 -<==      Total: 1
2019-03-14 15:24:56 -==>  Preparing: select count(*) from print WHERE user_type = ? 
2019-03-14 15:24:56 -==> Parameters: B(String)
2019-03-14 15:24:56 -<==      Total: 1
2019-03-14 15:24:56 -耗时 : 23
2019-03-14 15:24:56 -返回值 : com.bootdo.common.utils.PageUtils@4bf86173
2019-03-14 15:24:57 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-14 15:24:57 -HTTP METHOD : GET
2019-03-14 15:24:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-14 15:24:57 -参数 : []
2019-03-14 15:24:57 -耗时 : 1
2019-03-14 15:24:57 -返回值 : system/dept/deptTree
2019-03-14 15:24:57 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-14 15:24:57 -HTTP METHOD : GET
2019-03-14 15:24:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-14 15:24:57 -参数 : []
2019-03-14 15:24:57 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-14 15:24:57 -==> Parameters: 
2019-03-14 15:24:57 -<==      Total: 3
2019-03-14 15:24:57 -耗时 : 4
2019-03-14 15:24:57 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-14 15:25:00 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-14 15:25:00 -HTTP METHOD : GET
2019-03-14 15:25:00 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-14 15:25:00 -参数 : []
2019-03-14 15:25:00 -耗时 : 1
2019-03-14 15:25:00 -返回值 : system/dept/deptTree
2019-03-14 15:25:00 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-14 15:25:00 -HTTP METHOD : GET
2019-03-14 15:25:00 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-14 15:25:00 -参数 : []
2019-03-14 15:25:00 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-14 15:25:00 -==> Parameters: 
2019-03-14 15:25:00 -<==      Total: 3
2019-03-14 15:25:00 -耗时 : 3
2019-03-14 15:25:00 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-14 15:25:02 -请求地址 : http://localhost:8081/print/print/list
2019-03-14 15:25:02 -HTTP METHOD : GET
2019-03-14 15:25:02 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-14 15:25:02 -参数 : [{limit=10, offset=0, userType=B, userOrg=3, userId=, createTime=}]
2019-03-14 15:25:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? order by id asc limit ?, ? 
2019-03-14 15:25:02 -==> Parameters: B(String), 3(String), 0(Integer), 10(Integer)
2019-03-14 15:25:02 -<==      Total: 1
2019-03-14 15:25:02 -==>  Preparing: select count(*) from print WHERE user_type = ? and user_org = ? 
2019-03-14 15:25:02 -==> Parameters: B(String), 3(String)
2019-03-14 15:25:02 -<==      Total: 1
2019-03-14 15:25:02 -耗时 : 20
2019-03-14 15:25:02 -返回值 : com.bootdo.common.utils.PageUtils@5579060
2019-03-14 15:25:04 -请求地址 : http://localhost:8081/print/print/list
2019-03-14 15:25:04 -HTTP METHOD : GET
2019-03-14 15:25:04 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-14 15:25:04 -参数 : [{limit=10, offset=0, userType=A, userOrg=3, userId=, createTime=, type=A}]
2019-03-14 15:25:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? order by id asc limit ?, ? 
2019-03-14 15:25:04 -==> Parameters: A(String), 3(String), 0(Integer), 10(Integer)
2019-03-14 15:25:04 -<==      Total: 0
2019-03-14 15:25:04 -==>  Preparing: select count(*) from print WHERE user_type = ? and user_org = ? 
2019-03-14 15:25:04 -==> Parameters: A(String), 3(String)
2019-03-14 15:25:04 -<==      Total: 1
2019-03-14 15:25:04 -耗时 : 14
2019-03-14 15:25:04 -返回值 : com.bootdo.common.utils.PageUtils@6a94d6f1
2019-03-14 15:25:06 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-14 15:25:06 -HTTP METHOD : GET
2019-03-14 15:25:06 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-14 15:25:06 -参数 : []
2019-03-14 15:25:06 -耗时 : 1
2019-03-14 15:25:06 -返回值 : system/dept/deptTree
2019-03-14 15:25:06 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-14 15:25:06 -HTTP METHOD : GET
2019-03-14 15:25:06 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-14 15:25:06 -参数 : []
2019-03-14 15:25:06 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-14 15:25:06 -==> Parameters: 
2019-03-14 15:25:06 -<==      Total: 3
2019-03-14 15:25:06 -耗时 : 7
2019-03-14 15:25:06 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-14 15:25:08 -请求地址 : http://localhost:8081/print/print/list
2019-03-14 15:25:08 -HTTP METHOD : GET
2019-03-14 15:25:08 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-14 15:25:08 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, createTime=}]
2019-03-14 15:25:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE user_type = ? and user_org = ? order by id asc limit ?, ? 
2019-03-14 15:25:08 -==> Parameters: A(String), 2(String), 0(Integer), 10(Integer)
2019-03-14 15:25:08 -<==      Total: 2
2019-03-14 15:25:08 -==>  Preparing: select count(*) from print WHERE user_type = ? and user_org = ? 
2019-03-14 15:25:08 -==> Parameters: A(String), 2(String)
2019-03-14 15:25:08 -<==      Total: 1
2019-03-14 15:25:08 -耗时 : 11
2019-03-14 15:25:08 -返回值 : com.bootdo.common.utils.PageUtils@4de17e99
2019-03-14 15:25:23 -请求地址 : http://localhost:8081/index
2019-03-14 15:25:23 -HTTP METHOD : GET
2019-03-14 15:25:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 15:25:23 -参数 : [{}]
2019-03-14 15:25:23 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 15:25:23 -==> Parameters: 1(Long)
2019-03-14 15:25:23 -<==      Total: 45
2019-03-14 15:25:23 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 15:25:23 -==> Parameters: 138(Long)
2019-03-14 15:25:23 -<==      Total: 1
2019-03-14 15:25:23 -耗时 : 28
2019-03-14 15:25:23 -返回值 : index_v1
2019-03-14 15:25:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 15:25:23 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 28(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 15:25:23.8(Timestamp)
2019-03-14 15:25:23 -<==    Updates: 1
2019-03-14 15:25:24 -请求地址 : http://localhost:8081/main
2019-03-14 15:25:24 -HTTP METHOD : GET
2019-03-14 15:25:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 15:25:24 -参数 : []
2019-03-14 15:25:24 -耗时 : 0
2019-03-14 15:25:24 -返回值 : main
2019-03-14 15:25:24 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 15:25:24 -HTTP METHOD : GET
2019-03-14 15:25:24 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 15:25:24 -参数 : []
2019-03-14 15:25:24 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 15:25:24 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 15:25:24 -<==      Total: 0
2019-03-14 15:25:24 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 15:25:24 -==> Parameters: 1(Long), 0(String)
2019-03-14 15:25:24 -<==      Total: 1
2019-03-14 15:25:24 -耗时 : 11
2019-03-14 15:25:24 -返回值 : com.bootdo.common.utils.PageUtils@2fbf2a26
2019-03-14 15:25:24 -请求地址 : http://localhost:8081/main
2019-03-14 15:25:24 -HTTP METHOD : GET
2019-03-14 15:25:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 15:25:24 -参数 : []
2019-03-14 15:25:24 -耗时 : 1
2019-03-14 15:25:24 -返回值 : main
2019-03-14 15:25:26 -请求地址 : http://localhost:8081/print/print
2019-03-14 15:25:26 -HTTP METHOD : GET
2019-03-14 15:25:26 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-14 15:25:26 -参数 : []
2019-03-14 15:25:26 -耗时 : 0
2019-03-14 15:25:26 -返回值 : print/print/print
2019-03-14 15:25:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 15:25:26 -HTTP METHOD : GET
2019-03-14 15:25:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:25:26 -参数 : [userType]
2019-03-14 15:25:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:25:26 -==> Parameters: userType(String)
2019-03-14 15:25:26 -<==      Total: 2
2019-03-14 15:25:26 -耗时 : 8
2019-03-14 15:25:26 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 15:25:26 -请求地址 : http://localhost:8081/print/print/list
2019-03-14 15:25:26 -HTTP METHOD : GET
2019-03-14 15:25:26 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-14 15:25:26 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 15:25:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-14 15:25:26 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 15:25:26 -<==      Total: 3
2019-03-14 15:25:26 -==>  Preparing: select count(*) from print 
2019-03-14 15:25:26 -==> Parameters: 
2019-03-14 15:25:26 -<==      Total: 1
2019-03-14 15:25:26 -耗时 : 11
2019-03-14 15:25:26 -返回值 : com.bootdo.common.utils.PageUtils@39d97859
2019-03-14 15:25:42 -请求地址 : http://localhost:8081/print/print/list
2019-03-14 15:25:42 -HTTP METHOD : GET
2019-03-14 15:25:42 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-14 15:25:42 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-02-23}]
2019-03-14 15:25:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-14 15:25:42 -==> Parameters: 2019-02-23 00:00:00(String), 2019-02-23 23:59:59(String), 0(Integer), 10(Integer)
2019-03-14 15:25:42 -<==      Total: 1
2019-03-14 15:25:42 -==>  Preparing: select count(*) from print WHERE `create_time` >= ? and `create_time` <= ? 
2019-03-14 15:25:42 -==> Parameters: 2019-02-23 00:00:00(String), 2019-02-23 23:59:59(String)
2019-03-14 15:25:42 -<==      Total: 1
2019-03-14 15:25:42 -耗时 : 16
2019-03-14 15:25:42 -返回值 : com.bootdo.common.utils.PageUtils@547d08ea
2019-03-14 15:25:43 -请求地址 : http://localhost:8081/print/print/list
2019-03-14 15:25:43 -HTTP METHOD : GET
2019-03-14 15:25:43 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-14 15:25:43 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-02-23}]
2019-03-14 15:25:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-14 15:25:43 -==> Parameters: 2019-02-23 00:00:00(String), 2019-02-23 23:59:59(String), 0(Integer), 10(Integer)
2019-03-14 15:25:43 -<==      Total: 1
2019-03-14 15:25:43 -==>  Preparing: select count(*) from print WHERE `create_time` >= ? and `create_time` <= ? 
2019-03-14 15:25:43 -==> Parameters: 2019-02-23 00:00:00(String), 2019-02-23 23:59:59(String)
2019-03-14 15:25:43 -<==      Total: 1
2019-03-14 15:25:43 -耗时 : 10
2019-03-14 15:25:43 -返回值 : com.bootdo.common.utils.PageUtils@11039381
2019-03-14 15:25:44 -请求地址 : http://localhost:8081/print/print/list
2019-03-14 15:25:44 -HTTP METHOD : GET
2019-03-14 15:25:44 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-14 15:25:44 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=2019-02-23}]
2019-03-14 15:25:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print WHERE `create_time` >= ? and `create_time` <= ? order by id asc limit ?, ? 
2019-03-14 15:25:44 -==> Parameters: 2019-02-23 00:00:00(String), 2019-02-23 23:59:59(String), 0(Integer), 10(Integer)
2019-03-14 15:25:44 -<==      Total: 1
2019-03-14 15:25:44 -==>  Preparing: select count(*) from print WHERE `create_time` >= ? and `create_time` <= ? 
2019-03-14 15:25:44 -==> Parameters: 2019-02-23 00:00:00(String), 2019-02-23 23:59:59(String)
2019-03-14 15:25:44 -<==      Total: 1
2019-03-14 15:25:44 -耗时 : 11
2019-03-14 15:25:44 -返回值 : com.bootdo.common.utils.PageUtils@1be88ce6
2019-03-14 15:26:00 -请求地址 : http://localhost:8081/print/print/add
2019-03-14 15:26:00 -HTTP METHOD : GET
2019-03-14 15:26:00 -CLASS_METHOD : com.bootdo.print.controller.PrintController.add
2019-03-14 15:26:00 -参数 : []
2019-03-14 15:26:00 -耗时 : 1
2019-03-14 15:26:00 -返回值 : print/print/add
2019-03-14 15:26:00 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 15:26:00 -HTTP METHOD : GET
2019-03-14 15:26:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:26:00 -参数 : [userType]
2019-03-14 15:26:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:26:00 -==> Parameters: userType(String)
2019-03-14 15:26:00 -<==      Total: 2
2019-03-14 15:26:00 -耗时 : 5
2019-03-14 15:26:00 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 15:26:16 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-14 15:26:16 -HTTP METHOD : GET
2019-03-14 15:26:16 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-14 15:26:16 -参数 : []
2019-03-14 15:26:16 -耗时 : 0
2019-03-14 15:26:16 -返回值 : system/dept/deptTree
2019-03-14 15:26:16 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-14 15:26:16 -HTTP METHOD : GET
2019-03-14 15:26:16 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-14 15:26:16 -参数 : []
2019-03-14 15:26:16 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-14 15:26:16 -==> Parameters: 
2019-03-14 15:26:16 -<==      Total: 3
2019-03-14 15:26:16 -耗时 : 80
2019-03-14 15:26:16 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-14 15:29:09 -请求地址 : http://localhost:8081/oa/notify
2019-03-14 15:29:09 -HTTP METHOD : GET
2019-03-14 15:29:09 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.oaNotify
2019-03-14 15:29:09 -参数 : []
2019-03-14 15:29:09 -耗时 : 1
2019-03-14 15:29:09 -返回值 : oa/notify/notify
2019-03-14 15:29:10 -请求地址 : http://localhost:8081/oa/notify/list
2019-03-14 15:29:10 -HTTP METHOD : GET
2019-03-14 15:29:10 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.list
2019-03-14 15:29:10 -参数 : [{limit=10, offset=0}]
2019-03-14 15:29:10 -==>  Preparing: select `id`,`type`,`title`,`content`,`files`,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify order by id desc limit ?, ? 
2019-03-14 15:29:10 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 15:29:10 -<==      Total: 5
2019-03-14 15:29:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE value = ? and type = ? order by id desc 
2019-03-14 15:29:10 -==> Parameters: 3(String), oa_notify_type(String)
2019-03-14 15:29:10 -<==      Total: 1
2019-03-14 15:29:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE value = ? and type = ? order by id desc 
2019-03-14 15:29:10 -==> Parameters: 3(String), oa_notify_type(String)
2019-03-14 15:29:10 -<==      Total: 1
2019-03-14 15:29:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE value = ? and type = ? order by id desc 
2019-03-14 15:29:10 -==> Parameters: 3(String), oa_notify_type(String)
2019-03-14 15:29:10 -<==      Total: 1
2019-03-14 15:29:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE value = ? and type = ? order by id desc 
2019-03-14 15:29:10 -==> Parameters: 3(String), oa_notify_type(String)
2019-03-14 15:29:10 -<==      Total: 1
2019-03-14 15:29:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE value = ? and type = ? order by id desc 
2019-03-14 15:29:10 -==> Parameters: 3(String), oa_notify_type(String)
2019-03-14 15:29:10 -<==      Total: 1
2019-03-14 15:29:10 -==>  Preparing: select count(*) from oa_notify 
2019-03-14 15:29:10 -==> Parameters: 
2019-03-14 15:29:10 -<==      Total: 1
2019-03-14 15:29:10 -耗时 : 188
2019-03-14 15:29:10 -返回值 : com.bootdo.common.utils.PageUtils@7aee68b6
2019-03-14 15:29:32 -请求地址 : http://localhost:8081/oa/notify/selfNotify
2019-03-14 15:29:32 -HTTP METHOD : GET
2019-03-14 15:29:32 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.selefNotify
2019-03-14 15:29:32 -参数 : []
2019-03-14 15:29:32 -耗时 : 0
2019-03-14 15:29:32 -返回值 : oa/notify/selfNotify
2019-03-14 15:29:32 -请求地址 : http://localhost:8081/oa/notify/selfList
2019-03-14 15:29:32 -HTTP METHOD : GET
2019-03-14 15:29:32 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.selfList
2019-03-14 15:29:32 -参数 : [{limit=10, offset=0}]
2019-03-14 15:29:32 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 15:29:32 -==> Parameters: 1(Long), 0(Integer), 10(Integer)
2019-03-14 15:29:32 -<==      Total: 5
2019-03-14 15:29:32 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2019-03-14 15:29:32 -==> Parameters: 1(Long)
2019-03-14 15:29:32 -<==      Total: 1
2019-03-14 15:29:32 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2019-03-14 15:29:32 -==> Parameters: 1(Long)
2019-03-14 15:29:32 -<==      Total: 1
2019-03-14 15:29:32 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2019-03-14 15:29:32 -==> Parameters: 1(Long)
2019-03-14 15:29:32 -<==      Total: 1
2019-03-14 15:29:32 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2019-03-14 15:29:32 -==> Parameters: 1(Long)
2019-03-14 15:29:32 -<==      Total: 1
2019-03-14 15:29:32 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2019-03-14 15:29:32 -==> Parameters: 1(Long)
2019-03-14 15:29:32 -<==      Total: 1
2019-03-14 15:29:32 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 15:29:32 -==> Parameters: 1(Long), null
2019-03-14 15:29:32 -<==      Total: 1
2019-03-14 15:29:32 -耗时 : 169
2019-03-14 15:29:32 -返回值 : com.bootdo.common.utils.PageUtils@640000e8
2019-03-14 15:30:16 -请求地址 : http://localhost:8081/sys/online
2019-03-14 15:30:16 -HTTP METHOD : GET
2019-03-14 15:30:16 -CLASS_METHOD : com.bootdo.system.controller.SessionController.online
2019-03-14 15:30:16 -参数 : []
2019-03-14 15:30:16 -耗时 : 17
2019-03-14 15:30:16 -返回值 : system/online/online
2019-03-14 15:30:16 -请求地址 : http://localhost:8081/sys/online/list
2019-03-14 15:30:16 -HTTP METHOD : GET
2019-03-14 15:30:16 -CLASS_METHOD : com.bootdo.system.controller.SessionController.list
2019-03-14 15:30:16 -参数 : []
2019-03-14 15:30:16 -耗时 : 0
2019-03-14 15:30:16 -返回值 : [com.bootdo.system.domain.UserOnline@7c2faaed, com.bootdo.system.domain.UserOnline@530d255f]
2019-03-14 15:31:02 -请求地址 : http://localhost:8081/common/log
2019-03-14 15:31:02 -HTTP METHOD : GET
2019-03-14 15:31:02 -CLASS_METHOD : com.bootdo.common.controller.LogController.log
2019-03-14 15:31:02 -参数 : []
2019-03-14 15:31:02 -耗时 : 0
2019-03-14 15:31:02 -返回值 : common/log/log
2019-03-14 15:31:02 -请求地址 : http://localhost:8081/common/log/list
2019-03-14 15:31:02 -HTTP METHOD : GET
2019-03-14 15:31:02 -CLASS_METHOD : com.bootdo.common.controller.LogController.list
2019-03-14 15:31:02 -参数 : [{limit=10, offset=0, sort=gmt_create, order=desc, operation=, username=}]
2019-03-14 15:31:02 -==>  Preparing: select count(*) from sys_log 
2019-03-14 15:31:02 -==> Parameters: 
2019-03-14 15:31:02 -<==      Total: 1
2019-03-14 15:31:03 -==>  Preparing: select `id`,`user_id`,`username`,`operation`,`time`,`method`,`params`,`ip`,`gmt_create` from sys_log order by gmt_create desc limit ?, ? 
2019-03-14 15:31:03 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 15:31:03 -<==      Total: 10
2019-03-14 15:31:03 -耗时 : 102
2019-03-14 15:31:03 -返回值 : PageDO{offset=0, limit=10, total=166, params={}, param='', rows=[LogDO{id=2080, userId=1, username='admin', operation='请求访问主页', time=28, method='com.bootdo.system.controller.LoginController.index()', params='{"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h', ip='127.0.0.1', gmtCreate=Thu Mar 14 15:25:24 CST 2019}, LogDO{id=2078, userId=1, username='admin', operation='登录', time=93, method='com.bootdo.system.controller.LoginController.ajaxLogin()', params='null', ip='127.0.0.1', gmtCreate=Thu Mar 14 15:22:31 CST 2019}, LogDO{id=2079, userId=1, username='admin', operation='请求访问主页', time=26, method='com.bootdo.system.controller.LoginController.index()', params='{"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h', ip='127.0.0.1', gmtCreate=Thu Mar 14 15:22:31 CST 2019}, LogDO{id=2076, userId=1, username='admin', operation='登录', time=80, method='com.bootdo.system.controller.LoginController.ajaxLogin()', params='null', ip='127.0.0.1', gmtCreate=Thu Mar 14 15:20:15 CST 2019}, LogDO{id=2077, userId=1, username='admin', operation='请求访问主页', time=255, method='com.bootdo.system.controller.LoginController.index()', params='{"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h', ip='127.0.0.1', gmtCreate=Thu Mar 14 15:20:15 CST 2019}, LogDO{id=2075, userId=1, username='admin', operation='请求访问主页', time=72, method='com.bootdo.system.controller.LoginController.index()', params='{"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h', ip='127.0.0.1', gmtCreate=Thu Mar 14 15:10:47 CST 2019}, LogDO{id=2074, userId=1, username='admin', operation='请求访问主页', time=29, method='com.bootdo.system.controller.LoginController.index()', params='{"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h', ip='127.0.0.1', gmtCreate=Thu Mar 14 15:06:42 CST 2019}, LogDO{id=2073, userId=1, username='admin', operation='请求访问主页', time=22, method='com.bootdo.system.controller.LoginController.index()', params='{"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h', ip='127.0.0.1', gmtCreate=Thu Mar 14 14:59:13 CST 2019}, LogDO{id=2072, userId=1, username='admin', operation='error', time=null, method='http://localhost:8081/sys/user/personal', params='java.lang.NullPointerException', ip='null', gmtCreate=Thu Mar 14 14:49:32 CST 2019}, LogDO{id=2071, userId=1, username='admin', operation='请求访问主页', time=25, method='com.bootdo.system.controller.LoginController.index()', params='{"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h', ip='127.0.0.1', gmtCreate=Thu Mar 14 14:49:17 CST 2019}]}
2019-03-14 15:31:17 -请求地址 : http://localhost:8081/common/log/list
2019-03-14 15:31:17 -HTTP METHOD : GET
2019-03-14 15:31:17 -CLASS_METHOD : com.bootdo.common.controller.LogController.list
2019-03-14 15:31:17 -参数 : [{limit=10, offset=160, sort=gmt_create, order=desc, operation=, username=}]
2019-03-14 15:31:17 -==>  Preparing: select count(*) from sys_log 
2019-03-14 15:31:17 -==> Parameters: 
2019-03-14 15:31:17 -<==      Total: 1
2019-03-14 15:31:17 -==>  Preparing: select `id`,`user_id`,`username`,`operation`,`time`,`method`,`params`,`ip`,`gmt_create` from sys_log order by gmt_create desc limit ?, ? 
2019-03-14 15:31:17 -==> Parameters: 160(Integer), 10(Integer)
2019-03-14 15:31:17 -<==      Total: 6
2019-03-14 15:31:17 -耗时 : 202
2019-03-14 15:31:17 -返回值 : PageDO{offset=0, limit=10, total=166, params={}, param='', rows=[LogDO{id=1920, userId=1, username='admin', operation='请求访问主页', time=24, method='com.bootdo.system.controller.LoginController.index()', params='{"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h', ip='127.0.0.1', gmtCreate=Tue Mar 12 19:42:02 CST 2019}, LogDO{id=1919, userId=1, username='admin', operation='error', time=null, method='http://localhost:8081/sys/user/personal', params='java.lang.NullPointerException', ip='null', gmtCreate=Tue Mar 12 19:15:24 CST 2019}, LogDO{id=1918, userId=1, username='admin', operation='请求访问主页', time=16, method='com.bootdo.system.controller.LoginController.index()', params='{"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h', ip='127.0.0.1', gmtCreate=Tue Mar 12 19:15:19 CST 2019}, LogDO{id=1917, userId=1, username='admin', operation='error', time=null, method='http://localhost:8081/sys/user/personal', params='java.lang.NullPointerException', ip='null', gmtCreate=Tue Mar 12 19:15:17 CST 2019}, LogDO{id=1916, userId=1, username='admin', operation='请求访问主页', time=31, method='com.bootdo.system.controller.LoginController.index()', params='{"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h', ip='127.0.0.1', gmtCreate=Tue Mar 12 19:15:14 CST 2019}, LogDO{id=1915, userId=1, username='admin', operation='请求访问主页', time=93, method='com.bootdo.system.controller.LoginController.index()', params='{"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h', ip='127.0.0.1', gmtCreate=Tue Mar 12 19:12:05 CST 2019}]}
2019-03-14 15:31:18 -请求地址 : http://localhost:8081/common/log/list
2019-03-14 15:31:18 -HTTP METHOD : GET
2019-03-14 15:31:18 -CLASS_METHOD : com.bootdo.common.controller.LogController.list
2019-03-14 15:31:18 -参数 : [{limit=10, offset=150, sort=gmt_create, order=desc, operation=, username=}]
2019-03-14 15:31:18 -==>  Preparing: select count(*) from sys_log 
2019-03-14 15:31:18 -==> Parameters: 
2019-03-14 15:31:18 -<==      Total: 1
2019-03-14 15:31:18 -==>  Preparing: select `id`,`user_id`,`username`,`operation`,`time`,`method`,`params`,`ip`,`gmt_create` from sys_log order by gmt_create desc limit ?, ? 
2019-03-14 15:31:18 -==> Parameters: 150(Integer), 10(Integer)
2019-03-14 15:31:18 -<==      Total: 10
2019-03-14 15:31:18 -耗时 : 75
2019-03-14 15:31:18 -返回值 : PageDO{offset=0, limit=10, total=166, params={}, param='', rows=[LogDO{id=1930, userId=1, username='admin', operation='登录', time=368, method='com.bootdo.system.controller.LoginController.ajaxLogin()', params='null', ip='127.0.0.1', gmtCreate=Wed Mar 13 10:17:49 CST 2019}, LogDO{id=1929, userId=1, username='admin', operation='error', time=null, method='http://localhost:8080/sys/user/personal', params='java.lang.NullPointerException', ip='null', gmtCreate=Wed Mar 13 10:05:53 CST 2019}, LogDO{id=1928, userId=1, username='admin', operation='error', time=null, method='http://localhost:8080/sys/user/personal', params='java.lang.NullPointerException', ip='null', gmtCreate=Wed Mar 13 10:05:50 CST 2019}, LogDO{id=1927, userId=1, username='admin', operation='请求访问主页', time=1963, method='com.bootdo.system.controller.LoginController.index()', params='{"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h', ip='127.0.0.1', gmtCreate=Wed Mar 13 10:05:42 CST 2019}, LogDO{id=1926, userId=1, username='admin', operation='登录', time=558, method='com.bootdo.system.controller.LoginController.ajaxLogin()', params='null', ip='127.0.0.1', gmtCreate=Wed Mar 13 10:05:40 CST 2019}, LogDO{id=1925, userId=1, username='admin', operation='请求访问主页', time=1174, method='com.bootdo.system.controller.LoginController.index()', params='{"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h', ip='127.0.0.1', gmtCreate=Wed Mar 13 09:44:51 CST 2019}, LogDO{id=1924, userId=1, username='admin', operation='登录', time=793, method='com.bootdo.system.controller.LoginController.ajaxLogin()', params='null', ip='127.0.0.1', gmtCreate=Wed Mar 13 09:44:49 CST 2019}, LogDO{id=1923, userId=1, username='admin', operation='请求访问主页', time=35, method='com.bootdo.system.controller.LoginController.index()', params='{"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h', ip='127.0.0.1', gmtCreate=Wed Mar 13 08:41:27 CST 2019}, LogDO{id=1922, userId=1, username='admin', operation='请求访问主页', time=411, method='com.bootdo.system.controller.LoginController.index()', params='{"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h', ip='127.0.0.1', gmtCreate=Wed Mar 13 08:39:38 CST 2019}, LogDO{id=1921, userId=1, username='admin', operation='登录', time=233, method='com.bootdo.system.controller.LoginController.ajaxLogin()', params='null', ip='127.0.0.1', gmtCreate=Wed Mar 13 08:39:37 CST 2019}]}
2019-03-14 15:33:12 -请求地址 : http://localhost:8081/common/log/list
2019-03-14 15:33:12 -HTTP METHOD : GET
2019-03-14 15:33:12 -CLASS_METHOD : com.bootdo.common.controller.LogController.list
2019-03-14 15:33:12 -参数 : [{limit=10, offset=150, sort=gmt_create, order=desc, operation=现金缴费, username=}]
2019-03-14 15:33:12 -==>  Preparing: select count(*) from sys_log WHERE operation = ? 
2019-03-14 15:33:12 -==> Parameters: 现金缴费(String)
2019-03-14 15:33:12 -<==      Total: 1
2019-03-14 15:33:12 -==>  Preparing: select `id`,`user_id`,`username`,`operation`,`time`,`method`,`params`,`ip`,`gmt_create` from sys_log WHERE operation = ? order by gmt_create desc limit ?, ? 
2019-03-14 15:33:12 -==> Parameters: 现金缴费(String), 150(Integer), 10(Integer)
2019-03-14 15:33:12 -<==      Total: 0
2019-03-14 15:33:12 -耗时 : 12
2019-03-14 15:33:12 -返回值 : PageDO{offset=0, limit=10, total=0, params={}, param='', rows=[]}
2019-03-14 15:33:14 -请求地址 : http://localhost:8081/common/log/list
2019-03-14 15:33:14 -HTTP METHOD : GET
2019-03-14 15:33:14 -CLASS_METHOD : com.bootdo.common.controller.LogController.list
2019-03-14 15:33:14 -参数 : [{limit=10, offset=150, sort=gmt_create, order=desc, operation=现金缴费, username=}]
2019-03-14 15:33:14 -==>  Preparing: select count(*) from sys_log WHERE operation = ? 
2019-03-14 15:33:14 -==> Parameters: 现金缴费(String)
2019-03-14 15:33:14 -<==      Total: 1
2019-03-14 15:33:14 -==>  Preparing: select `id`,`user_id`,`username`,`operation`,`time`,`method`,`params`,`ip`,`gmt_create` from sys_log WHERE operation = ? order by gmt_create desc limit ?, ? 
2019-03-14 15:33:14 -==> Parameters: 现金缴费(String), 150(Integer), 10(Integer)
2019-03-14 15:33:14 -<==      Total: 0
2019-03-14 15:33:14 -耗时 : 7
2019-03-14 15:33:14 -返回值 : PageDO{offset=0, limit=10, total=0, params={}, param='', rows=[]}
2019-03-14 15:33:14 -请求地址 : http://localhost:8081/common/log/list
2019-03-14 15:33:14 -HTTP METHOD : GET
2019-03-14 15:33:14 -CLASS_METHOD : com.bootdo.common.controller.LogController.list
2019-03-14 15:33:14 -参数 : [{limit=10, offset=150, sort=gmt_create, order=desc, operation=现金缴费, username=}]
2019-03-14 15:33:14 -==>  Preparing: select count(*) from sys_log WHERE operation = ? 
2019-03-14 15:33:14 -==> Parameters: 现金缴费(String)
2019-03-14 15:33:14 -<==      Total: 1
2019-03-14 15:33:14 -==>  Preparing: select `id`,`user_id`,`username`,`operation`,`time`,`method`,`params`,`ip`,`gmt_create` from sys_log WHERE operation = ? order by gmt_create desc limit ?, ? 
2019-03-14 15:33:14 -==> Parameters: 现金缴费(String), 150(Integer), 10(Integer)
2019-03-14 15:33:14 -<==      Total: 0
2019-03-14 15:33:14 -耗时 : 54
2019-03-14 15:33:14 -返回值 : PageDO{offset=0, limit=10, total=0, params={}, param='', rows=[]}
2019-03-14 15:33:15 -请求地址 : http://localhost:8081/common/log/list
2019-03-14 15:33:15 -HTTP METHOD : GET
2019-03-14 15:33:15 -CLASS_METHOD : com.bootdo.common.controller.LogController.list
2019-03-14 15:33:15 -参数 : [{limit=10, offset=150, sort=gmt_create, order=desc, operation=现金缴费, username=}]
2019-03-14 15:33:15 -==>  Preparing: select count(*) from sys_log WHERE operation = ? 
2019-03-14 15:33:15 -==> Parameters: 现金缴费(String)
2019-03-14 15:33:15 -<==      Total: 1
2019-03-14 15:33:15 -==>  Preparing: select `id`,`user_id`,`username`,`operation`,`time`,`method`,`params`,`ip`,`gmt_create` from sys_log WHERE operation = ? order by gmt_create desc limit ?, ? 
2019-03-14 15:33:15 -==> Parameters: 现金缴费(String), 150(Integer), 10(Integer)
2019-03-14 15:33:15 -<==      Total: 0
2019-03-14 15:33:15 -耗时 : 7
2019-03-14 15:33:15 -返回值 : PageDO{offset=0, limit=10, total=0, params={}, param='', rows=[]}
2019-03-14 15:33:25 -请求地址 : http://localhost:8081/common/log/list
2019-03-14 15:33:25 -HTTP METHOD : GET
2019-03-14 15:33:25 -CLASS_METHOD : com.bootdo.common.controller.LogController.list
2019-03-14 15:33:25 -参数 : [{limit=10, offset=150, sort=gmt_create, order=desc, operation=现金缴费, username=admin}]
2019-03-14 15:33:25 -==>  Preparing: select count(*) from sys_log WHERE username = ? and operation = ? 
2019-03-14 15:33:25 -==> Parameters: admin(String), 现金缴费(String)
2019-03-14 15:33:25 -<==      Total: 1
2019-03-14 15:33:25 -==>  Preparing: select `id`,`user_id`,`username`,`operation`,`time`,`method`,`params`,`ip`,`gmt_create` from sys_log WHERE username = ? and operation = ? order by gmt_create desc limit ?, ? 
2019-03-14 15:33:25 -==> Parameters: admin(String), 现金缴费(String), 150(Integer), 10(Integer)
2019-03-14 15:33:25 -<==      Total: 0
2019-03-14 15:33:25 -耗时 : 11
2019-03-14 15:33:25 -返回值 : PageDO{offset=0, limit=10, total=0, params={}, param='', rows=[]}
2019-03-14 15:33:28 -请求地址 : http://localhost:8081/common/log/list
2019-03-14 15:33:28 -HTTP METHOD : GET
2019-03-14 15:33:28 -CLASS_METHOD : com.bootdo.common.controller.LogController.list
2019-03-14 15:33:28 -参数 : [{limit=10, offset=150, sort=gmt_create, order=desc, operation=, username=admin}]
2019-03-14 15:33:28 -==>  Preparing: select count(*) from sys_log WHERE username = ? 
2019-03-14 15:33:28 -==> Parameters: admin(String)
2019-03-14 15:33:28 -<==      Total: 1
2019-03-14 15:33:28 -==>  Preparing: select `id`,`user_id`,`username`,`operation`,`time`,`method`,`params`,`ip`,`gmt_create` from sys_log WHERE username = ? order by gmt_create desc limit ?, ? 
2019-03-14 15:33:28 -==> Parameters: admin(String), 150(Integer), 10(Integer)
2019-03-14 15:33:28 -<==      Total: 10
2019-03-14 15:33:28 -耗时 : 16
2019-03-14 15:33:28 -返回值 : PageDO{offset=0, limit=10, total=162, params={}, param='', rows=[LogDO{id=1926, userId=1, username='admin', operation='登录', time=558, method='com.bootdo.system.controller.LoginController.ajaxLogin()', params='null', ip='127.0.0.1', gmtCreate=Wed Mar 13 10:05:40 CST 2019}, LogDO{id=1925, userId=1, username='admin', operation='请求访问主页', time=1174, method='com.bootdo.system.controller.LoginController.index()', params='{"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h', ip='127.0.0.1', gmtCreate=Wed Mar 13 09:44:51 CST 2019}, LogDO{id=1924, userId=1, username='admin', operation='登录', time=793, method='com.bootdo.system.controller.LoginController.ajaxLogin()', params='null', ip='127.0.0.1', gmtCreate=Wed Mar 13 09:44:49 CST 2019}, LogDO{id=1923, userId=1, username='admin', operation='请求访问主页', time=35, method='com.bootdo.system.controller.LoginController.index()', params='{"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h', ip='127.0.0.1', gmtCreate=Wed Mar 13 08:41:27 CST 2019}, LogDO{id=1922, userId=1, username='admin', operation='请求访问主页', time=411, method='com.bootdo.system.controller.LoginController.index()', params='{"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h', ip='127.0.0.1', gmtCreate=Wed Mar 13 08:39:38 CST 2019}, LogDO{id=1921, userId=1, username='admin', operation='登录', time=233, method='com.bootdo.system.controller.LoginController.ajaxLogin()', params='null', ip='127.0.0.1', gmtCreate=Wed Mar 13 08:39:37 CST 2019}, LogDO{id=1920, userId=1, username='admin', operation='请求访问主页', time=24, method='com.bootdo.system.controller.LoginController.index()', params='{"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h', ip='127.0.0.1', gmtCreate=Tue Mar 12 19:42:02 CST 2019}, LogDO{id=1919, userId=1, username='admin', operation='error', time=null, method='http://localhost:8081/sys/user/personal', params='java.lang.NullPointerException', ip='null', gmtCreate=Tue Mar 12 19:15:24 CST 2019}, LogDO{id=1918, userId=1, username='admin', operation='请求访问主页', time=16, method='com.bootdo.system.controller.LoginController.index()', params='{"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h', ip='127.0.0.1', gmtCreate=Tue Mar 12 19:15:19 CST 2019}, LogDO{id=1917, userId=1, username='admin', operation='error', time=null, method='http://localhost:8081/sys/user/personal', params='java.lang.NullPointerException', ip='null', gmtCreate=Tue Mar 12 19:15:17 CST 2019}]}
2019-03-14 15:35:03 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-14 15:35:03 -==> Parameters: 1(Long)
2019-03-14 15:35:03 -<==      Total: 86
2019-03-14 15:35:03 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-14 15:35:03 -HTTP METHOD : GET
2019-03-14 15:35:03 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-14 15:35:03 -参数 : []
2019-03-14 15:35:03 -耗时 : 0
2019-03-14 15:35:03 -返回值 : /moneyList/moneyList
2019-03-14 15:35:04 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 15:35:04 -HTTP METHOD : GET
2019-03-14 15:35:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 15:35:04 -参数 : []
2019-03-14 15:35:04 -耗时 : 0
2019-03-14 15:35:04 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 15:35:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 15:35:04 -HTTP METHOD : GET
2019-03-14 15:35:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:35:04 -参数 : [userType]
2019-03-14 15:35:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:35:04 -==> Parameters: userType(String)
2019-03-14 15:35:04 -<==      Total: 2
2019-03-14 15:35:04 -耗时 : 5
2019-03-14 15:35:04 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 15:35:04 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 15:35:04 -HTTP METHOD : GET
2019-03-14 15:35:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 15:35:04 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 15:35:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-14 15:35:04 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 15:35:04 -<==      Total: 3
2019-03-14 15:35:04 -==>  Preparing: select count(*) from elec_log 
2019-03-14 15:35:04 -==> Parameters: 
2019-03-14 15:35:04 -<==      Total: 1
2019-03-14 15:35:04 -耗时 : 8
2019-03-14 15:35:04 -返回值 : com.bootdo.common.utils.PageUtils@5dea051b
2019-03-14 15:37:58 -请求地址 : http://localhost:8081/elec/elec
2019-03-14 15:37:58 -HTTP METHOD : GET
2019-03-14 15:37:58 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-14 15:37:58 -参数 : []
2019-03-14 15:37:58 -耗时 : 2
2019-03-14 15:37:58 -返回值 : elec/elec/elec
2019-03-14 15:37:58 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 15:37:58 -HTTP METHOD : GET
2019-03-14 15:37:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 15:37:58 -参数 : [userType]
2019-03-14 15:37:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 15:37:58 -==> Parameters: userType(String)
2019-03-14 15:37:58 -<==      Total: 2
2019-03-14 15:37:58 -耗时 : 7
2019-03-14 15:37:58 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 15:37:59 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-14 15:37:59 -HTTP METHOD : GET
2019-03-14 15:37:59 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-14 15:37:59 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}, com.bootdo.elec.domain.ElecDO@6dd7c1df]
2019-03-14 15:37:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-14 15:37:59 -==> Parameters: 0(Integer), 3(Integer)
2019-03-14 15:37:59 -<==      Total: 3
2019-03-14 15:37:59 -==>  Preparing: select count(*) from elec 
2019-03-14 15:37:59 -==> Parameters: 
2019-03-14 15:37:59 -<==      Total: 1
2019-03-14 15:37:59 -耗时 : 240
2019-03-14 15:37:59 -返回值 : com.bootdo.common.utils.PageUtils@16dc452
2019-03-14 15:38:00 -请求地址 : http://localhost:8081/elec/elecInto
2019-03-14 15:38:00 -HTTP METHOD : GET
2019-03-14 15:38:00 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-03-14 15:38:00 -参数 : []
2019-03-14 15:38:00 -耗时 : 1
2019-03-14 15:38:00 -返回值 : elec/elecInto/elecInto
2019-03-14 15:38:00 -请求地址 : http://localhost:8081/elec/elecUpLoad
2019-03-14 15:38:00 -HTTP METHOD : GET
2019-03-14 15:38:00 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.Elec
2019-03-14 15:38:00 -参数 : []
2019-03-14 15:38:00 -耗时 : 0
2019-03-14 15:38:00 -返回值 : elec/elecUpLoad/elecUpLoad
2019-03-14 15:38:01 -请求地址 : http://localhost:8081/elec/elecPrice
2019-03-14 15:38:01 -HTTP METHOD : GET
2019-03-14 15:38:01 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.ElecPrice
2019-03-14 15:38:01 -参数 : []
2019-03-14 15:38:01 -耗时 : 1
2019-03-14 15:38:01 -返回值 : elec/elecPrice/elecPrice
2019-03-14 15:38:01 -请求地址 : http://localhost:8081/elec/elecPrice/list
2019-03-14 15:38:01 -HTTP METHOD : GET
2019-03-14 15:38:01 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.list
2019-03-14 15:38:01 -参数 : [{limit=10, offset=0}]
2019-03-14 15:38:01 -==>  Preparing: select `id`,`elec_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName,`business_elec`,`civil_elec`,`noindustry_elec`,`industry_elec`,`special_1`,`special_2`,`special_3`,`special_4`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_price order by id desc limit ?, ? 
2019-03-14 15:38:01 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 15:38:01 -<==      Total: 2
2019-03-14 15:38:01 -==>  Preparing: select count(*) from elec_price 
2019-03-14 15:38:01 -==> Parameters: 
2019-03-14 15:38:01 -<==      Total: 1
2019-03-14 15:38:01 -耗时 : 154
2019-03-14 15:38:01 -返回值 : com.bootdo.common.utils.PageUtils@98b1116
2019-03-14 15:50:15 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 33], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 5], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 430]
2019-03-14 15:54:27 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-14 15:54:27 -==> Parameters: 1(Long)
2019-03-14 15:54:27 -<==      Total: 86
2019-03-14 15:54:27 -请求地址 : http://localhost:8081/charts/countYY
2019-03-14 15:54:27 -HTTP METHOD : GET
2019-03-14 15:54:27 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-03-14 15:54:27 -参数 : []
2019-03-14 15:54:27 -耗时 : 1
2019-03-14 15:54:27 -返回值 : charts/countYY
2019-03-14 15:54:29 -请求地址 : http://localhost:8081/charts/countMM
2019-03-14 15:54:29 -HTTP METHOD : GET
2019-03-14 15:54:29 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-03-14 15:54:29 -参数 : []
2019-03-14 15:54:29 -耗时 : 1
2019-03-14 15:54:29 -返回值 : charts/countMM
2019-03-14 15:54:32 -请求地址 : http://localhost:8081/charts/countDD
2019-03-14 15:54:32 -HTTP METHOD : GET
2019-03-14 15:54:32 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-14 15:54:32 -参数 : []
2019-03-14 15:54:32 -耗时 : 1
2019-03-14 15:54:32 -返回值 : charts/countDD
2019-03-14 16:11:46 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-14 16:11:46 -==> Parameters: 1(Long)
2019-03-14 16:11:46 -<==      Total: 86
2019-03-14 16:11:46 -请求地址 : http://localhost:8081/sys/menu/
2019-03-14 16:11:46 -HTTP METHOD : GET
2019-03-14 16:11:46 -CLASS_METHOD : com.bootdo.system.controller.MenuController.menu
2019-03-14 16:11:46 -参数 : [{}]
2019-03-14 16:11:46 -耗时 : 1
2019-03-14 16:11:46 -返回值 : system/menu/menu
2019-03-14 16:11:46 -请求地址 : http://localhost:8081/sys/menu/list
2019-03-14 16:11:46 -HTTP METHOD : GET
2019-03-14 16:11:46 -CLASS_METHOD : com.bootdo.system.controller.MenuController.list
2019-03-14 16:11:46 -参数 : [{sort=order_num}]
2019-03-14 16:11:46 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2019-03-14 16:11:46 -==> Parameters: 
2019-03-14 16:11:46 -<==      Total: 105
2019-03-14 16:11:46 -耗时 : 84
2019-03-14 16:11:46 -返回值 : [MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='sys:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='sys:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='sys:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='sys:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='oa/notify', perms='oa:notify:notify', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='oa/notify/selfNotify', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='sys/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=133, parentId=116, name='新增', url='/heat/heatPrice/add', perms='heat:heatPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=134, parentId=116, name='编辑', url='/heat/heatPrice/edit', perms='heat:heatPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=135, parentId=116, name='删除', url='/heat/heatPrice/remove', perms='heat:heatPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=136, parentId=116, name='批量删除', url='/heat/heatPrice/batchRemove', perms='heat:heatPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=137, parentId=113, name='新增', url='/heat/heat/add', perms='heat:heat:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=138, parentId=120, name='新增', url='/water/waterPrice/add', perms='water:waterPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=139, parentId=120, name='编辑', url='/water/waterPrice/edit', perms='water:waterPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=140, parentId=120, name='删除', url='/water/waterPrice/remove', perms='water:waterPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=141, parentId=120, name='批量删除', url='/water/waterPrice/batchRemove', perms='water:waterPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=142, parentId=117, name='新增', url='/water/water/add', perms='water:water:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=143, parentId=117, name='编辑', url='/water/water/edit', perms='water:water:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=144, parentId=117, name='删除', url='/water/wate/remove', perms='water:water:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=145, parentId=117, name='批量删除', url='/water/water/batchRemove', perms='water:water:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=146, parentId=113, name='编辑', url='/heat/heat/edit', perms='heat:heat:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=147, parentId=113, name='删除', url='/heat/heat/remove', perms='heat:heat:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=148, parentId=113, name='批量删除', url='/heat/heat/batchRemove', perms='heat:heat:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=150, parentId=149, name='新增', url='/print/print/add', perms='print:print:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=151, parentId=149, name='编辑', url='/print/print/edit', perms='print:print:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=152, parentId=149, name='删除', url='/print/print/remove', perms='print:print:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=153, parentId=149, name='批量删除', url='/print/print/batchRemove', perms='print:print:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='sys/user/', perms='sys:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='sys:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='sys:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='sys:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='sys:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='sys:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='sys:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='sys:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='sys:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='sys:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='sys:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='common/log', perms='common:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='sys:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='sys:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='sys:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=106, parentId=0, name='收费管理', url='', perms='', type=0, icon='fa fa-money', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=7, parentId=3, name='角色管理', url='sys/role', perms='sys:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计算器', url='common/job', perms='', type=1, icon='fa fa-calculator', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/sysDept/add', perms='system:sysDept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/common/dict', perms='common:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=102, parentId=106, name='现金缴费', url='/moneyList/moneyList', perms='moneyList:moneyList', type=1, icon='fa fa-money', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=103, parentId=0, name='电费管理', url='', perms='', type=0, icon='fa fa-lightbulb-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=113, parentId=104, name='暖费用户', url='/heat/heat', perms='heat:heat:heat', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=117, parentId=105, name='水费用户', url='/water/water', perms='water:water:water', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=121, parentId=103, name='电费用户', url='/elec/elec', perms='elec:elec:elec', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=125, parentId=124, name='新增', url='/elec/elecPrice/add', perms='elec:elecPrice:add', type=2, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=129, parentId=121, name='新增', url='/elec/elec/add', perms='elec:elec:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=149, parentId=108, name='票据记录', url='/print/print', perms='print:print:print', type=1, icon='fa fa-bomb', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=156, parentId=107, name='添加', url='moneyLog/elecLog/add', perms='moneyLog:elecLog:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='sys/menu/', perms='sys:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/common/sysFile', perms='common:sysFile:sysFile', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/sysDept/remove', perms='system:sysDept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/common/dict/add', perms='common:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/common/dict/edit', perms='common:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=0, name='水费管理', url='', perms='', type=0, icon='fa fa-tint', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=106, name='缴费记录', url='/moneyLog/elecLog', perms='moneyLog:elecLog', type=1, icon='fa fa-book', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=109, parentId=97, name='日统计报表', url='charts/countDD', perms='charts:countDD', type=1, icon='fa fa-sun-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=114, parentId=104, name='工资代扣', url='heat/heatInto', perms='heat:heatInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=118, parentId=105, name='工资代扣', url='water/waterInto', perms='water:waterInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=122, parentId=103, name='工资代扣', url='elec/elecInto', perms='elec:elecInto:elecInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=126, parentId=124, name='编辑', url='/elec/elecPrice/edit', perms='elec:elecPrice:edit', type=2, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=131, parentId=121, name='删除', url='/elec/elec/remove', perms='elec:elec:remove', type=2, icon='fa fa-remove', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=154, parentId=77, name='时钟', url='common/time', perms='', type=1, icon='fa fa-hourglass-1', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=157, parentId=107, name='删除', url='moneyLog/elecLog/remove', perms='moneyLog:elecLog:remove', type=2, icon='fa fa-close', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='组织管理', url='/system/sysDept', perms='system:sysDept:sysDept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/sysDept/edit', perms='system:sysDept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/common/dict/remove', perms='common:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=0, name='暖费管理', url='', perms='', type=0, icon='fa fa-fire', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=110, parentId=97, name='月统计报表', url='charts/countMM', perms='charts:countMM', type=1, icon='fa fa-registered', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=115, parentId=104, name='暖费生成', url='heat/heatUpLoad', perms='heat:heatUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=119, parentId=105, name='水费生成', url='water/waterUpLoad', perms='water:waterUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=123, parentId=103, name='电表上传', url='elec/elecUpLoad', perms='elec:elecUpLoad:elecUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=127, parentId=124, name='删除', url='/elec/elecPrice/remove', perms='elec:elecPrice:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=130, parentId=121, name='编辑', url='/elec/elec/edit', perms='elec:elec:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=158, parentId=107, name='编辑', url='moneyLog/elecLog/edit', perms='moneyLog:elecLog:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/common/dict/batchRemove', perms='common:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=0, name='票据管理', url='', perms='', type=0, icon='fa fa-vcard-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=111, parentId=97, name='年统计报表', url='charts/countYY', perms='charts:countYY', type=1, icon='fa fa-support', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=116, parentId=104, name='暖价管理', url='/heat/heatPrice', perms='heat:heatPrice:heatPrice', type=1, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=120, parentId=105, name='水价管理', url='/water/waterPrice', perms='water:waterPrice:waterPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=124, parentId=103, name='电价管理', url='/elec/elecPrice', perms='elec:elecPrice:elecPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=128, parentId=124, name='批量删除', url='/elec/elecPrice/batchRemove', perms='elec:elecPrice:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=132, parentId=121, name='批量删除', url='/elec/elec/batchRemove', perms='elec:elec:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=155, parentId=97, name='欠费报表图', url='charts/countOwe', perms='charts:countOwe', type=1, icon='fa fa-money', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=159, parentId=107, name='批量删除', url='moneyLog/elecLog/batchRemove', perms='moneyLog:elecLog:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='统计管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=112, parentId=97, name='走势图报表', url='charts/countRun', perms='charts:countRun', type=1, icon='fa fa-tachometer', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=6, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=7, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=8, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=9, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=10, gmtCreate=null, gmtModified=null}]
2019-03-14 16:20:07 -Validating all active sessions...
2019-03-14 16:20:08 -Finished session validation.  [1] sessions were stopped.
2019-03-14 16:20:15 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 33], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 5], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 863]
2019-03-14 16:29:41 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-14 16:29:41 -==> Parameters: 1(Long)
2019-03-14 16:29:41 -<==      Total: 86
2019-03-14 16:29:41 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-14 16:29:41 -HTTP METHOD : GET
2019-03-14 16:29:41 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-14 16:29:41 -参数 : []
2019-03-14 16:29:41 -耗时 : 1
2019-03-14 16:29:41 -返回值 : /moneyList/moneyList
2019-03-14 16:29:42 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-14 16:29:42 -HTTP METHOD : GET
2019-03-14 16:29:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-14 16:29:42 -参数 : []
2019-03-14 16:29:42 -耗时 : 1
2019-03-14 16:29:42 -返回值 : /moneyLog/elecLog/elecLog
2019-03-14 16:29:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 16:29:42 -HTTP METHOD : GET
2019-03-14 16:29:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 16:29:42 -参数 : [userType]
2019-03-14 16:29:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 16:29:42 -==> Parameters: userType(String)
2019-03-14 16:29:42 -<==      Total: 2
2019-03-14 16:29:42 -耗时 : 9
2019-03-14 16:29:42 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 16:29:42 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-14 16:29:42 -HTTP METHOD : GET
2019-03-14 16:29:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-14 16:29:42 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-14 16:29:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-14 16:29:42 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 16:29:42 -<==      Total: 3
2019-03-14 16:29:42 -==>  Preparing: select count(*) from elec_log 
2019-03-14 16:29:42 -==> Parameters: 
2019-03-14 16:29:42 -<==      Total: 1
2019-03-14 16:29:42 -耗时 : 10
2019-03-14 16:29:42 -返回值 : com.bootdo.common.utils.PageUtils@177c7290
2019-03-14 16:30:17 -请求地址 : http://localhost:8081/heat/heatPrice
2019-03-14 16:30:17 -HTTP METHOD : GET
2019-03-14 16:30:17 -CLASS_METHOD : com.bootdo.heat.controller.HeatPriceController.HeatPrice
2019-03-14 16:30:17 -参数 : []
2019-03-14 16:30:17 -耗时 : 1
2019-03-14 16:30:17 -返回值 : heat/heatPrice/heatPrice
2019-03-14 16:30:18 -请求地址 : http://localhost:8081/heat/heatPrice/list
2019-03-14 16:30:18 -HTTP METHOD : GET
2019-03-14 16:30:18 -CLASS_METHOD : com.bootdo.heat.controller.HeatPriceController.list
2019-03-14 16:30:18 -参数 : [{limit=10, offset=0}]
2019-03-14 16:30:18 -==>  Preparing: select `id`,`heat_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `heat_org`) AS heatOrgName,`business_heat`,`civil_heat`,`special_1`,`special_2`,`special_3`,`special_4`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_price order by id desc limit ?, ? 
2019-03-14 16:30:18 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 16:30:18 -<==      Total: 2
2019-03-14 16:30:18 -==>  Preparing: select count(*) from heat_price 
2019-03-14 16:30:18 -==> Parameters: 
2019-03-14 16:30:18 -<==      Total: 1
2019-03-14 16:30:18 -耗时 : 185
2019-03-14 16:30:18 -返回值 : com.bootdo.common.utils.PageUtils@43c8f23f
2019-03-14 16:31:06 -请求地址 : http://localhost:8081/heat/heatPrice/edit/2
2019-03-14 16:31:06 -HTTP METHOD : GET
2019-03-14 16:31:06 -CLASS_METHOD : com.bootdo.heat.controller.HeatPriceController.edit
2019-03-14 16:31:06 -参数 : [2, {}]
2019-03-14 16:31:06 -==>  Preparing: select `id`,`heat_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `heat_org`) AS heatOrgName,`business_heat`,`civil_heat`,`special_1`,`special_2`,`special_3`,`special_4`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_price where id = ? 
2019-03-14 16:31:06 -==> Parameters: 2(Long)
2019-03-14 16:31:06 -<==      Total: 1
2019-03-14 16:31:06 -耗时 : 9
2019-03-14 16:31:06 -返回值 : heat/heatPrice/edit
2019-03-14 16:41:02 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-14 16:41:02 -==> Parameters: 1(Long)
2019-03-14 16:41:02 -<==      Total: 86
2019-03-14 16:41:02 -请求地址 : http://localhost:8081/elec/elec
2019-03-14 16:41:02 -HTTP METHOD : GET
2019-03-14 16:41:02 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-14 16:41:02 -参数 : []
2019-03-14 16:41:02 -耗时 : 1
2019-03-14 16:41:02 -返回值 : elec/elec/elec
2019-03-14 16:41:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-14 16:41:03 -HTTP METHOD : GET
2019-03-14 16:41:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-14 16:41:03 -参数 : [userType]
2019-03-14 16:41:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-14 16:41:03 -==> Parameters: userType(String)
2019-03-14 16:41:03 -<==      Total: 2
2019-03-14 16:41:03 -耗时 : 4
2019-03-14 16:41:03 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-14 16:41:03 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-14 16:41:03 -HTTP METHOD : GET
2019-03-14 16:41:03 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-14 16:41:03 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}, com.bootdo.elec.domain.ElecDO@64ebe236]
2019-03-14 16:41:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-14 16:41:03 -==> Parameters: 0(Integer), 3(Integer)
2019-03-14 16:41:03 -<==      Total: 3
2019-03-14 16:41:03 -==>  Preparing: select count(*) from elec 
2019-03-14 16:41:03 -==> Parameters: 
2019-03-14 16:41:03 -<==      Total: 1
2019-03-14 16:41:03 -耗时 : 10
2019-03-14 16:41:03 -返回值 : com.bootdo.common.utils.PageUtils@38f9c903
2019-03-14 16:41:09 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-14 16:41:09 -HTTP METHOD : GET
2019-03-14 16:41:09 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-14 16:41:09 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=2019-03}, com.bootdo.elec.domain.ElecDO@1ab0ba46]
2019-03-14 16:41:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE CREATE_TIME BETWEEN ? and ? order by id asc limit ?, ? 
2019-03-14 16:41:09 -==> Parameters: null, null, 0(Integer), 3(Integer)
2019-03-14 16:41:09 -<==      Total: 0
2019-03-14 16:41:09 -==>  Preparing: select count(*) from elec WHERE create_time = ? 
2019-03-14 16:41:09 -==> Parameters: 2019-03(String)
2019-03-14 16:41:09 -<==      Total: 1
2019-03-14 16:41:09 -耗时 : 76
2019-03-14 16:41:09 -返回值 : com.bootdo.common.utils.PageUtils@5d1a4441
2019-03-14 16:41:10 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-14 16:41:10 -HTTP METHOD : GET
2019-03-14 16:41:10 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-14 16:41:10 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=2019-03}, com.bootdo.elec.domain.ElecDO@44069a0b]
2019-03-14 16:41:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE CREATE_TIME BETWEEN ? and ? order by id asc limit ?, ? 
2019-03-14 16:41:10 -==> Parameters: null, null, 0(Integer), 3(Integer)
2019-03-14 16:41:10 -<==      Total: 0
2019-03-14 16:41:10 -==>  Preparing: select count(*) from elec WHERE create_time = ? 
2019-03-14 16:41:10 -==> Parameters: 2019-03(String)
2019-03-14 16:41:10 -<==      Total: 1
2019-03-14 16:41:10 -耗时 : 6
2019-03-14 16:41:10 -返回值 : com.bootdo.common.utils.PageUtils@6f41b7cf
2019-03-14 16:41:11 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-14 16:41:11 -HTTP METHOD : GET
2019-03-14 16:41:11 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-14 16:41:11 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=2019-03}, com.bootdo.elec.domain.ElecDO@1140d998]
2019-03-14 16:41:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE CREATE_TIME BETWEEN ? and ? order by id asc limit ?, ? 
2019-03-14 16:41:11 -==> Parameters: null, null, 0(Integer), 3(Integer)
2019-03-14 16:41:11 -<==      Total: 0
2019-03-14 16:41:11 -==>  Preparing: select count(*) from elec WHERE create_time = ? 
2019-03-14 16:41:11 -==> Parameters: 2019-03(String)
2019-03-14 16:41:11 -<==      Total: 1
2019-03-14 16:41:11 -耗时 : 7
2019-03-14 16:41:11 -返回值 : com.bootdo.common.utils.PageUtils@4b720cd9
2019-03-14 16:41:11 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-14 16:41:11 -HTTP METHOD : GET
2019-03-14 16:41:11 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-14 16:41:11 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=2019-03}, com.bootdo.elec.domain.ElecDO@512e9a63]
2019-03-14 16:41:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE CREATE_TIME BETWEEN ? and ? order by id asc limit ?, ? 
2019-03-14 16:41:11 -==> Parameters: null, null, 0(Integer), 3(Integer)
2019-03-14 16:41:11 -<==      Total: 0
2019-03-14 16:41:11 -==>  Preparing: select count(*) from elec WHERE create_time = ? 
2019-03-14 16:41:11 -==> Parameters: 2019-03(String)
2019-03-14 16:41:11 -<==      Total: 1
2019-03-14 16:41:11 -耗时 : 6
2019-03-14 16:41:11 -返回值 : com.bootdo.common.utils.PageUtils@2eb7fa9f
2019-03-14 16:41:14 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-14 16:41:14 -HTTP METHOD : GET
2019-03-14 16:41:14 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-14 16:41:14 -参数 : [{limit=3, offset=0, userType=B, userOrg=, userId=, createTime=2019-03, type=B}, com.bootdo.elec.domain.ElecDO@61f92745]
2019-03-14 16:41:14 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and CREATE_TIME BETWEEN ? and ? order by id asc limit ?, ? 
2019-03-14 16:41:14 -==> Parameters: B(String), null, null, 0(Integer), 3(Integer)
2019-03-14 16:41:14 -<==      Total: 0
2019-03-14 16:41:14 -==>  Preparing: select count(*) from elec WHERE user_type = ? and create_time = ? 
2019-03-14 16:41:14 -==> Parameters: B(String), 2019-03(String)
2019-03-14 16:41:14 -<==      Total: 1
2019-03-14 16:41:14 -耗时 : 31
2019-03-14 16:41:14 -返回值 : com.bootdo.common.utils.PageUtils@5fd576e8
2019-03-14 16:41:14 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-14 16:41:14 -HTTP METHOD : GET
2019-03-14 16:41:14 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-14 16:41:14 -参数 : []
2019-03-14 16:41:14 -耗时 : 2
2019-03-14 16:41:14 -返回值 : system/dept/deptTree
2019-03-14 16:41:15 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-14 16:41:15 -HTTP METHOD : GET
2019-03-14 16:41:15 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-14 16:41:15 -参数 : []
2019-03-14 16:41:15 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-14 16:41:15 -==> Parameters: 
2019-03-14 16:41:15 -<==      Total: 3
2019-03-14 16:41:15 -耗时 : 6
2019-03-14 16:41:15 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-14 16:41:17 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-14 16:41:17 -HTTP METHOD : GET
2019-03-14 16:41:17 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-14 16:41:17 -参数 : [{limit=3, offset=0, userType=B, userOrg=2, userId=, createTime=2019-03}, com.bootdo.elec.domain.ElecDO@558e058]
2019-03-14 16:41:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and user_org = ? and CREATE_TIME BETWEEN ? and ? order by id asc limit ?, ? 
2019-03-14 16:41:17 -==> Parameters: B(String), 2(String), null, null, 0(Integer), 3(Integer)
2019-03-14 16:41:17 -<==      Total: 0
2019-03-14 16:41:17 -==>  Preparing: select count(*) from elec WHERE user_type = ? and user_org = ? and create_time = ? 
2019-03-14 16:41:17 -==> Parameters: B(String), 2(String), 2019-03(String)
2019-03-14 16:41:17 -<==      Total: 1
2019-03-14 16:41:17 -耗时 : 75
2019-03-14 16:41:17 -返回值 : com.bootdo.common.utils.PageUtils@33b9cd2d
2019-03-14 16:41:17 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-14 16:41:17 -HTTP METHOD : GET
2019-03-14 16:41:17 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-14 16:41:17 -参数 : [{limit=3, offset=0, userType=B, userOrg=2, userId=, createTime=2019-03}, com.bootdo.elec.domain.ElecDO@3b86678]
2019-03-14 16:41:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and user_org = ? and CREATE_TIME BETWEEN ? and ? order by id asc limit ?, ? 
2019-03-14 16:41:17 -==> Parameters: B(String), 2(String), null, null, 0(Integer), 3(Integer)
2019-03-14 16:41:17 -<==      Total: 0
2019-03-14 16:41:17 -==>  Preparing: select count(*) from elec WHERE user_type = ? and user_org = ? and create_time = ? 
2019-03-14 16:41:17 -==> Parameters: B(String), 2(String), 2019-03(String)
2019-03-14 16:41:17 -<==      Total: 1
2019-03-14 16:41:17 -耗时 : 10
2019-03-14 16:41:17 -返回值 : com.bootdo.common.utils.PageUtils@101b2df1
2019-03-14 16:41:21 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-14 16:41:21 -HTTP METHOD : GET
2019-03-14 16:41:21 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-14 16:41:21 -参数 : [{limit=3, offset=0, userType=B, userOrg=2, userId=, createTime=2019-03}, com.bootdo.elec.domain.ElecDO@1fe7aeee]
2019-03-14 16:41:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and user_org = ? and CREATE_TIME BETWEEN ? and ? order by id asc limit ?, ? 
2019-03-14 16:41:21 -==> Parameters: B(String), 2(String), null, null, 0(Integer), 3(Integer)
2019-03-14 16:41:21 -<==      Total: 0
2019-03-14 16:41:21 -==>  Preparing: select count(*) from elec WHERE user_type = ? and user_org = ? and create_time = ? 
2019-03-14 16:41:21 -==> Parameters: B(String), 2(String), 2019-03(String)
2019-03-14 16:41:21 -<==      Total: 1
2019-03-14 16:41:21 -耗时 : 11
2019-03-14 16:41:21 -返回值 : com.bootdo.common.utils.PageUtils@2cb10428
2019-03-14 16:41:22 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-14 16:41:22 -HTTP METHOD : GET
2019-03-14 16:41:22 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-14 16:41:22 -参数 : [{limit=3, offset=0, userType=B, userOrg=2, userId=, createTime=2019-03}, com.bootdo.elec.domain.ElecDO@7b37900c]
2019-03-14 16:41:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and user_org = ? and CREATE_TIME BETWEEN ? and ? order by id asc limit ?, ? 
2019-03-14 16:41:22 -==> Parameters: B(String), 2(String), null, null, 0(Integer), 3(Integer)
2019-03-14 16:41:22 -<==      Total: 0
2019-03-14 16:41:22 -==>  Preparing: select count(*) from elec WHERE user_type = ? and user_org = ? and create_time = ? 
2019-03-14 16:41:22 -==> Parameters: B(String), 2(String), 2019-03(String)
2019-03-14 16:41:22 -<==      Total: 1
2019-03-14 16:41:22 -耗时 : 8
2019-03-14 16:41:22 -返回值 : com.bootdo.common.utils.PageUtils@58d0219
2019-03-14 16:41:22 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-14 16:41:22 -HTTP METHOD : GET
2019-03-14 16:41:22 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-14 16:41:22 -参数 : [{limit=3, offset=0, userType=B, userOrg=2, userId=, createTime=2019-03}, com.bootdo.elec.domain.ElecDO@5c698036]
2019-03-14 16:41:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and user_org = ? and CREATE_TIME BETWEEN ? and ? order by id asc limit ?, ? 
2019-03-14 16:41:22 -==> Parameters: B(String), 2(String), null, null, 0(Integer), 3(Integer)
2019-03-14 16:41:22 -<==      Total: 0
2019-03-14 16:41:22 -==>  Preparing: select count(*) from elec WHERE user_type = ? and user_org = ? and create_time = ? 
2019-03-14 16:41:22 -==> Parameters: B(String), 2(String), 2019-03(String)
2019-03-14 16:41:22 -<==      Total: 1
2019-03-14 16:41:22 -耗时 : 8
2019-03-14 16:41:22 -返回值 : com.bootdo.common.utils.PageUtils@3fa1198a
2019-03-14 16:41:23 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-14 16:41:23 -HTTP METHOD : GET
2019-03-14 16:41:23 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-14 16:41:23 -参数 : [{limit=3, offset=0, userType=B, userOrg=2, userId=, createTime=2019-03}, com.bootdo.elec.domain.ElecDO@b6f90a8]
2019-03-14 16:41:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and user_org = ? and CREATE_TIME BETWEEN ? and ? order by id asc limit ?, ? 
2019-03-14 16:41:23 -==> Parameters: B(String), 2(String), null, null, 0(Integer), 3(Integer)
2019-03-14 16:41:23 -<==      Total: 0
2019-03-14 16:41:23 -==>  Preparing: select count(*) from elec WHERE user_type = ? and user_org = ? and create_time = ? 
2019-03-14 16:41:23 -==> Parameters: B(String), 2(String), 2019-03(String)
2019-03-14 16:41:23 -<==      Total: 1
2019-03-14 16:41:23 -耗时 : 7
2019-03-14 16:41:23 -返回值 : com.bootdo.common.utils.PageUtils@984f838
2019-03-14 16:41:25 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-14 16:41:25 -HTTP METHOD : GET
2019-03-14 16:41:25 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-14 16:41:25 -参数 : []
2019-03-14 16:41:25 -耗时 : 1
2019-03-14 16:41:25 -返回值 : system/dept/deptTree
2019-03-14 16:41:25 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-14 16:41:25 -HTTP METHOD : GET
2019-03-14 16:41:25 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-14 16:41:25 -参数 : []
2019-03-14 16:41:25 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-14 16:41:25 -==> Parameters: 
2019-03-14 16:41:25 -<==      Total: 3
2019-03-14 16:41:25 -耗时 : 5
2019-03-14 16:41:25 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-14 16:41:39 -请求地址 : http://localhost:8081/index
2019-03-14 16:41:39 -HTTP METHOD : GET
2019-03-14 16:41:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 16:41:39 -参数 : [{}]
2019-03-14 16:41:39 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 16:41:39 -==> Parameters: 1(Long)
2019-03-14 16:41:39 -<==      Total: 45
2019-03-14 16:41:39 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 16:41:39 -==> Parameters: 138(Long)
2019-03-14 16:41:39 -<==      Total: 1
2019-03-14 16:41:39 -耗时 : 33
2019-03-14 16:41:39 -返回值 : index_v1
2019-03-14 16:41:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 16:41:39 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 33(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 16:41:39.058(Timestamp)
2019-03-14 16:41:39 -<==    Updates: 1
2019-03-14 16:41:39 -请求地址 : http://localhost:8081/main
2019-03-14 16:41:39 -HTTP METHOD : GET
2019-03-14 16:41:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 16:41:39 -参数 : []
2019-03-14 16:41:39 -耗时 : 1
2019-03-14 16:41:39 -返回值 : main
2019-03-14 16:41:39 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 16:41:39 -HTTP METHOD : GET
2019-03-14 16:41:39 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 16:41:39 -参数 : []
2019-03-14 16:41:39 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 16:41:39 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 16:41:39 -<==      Total: 0
2019-03-14 16:41:39 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 16:41:39 -==> Parameters: 1(Long), 0(String)
2019-03-14 16:41:39 -<==      Total: 1
2019-03-14 16:41:39 -耗时 : 27
2019-03-14 16:41:39 -返回值 : com.bootdo.common.utils.PageUtils@30de13bb
2019-03-14 16:41:39 -请求地址 : http://localhost:8081/main
2019-03-14 16:41:39 -HTTP METHOD : GET
2019-03-14 16:41:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 16:41:39 -参数 : []
2019-03-14 16:41:39 -耗时 : 2
2019-03-14 16:41:39 -返回值 : main
2019-03-14 16:41:43 -请求地址 : http://localhost:8081/charts/countMM
2019-03-14 16:41:43 -HTTP METHOD : GET
2019-03-14 16:41:43 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-03-14 16:41:43 -参数 : []
2019-03-14 16:41:43 -耗时 : 2
2019-03-14 16:41:43 -返回值 : charts/countMM
2019-03-14 16:50:15 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 4 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 45], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 7], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1295]
2019-03-14 16:54:39 -请求地址 : http://localhost:8081/index
2019-03-14 16:54:39 -HTTP METHOD : GET
2019-03-14 16:54:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-14 16:54:39 -参数 : [{}]
2019-03-14 16:54:39 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-14 16:54:39 -==> Parameters: 1(Long)
2019-03-14 16:54:39 -<==      Total: 45
2019-03-14 16:54:39 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-14 16:54:39 -==> Parameters: 138(Long)
2019-03-14 16:54:39 -<==      Total: 1
2019-03-14 16:54:39 -耗时 : 31
2019-03-14 16:54:39 -返回值 : index_v1
2019-03-14 16:54:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-14 16:54:39 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 31(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-14 16:54:39.376(Timestamp)
2019-03-14 16:54:39 -请求地址 : http://localhost:8081/main
2019-03-14 16:54:39 -HTTP METHOD : GET
2019-03-14 16:54:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 16:54:39 -参数 : []
2019-03-14 16:54:39 -耗时 : 0
2019-03-14 16:54:39 -返回值 : main
2019-03-14 16:54:39 -<==    Updates: 1
2019-03-14 16:54:39 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-14 16:54:39 -HTTP METHOD : GET
2019-03-14 16:54:39 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-14 16:54:39 -参数 : []
2019-03-14 16:54:39 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-14 16:54:39 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-14 16:54:39 -<==      Total: 0
2019-03-14 16:54:39 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-14 16:54:39 -==> Parameters: 1(Long), 0(String)
2019-03-14 16:54:39 -<==      Total: 1
2019-03-14 16:54:39 -耗时 : 46
2019-03-14 16:54:39 -返回值 : com.bootdo.common.utils.PageUtils@4ca02c8b
2019-03-14 16:54:39 -请求地址 : http://localhost:8081/main
2019-03-14 16:54:39 -HTTP METHOD : GET
2019-03-14 16:54:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-14 16:54:39 -参数 : []
2019-03-14 16:54:39 -耗时 : 1
2019-03-14 16:54:39 -返回值 : main
2019-03-14 16:55:19 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-14 16:55:19 -==> Parameters: 1(Long)
2019-03-14 16:55:19 -<==      Total: 86
2019-03-14 16:55:19 -请求地址 : http://localhost:8081/water/water
2019-03-14 16:55:19 -HTTP METHOD : GET
2019-03-14 16:55:19 -CLASS_METHOD : com.bootdo.water.controller.WaterController.Water
2019-03-14 16:55:19 -参数 : []
2019-03-14 16:55:19 -耗时 : 1
2019-03-14 16:55:19 -返回值 : water/water/water
2019-03-14 16:55:20 -请求地址 : http://localhost:8081/water/water/list
2019-03-14 16:55:20 -HTTP METHOD : GET
2019-03-14 16:55:20 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-14 16:55:20 -参数 : [{limit=10, offset=0}]
2019-03-14 16:55:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water order by id desc limit ?, ? 
2019-03-14 16:55:20 -==> Parameters: 0(Integer), 10(Integer)
2019-03-14 16:55:20 -<==      Total: 1
2019-03-14 16:55:20 -==>  Preparing: select count(*) from water 
2019-03-14 16:55:20 -==> Parameters: 
2019-03-14 16:55:20 -<==      Total: 1
2019-03-14 16:55:20 -耗时 : 164
2019-03-14 16:55:20 -返回值 : com.bootdo.common.utils.PageUtils@7ea86806

2019-04-08 08:36:18 -Starting BootdoApplication on ZJZL-20180906VX with PID 3724 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-08 08:36:18 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-08 08:36:18 -The following profiles are active: dev
2019-04-08 08:36:19 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7b36aa0c: startup date [Mon Apr 08 08:36:19 CST 2019]; root of context hierarchy
2019-04-08 08:36:30 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-08 08:36:33 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6c68c88e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 08:36:33 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$5ec1f735] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 08:36:35 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 08:36:35 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 08:36:35 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 08:36:35 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-08 08:36:35 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-08 08:36:35 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 08:36:35 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 08:36:35 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 08:36:35 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 08:36:37 -Tomcat initialized with port(s): 8081 (http)
2019-04-08 08:36:37 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-08 08:36:37 -Starting service [Tomcat]
2019-04-08 08:36:37 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-08 08:36:37 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-08 08:36:37 -Initializing Spring embedded WebApplicationContext
2019-04-08 08:36:37 -Root WebApplicationContext: initialization completed in 18630 ms
2019-04-08 08:36:38 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-08 08:36:38 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-08 08:36:38 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-08 08:36:38 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-08 08:36:38 -Filter xssFilter was not registered (disabled)
2019-04-08 08:36:38 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-08 08:36:38 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-08 08:36:38 -Servlet statViewServlet mapped to [/druid/*]
2019-04-08 08:36:38 -Servlet dispatcherServlet mapped to [/]
2019-04-08 08:36:42 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7b36aa0c: startup date [Mon Apr 08 08:36:19 CST 2019]; root of context hierarchy
2019-04-08 08:36:43 -Using default implementation for ThreadExecutor
2019-04-08 08:36:43 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-08 08:36:43 -Quartz Scheduler v.2.2.1 created.
2019-04-08 08:36:43 -RAMJobStore initialized.
2019-04-08 08:36:43 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-08 08:36:43 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-08 08:36:43 -Quartz scheduler version: 2.2.1
2019-04-08 08:36:43 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@795f6681
2019-04-08 08:36:43 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-08 08:36:43 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-08 08:36:46 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-08 08:36:46 -Mapped "{[/charts/countDD/tableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.tableDD()
2019-04-08 08:36:46 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-08 08:36:46 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 08:36:46 -Mapped "{[/charts/countMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 08:36:46 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-08 08:36:46 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-08 08:36:46 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-08 08:36:46 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-08 08:36:46 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-08 08:36:46 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public int com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-08 08:36:46 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 08:36:46 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-08 08:36:46 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public int com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-08 08:36:46 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 08:36:46 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-08 08:36:46 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-08 08:36:46 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-08 08:36:46 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-08 08:36:46 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 08:36:46 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-08 08:36:46 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-08 08:36:46 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-08 08:36:46 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 08:36:46 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-08 08:36:46 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-08 08:36:46 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-08 08:36:46 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-08 08:36:46 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-08 08:36:46 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-08 08:36:46 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 08:36:46 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-08 08:36:46 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-08 08:36:46 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 08:36:46 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-08 08:36:46 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-08 08:36:46 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 08:36:46 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-08 08:36:46 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-08 08:36:46 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-08 08:36:46 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-08 08:36:46 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-08 08:36:46 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-08 08:36:46 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-08 08:36:46 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-08 08:36:46 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-08 08:36:46 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 08:36:46 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-08 08:36:46 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-08 08:36:46 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 08:36:46 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-08 08:36:46 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-08 08:36:46 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-08 08:36:46 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-08 08:36:46 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 08:36:46 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-08 08:36:46 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-08 08:36:46 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-08 08:36:46 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-08 08:36:46 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-08 08:36:46 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-08 08:36:46 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-08 08:36:46 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-08 08:36:46 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-08 08:36:46 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-08 08:36:46 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-08 08:36:46 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 08:36:46 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-08 08:36:46 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-08 08:36:46 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-08 08:36:46 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-08 08:36:46 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-08 08:36:46 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-08 08:36:46 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-08 08:36:46 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-08 08:36:46 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-08 08:36:46 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 08:36:46 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-08 08:36:46 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 08:36:46 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-08 08:36:46 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-08 08:36:46 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-08 08:36:46 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-08 08:36:46 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-08 08:36:46 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-08 08:36:46 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-08 08:36:46 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 08:36:46 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-08 08:36:46 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-08 08:36:46 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-08 08:36:46 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-08 08:36:46 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-08 08:36:46 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-08 08:36:46 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-08 08:36:46 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-08 08:36:46 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-08 08:36:46 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-08 08:36:46 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 08:36:46 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-08 08:36:46 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-08 08:36:46 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 08:36:46 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-08 08:36:46 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-08 08:36:46 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-08 08:36:46 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-08 08:36:46 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-08 08:36:46 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-08 08:36:46 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-08 08:36:46 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-08 08:36:47 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-08 08:36:47 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-08 08:36:47 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-08 08:36:47 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-08 08:36:47 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 08:36:47 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-08 08:36:47 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-08 08:36:47 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 08:36:47 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 08:36:47 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-08 08:36:47 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-08 08:36:47 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-08 08:36:47 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-08 08:36:47 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 08:36:47 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-08 08:36:47 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 08:36:47 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-08 08:36:47 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 08:36:47 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-08 08:36:47 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-08 08:36:47 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-08 08:36:47 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-08 08:36:47 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 08:36:47 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-08 08:36:47 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 08:36:47 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-08 08:36:47 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 08:36:47 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-08 08:36:47 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-08 08:36:47 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-08 08:36:47 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-08 08:36:47 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-08 08:36:47 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 08:36:47 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-08 08:36:47 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-08 08:36:47 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 08:36:47 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-08 08:36:47 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-08 08:36:47 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 08:36:47 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-08 08:36:47 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-08 08:36:47 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-08 08:36:47 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-08 08:36:47 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 08:36:47 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-08 08:36:47 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-08 08:36:47 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 08:36:47 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 08:36:47 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 08:36:47 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-08 08:36:47 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-08 08:36:47 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-08 08:36:47 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-08 08:36:47 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-08 08:36:47 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-08 08:36:47 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-08 08:36:47 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-08 08:36:47 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-08 08:36:47 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 08:36:47 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-08 08:36:47 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-08 08:36:47 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-08 08:36:47 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-08 08:36:47 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-08 08:36:47 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-08 08:36:47 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-08 08:36:47 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-08 08:36:47 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-08 08:36:47 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-08 08:36:47 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 08:36:47 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-08 08:36:47 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-08 08:36:47 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-08 08:36:47 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-08 08:36:47 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-08 08:36:47 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-08 08:36:47 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-08 08:36:47 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-08 08:36:47 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-08 08:36:47 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-08 08:36:47 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-08 08:36:47 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-08 08:36:47 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 08:36:47 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-08 08:36:47 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-08 08:36:47 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-08 08:36:47 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-08 08:36:47 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 08:36:47 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-08 08:36:47 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-08 08:36:47 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-08 08:36:47 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 08:36:47 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-08 08:36:47 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-08 08:36:47 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-08 08:36:47 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-08 08:36:47 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-08 08:36:47 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-08 08:36:47 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-08 08:36:47 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-08 08:36:47 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-08 08:36:47 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-08 08:36:47 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-08 08:36:47 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-08 08:36:47 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-08 08:36:47 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-08 08:36:47 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-08 08:36:47 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-08 08:36:47 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-08 08:36:47 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 08:36:47 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-08 08:36:47 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-08 08:36:47 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 08:36:47 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-08 08:36:47 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-08 08:36:47 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-08 08:36:47 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-08 08:36:47 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-08 08:36:47 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-08 08:36:47 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-08 08:36:47 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 08:36:47 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-08 08:36:47 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-08 08:36:47 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 08:36:47 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-08 08:36:47 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-08 08:36:47 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-08 08:36:47 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-08 08:36:47 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-08 08:36:47 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-08 08:36:47 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-08 08:36:47 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-08 08:36:48 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-08 08:36:48 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-08 08:36:48 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-08 08:36:48 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-08 08:36:49 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7b36aa0c: startup date [Mon Apr 08 08:36:19 CST 2019]; root of context hierarchy
2019-04-08 08:36:49 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-08 08:36:49 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-08 08:36:49 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-08 08:36:49 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-08 08:36:49 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-08 08:36:52 -Registering beans for JMX exposure on startup
2019-04-08 08:36:52 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-08 08:36:52 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-08 08:36:52 -Starting beans in phase 2147483647
2019-04-08 08:36:52 -Context refreshed
2019-04-08 08:36:52 -Found 1 custom documentation plugin(s)
2019-04-08 08:36:52 -Scanning for api listing references
2019-04-08 08:36:52 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-08 08:36:52 -Generating unique operation named: getCountDUsingPOST_1
2019-04-08 08:36:53 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-08 08:36:53 -Generating unique operation named: getCountDUsingPOST_2
2019-04-08 08:36:53 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-08 08:36:53 -Generating unique operation named: getCountDUsingPOST_3
2019-04-08 08:36:53 -Generating unique operation named: removeUsingPOST_1
2019-04-08 08:36:53 -Generating unique operation named: addUsingGET_1
2019-04-08 08:36:53 -Generating unique operation named: editUsingGET_1
2019-04-08 08:36:53 -Generating unique operation named: listUsingGET_1
2019-04-08 08:36:53 -Generating unique operation named: removeUsingPOST_2
2019-04-08 08:36:53 -Generating unique operation named: removeUsingPOST_3
2019-04-08 08:36:53 -Generating unique operation named: saveUsingPOST_1
2019-04-08 08:36:53 -Generating unique operation named: updateUsingGET_1
2019-04-08 08:36:53 -Generating unique operation named: updateUsingHEAD_1
2019-04-08 08:36:53 -Generating unique operation named: updateUsingPOST_1
2019-04-08 08:36:53 -Generating unique operation named: updateUsingPUT_1
2019-04-08 08:36:53 -Generating unique operation named: updateUsingPATCH_1
2019-04-08 08:36:53 -Generating unique operation named: updateUsingDELETE_1
2019-04-08 08:36:53 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-08 08:36:53 -Generating unique operation named: updateUsingTRACE_1
2019-04-08 08:36:53 -Generating unique operation named: addUsingGET_2
2019-04-08 08:36:53 -Generating unique operation named: editUsingGET_2
2019-04-08 08:36:53 -Generating unique operation named: listUsingGET_2
2019-04-08 08:36:53 -Generating unique operation named: removeUsingPOST_4
2019-04-08 08:36:53 -Generating unique operation named: removeUsingPOST_5
2019-04-08 08:36:53 -Generating unique operation named: saveUsingPOST_2
2019-04-08 08:36:53 -Generating unique operation named: updateUsingPOST_2
2019-04-08 08:36:53 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-08 08:36:53 -Generating unique operation named: addUsingGET_3
2019-04-08 08:36:53 -Generating unique operation named: editUsingGET_3
2019-04-08 08:36:53 -Generating unique operation named: exprotElecLogUsingGET_4
2019-04-08 08:36:53 -Generating unique operation named: listUsingGET_3
2019-04-08 08:36:53 -Generating unique operation named: removeUsingPOST_6
2019-04-08 08:36:53 -Generating unique operation named: removeUsingPOST_7
2019-04-08 08:36:53 -Generating unique operation named: saveUsingPOST_3
2019-04-08 08:36:53 -Generating unique operation named: updateUsingGET_2
2019-04-08 08:36:53 -Generating unique operation named: updateUsingHEAD_2
2019-04-08 08:36:53 -Generating unique operation named: updateUsingPOST_3
2019-04-08 08:36:53 -Generating unique operation named: updateUsingPUT_2
2019-04-08 08:36:53 -Generating unique operation named: updateUsingPATCH_2
2019-04-08 08:36:53 -Generating unique operation named: updateUsingDELETE_2
2019-04-08 08:36:53 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-08 08:36:53 -Generating unique operation named: updateUsingTRACE_2
2019-04-08 08:36:53 -Generating unique operation named: addUsingGET_4
2019-04-08 08:36:53 -Generating unique operation named: editUsingGET_4
2019-04-08 08:36:53 -Generating unique operation named: listUsingGET_4
2019-04-08 08:36:53 -Generating unique operation named: removeUsingPOST_8
2019-04-08 08:36:53 -Generating unique operation named: removeUsingPOST_9
2019-04-08 08:36:53 -Generating unique operation named: saveUsingPOST_4
2019-04-08 08:36:53 -Generating unique operation named: updateUsingGET_3
2019-04-08 08:36:53 -Generating unique operation named: updateUsingHEAD_3
2019-04-08 08:36:53 -Generating unique operation named: updateUsingPOST_4
2019-04-08 08:36:53 -Generating unique operation named: updateUsingPUT_3
2019-04-08 08:36:53 -Generating unique operation named: updateUsingPATCH_3
2019-04-08 08:36:53 -Generating unique operation named: updateUsingDELETE_3
2019-04-08 08:36:53 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-08 08:36:53 -Generating unique operation named: updateUsingTRACE_3
2019-04-08 08:36:53 -Generating unique operation named: ElecUsingGET_1
2019-04-08 08:36:53 -Generating unique operation named: addUsingGET_5
2019-04-08 08:36:53 -Generating unique operation named: editUsingGET_5
2019-04-08 08:36:53 -Generating unique operation named: listUsingGET_5
2019-04-08 08:36:53 -Generating unique operation named: removeUsingPOST_10
2019-04-08 08:36:53 -Generating unique operation named: removeUsingPOST_11
2019-04-08 08:36:53 -Generating unique operation named: saveUsingPOST_5
2019-04-08 08:36:53 -Generating unique operation named: updateUsingGET_4
2019-04-08 08:36:53 -Generating unique operation named: updateUsingHEAD_4
2019-04-08 08:36:53 -Generating unique operation named: updateUsingPOST_5
2019-04-08 08:36:53 -Generating unique operation named: updateUsingPUT_4
2019-04-08 08:36:53 -Generating unique operation named: updateUsingPATCH_4
2019-04-08 08:36:53 -Generating unique operation named: updateUsingDELETE_4
2019-04-08 08:36:53 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-08 08:36:53 -Generating unique operation named: updateUsingTRACE_4
2019-04-08 08:36:53 -Generating unique operation named: editUsingGET_6
2019-04-08 08:36:53 -Generating unique operation named: listUsingGET_6
2019-04-08 08:36:53 -Generating unique operation named: updateUsingPOST_6
2019-04-08 08:36:53 -Generating unique operation named: addUsingGET_6
2019-04-08 08:36:53 -Generating unique operation named: editUsingGET_7
2019-04-08 08:36:53 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-08 08:36:53 -Generating unique operation named: listUsingGET_7
2019-04-08 08:36:53 -Generating unique operation named: removeUsingPOST_12
2019-04-08 08:36:53 -Generating unique operation named: removeUsingPOST_13
2019-04-08 08:36:53 -Generating unique operation named: saveUsingPOST_6
2019-04-08 08:36:53 -Generating unique operation named: updateUsingGET_5
2019-04-08 08:36:53 -Generating unique operation named: updateUsingHEAD_5
2019-04-08 08:36:53 -Generating unique operation named: updateUsingPOST_7
2019-04-08 08:36:53 -Generating unique operation named: updateUsingPUT_5
2019-04-08 08:36:53 -Generating unique operation named: updateUsingPATCH_5
2019-04-08 08:36:53 -Generating unique operation named: updateUsingDELETE_5
2019-04-08 08:36:53 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-08 08:36:53 -Generating unique operation named: updateUsingTRACE_5
2019-04-08 08:36:53 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-08 08:36:53 -Generating unique operation named: addUsingGET_7
2019-04-08 08:36:53 -Generating unique operation named: editUsingGET_8
2019-04-08 08:36:53 -Generating unique operation named: listUsingGET_8
2019-04-08 08:36:53 -Generating unique operation named: removeUsingPOST_14
2019-04-08 08:36:54 -Generating unique operation named: removeUsingPOST_15
2019-04-08 08:36:54 -Generating unique operation named: saveUsingPOST_7
2019-04-08 08:36:54 -Generating unique operation named: updateUsingGET_6
2019-04-08 08:36:54 -Generating unique operation named: updateUsingHEAD_6
2019-04-08 08:36:54 -Generating unique operation named: updateUsingPOST_8
2019-04-08 08:36:54 -Generating unique operation named: updateUsingPUT_6
2019-04-08 08:36:54 -Generating unique operation named: updateUsingPATCH_6
2019-04-08 08:36:54 -Generating unique operation named: updateUsingDELETE_6
2019-04-08 08:36:54 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-08 08:36:54 -Generating unique operation named: updateUsingTRACE_6
2019-04-08 08:36:54 -Generating unique operation named: addUsingGET_8
2019-04-08 08:36:54 -Generating unique operation named: editUsingGET_9
2019-04-08 08:36:54 -Generating unique operation named: listUsingGET_9
2019-04-08 08:36:54 -Generating unique operation named: removeUsingPOST_16
2019-04-08 08:36:54 -Generating unique operation named: removeUsingPOST_17
2019-04-08 08:36:54 -Generating unique operation named: saveUsingPOST_8
2019-04-08 08:36:54 -Generating unique operation named: updateUsingGET_7
2019-04-08 08:36:54 -Generating unique operation named: updateUsingHEAD_7
2019-04-08 08:36:54 -Generating unique operation named: updateUsingPOST_9
2019-04-08 08:36:54 -Generating unique operation named: updateUsingPUT_7
2019-04-08 08:36:54 -Generating unique operation named: updateUsingPATCH_7
2019-04-08 08:36:54 -Generating unique operation named: updateUsingDELETE_7
2019-04-08 08:36:54 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-08 08:36:54 -Generating unique operation named: updateUsingTRACE_7
2019-04-08 08:36:54 -Generating unique operation named: addUsingGET_9
2019-04-08 08:36:54 -Generating unique operation named: editUsingGET_10
2019-04-08 08:36:54 -Generating unique operation named: infoUsingGET_1
2019-04-08 08:36:54 -Generating unique operation named: infoUsingHEAD_1
2019-04-08 08:36:54 -Generating unique operation named: infoUsingPOST_1
2019-04-08 08:36:54 -Generating unique operation named: infoUsingPUT_1
2019-04-08 08:36:54 -Generating unique operation named: infoUsingPATCH_1
2019-04-08 08:36:54 -Generating unique operation named: infoUsingDELETE_1
2019-04-08 08:36:54 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-08 08:36:54 -Generating unique operation named: infoUsingTRACE_1
2019-04-08 08:36:54 -Generating unique operation named: listUsingGET_10
2019-04-08 08:36:54 -Generating unique operation named: removeUsingPOST_18
2019-04-08 08:36:54 -Generating unique operation named: removeUsingPOST_19
2019-04-08 08:36:54 -Generating unique operation named: saveUsingPOST_9
2019-04-08 08:36:54 -Generating unique operation named: updateUsingPOST_10
2019-04-08 08:36:54 -Generating unique operation named: listUsingGET_11
2019-04-08 08:36:54 -Generating unique operation named: removeUsingPOST_20
2019-04-08 08:36:54 -Generating unique operation named: welcomeUsingGET_1
2019-04-08 08:36:54 -Generating unique operation named: addUsingGET_10
2019-04-08 08:36:54 -Generating unique operation named: editUsingGET_11
2019-04-08 08:36:54 -Generating unique operation named: listUsingGET_12
2019-04-08 08:36:54 -Generating unique operation named: removeUsingPOST_21
2019-04-08 08:36:54 -Generating unique operation named: saveUsingPOST_10
2019-04-08 08:36:54 -Generating unique operation named: treeUsingGET_1
2019-04-08 08:36:54 -Generating unique operation named: treeUsingGET_2
2019-04-08 08:36:54 -Generating unique operation named: updateUsingPOST_11
2019-04-08 08:36:54 -Generating unique operation named: addUsingGET_11
2019-04-08 08:36:54 -Generating unique operation named: editUsingGET_12
2019-04-08 08:36:54 -Generating unique operation named: listUsingGET_13
2019-04-08 08:36:54 -Generating unique operation named: removeUsingPOST_22
2019-04-08 08:36:54 -Generating unique operation named: removeUsingPOST_23
2019-04-08 08:36:54 -Generating unique operation named: saveUsingPOST_11
2019-04-08 08:36:54 -Generating unique operation named: updateUsingGET_8
2019-04-08 08:36:54 -Generating unique operation named: updateUsingHEAD_8
2019-04-08 08:36:54 -Generating unique operation named: updateUsingPOST_12
2019-04-08 08:36:54 -Generating unique operation named: updateUsingPUT_8
2019-04-08 08:36:54 -Generating unique operation named: updateUsingPATCH_8
2019-04-08 08:36:54 -Generating unique operation named: updateUsingDELETE_8
2019-04-08 08:36:54 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-08 08:36:54 -Generating unique operation named: updateUsingTRACE_8
2019-04-08 08:36:54 -Generating unique operation named: addUsingGET_12
2019-04-08 08:36:54 -Generating unique operation named: editUsingGET_13
2019-04-08 08:36:54 -Generating unique operation named: listUsingGET_14
2019-04-08 08:36:54 -Generating unique operation named: removeUsingPOST_24
2019-04-08 08:36:54 -Generating unique operation named: removeUsingPOST_25
2019-04-08 08:36:54 -Generating unique operation named: saveUsingPOST_12
2019-04-08 08:36:54 -Generating unique operation named: updateUsingGET_9
2019-04-08 08:36:54 -Generating unique operation named: updateUsingHEAD_9
2019-04-08 08:36:54 -Generating unique operation named: updateUsingPOST_13
2019-04-08 08:36:54 -Generating unique operation named: updateUsingPUT_9
2019-04-08 08:36:54 -Generating unique operation named: updateUsingPATCH_9
2019-04-08 08:36:54 -Generating unique operation named: updateUsingDELETE_9
2019-04-08 08:36:54 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-08 08:36:54 -Generating unique operation named: updateUsingTRACE_9
2019-04-08 08:36:54 -Generating unique operation named: addUsingGET_13
2019-04-08 08:36:54 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-08 08:36:54 -Generating unique operation named: editUsingGET_14
2019-04-08 08:36:54 -Generating unique operation named: listUsingGET_15
2019-04-08 08:36:54 -Generating unique operation named: saveUsingPOST_13
2019-04-08 08:36:54 -Generating unique operation named: saveUsingPOST_14
2019-04-08 08:36:54 -Generating unique operation named: updateUsingPOST_14
2019-04-08 08:36:54 -Generating unique operation named: listUsingGET_16
2019-04-08 08:36:54 -Generating unique operation named: listUsingHEAD_1
2019-04-08 08:36:54 -Generating unique operation named: listUsingPOST_1
2019-04-08 08:36:54 -Generating unique operation named: listUsingPUT_1
2019-04-08 08:36:54 -Generating unique operation named: listUsingPATCH_1
2019-04-08 08:36:54 -Generating unique operation named: listUsingDELETE_1
2019-04-08 08:36:54 -Generating unique operation named: listUsingOPTIONS_1
2019-04-08 08:36:54 -Generating unique operation named: listUsingTRACE_1
2019-04-08 08:36:54 -Generating unique operation named: addUsingGET_14
2019-04-08 08:36:54 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-08 08:36:54 -Generating unique operation named: editUsingGET_15
2019-04-08 08:36:54 -Generating unique operation named: listUsingGET_17
2019-04-08 08:36:55 -Generating unique operation named: removeUsingPOST_26
2019-04-08 08:36:55 -Generating unique operation named: saveUsingPOST_15
2019-04-08 08:36:55 -Generating unique operation named: treeUsingGET_3
2019-04-08 08:36:55 -Generating unique operation named: treeViewUsingGET_1
2019-04-08 08:36:55 -Generating unique operation named: updateUsingPOST_15
2019-04-08 08:36:55 -Generating unique operation named: addUsingGET_15
2019-04-08 08:36:55 -Generating unique operation named: editUsingGET_16
2019-04-08 08:36:55 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-08 08:36:55 -Generating unique operation named: listUsingGET_18
2019-04-08 08:36:55 -Generating unique operation named: removeUsingPOST_27
2019-04-08 08:36:55 -Generating unique operation named: removeUsingPOST_28
2019-04-08 08:36:55 -Generating unique operation named: saveUsingPOST_16
2019-04-08 08:36:55 -Generating unique operation named: updateUsingGET_10
2019-04-08 08:36:55 -Generating unique operation named: updateUsingHEAD_10
2019-04-08 08:36:55 -Generating unique operation named: updateUsingPOST_16
2019-04-08 08:36:55 -Generating unique operation named: updateUsingPUT_10
2019-04-08 08:36:55 -Generating unique operation named: updateUsingPATCH_10
2019-04-08 08:36:55 -Generating unique operation named: updateUsingDELETE_10
2019-04-08 08:36:55 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-08 08:36:55 -Generating unique operation named: updateUsingTRACE_10
2019-04-08 08:36:55 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-08 08:36:55 -Generating unique operation named: addUsingGET_16
2019-04-08 08:36:55 -Generating unique operation named: editUsingGET_17
2019-04-08 08:36:55 -Generating unique operation named: listUsingGET_19
2019-04-08 08:36:55 -Generating unique operation named: removeUsingPOST_29
2019-04-08 08:36:55 -Generating unique operation named: removeUsingPOST_30
2019-04-08 08:36:55 -Generating unique operation named: saveUsingPOST_17
2019-04-08 08:36:55 -Generating unique operation named: updateUsingGET_11
2019-04-08 08:36:55 -Generating unique operation named: updateUsingHEAD_11
2019-04-08 08:36:55 -Generating unique operation named: updateUsingPOST_17
2019-04-08 08:36:55 -Generating unique operation named: updateUsingPUT_11
2019-04-08 08:36:55 -Generating unique operation named: updateUsingPATCH_11
2019-04-08 08:36:55 -Generating unique operation named: updateUsingDELETE_11
2019-04-08 08:36:55 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-08 08:36:55 -Generating unique operation named: updateUsingTRACE_11
2019-04-08 08:36:55 -Generating unique operation named: addUsingGET_17
2019-04-08 08:36:55 -Generating unique operation named: editUsingGET_18
2019-04-08 08:36:55 -Generating unique operation named: listUsingGET_20
2019-04-08 08:36:55 -Generating unique operation named: removeUsingPOST_31
2019-04-08 08:36:55 -Generating unique operation named: removeUsingPOST_32
2019-04-08 08:36:55 -Generating unique operation named: saveUsingPOST_18
2019-04-08 08:36:55 -Generating unique operation named: updateUsingGET_12
2019-04-08 08:36:55 -Generating unique operation named: updateUsingHEAD_12
2019-04-08 08:36:55 -Generating unique operation named: updateUsingPOST_18
2019-04-08 08:36:55 -Generating unique operation named: updateUsingPUT_12
2019-04-08 08:36:55 -Generating unique operation named: updateUsingPATCH_12
2019-04-08 08:36:55 -Generating unique operation named: updateUsingDELETE_12
2019-04-08 08:36:55 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-08 08:36:55 -Generating unique operation named: updateUsingTRACE_12
2019-04-08 08:36:55 -Starting Quartz Scheduler now
2019-04-08 08:36:55 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-08 08:36:55 -Starting...
2019-04-08 08:36:55 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-08 08:36:55 -Started.
2019-04-08 08:36:55 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-08 08:36:56 -Using a shared selector for servlet write/read
2019-04-08 08:36:56 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-08 08:36:56 -Started BootdoApplication in 41.624 seconds (JVM running for 44.341)
2019-04-08 08:36:56 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-08 08:36:56 -==> Parameters: 
2019-04-08 08:36:56 -<==      Total: 1
2019-04-08 08:37:36 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-08 08:37:36 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-08 08:37:36 -FrameworkServlet 'dispatcherServlet': initialization completed in 73 ms
2019-04-08 08:37:36 -Enabling session validation scheduler...
2019-04-08 08:37:36 -请求地址 : http://localhost:8081/
2019-04-08 08:37:36 -HTTP METHOD : GET
2019-04-08 08:37:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-04-08 08:37:36 -参数 : [{}]
2019-04-08 08:37:36 -耗时 : 3
2019-04-08 08:37:36 -返回值 : redirect:/index
2019-04-08 08:37:37 -请求地址 : http://localhost:8081/login;JSESSIONID=f293c453-2d8e-462c-8983-244bc9cf5f8d
2019-04-08 08:37:37 -HTTP METHOD : GET
2019-04-08 08:37:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-08 08:37:37 -参数 : [{}]
2019-04-08 08:37:37 -耗时 : 1
2019-04-08 08:37:37 -返回值 : login
2019-04-08 08:37:42 -请求地址 : http://localhost:8081/getVerify
2019-04-08 08:37:42 -HTTP METHOD : GET
2019-04-08 08:37:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-08 08:37:42 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@642f494d, org.apache.shiro.web.servlet.ShiroHttpServletResponse@70114408]
2019-04-08 08:37:47 -0371
2019-04-08 08:37:47 -耗时 : 5371
2019-04-08 08:37:47 -返回值 : null
2019-04-08 08:37:48 -请求地址 : http://localhost:8081/login
2019-04-08 08:37:48 -HTTP METHOD : GET
2019-04-08 08:37:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-08 08:37:48 -参数 : [{}]
2019-04-08 08:37:48 -耗时 : 1
2019-04-08 08:37:48 -返回值 : login
2019-04-08 08:37:48 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-04-08 08:37:53 -请求地址 : http://localhost:8081/login
2019-04-08 08:37:53 -HTTP METHOD : POST
2019-04-08 08:37:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-08 08:37:53 -参数 : [admin, 111111, 0371, org.apache.shiro.web.servlet.ShiroHttpServletRequest@7e7c6472]
2019-04-08 08:37:53 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-08 08:37:53 -==> Parameters: admin(String)
2019-04-08 08:37:53 -<==      Total: 1
2019-04-08 08:37:53 -耗时 : 641
2019-04-08 08:37:53 -返回值 : {msg=操作成功, code=0}
2019-04-08 08:37:54 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-08 08:37:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 08:37:54 -==> Parameters: 1(Long), admin(String), 登录(String), 641(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-08 08:37:54.108(Timestamp)
2019-04-08 08:37:54 -请求地址 : http://localhost:8081/index
2019-04-08 08:37:54 -HTTP METHOD : GET
2019-04-08 08:37:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 08:37:54 -参数 : [{}]
2019-04-08 08:37:54 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 08:37:55 -==> Parameters: 1(Long)
2019-04-08 08:37:55 -<==    Updates: 1
2019-04-08 08:37:55 -<==      Total: 46
2019-04-08 08:37:55 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 08:37:55 -==> Parameters: 138(Long)
2019-04-08 08:37:55 -<==      Total: 1
2019-04-08 08:37:55 -耗时 : 1285
2019-04-08 08:37:55 -返回值 : index_v1
2019-04-08 08:37:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 08:37:56 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1285(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 08:37:56.016(Timestamp)
2019-04-08 08:37:56 -<==    Updates: 1
2019-04-08 08:37:56 -请求地址 : http://localhost:8081/main
2019-04-08 08:37:56 -HTTP METHOD : GET
2019-04-08 08:37:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 08:37:56 -参数 : []
2019-04-08 08:37:56 -耗时 : 0
2019-04-08 08:37:56 -返回值 : main
2019-04-08 08:37:58 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 08:37:58 -HTTP METHOD : GET
2019-04-08 08:37:58 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 08:37:58 -参数 : []
2019-04-08 08:37:58 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 08:37:58 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 08:37:58 -<==      Total: 0
2019-04-08 08:37:58 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 08:37:58 -==> Parameters: 1(Long), 0(String)
2019-04-08 08:37:58 -<==      Total: 1
2019-04-08 08:37:58 -耗时 : 370
2019-04-08 08:37:58 -返回值 : com.bootdo.common.utils.PageUtils@45a8a2b8
2019-04-08 08:37:58 -请求地址 : http://localhost:8081/main
2019-04-08 08:37:58 -HTTP METHOD : GET
2019-04-08 08:37:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 08:37:58 -参数 : []
2019-04-08 08:37:58 -耗时 : 1
2019-04-08 08:37:58 -返回值 : main
2019-04-08 08:38:07 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-08 08:38:07 -==> Parameters: 1(Long)
2019-04-08 08:38:07 -<==      Total: 90
2019-04-08 08:38:07 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 08:38:07 -HTTP METHOD : GET
2019-04-08 08:38:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 08:38:07 -参数 : []
2019-04-08 08:38:07 -耗时 : 0
2019-04-08 08:38:07 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 08:38:09 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 08:38:09 -HTTP METHOD : GET
2019-04-08 08:38:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 08:38:09 -参数 : [userType]
2019-04-08 08:38:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 08:38:09 -==> Parameters: userType(String)
2019-04-08 08:38:09 -<==      Total: 2
2019-04-08 08:38:09 -耗时 : 89
2019-04-08 08:38:09 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 08:38:09 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 08:38:09 -HTTP METHOD : GET
2019-04-08 08:38:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 08:38:09 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 08:38:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 08:38:09 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 08:38:09 -<==      Total: 7
2019-04-08 08:38:09 -==>  Preparing: select count(*) from elec_log 
2019-04-08 08:38:09 -==> Parameters: 
2019-04-08 08:38:09 -<==      Total: 1
2019-04-08 08:38:09 -耗时 : 100
2019-04-08 08:38:09 -返回值 : com.bootdo.common.utils.PageUtils@bf5eb75
2019-04-08 08:38:10 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-08 08:38:10 -HTTP METHOD : GET
2019-04-08 08:38:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-08 08:38:10 -参数 : []
2019-04-08 08:38:10 -耗时 : 0
2019-04-08 08:38:10 -返回值 : /moneyLog/waterLog/waterLog
2019-04-08 08:38:10 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 08:38:10 -HTTP METHOD : GET
2019-04-08 08:38:10 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 08:38:10 -参数 : [userType]
2019-04-08 08:38:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 08:38:10 -==> Parameters: userType(String)
2019-04-08 08:38:10 -<==      Total: 2
2019-04-08 08:38:10 -耗时 : 5
2019-04-08 08:38:10 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 08:38:10 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 08:38:10 -HTTP METHOD : GET
2019-04-08 08:38:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 08:38:10 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 08:38:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 08:38:10 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 08:38:10 -<==      Total: 5
2019-04-08 08:38:10 -==>  Preparing: select count(*) from water_log 
2019-04-08 08:38:10 -==> Parameters: 
2019-04-08 08:38:10 -<==      Total: 1
2019-04-08 08:38:10 -耗时 : 30
2019-04-08 08:38:10 -返回值 : com.bootdo.common.utils.PageUtils@75f9fce0
2019-04-08 08:38:13 -请求地址 : http://localhost:8081/moneyLog/waterLog/edit/5
2019-04-08 08:38:13 -HTTP METHOD : GET
2019-04-08 08:38:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.edit
2019-04-08 08:38:13 -参数 : [5, {}]
2019-04-08 08:38:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log where id = ? 
2019-04-08 08:38:13 -==> Parameters: 5(Long)
2019-04-08 08:38:13 -<==      Total: 1
2019-04-08 08:38:13 -耗时 : 17
2019-04-08 08:38:13 -返回值 : moneyLog/waterLog/edit
2019-04-08 08:38:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 08:38:13 -HTTP METHOD : GET
2019-04-08 08:38:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 08:38:13 -参数 : [userType]
2019-04-08 08:38:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 08:38:13 -==> Parameters: userType(String)
2019-04-08 08:38:13 -<==      Total: 2
2019-04-08 08:38:13 -耗时 : 7
2019-04-08 08:38:13 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 08:38:13 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-08 08:38:13 -HTTP METHOD : GET
2019-04-08 08:38:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 08:38:13 -参数 : [waterType]
2019-04-08 08:38:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 08:38:13 -==> Parameters: waterType(String)
2019-04-08 08:38:13 -<==      Total: 6
2019-04-08 08:38:13 -耗时 : 19
2019-04-08 08:38:13 -返回值 : [DictDO{id=132, name='特殊水费4', value='5', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=131, name='特殊水费3', value='4', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=130, name='特殊水费2', value='3', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=129, name='特殊水费1', value='2', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=128, name='民用水', value='1', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='0', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 08:38:51 -请求地址 : http://localhost:8081/moneyLog/waterLog/edit/5
2019-04-08 08:38:51 -HTTP METHOD : GET
2019-04-08 08:38:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.edit
2019-04-08 08:38:51 -参数 : [5, {}]
2019-04-08 08:38:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log where id = ? 
2019-04-08 08:38:51 -==> Parameters: 5(Long)
2019-04-08 08:38:51 -<==      Total: 1
2019-04-08 08:38:51 -耗时 : 7
2019-04-08 08:38:51 -返回值 : moneyLog/waterLog/edit
2019-04-08 08:38:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 08:38:52 -HTTP METHOD : GET
2019-04-08 08:38:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 08:38:52 -参数 : [userType]
2019-04-08 08:38:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 08:38:52 -==> Parameters: userType(String)
2019-04-08 08:38:52 -<==      Total: 2
2019-04-08 08:38:52 -耗时 : 5
2019-04-08 08:38:52 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 08:38:52 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-08 08:38:52 -HTTP METHOD : GET
2019-04-08 08:38:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 08:38:52 -参数 : [waterType]
2019-04-08 08:38:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 08:38:52 -==> Parameters: waterType(String)
2019-04-08 08:38:52 -<==      Total: 6
2019-04-08 08:38:52 -耗时 : 13
2019-04-08 08:38:52 -返回值 : [DictDO{id=132, name='特殊水费4', value='5', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=131, name='特殊水费3', value='4', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=130, name='特殊水费2', value='3', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=129, name='特殊水费1', value='2', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=128, name='民用水', value='1', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='0', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 08:39:06 -请求地址 : http://localhost:8081/moneyLog/waterLog/update
2019-04-08 08:39:06 -HTTP METHOD : POST
2019-04-08 08:39:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.update
2019-04-08 08:39:06 -参数 : [{id=5, userId=666666, userName=111, TuserType=A, userType=A, userOrg=2, userOrgName=五九, TwaterType=1, waterType=1, waterMoney=1.00, createTime=2019-04, waterDate=2019-12-11 15:16:55, remark=}, com.bootdo.moneyLog.domain.WaterLogDO@65ded063]
2019-04-08 08:39:06 -==>  Preparing: update water_log SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `water_type` = ?, `water_money` = ?, `water_date` = ?, `create_time` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-04-08 08:39:06 -==> Parameters: 666666(String), 111(String), A(String), 2(String), 1(String), 1.00(BigDecimal), 2019-12-11 15:16:55.0(Timestamp), 2019-04(String), 2019-04-08 08:39:06.068(Timestamp), 1(Long), (String), 5(Long)
2019-04-08 08:39:06 -<==    Updates: 1
2019-04-08 08:39:06 -耗时 : 210
2019-04-08 08:39:06 -返回值 : {msg=操作成功, code=0}
2019-04-08 08:39:06 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 08:39:06 -HTTP METHOD : GET
2019-04-08 08:39:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 08:39:06 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 08:39:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 08:39:06 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 08:39:06 -<==      Total: 5
2019-04-08 08:39:06 -==>  Preparing: select count(*) from water_log 
2019-04-08 08:39:06 -==> Parameters: 
2019-04-08 08:39:06 -<==      Total: 1
2019-04-08 08:39:06 -耗时 : 9
2019-04-08 08:39:06 -返回值 : com.bootdo.common.utils.PageUtils@17e14595
2019-04-08 08:39:38 -请求地址 : http://localhost:8081/moneyLog/waterLog/edit/5
2019-04-08 08:39:38 -HTTP METHOD : GET
2019-04-08 08:39:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.edit
2019-04-08 08:39:38 -参数 : [5, {}]
2019-04-08 08:39:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log where id = ? 
2019-04-08 08:39:38 -==> Parameters: 5(Long)
2019-04-08 08:39:38 -<==      Total: 1
2019-04-08 08:39:38 -耗时 : 5
2019-04-08 08:39:38 -返回值 : moneyLog/waterLog/edit
2019-04-08 08:39:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 08:39:39 -HTTP METHOD : GET
2019-04-08 08:39:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 08:39:39 -参数 : [userType]
2019-04-08 08:39:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 08:39:39 -==> Parameters: userType(String)
2019-04-08 08:39:39 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-08 08:39:39 -HTTP METHOD : GET
2019-04-08 08:39:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 08:39:39 -参数 : [waterType]
2019-04-08 08:39:39 -<==      Total: 2
2019-04-08 08:39:39 -耗时 : 8
2019-04-08 08:39:39 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 08:39:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 08:39:39 -==> Parameters: waterType(String)
2019-04-08 08:39:39 -<==      Total: 6
2019-04-08 08:39:39 -耗时 : 12
2019-04-08 08:39:39 -返回值 : [DictDO{id=132, name='特殊水费4', value='5', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=131, name='特殊水费3', value='4', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=130, name='特殊水费2', value='3', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=129, name='特殊水费1', value='2', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=128, name='民用水', value='1', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='0', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 08:39:58 -请求地址 : http://localhost:8081/moneyLog/waterLog/update
2019-04-08 08:39:58 -HTTP METHOD : POST
2019-04-08 08:39:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.update
2019-04-08 08:39:58 -参数 : [{id=5, userId=666666, userName=6666666666, TuserType=A, userType=A, userOrg=2, userOrgName=五九, TwaterType=1, waterType=1, waterMoney=1.00, createTime=2019-04, waterDate=2019-01-01 15:16:55, remark=}, com.bootdo.moneyLog.domain.WaterLogDO@6d57cba2]
2019-04-08 08:39:58 -==>  Preparing: update water_log SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `water_type` = ?, `water_money` = ?, `water_date` = ?, `create_time` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-04-08 08:39:58 -==> Parameters: 666666(String), 6666666666(String), A(String), 2(String), 1(String), 1.00(BigDecimal), 2019-01-01 15:16:55.0(Timestamp), 2019-04(String), 2019-04-08 08:39:58.035(Timestamp), 1(Long), (String), 5(Long)
2019-04-08 08:39:58 -<==    Updates: 1
2019-04-08 08:39:58 -耗时 : 133
2019-04-08 08:39:58 -返回值 : {msg=操作成功, code=0}
2019-04-08 08:39:58 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 08:39:58 -HTTP METHOD : GET
2019-04-08 08:39:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 08:39:58 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 08:39:58 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 08:39:58 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 08:39:58 -<==      Total: 5
2019-04-08 08:39:58 -==>  Preparing: select count(*) from water_log 
2019-04-08 08:39:58 -==> Parameters: 
2019-04-08 08:39:58 -<==      Total: 1
2019-04-08 08:39:58 -耗时 : 28
2019-04-08 08:39:58 -返回值 : com.bootdo.common.utils.PageUtils@288553a2
2019-04-08 08:40:47 -请求地址 : http://localhost:8081/moneyLog/waterLog/add
2019-04-08 08:40:47 -HTTP METHOD : GET
2019-04-08 08:40:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.add
2019-04-08 08:40:47 -参数 : []
2019-04-08 08:40:47 -耗时 : 1
2019-04-08 08:40:47 -返回值 : moneyLog/waterLog/add
2019-04-08 08:40:48 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 08:40:48 -HTTP METHOD : GET
2019-04-08 08:40:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 08:40:48 -参数 : [userType]
2019-04-08 08:40:48 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-08 08:40:48 -HTTP METHOD : GET
2019-04-08 08:40:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 08:40:48 -参数 : [waterType]
2019-04-08 08:40:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 08:40:48 -==> Parameters: userType(String)
2019-04-08 08:40:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 08:40:48 -==> Parameters: waterType(String)
2019-04-08 08:40:48 -<==      Total: 2
2019-04-08 08:40:48 -<==      Total: 6
2019-04-08 08:40:48 -耗时 : 10
2019-04-08 08:40:48 -返回值 : [DictDO{id=132, name='特殊水费4', value='5', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=131, name='特殊水费3', value='4', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=130, name='特殊水费2', value='3', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=129, name='特殊水费1', value='2', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=128, name='民用水', value='1', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='0', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 08:40:48 -耗时 : 10
2019-04-08 08:40:48 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 08:41:03 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 08:41:03 -HTTP METHOD : GET
2019-04-08 08:41:03 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 08:41:03 -参数 : []
2019-04-08 08:41:03 -耗时 : 1
2019-04-08 08:41:03 -返回值 : system/dept/deptTree
2019-04-08 08:41:04 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 08:41:04 -HTTP METHOD : GET
2019-04-08 08:41:04 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 08:41:04 -参数 : []
2019-04-08 08:41:04 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 08:41:04 -==> Parameters: 
2019-04-08 08:41:04 -<==      Total: 3
2019-04-08 08:41:04 -耗时 : 24
2019-04-08 08:41:04 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 08:41:21 -请求地址 : http://localhost:8081/moneyLog/waterLog/save
2019-04-08 08:41:21 -HTTP METHOD : POST
2019-04-08 08:41:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.save
2019-04-08 08:41:21 -参数 : [com.bootdo.moneyLog.domain.WaterLogDO@11120d56]
2019-04-08 08:41:21 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 08:41:21 -==> Parameters: 1(String), 111(String), A(String), 2(String), 2(String), 1.0(BigDecimal), 2019-04-08 00:00:00.0(Timestamp), 2019-04(String), 1(Long), 2019-04-08 08:41:21.874(Timestamp), 1(Long), 1(String)
2019-04-08 08:41:21 -<==    Updates: 1
2019-04-08 08:41:21 -耗时 : 100
2019-04-08 08:41:21 -返回值 : {msg=操作成功, code=0}
2019-04-08 08:41:22 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 08:41:22 -HTTP METHOD : GET
2019-04-08 08:41:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 08:41:22 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 08:41:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 08:41:22 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 08:41:22 -<==      Total: 6
2019-04-08 08:41:22 -==>  Preparing: select count(*) from water_log 
2019-04-08 08:41:22 -==> Parameters: 
2019-04-08 08:41:22 -<==      Total: 1
2019-04-08 08:41:22 -耗时 : 38
2019-04-08 08:41:22 -返回值 : com.bootdo.common.utils.PageUtils@178b85d6
2019-04-08 08:41:58 -请求地址 : http://localhost:8081/moneyLog/waterLog/edit/5
2019-04-08 08:41:58 -HTTP METHOD : GET
2019-04-08 08:41:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.edit
2019-04-08 08:41:58 -参数 : [5, {}]
2019-04-08 08:41:58 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log where id = ? 
2019-04-08 08:41:58 -==> Parameters: 5(Long)
2019-04-08 08:41:58 -<==      Total: 1
2019-04-08 08:41:59 -耗时 : 8
2019-04-08 08:41:59 -返回值 : moneyLog/waterLog/edit
2019-04-08 08:41:59 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 08:41:59 -HTTP METHOD : GET
2019-04-08 08:41:59 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 08:41:59 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-08 08:41:59 -参数 : [userType]
2019-04-08 08:41:59 -HTTP METHOD : GET
2019-04-08 08:41:59 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 08:41:59 -参数 : [waterType]
2019-04-08 08:41:59 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 08:41:59 -==> Parameters: userType(String)
2019-04-08 08:41:59 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 08:41:59 -<==      Total: 2
2019-04-08 08:41:59 -==> Parameters: waterType(String)
2019-04-08 08:41:59 -耗时 : 5
2019-04-08 08:41:59 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 08:41:59 -<==      Total: 6
2019-04-08 08:41:59 -耗时 : 11
2019-04-08 08:41:59 -返回值 : [DictDO{id=132, name='特殊水费4', value='5', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=131, name='特殊水费3', value='4', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=130, name='特殊水费2', value='3', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=129, name='特殊水费1', value='2', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=128, name='民用水', value='1', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='0', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 08:42:08 -请求地址 : http://localhost:8081/moneyLog/waterLog/update
2019-04-08 08:42:08 -HTTP METHOD : POST
2019-04-08 08:42:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.update
2019-04-08 08:42:08 -参数 : [{id=5, userId=111111, userName=6666666666, TuserType=A, userType=A, userOrg=2, userOrgName=五九, TwaterType=1, waterType=1, waterMoney=1.00, createTime=2019-04, waterDate=2019-07-01 15:16:55, remark=}, com.bootdo.moneyLog.domain.WaterLogDO@11204c84]
2019-04-08 08:42:08 -==>  Preparing: update water_log SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `water_type` = ?, `water_money` = ?, `water_date` = ?, `create_time` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-04-08 08:42:08 -==> Parameters: 111111(String), 6666666666(String), A(String), 2(String), 1(String), 1.00(BigDecimal), 2019-07-01 15:16:55.0(Timestamp), 2019-04(String), 2019-04-08 08:42:08.392(Timestamp), 1(Long), (String), 5(Long)
2019-04-08 08:42:08 -<==    Updates: 1
2019-04-08 08:42:08 -耗时 : 262
2019-04-08 08:42:08 -返回值 : {msg=操作成功, code=0}
2019-04-08 08:42:08 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 08:42:08 -HTTP METHOD : GET
2019-04-08 08:42:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 08:42:08 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 08:42:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 08:42:08 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 08:42:08 -<==      Total: 6
2019-04-08 08:42:08 -==>  Preparing: select count(*) from water_log 
2019-04-08 08:42:08 -==> Parameters: 
2019-04-08 08:42:08 -<==      Total: 1
2019-04-08 08:42:08 -耗时 : 19
2019-04-08 08:42:08 -返回值 : com.bootdo.common.utils.PageUtils@4ac72a45
2019-04-08 08:42:25 -请求地址 : http://localhost:8081/moneyLog/waterLog/edit/6
2019-04-08 08:42:25 -HTTP METHOD : GET
2019-04-08 08:42:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.edit
2019-04-08 08:42:25 -参数 : [6, {}]
2019-04-08 08:42:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log where id = ? 
2019-04-08 08:42:25 -==> Parameters: 6(Long)
2019-04-08 08:42:25 -<==      Total: 1
2019-04-08 08:42:25 -耗时 : 5
2019-04-08 08:42:25 -返回值 : moneyLog/waterLog/edit
2019-04-08 08:42:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 08:42:25 -HTTP METHOD : GET
2019-04-08 08:42:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 08:42:25 -参数 : [userType]
2019-04-08 08:42:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 08:42:25 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-08 08:42:25 -HTTP METHOD : GET
2019-04-08 08:42:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 08:42:25 -参数 : [waterType]
2019-04-08 08:42:25 -==> Parameters: userType(String)
2019-04-08 08:42:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 08:42:25 -==> Parameters: waterType(String)
2019-04-08 08:42:25 -<==      Total: 2
2019-04-08 08:42:25 -耗时 : 8
2019-04-08 08:42:25 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 08:42:25 -<==      Total: 6
2019-04-08 08:42:25 -耗时 : 8
2019-04-08 08:42:25 -返回值 : [DictDO{id=132, name='特殊水费4', value='5', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=131, name='特殊水费3', value='4', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=130, name='特殊水费2', value='3', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=129, name='特殊水费1', value='2', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=128, name='民用水', value='1', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='0', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 08:42:41 -请求地址 : http://localhost:8081/moneyLog/waterLog/update
2019-04-08 08:42:41 -HTTP METHOD : POST
2019-04-08 08:42:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.update
2019-04-08 08:42:41 -参数 : [{id=6, userId=888888, userName=8888888888, TuserType=A, userType=A, userOrg=2, userOrgName=五九, TwaterType=2, waterType=2, waterMoney=1.00, createTime=2019-04, waterDate=2019-09-09 00:00:00, remark=}, com.bootdo.moneyLog.domain.WaterLogDO@39049702]
2019-04-08 08:42:41 -==>  Preparing: update water_log SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `water_type` = ?, `water_money` = ?, `water_date` = ?, `create_time` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-04-08 08:42:41 -==> Parameters: 888888(String), 8888888888(String), A(String), 2(String), 2(String), 1.00(BigDecimal), 2019-09-09 00:00:00.0(Timestamp), 2019-04(String), 2019-04-08 08:42:41.092(Timestamp), 1(Long), (String), 6(Long)
2019-04-08 08:42:41 -<==    Updates: 1
2019-04-08 08:42:41 -耗时 : 138
2019-04-08 08:42:41 -返回值 : {msg=操作成功, code=0}
2019-04-08 08:42:41 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 08:42:41 -HTTP METHOD : GET
2019-04-08 08:42:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 08:42:41 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 08:42:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 08:42:41 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 08:42:41 -<==      Total: 6
2019-04-08 08:42:41 -==>  Preparing: select count(*) from water_log 
2019-04-08 08:42:41 -==> Parameters: 
2019-04-08 08:42:41 -<==      Total: 1
2019-04-08 08:42:41 -耗时 : 14
2019-04-08 08:42:41 -返回值 : com.bootdo.common.utils.PageUtils@39772a42
2019-04-08 08:45:50 -请求地址 : http://localhost:8081/moneyLog/waterLog/remove
2019-04-08 08:45:50 -HTTP METHOD : POST
2019-04-08 08:45:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.remove
2019-04-08 08:45:50 -参数 : [5]
2019-04-08 08:45:50 -==>  Preparing: delete from water_log where id = ? 
2019-04-08 08:45:50 -==> Parameters: 5(Long)
2019-04-08 08:45:50 -<==    Updates: 1
2019-04-08 08:45:50 -耗时 : 158
2019-04-08 08:45:50 -返回值 : {msg=操作成功, code=0}
2019-04-08 08:45:50 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 08:45:50 -HTTP METHOD : GET
2019-04-08 08:45:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 08:45:50 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 08:45:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 08:45:50 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 08:45:50 -<==      Total: 5
2019-04-08 08:45:50 -==>  Preparing: select count(*) from water_log 
2019-04-08 08:45:50 -==> Parameters: 
2019-04-08 08:45:50 -<==      Total: 1
2019-04-08 08:45:50 -耗时 : 11
2019-04-08 08:45:50 -返回值 : com.bootdo.common.utils.PageUtils@646b3f10
2019-04-08 08:46:12 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 08:46:12 -HTTP METHOD : GET
2019-04-08 08:46:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 08:46:12 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, waterDate=2019-03-08}]
2019-04-08 08:46:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE user_type = ? and `water_date` >= ? and `water_date` <= ? order by id asc limit ?, ? 
2019-04-08 08:46:12 -==> Parameters: A(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-04-08 08:46:12 -<==      Total: 2
2019-04-08 08:46:12 -==>  Preparing: select count(*) from water_log WHERE user_type = ? and `water_date` >= ? and `water_date` <= ? 
2019-04-08 08:46:12 -==> Parameters: A(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String)
2019-04-08 08:46:12 -<==      Total: 1
2019-04-08 08:46:12 -耗时 : 53
2019-04-08 08:46:12 -返回值 : com.bootdo.common.utils.PageUtils@53499169
2019-04-08 08:46:13 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 08:46:13 -HTTP METHOD : GET
2019-04-08 08:46:13 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 08:46:13 -参数 : []
2019-04-08 08:46:13 -耗时 : 1
2019-04-08 08:46:13 -返回值 : system/dept/deptTree
2019-04-08 08:46:13 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 08:46:13 -HTTP METHOD : GET
2019-04-08 08:46:13 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 08:46:13 -参数 : []
2019-04-08 08:46:13 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 08:46:13 -==> Parameters: 
2019-04-08 08:46:13 -<==      Total: 3
2019-04-08 08:46:13 -耗时 : 4
2019-04-08 08:46:13 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 08:46:15 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 08:46:15 -HTTP METHOD : GET
2019-04-08 08:46:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 08:46:15 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, waterDate=2019-03-08}]
2019-04-08 08:46:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE user_type = ? and user_org = ? and `water_date` >= ? and `water_date` <= ? order by id asc limit ?, ? 
2019-04-08 08:46:15 -==> Parameters: A(String), 2(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-04-08 08:46:15 -<==      Total: 2
2019-04-08 08:46:15 -==>  Preparing: select count(*) from water_log WHERE user_type = ? and user_org = ? and `water_date` >= ? and `water_date` <= ? 
2019-04-08 08:46:15 -==> Parameters: A(String), 2(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String)
2019-04-08 08:46:15 -<==      Total: 1
2019-04-08 08:46:15 -耗时 : 17
2019-04-08 08:46:15 -返回值 : com.bootdo.common.utils.PageUtils@203c7a37
2019-04-08 08:46:16 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 08:46:16 -HTTP METHOD : GET
2019-04-08 08:46:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 08:46:16 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, waterDate=2019-03-08}]
2019-04-08 08:46:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE user_type = ? and user_org = ? and `water_date` >= ? and `water_date` <= ? order by id asc limit ?, ? 
2019-04-08 08:46:16 -==> Parameters: A(String), 2(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-04-08 08:46:16 -<==      Total: 2
2019-04-08 08:46:16 -==>  Preparing: select count(*) from water_log WHERE user_type = ? and user_org = ? and `water_date` >= ? and `water_date` <= ? 
2019-04-08 08:46:16 -==> Parameters: A(String), 2(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String)
2019-04-08 08:46:16 -<==      Total: 1
2019-04-08 08:46:16 -耗时 : 7
2019-04-08 08:46:16 -返回值 : com.bootdo.common.utils.PageUtils@3cec0741
2019-04-08 08:46:16 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 08:46:16 -HTTP METHOD : GET
2019-04-08 08:46:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 08:46:16 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, waterDate=2019-03-08}]
2019-04-08 08:46:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE user_type = ? and user_org = ? and `water_date` >= ? and `water_date` <= ? order by id asc limit ?, ? 
2019-04-08 08:46:16 -==> Parameters: A(String), 2(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-04-08 08:46:16 -<==      Total: 2
2019-04-08 08:46:16 -==>  Preparing: select count(*) from water_log WHERE user_type = ? and user_org = ? and `water_date` >= ? and `water_date` <= ? 
2019-04-08 08:46:16 -==> Parameters: A(String), 2(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String)
2019-04-08 08:46:16 -<==      Total: 1
2019-04-08 08:46:16 -耗时 : 8
2019-04-08 08:46:16 -返回值 : com.bootdo.common.utils.PageUtils@b0a0a65
2019-04-08 08:46:17 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 08:46:17 -HTTP METHOD : GET
2019-04-08 08:46:17 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 08:46:17 -参数 : []
2019-04-08 08:46:17 -耗时 : 1
2019-04-08 08:46:17 -返回值 : system/dept/deptTree
2019-04-08 08:46:17 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 08:46:17 -HTTP METHOD : GET
2019-04-08 08:46:17 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 08:46:17 -参数 : []
2019-04-08 08:46:17 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 08:46:17 -==> Parameters: 
2019-04-08 08:46:17 -<==      Total: 3
2019-04-08 08:46:17 -耗时 : 10
2019-04-08 08:46:17 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 08:46:19 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 08:46:19 -HTTP METHOD : GET
2019-04-08 08:46:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 08:46:19 -参数 : [{limit=10, offset=0, userType=A, userOrg=3, userId=, waterDate=2019-03-08}]
2019-04-08 08:46:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE user_type = ? and user_org = ? and `water_date` >= ? and `water_date` <= ? order by id asc limit ?, ? 
2019-04-08 08:46:19 -==> Parameters: A(String), 3(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-04-08 08:46:19 -<==      Total: 0
2019-04-08 08:46:19 -==>  Preparing: select count(*) from water_log WHERE user_type = ? and user_org = ? and `water_date` >= ? and `water_date` <= ? 
2019-04-08 08:46:19 -==> Parameters: A(String), 3(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String)
2019-04-08 08:46:19 -<==      Total: 1
2019-04-08 08:46:19 -耗时 : 12
2019-04-08 08:46:19 -返回值 : com.bootdo.common.utils.PageUtils@452e24be
2019-04-08 08:46:22 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 08:46:22 -HTTP METHOD : GET
2019-04-08 08:46:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 08:46:22 -参数 : [{limit=10, offset=0, userType=B, userOrg=3, userId=, waterDate=2019-03-08}]
2019-04-08 08:46:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE user_type = ? and user_org = ? and `water_date` >= ? and `water_date` <= ? order by id asc limit ?, ? 
2019-04-08 08:46:22 -==> Parameters: B(String), 3(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-04-08 08:46:22 -<==      Total: 1
2019-04-08 08:46:22 -==>  Preparing: select count(*) from water_log WHERE user_type = ? and user_org = ? and `water_date` >= ? and `water_date` <= ? 
2019-04-08 08:46:22 -==> Parameters: B(String), 3(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String)
2019-04-08 08:46:22 -<==      Total: 1
2019-04-08 08:46:22 -耗时 : 18
2019-04-08 08:46:22 -返回值 : com.bootdo.common.utils.PageUtils@594c6a29
2019-04-08 08:46:23 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 08:46:23 -HTTP METHOD : GET
2019-04-08 08:46:23 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 08:46:23 -参数 : []
2019-04-08 08:46:23 -耗时 : 0
2019-04-08 08:46:23 -返回值 : system/dept/deptTree
2019-04-08 08:46:23 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 08:46:23 -HTTP METHOD : GET
2019-04-08 08:46:23 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 08:46:23 -参数 : []
2019-04-08 08:46:23 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 08:46:23 -==> Parameters: 
2019-04-08 08:46:23 -<==      Total: 3
2019-04-08 08:46:23 -耗时 : 3
2019-04-08 08:46:23 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 08:46:27 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 08:46:27 -HTTP METHOD : GET
2019-04-08 08:46:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 08:46:27 -参数 : [{limit=10, offset=0, userType=, userOrg=3, userId=, waterDate=2019-03-08}]
2019-04-08 08:46:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE user_org = ? and `water_date` >= ? and `water_date` <= ? order by id asc limit ?, ? 
2019-04-08 08:46:27 -==> Parameters: 3(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-04-08 08:46:27 -<==      Total: 1
2019-04-08 08:46:27 -==>  Preparing: select count(*) from water_log WHERE user_org = ? and `water_date` >= ? and `water_date` <= ? 
2019-04-08 08:46:27 -==> Parameters: 3(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String)
2019-04-08 08:46:27 -<==      Total: 1
2019-04-08 08:46:27 -耗时 : 18
2019-04-08 08:46:27 -返回值 : com.bootdo.common.utils.PageUtils@271dd914
2019-04-08 08:46:28 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 08:46:28 -HTTP METHOD : GET
2019-04-08 08:46:28 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 08:46:28 -参数 : []
2019-04-08 08:46:28 -耗时 : 1
2019-04-08 08:46:28 -返回值 : system/dept/deptTree
2019-04-08 08:46:28 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 08:46:28 -HTTP METHOD : GET
2019-04-08 08:46:28 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 08:46:28 -参数 : []
2019-04-08 08:46:28 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 08:46:28 -==> Parameters: 
2019-04-08 08:46:28 -<==      Total: 3
2019-04-08 08:46:28 -耗时 : 3
2019-04-08 08:46:28 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 08:46:31 -请求地址 : http://localhost:8081/index
2019-04-08 08:46:31 -HTTP METHOD : GET
2019-04-08 08:46:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 08:46:31 -参数 : [{}]
2019-04-08 08:46:31 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 08:46:31 -==> Parameters: 1(Long)
2019-04-08 08:46:31 -<==      Total: 46
2019-04-08 08:46:31 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 08:46:31 -==> Parameters: 138(Long)
2019-04-08 08:46:31 -<==      Total: 1
2019-04-08 08:46:31 -耗时 : 35
2019-04-08 08:46:31 -返回值 : index_v1
2019-04-08 08:46:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 08:46:31 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 35(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 08:46:31.838(Timestamp)
2019-04-08 08:46:31 -<==    Updates: 1
2019-04-08 08:46:32 -请求地址 : http://localhost:8081/main
2019-04-08 08:46:32 -HTTP METHOD : GET
2019-04-08 08:46:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 08:46:32 -参数 : []
2019-04-08 08:46:32 -耗时 : 1
2019-04-08 08:46:32 -返回值 : main
2019-04-08 08:46:32 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 08:46:32 -HTTP METHOD : GET
2019-04-08 08:46:32 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 08:46:32 -参数 : []
2019-04-08 08:46:32 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 08:46:32 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 08:46:32 -<==      Total: 0
2019-04-08 08:46:32 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 08:46:32 -==> Parameters: 1(Long), 0(String)
2019-04-08 08:46:32 -<==      Total: 1
2019-04-08 08:46:32 -耗时 : 10
2019-04-08 08:46:32 -返回值 : com.bootdo.common.utils.PageUtils@591182c8
2019-04-08 08:46:32 -请求地址 : http://localhost:8081/main
2019-04-08 08:46:32 -HTTP METHOD : GET
2019-04-08 08:46:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 08:46:32 -参数 : []
2019-04-08 08:46:32 -耗时 : 1
2019-04-08 08:46:32 -返回值 : main
2019-04-08 08:46:34 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 08:46:34 -HTTP METHOD : GET
2019-04-08 08:46:34 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 08:46:34 -参数 : []
2019-04-08 08:46:34 -耗时 : 0
2019-04-08 08:46:34 -返回值 : /moneyList/moneyList
2019-04-08 08:46:36 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 08:46:36 -HTTP METHOD : GET
2019-04-08 08:46:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 08:46:36 -参数 : []
2019-04-08 08:46:36 -耗时 : 0
2019-04-08 08:46:36 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 08:46:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 08:46:36 -HTTP METHOD : GET
2019-04-08 08:46:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 08:46:36 -参数 : [userType]
2019-04-08 08:46:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 08:46:36 -==> Parameters: userType(String)
2019-04-08 08:46:36 -<==      Total: 2
2019-04-08 08:46:36 -耗时 : 3
2019-04-08 08:46:36 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 08:46:36 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 08:46:36 -HTTP METHOD : GET
2019-04-08 08:46:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 08:46:36 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 08:46:36 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 08:46:36 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 08:46:36 -<==      Total: 7
2019-04-08 08:46:36 -==>  Preparing: select count(*) from elec_log 
2019-04-08 08:46:36 -==> Parameters: 
2019-04-08 08:46:36 -<==      Total: 1
2019-04-08 08:46:36 -耗时 : 7
2019-04-08 08:46:36 -返回值 : com.bootdo.common.utils.PageUtils@6bb7d9b5
2019-04-08 08:46:37 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-08 08:46:37 -HTTP METHOD : GET
2019-04-08 08:46:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-08 08:46:37 -参数 : []
2019-04-08 08:46:37 -耗时 : 1
2019-04-08 08:46:37 -返回值 : /moneyLog/waterLog/waterLog
2019-04-08 08:46:37 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 08:46:37 -HTTP METHOD : GET
2019-04-08 08:46:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 08:46:37 -参数 : [userType]
2019-04-08 08:46:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 08:46:37 -==> Parameters: userType(String)
2019-04-08 08:46:37 -<==      Total: 2
2019-04-08 08:46:37 -耗时 : 3
2019-04-08 08:46:37 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 08:46:37 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 08:46:37 -HTTP METHOD : GET
2019-04-08 08:46:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 08:46:37 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 08:46:37 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 08:46:37 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 08:46:37 -<==      Total: 5
2019-04-08 08:46:37 -==>  Preparing: select count(*) from water_log 
2019-04-08 08:46:37 -==> Parameters: 
2019-04-08 08:46:37 -<==      Total: 1
2019-04-08 08:46:37 -耗时 : 8
2019-04-08 08:46:37 -返回值 : com.bootdo.common.utils.PageUtils@7eb5b8d1
2019-04-08 08:46:42 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 08:46:42 -HTTP METHOD : GET
2019-04-08 08:46:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 08:46:42 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=2019-03-08}]
2019-04-08 08:46:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE `water_date` >= ? and `water_date` <= ? order by id asc limit ?, ? 
2019-04-08 08:46:42 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-04-08 08:46:42 -<==      Total: 3
2019-04-08 08:46:42 -==>  Preparing: select count(*) from water_log WHERE `water_date` >= ? and `water_date` <= ? 
2019-04-08 08:46:42 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String)
2019-04-08 08:46:42 -<==      Total: 1
2019-04-08 08:46:42 -耗时 : 29
2019-04-08 08:46:42 -返回值 : com.bootdo.common.utils.PageUtils@5d690930
2019-04-08 08:47:11 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-08 08:47:12 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 08:47:12 -HTTP METHOD : GET
2019-04-08 08:47:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 08:47:12 -参数 : []
2019-04-08 08:47:12 -耗时 : 0
2019-04-08 08:47:12 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 08:47:12 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 08:47:12 -HTTP METHOD : GET
2019-04-08 08:47:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 08:47:12 -参数 : [userType]
2019-04-08 08:47:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 08:47:12 -==> Parameters: userType(String)
2019-04-08 08:47:12 -<==      Total: 2
2019-04-08 08:47:12 -耗时 : 4
2019-04-08 08:47:12 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 08:47:12 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 08:47:12 -HTTP METHOD : GET
2019-04-08 08:47:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 08:47:12 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 08:47:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 08:47:12 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 08:47:12 -<==      Total: 5
2019-04-08 08:47:12 -==>  Preparing: select count(*) from heat_log 
2019-04-08 08:47:12 -==> Parameters: 
2019-04-08 08:47:12 -<==      Total: 1
2019-04-08 08:47:12 -耗时 : 23
2019-04-08 08:47:12 -返回值 : com.bootdo.common.utils.PageUtils@45d54eab
2019-04-08 08:47:15 -请求地址 : http://localhost:8081/moneyLog/heatLog/add
2019-04-08 08:47:15 -HTTP METHOD : GET
2019-04-08 08:47:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.add
2019-04-08 08:47:15 -参数 : []
2019-04-08 08:47:15 -耗时 : 0
2019-04-08 08:47:15 -返回值 : moneyLog/heatLog/add
2019-04-08 08:47:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 08:47:15 -HTTP METHOD : GET
2019-04-08 08:47:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 08:47:15 -参数 : [userType]
2019-04-08 08:47:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 08:47:15 -==> Parameters: userType(String)
2019-04-08 08:47:15 -<==      Total: 2
2019-04-08 08:47:15 -耗时 : 4
2019-04-08 08:47:15 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 08:47:27 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 08:47:27 -HTTP METHOD : GET
2019-04-08 08:47:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 08:47:27 -参数 : []
2019-04-08 08:47:27 -耗时 : 0
2019-04-08 08:47:27 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 08:47:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 08:47:27 -HTTP METHOD : GET
2019-04-08 08:47:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 08:47:27 -参数 : [userType]
2019-04-08 08:47:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 08:47:27 -==> Parameters: userType(String)
2019-04-08 08:47:27 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 08:47:27 -HTTP METHOD : GET
2019-04-08 08:47:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 08:47:27 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 08:47:27 -<==      Total: 2
2019-04-08 08:47:27 -耗时 : 5
2019-04-08 08:47:27 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 08:47:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 08:47:27 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 08:47:27 -<==      Total: 5
2019-04-08 08:47:27 -==>  Preparing: select count(*) from heat_log 
2019-04-08 08:47:27 -==> Parameters: 
2019-04-08 08:47:27 -<==      Total: 1
2019-04-08 08:47:27 -耗时 : 18
2019-04-08 08:47:27 -返回值 : com.bootdo.common.utils.PageUtils@32fec333
2019-04-08 08:47:39 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 08:47:39 -HTTP METHOD : GET
2019-04-08 08:47:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 08:47:39 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, heatDate=2019-03-08, type=A}]
2019-04-08 08:47:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE user_type = ? and `heat_date` >= ? and `heat_date` <= ? order by id asc limit ?, ? 
2019-04-08 08:47:39 -==> Parameters: A(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-04-08 08:47:39 -<==      Total: 2
2019-04-08 08:47:39 -==>  Preparing: select count(*) from heat_log WHERE user_type = ? and `heat_date` >= ? and `heat_date` <= ? 
2019-04-08 08:47:39 -==> Parameters: A(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String)
2019-04-08 08:47:39 -<==      Total: 1
2019-04-08 08:47:39 -耗时 : 21
2019-04-08 08:47:39 -返回值 : com.bootdo.common.utils.PageUtils@2c8ff0a4
2019-04-08 08:47:40 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 08:47:40 -HTTP METHOD : GET
2019-04-08 08:47:40 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 08:47:40 -参数 : []
2019-04-08 08:47:40 -耗时 : 1
2019-04-08 08:47:40 -返回值 : system/dept/deptTree
2019-04-08 08:47:40 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 08:47:40 -HTTP METHOD : GET
2019-04-08 08:47:40 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 08:47:40 -参数 : []
2019-04-08 08:47:40 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 08:47:40 -==> Parameters: 
2019-04-08 08:47:40 -<==      Total: 3
2019-04-08 08:47:40 -耗时 : 5
2019-04-08 08:47:40 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 08:49:03 -请求地址 : http://localhost:8081/index
2019-04-08 08:49:03 -HTTP METHOD : GET
2019-04-08 08:49:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 08:49:03 -参数 : [{}]
2019-04-08 08:49:03 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 08:49:03 -==> Parameters: 1(Long)
2019-04-08 08:49:03 -<==      Total: 46
2019-04-08 08:49:03 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 08:49:03 -==> Parameters: 138(Long)
2019-04-08 08:49:03 -<==      Total: 1
2019-04-08 08:49:03 -耗时 : 61
2019-04-08 08:49:03 -返回值 : index_v1
2019-04-08 08:49:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 08:49:03 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 62(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 08:49:03.742(Timestamp)
2019-04-08 08:49:03 -请求地址 : http://localhost:8081/main
2019-04-08 08:49:03 -HTTP METHOD : GET
2019-04-08 08:49:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 08:49:03 -参数 : []
2019-04-08 08:49:03 -耗时 : 1
2019-04-08 08:49:03 -返回值 : main
2019-04-08 08:49:03 -<==    Updates: 1
2019-04-08 08:49:04 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 08:49:04 -HTTP METHOD : GET
2019-04-08 08:49:04 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 08:49:04 -参数 : []
2019-04-08 08:49:04 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 08:49:04 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 08:49:04 -<==      Total: 0
2019-04-08 08:49:04 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 08:49:04 -==> Parameters: 1(Long), 0(String)
2019-04-08 08:49:04 -<==      Total: 1
2019-04-08 08:49:04 -耗时 : 6
2019-04-08 08:49:04 -返回值 : com.bootdo.common.utils.PageUtils@52bcb308
2019-04-08 08:49:04 -请求地址 : http://localhost:8081/main
2019-04-08 08:49:04 -HTTP METHOD : GET
2019-04-08 08:49:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 08:49:04 -参数 : []
2019-04-08 08:49:04 -耗时 : 1
2019-04-08 08:49:04 -返回值 : main
2019-04-08 08:49:05 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-08 08:49:05 -==> Parameters: 1(Long)
2019-04-08 08:49:05 -<==      Total: 90
2019-04-08 08:49:05 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 08:49:05 -HTTP METHOD : GET
2019-04-08 08:49:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 08:49:05 -参数 : []
2019-04-08 08:49:05 -耗时 : 0
2019-04-08 08:49:05 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 08:49:06 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 08:49:06 -HTTP METHOD : GET
2019-04-08 08:49:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 08:49:06 -参数 : [userType]
2019-04-08 08:49:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 08:49:06 -==> Parameters: userType(String)
2019-04-08 08:49:06 -<==      Total: 2
2019-04-08 08:49:06 -耗时 : 3
2019-04-08 08:49:06 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 08:49:06 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 08:49:06 -HTTP METHOD : GET
2019-04-08 08:49:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 08:49:06 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 08:49:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 08:49:06 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 08:49:06 -<==      Total: 7
2019-04-08 08:49:06 -==>  Preparing: select count(*) from elec_log 
2019-04-08 08:49:06 -==> Parameters: 
2019-04-08 08:49:06 -<==      Total: 1
2019-04-08 08:49:06 -耗时 : 13
2019-04-08 08:49:06 -返回值 : com.bootdo.common.utils.PageUtils@7ce723a4
2019-04-08 08:49:07 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-08 08:49:07 -HTTP METHOD : GET
2019-04-08 08:49:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-08 08:49:07 -参数 : []
2019-04-08 08:49:07 -耗时 : 1
2019-04-08 08:49:07 -返回值 : /moneyLog/waterLog/waterLog
2019-04-08 08:49:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 08:49:07 -HTTP METHOD : GET
2019-04-08 08:49:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 08:49:07 -参数 : [userType]
2019-04-08 08:49:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 08:49:07 -==> Parameters: userType(String)
2019-04-08 08:49:07 -<==      Total: 2
2019-04-08 08:49:07 -耗时 : 5
2019-04-08 08:49:07 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 08:49:07 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 08:49:07 -HTTP METHOD : GET
2019-04-08 08:49:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 08:49:07 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 08:49:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 08:49:07 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 08:49:07 -<==      Total: 5
2019-04-08 08:49:07 -==>  Preparing: select count(*) from water_log 
2019-04-08 08:49:07 -==> Parameters: 
2019-04-08 08:49:07 -<==      Total: 1
2019-04-08 08:49:07 -耗时 : 7
2019-04-08 08:49:07 -返回值 : com.bootdo.common.utils.PageUtils@475d2f80
2019-04-08 08:49:23 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 08:49:23 -HTTP METHOD : GET
2019-04-08 08:49:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 08:49:23 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=1-0001, waterDate=}]
2019-04-08 08:49:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE user_id = ? order by id asc limit ?, ? 
2019-04-08 08:49:23 -==> Parameters: 1-0001(String), 0(Integer), 10(Integer)
2019-04-08 08:49:23 -<==      Total: 1
2019-04-08 08:49:23 -==>  Preparing: select count(*) from water_log WHERE user_id = ? 
2019-04-08 08:49:23 -==> Parameters: 1-0001(String)
2019-04-08 08:49:23 -<==      Total: 1
2019-04-08 08:49:23 -耗时 : 10
2019-04-08 08:49:23 -返回值 : com.bootdo.common.utils.PageUtils@4db0fcb9
2019-04-08 08:51:58 -请求地址 : http://localhost:8081/index
2019-04-08 08:51:58 -HTTP METHOD : GET
2019-04-08 08:51:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 08:51:58 -参数 : [{}]
2019-04-08 08:51:58 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 08:51:58 -==> Parameters: 1(Long)
2019-04-08 08:51:58 -<==      Total: 46
2019-04-08 08:51:58 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 08:51:58 -==> Parameters: 138(Long)
2019-04-08 08:51:58 -<==      Total: 1
2019-04-08 08:51:58 -耗时 : 15
2019-04-08 08:51:58 -返回值 : index_v1
2019-04-08 08:51:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 08:51:58 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 15(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 08:51:58.29(Timestamp)
2019-04-08 08:51:58 -请求地址 : http://localhost:8081/main
2019-04-08 08:51:58 -HTTP METHOD : GET
2019-04-08 08:51:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 08:51:58 -参数 : []
2019-04-08 08:51:58 -耗时 : 0
2019-04-08 08:51:58 -返回值 : main
2019-04-08 08:51:58 -<==    Updates: 1
2019-04-08 08:51:59 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 08:51:59 -HTTP METHOD : GET
2019-04-08 08:51:59 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 08:51:59 -参数 : []
2019-04-08 08:51:59 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 08:51:59 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 08:51:59 -<==      Total: 0
2019-04-08 08:51:59 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 08:51:59 -==> Parameters: 1(Long), 0(String)
2019-04-08 08:51:59 -<==      Total: 1
2019-04-08 08:51:59 -耗时 : 9
2019-04-08 08:51:59 -返回值 : com.bootdo.common.utils.PageUtils@250397c2
2019-04-08 08:51:59 -请求地址 : http://localhost:8081/main
2019-04-08 08:51:59 -HTTP METHOD : GET
2019-04-08 08:51:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 08:51:59 -参数 : []
2019-04-08 08:51:59 -耗时 : 0
2019-04-08 08:51:59 -返回值 : main
2019-04-08 08:52:02 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 08:52:02 -HTTP METHOD : GET
2019-04-08 08:52:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 08:52:02 -参数 : []
2019-04-08 08:52:02 -耗时 : 1
2019-04-08 08:52:02 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 08:52:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 08:52:03 -HTTP METHOD : GET
2019-04-08 08:52:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 08:52:03 -参数 : [userType]
2019-04-08 08:52:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 08:52:03 -==> Parameters: userType(String)
2019-04-08 08:52:03 -<==      Total: 2
2019-04-08 08:52:03 -耗时 : 4
2019-04-08 08:52:03 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 08:52:03 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 08:52:03 -HTTP METHOD : GET
2019-04-08 08:52:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 08:52:03 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 08:52:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 08:52:03 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 08:52:03 -<==      Total: 7
2019-04-08 08:52:03 -==>  Preparing: select count(*) from elec_log 
2019-04-08 08:52:03 -==> Parameters: 
2019-04-08 08:52:03 -<==      Total: 1
2019-04-08 08:52:03 -耗时 : 7
2019-04-08 08:52:03 -返回值 : com.bootdo.common.utils.PageUtils@253b0787
2019-04-08 08:52:03 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-08 08:52:03 -HTTP METHOD : GET
2019-04-08 08:52:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-08 08:52:03 -参数 : []
2019-04-08 08:52:03 -耗时 : 0
2019-04-08 08:52:03 -返回值 : /moneyLog/waterLog/waterLog
2019-04-08 08:52:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 08:52:04 -HTTP METHOD : GET
2019-04-08 08:52:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 08:52:04 -参数 : [userType]
2019-04-08 08:52:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 08:52:04 -==> Parameters: userType(String)
2019-04-08 08:52:04 -<==      Total: 2
2019-04-08 08:52:04 -耗时 : 4
2019-04-08 08:52:04 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 08:52:04 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 08:52:04 -HTTP METHOD : GET
2019-04-08 08:52:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 08:52:04 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 08:52:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 08:52:04 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 08:52:04 -<==      Total: 5
2019-04-08 08:52:04 -==>  Preparing: select count(*) from water_log 
2019-04-08 08:52:04 -==> Parameters: 
2019-04-08 08:52:04 -<==      Total: 1
2019-04-08 08:52:04 -耗时 : 8
2019-04-08 08:52:04 -返回值 : com.bootdo.common.utils.PageUtils@6746ca70
2019-04-08 08:52:04 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-08 08:52:04 -HTTP METHOD : GET
2019-04-08 08:52:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-08 08:52:04 -参数 : []
2019-04-08 08:52:04 -耗时 : 1
2019-04-08 08:52:04 -返回值 : /moneyLog/waterLog/waterLog
2019-04-08 08:52:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 08:52:04 -HTTP METHOD : GET
2019-04-08 08:52:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 08:52:04 -参数 : [userType]
2019-04-08 08:52:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 08:52:04 -==> Parameters: userType(String)
2019-04-08 08:52:04 -<==      Total: 2
2019-04-08 08:52:04 -耗时 : 3
2019-04-08 08:52:04 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 08:52:04 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 08:52:04 -HTTP METHOD : GET
2019-04-08 08:52:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 08:52:04 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 08:52:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 08:52:04 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 08:52:04 -<==      Total: 5
2019-04-08 08:52:04 -==>  Preparing: select count(*) from water_log 
2019-04-08 08:52:04 -==> Parameters: 
2019-04-08 08:52:04 -<==      Total: 1
2019-04-08 08:52:04 -耗时 : 7
2019-04-08 08:52:04 -返回值 : com.bootdo.common.utils.PageUtils@469bc680
2019-04-08 08:52:34 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 08:52:34 -HTTP METHOD : GET
2019-04-08 08:52:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 08:52:34 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, waterDate=2019-03-08}]
2019-04-08 08:52:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE user_type = ? and `water_date` >= ? and `water_date` <= ? order by id asc limit ?, ? 
2019-04-08 08:52:34 -==> Parameters: A(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-04-08 08:52:34 -<==      Total: 2
2019-04-08 08:52:34 -==>  Preparing: select count(*) from water_log WHERE user_type = ? and `water_date` >= ? and `water_date` <= ? 
2019-04-08 08:52:34 -==> Parameters: A(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String)
2019-04-08 08:52:34 -<==      Total: 1
2019-04-08 08:52:34 -耗时 : 8
2019-04-08 08:52:34 -返回值 : com.bootdo.common.utils.PageUtils@210258c2
2019-04-08 08:52:37 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 08:52:37 -HTTP METHOD : GET
2019-04-08 08:52:37 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 08:52:37 -参数 : []
2019-04-08 08:52:37 -耗时 : 0
2019-04-08 08:52:37 -返回值 : system/dept/deptTree
2019-04-08 08:52:38 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 08:52:38 -HTTP METHOD : GET
2019-04-08 08:52:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 08:52:38 -参数 : []
2019-04-08 08:52:38 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 08:52:38 -==> Parameters: 
2019-04-08 08:52:38 -<==      Total: 3
2019-04-08 08:52:38 -耗时 : 3
2019-04-08 08:52:38 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 08:52:42 -请求地址 : http://localhost:8081/moneyLog/waterLog/exprotWaterLog
2019-04-08 08:52:42 -HTTP METHOD : GET
2019-04-08 08:52:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog
2019-04-08 08:52:42 -参数 : [com.bootdo.moneyLog.vo.WaterLogVo@5fe92e4, org.apache.shiro.web.servlet.ShiroHttpServletResponse@762658a, org.apache.shiro.web.servlet.ShiroHttpServletRequest@3b9b82e1]
2019-04-08 08:52:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log WHERE user_type = ? and user_org = ? and `water_date` >= ? and `water_date` <= ? 
2019-04-08 08:52:42 -==> Parameters: A(String), 2(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String)
2019-04-08 08:52:42 -<==      Total: 2
2019-04-08 08:52:43 -耗时 : 1072
2019-04-08 08:52:43 -返回值 : null
2019-04-08 08:55:17 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 08:55:17 -HTTP METHOD : GET
2019-04-08 08:55:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 08:55:17 -参数 : []
2019-04-08 08:55:17 -耗时 : 0
2019-04-08 08:55:17 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 08:55:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 08:55:17 -HTTP METHOD : GET
2019-04-08 08:55:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 08:55:17 -参数 : [userType]
2019-04-08 08:55:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 08:55:17 -==> Parameters: userType(String)
2019-04-08 08:55:17 -<==      Total: 2
2019-04-08 08:55:17 -耗时 : 5
2019-04-08 08:55:17 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 08:55:17 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 08:55:17 -HTTP METHOD : GET
2019-04-08 08:55:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 08:55:17 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 08:55:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 08:55:17 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 08:55:17 -<==      Total: 5
2019-04-08 08:55:17 -==>  Preparing: select count(*) from heat_log 
2019-04-08 08:55:17 -==> Parameters: 
2019-04-08 08:55:17 -<==      Total: 1
2019-04-08 08:55:17 -耗时 : 14
2019-04-08 08:55:17 -返回值 : com.bootdo.common.utils.PageUtils@ba08303
2019-04-08 08:55:21 -请求地址 : http://localhost:8081/moneyLog/heatLog/add
2019-04-08 08:55:21 -HTTP METHOD : GET
2019-04-08 08:55:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.add
2019-04-08 08:55:21 -参数 : []
2019-04-08 08:55:21 -耗时 : 0
2019-04-08 08:55:21 -返回值 : moneyLog/heatLog/add
2019-04-08 08:55:21 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 08:55:21 -HTTP METHOD : GET
2019-04-08 08:55:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 08:55:21 -参数 : [userType]
2019-04-08 08:55:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 08:55:21 -==> Parameters: userType(String)
2019-04-08 08:55:21 -<==      Total: 2
2019-04-08 08:55:21 -耗时 : 7
2019-04-08 08:55:21 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:06:39 -请求地址 : http://localhost:8081/index
2019-04-08 09:06:39 -HTTP METHOD : GET
2019-04-08 09:06:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 09:06:39 -参数 : [{}]
2019-04-08 09:06:39 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 09:06:39 -==> Parameters: 1(Long)
2019-04-08 09:06:39 -<==      Total: 46
2019-04-08 09:06:39 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 09:06:39 -==> Parameters: 138(Long)
2019-04-08 09:06:39 -<==      Total: 1
2019-04-08 09:06:39 -耗时 : 20
2019-04-08 09:06:39 -返回值 : index_v1
2019-04-08 09:06:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 09:06:39 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 20(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 09:06:39.582(Timestamp)
2019-04-08 09:06:39 -请求地址 : http://localhost:8081/main
2019-04-08 09:06:39 -HTTP METHOD : GET
2019-04-08 09:06:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 09:06:39 -参数 : []
2019-04-08 09:06:39 -耗时 : 0
2019-04-08 09:06:39 -返回值 : main
2019-04-08 09:06:39 -<==    Updates: 1
2019-04-08 09:06:40 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 09:06:40 -HTTP METHOD : GET
2019-04-08 09:06:40 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 09:06:40 -参数 : []
2019-04-08 09:06:40 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 09:06:40 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 09:06:40 -<==      Total: 0
2019-04-08 09:06:40 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 09:06:40 -==> Parameters: 1(Long), 0(String)
2019-04-08 09:06:40 -<==      Total: 1
2019-04-08 09:06:40 -耗时 : 7
2019-04-08 09:06:40 -返回值 : com.bootdo.common.utils.PageUtils@18eebdda
2019-04-08 09:06:40 -请求地址 : http://localhost:8081/main
2019-04-08 09:06:40 -HTTP METHOD : GET
2019-04-08 09:06:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 09:06:40 -参数 : []
2019-04-08 09:06:40 -耗时 : 1
2019-04-08 09:06:40 -返回值 : main
2019-04-08 09:06:43 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-08 09:06:43 -==> Parameters: 1(Long)
2019-04-08 09:06:43 -<==      Total: 90
2019-04-08 09:06:43 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:06:43 -HTTP METHOD : GET
2019-04-08 09:06:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:06:43 -参数 : []
2019-04-08 09:06:43 -耗时 : 0
2019-04-08 09:06:43 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:06:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:06:44 -HTTP METHOD : GET
2019-04-08 09:06:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:06:44 -参数 : [userType]
2019-04-08 09:06:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:06:44 -==> Parameters: userType(String)
2019-04-08 09:06:44 -<==      Total: 2
2019-04-08 09:06:44 -耗时 : 4
2019-04-08 09:06:44 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:06:44 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:06:44 -HTTP METHOD : GET
2019-04-08 09:06:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:06:44 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:06:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:06:44 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:06:44 -<==      Total: 7
2019-04-08 09:06:44 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:06:44 -==> Parameters: 
2019-04-08 09:06:44 -<==      Total: 1
2019-04-08 09:06:44 -耗时 : 7
2019-04-08 09:06:44 -返回值 : com.bootdo.common.utils.PageUtils@7b72cda0
2019-04-08 09:06:44 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:06:44 -HTTP METHOD : GET
2019-04-08 09:06:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:06:44 -参数 : []
2019-04-08 09:06:44 -耗时 : 1
2019-04-08 09:06:44 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:06:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:06:45 -HTTP METHOD : GET
2019-04-08 09:06:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:06:45 -参数 : [userType]
2019-04-08 09:06:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:06:45 -==> Parameters: userType(String)
2019-04-08 09:06:45 -<==      Total: 2
2019-04-08 09:06:45 -耗时 : 4
2019-04-08 09:06:45 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:06:45 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:06:45 -HTTP METHOD : GET
2019-04-08 09:06:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:06:45 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:06:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:06:45 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:06:45 -<==      Total: 5
2019-04-08 09:06:45 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:06:45 -==> Parameters: 
2019-04-08 09:06:45 -<==      Total: 1
2019-04-08 09:06:45 -耗时 : 6
2019-04-08 09:06:45 -返回值 : com.bootdo.common.utils.PageUtils@db703f
2019-04-08 09:06:47 -请求地址 : http://localhost:8081/moneyLog/heatLog/add
2019-04-08 09:06:47 -HTTP METHOD : GET
2019-04-08 09:06:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.add
2019-04-08 09:06:47 -参数 : []
2019-04-08 09:06:47 -耗时 : 0
2019-04-08 09:06:47 -返回值 : moneyLog/heatLog/add
2019-04-08 09:06:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:06:47 -HTTP METHOD : GET
2019-04-08 09:06:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:06:47 -参数 : [userType]
2019-04-08 09:06:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:06:47 -==> Parameters: userType(String)
2019-04-08 09:06:47 -<==      Total: 2
2019-04-08 09:06:47 -耗时 : 7
2019-04-08 09:06:47 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:07:28 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:07:28 -HTTP METHOD : GET
2019-04-08 09:07:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:07:28 -参数 : []
2019-04-08 09:07:28 -耗时 : 1
2019-04-08 09:07:28 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:07:28 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:07:28 -HTTP METHOD : GET
2019-04-08 09:07:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:07:28 -参数 : [userType]
2019-04-08 09:07:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:07:28 -==> Parameters: userType(String)
2019-04-08 09:07:28 -<==      Total: 2
2019-04-08 09:07:28 -耗时 : 3
2019-04-08 09:07:28 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:07:28 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:07:28 -HTTP METHOD : GET
2019-04-08 09:07:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:07:28 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:07:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:07:28 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:07:28 -<==      Total: 5
2019-04-08 09:07:28 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:07:28 -==> Parameters: 
2019-04-08 09:07:28 -<==      Total: 1
2019-04-08 09:07:28 -耗时 : 8
2019-04-08 09:07:28 -返回值 : com.bootdo.common.utils.PageUtils@7214b9b3
2019-04-08 09:07:29 -请求地址 : http://localhost:8081/moneyLog/heatLog/add
2019-04-08 09:07:29 -HTTP METHOD : GET
2019-04-08 09:07:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.add
2019-04-08 09:07:29 -参数 : []
2019-04-08 09:07:29 -耗时 : 2
2019-04-08 09:07:29 -返回值 : moneyLog/heatLog/add
2019-04-08 09:07:29 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:07:29 -HTTP METHOD : GET
2019-04-08 09:07:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:07:29 -参数 : [userType]
2019-04-08 09:07:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:07:29 -==> Parameters: userType(String)
2019-04-08 09:07:29 -<==      Total: 2
2019-04-08 09:07:29 -耗时 : 4
2019-04-08 09:07:29 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:07:48 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 6 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(5)-CONNECTED(5)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 60], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 10], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 430]
2019-04-08 09:08:28 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:08:28 -HTTP METHOD : GET
2019-04-08 09:08:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:08:28 -参数 : []
2019-04-08 09:08:28 -耗时 : 1
2019-04-08 09:08:28 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:08:29 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:08:29 -HTTP METHOD : GET
2019-04-08 09:08:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:08:29 -参数 : [userType]
2019-04-08 09:08:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:08:29 -==> Parameters: userType(String)
2019-04-08 09:08:29 -<==      Total: 2
2019-04-08 09:08:29 -耗时 : 4
2019-04-08 09:08:29 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:08:29 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:08:29 -HTTP METHOD : GET
2019-04-08 09:08:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:08:29 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:08:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:08:29 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:08:29 -<==      Total: 5
2019-04-08 09:08:29 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:08:29 -==> Parameters: 
2019-04-08 09:08:29 -<==      Total: 1
2019-04-08 09:08:29 -耗时 : 8
2019-04-08 09:08:29 -返回值 : com.bootdo.common.utils.PageUtils@626a1717
2019-04-08 09:08:30 -请求地址 : http://localhost:8081/moneyLog/heatLog/add
2019-04-08 09:08:30 -HTTP METHOD : GET
2019-04-08 09:08:30 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.add
2019-04-08 09:08:30 -参数 : []
2019-04-08 09:08:30 -耗时 : 1
2019-04-08 09:08:30 -返回值 : moneyLog/heatLog/add
2019-04-08 09:08:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:08:30 -HTTP METHOD : GET
2019-04-08 09:08:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:08:30 -参数 : [userType]
2019-04-08 09:08:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:08:30 -==> Parameters: userType(String)
2019-04-08 09:08:30 -<==      Total: 2
2019-04-08 09:08:30 -耗时 : 3
2019-04-08 09:08:30 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:10:10 -请求地址 : http://localhost:8081/moneyLog/heatLog/add
2019-04-08 09:10:10 -HTTP METHOD : GET
2019-04-08 09:10:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.add
2019-04-08 09:10:10 -参数 : []
2019-04-08 09:10:10 -耗时 : 0
2019-04-08 09:10:10 -返回值 : moneyLog/heatLog/add
2019-04-08 09:10:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:10:11 -HTTP METHOD : GET
2019-04-08 09:10:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:10:11 -参数 : [userType]
2019-04-08 09:10:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:10:11 -==> Parameters: userType(String)
2019-04-08 09:10:11 -<==      Total: 2
2019-04-08 09:10:11 -耗时 : 10
2019-04-08 09:10:11 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:11:04 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:11:04 -HTTP METHOD : GET
2019-04-08 09:11:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:11:04 -参数 : []
2019-04-08 09:11:04 -耗时 : 1
2019-04-08 09:11:04 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:11:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:11:04 -HTTP METHOD : GET
2019-04-08 09:11:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:11:04 -参数 : [userType]
2019-04-08 09:11:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:11:04 -==> Parameters: userType(String)
2019-04-08 09:11:04 -<==      Total: 2
2019-04-08 09:11:04 -耗时 : 4
2019-04-08 09:11:04 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:11:04 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:11:04 -HTTP METHOD : GET
2019-04-08 09:11:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:11:04 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:11:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:11:04 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:11:04 -<==      Total: 5
2019-04-08 09:11:04 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:11:04 -==> Parameters: 
2019-04-08 09:11:04 -<==      Total: 1
2019-04-08 09:11:04 -耗时 : 6
2019-04-08 09:11:04 -返回值 : com.bootdo.common.utils.PageUtils@306d6d24
2019-04-08 09:11:05 -请求地址 : http://localhost:8081/moneyLog/heatLog/add
2019-04-08 09:11:05 -HTTP METHOD : GET
2019-04-08 09:11:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.add
2019-04-08 09:11:05 -参数 : []
2019-04-08 09:11:05 -耗时 : 0
2019-04-08 09:11:05 -返回值 : moneyLog/heatLog/add
2019-04-08 09:11:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:11:05 -HTTP METHOD : GET
2019-04-08 09:11:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:11:05 -参数 : [userType]
2019-04-08 09:11:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:11:05 -==> Parameters: userType(String)
2019-04-08 09:11:05 -<==      Total: 2
2019-04-08 09:11:05 -耗时 : 3
2019-04-08 09:11:05 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:11:15 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:11:15 -HTTP METHOD : GET
2019-04-08 09:11:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:11:15 -参数 : []
2019-04-08 09:11:15 -耗时 : 1
2019-04-08 09:11:15 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:11:16 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:11:16 -HTTP METHOD : GET
2019-04-08 09:11:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:11:16 -参数 : [userType]
2019-04-08 09:11:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:11:16 -==> Parameters: userType(String)
2019-04-08 09:11:16 -<==      Total: 2
2019-04-08 09:11:16 -耗时 : 3
2019-04-08 09:11:16 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:11:16 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:11:16 -HTTP METHOD : GET
2019-04-08 09:11:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:11:16 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:11:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:11:16 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:11:16 -<==      Total: 5
2019-04-08 09:11:16 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:11:16 -==> Parameters: 
2019-04-08 09:11:16 -<==      Total: 1
2019-04-08 09:11:16 -耗时 : 6
2019-04-08 09:11:16 -返回值 : com.bootdo.common.utils.PageUtils@2b744b44
2019-04-08 09:11:17 -请求地址 : http://localhost:8081/moneyLog/heatLog/add
2019-04-08 09:11:17 -HTTP METHOD : GET
2019-04-08 09:11:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.add
2019-04-08 09:11:17 -参数 : []
2019-04-08 09:11:17 -耗时 : 1
2019-04-08 09:11:17 -返回值 : moneyLog/heatLog/add
2019-04-08 09:11:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:11:17 -HTTP METHOD : GET
2019-04-08 09:11:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:11:17 -参数 : [userType]
2019-04-08 09:11:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:11:17 -==> Parameters: userType(String)
2019-04-08 09:11:17 -<==      Total: 2
2019-04-08 09:11:17 -耗时 : 4
2019-04-08 09:11:17 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:11:21 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:11:21 -HTTP METHOD : GET
2019-04-08 09:11:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:11:21 -参数 : []
2019-04-08 09:11:21 -耗时 : 1
2019-04-08 09:11:21 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:11:22 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:11:22 -HTTP METHOD : GET
2019-04-08 09:11:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:11:22 -参数 : [userType]
2019-04-08 09:11:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:11:22 -==> Parameters: userType(String)
2019-04-08 09:11:22 -<==      Total: 2
2019-04-08 09:11:22 -耗时 : 4
2019-04-08 09:11:22 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:11:22 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:11:22 -HTTP METHOD : GET
2019-04-08 09:11:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:11:22 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:11:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:11:22 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:11:22 -<==      Total: 5
2019-04-08 09:11:22 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:11:22 -==> Parameters: 
2019-04-08 09:11:22 -<==      Total: 1
2019-04-08 09:11:22 -耗时 : 7
2019-04-08 09:11:22 -返回值 : com.bootdo.common.utils.PageUtils@43b9977b
2019-04-08 09:11:23 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:11:23 -HTTP METHOD : GET
2019-04-08 09:11:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:11:23 -参数 : []
2019-04-08 09:11:23 -耗时 : 1
2019-04-08 09:11:23 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:11:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:11:23 -HTTP METHOD : GET
2019-04-08 09:11:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:11:23 -参数 : [userType]
2019-04-08 09:11:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:11:23 -==> Parameters: userType(String)
2019-04-08 09:11:23 -<==      Total: 2
2019-04-08 09:11:23 -耗时 : 4
2019-04-08 09:11:23 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:11:23 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:11:23 -HTTP METHOD : GET
2019-04-08 09:11:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:11:23 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:11:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:11:23 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:11:23 -<==      Total: 5
2019-04-08 09:11:23 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:11:23 -==> Parameters: 
2019-04-08 09:11:23 -<==      Total: 1
2019-04-08 09:11:23 -耗时 : 8
2019-04-08 09:11:23 -返回值 : com.bootdo.common.utils.PageUtils@1784b7d8
2019-04-08 09:11:24 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:11:24 -HTTP METHOD : GET
2019-04-08 09:11:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:11:24 -参数 : []
2019-04-08 09:11:24 -耗时 : 1
2019-04-08 09:11:24 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:11:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:11:25 -HTTP METHOD : GET
2019-04-08 09:11:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:11:25 -参数 : [userType]
2019-04-08 09:11:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:11:25 -==> Parameters: userType(String)
2019-04-08 09:11:25 -<==      Total: 2
2019-04-08 09:11:25 -耗时 : 3
2019-04-08 09:11:25 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:11:25 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:11:25 -HTTP METHOD : GET
2019-04-08 09:11:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:11:25 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:11:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:11:25 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:11:25 -<==      Total: 5
2019-04-08 09:11:25 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:11:25 -==> Parameters: 
2019-04-08 09:11:25 -<==      Total: 1
2019-04-08 09:11:25 -耗时 : 6
2019-04-08 09:11:25 -返回值 : com.bootdo.common.utils.PageUtils@c7b17fe
2019-04-08 09:11:25 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:11:25 -HTTP METHOD : GET
2019-04-08 09:11:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:11:25 -参数 : []
2019-04-08 09:11:25 -耗时 : 0
2019-04-08 09:11:25 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:11:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:11:25 -HTTP METHOD : GET
2019-04-08 09:11:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:11:25 -参数 : [userType]
2019-04-08 09:11:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:11:25 -==> Parameters: userType(String)
2019-04-08 09:11:25 -<==      Total: 2
2019-04-08 09:11:25 -耗时 : 3
2019-04-08 09:11:25 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:11:25 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:11:25 -HTTP METHOD : GET
2019-04-08 09:11:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:11:25 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:11:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:11:25 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:11:25 -<==      Total: 5
2019-04-08 09:11:25 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:11:25 -==> Parameters: 
2019-04-08 09:11:25 -<==      Total: 1
2019-04-08 09:11:25 -耗时 : 8
2019-04-08 09:11:25 -返回值 : com.bootdo.common.utils.PageUtils@2b86c15d
2019-04-08 09:11:26 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:11:26 -HTTP METHOD : GET
2019-04-08 09:11:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:11:26 -参数 : []
2019-04-08 09:11:26 -耗时 : 1
2019-04-08 09:11:26 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:11:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:11:26 -HTTP METHOD : GET
2019-04-08 09:11:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:11:26 -参数 : [userType]
2019-04-08 09:11:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:11:26 -==> Parameters: userType(String)
2019-04-08 09:11:26 -<==      Total: 2
2019-04-08 09:11:26 -耗时 : 6
2019-04-08 09:11:26 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:11:26 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:11:26 -HTTP METHOD : GET
2019-04-08 09:11:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:11:26 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:11:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:11:26 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:11:26 -<==      Total: 5
2019-04-08 09:11:26 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:11:26 -==> Parameters: 
2019-04-08 09:11:26 -<==      Total: 1
2019-04-08 09:11:26 -耗时 : 7
2019-04-08 09:11:26 -返回值 : com.bootdo.common.utils.PageUtils@7ecd3ad8
2019-04-08 09:11:27 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:11:27 -HTTP METHOD : GET
2019-04-08 09:11:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:11:27 -参数 : []
2019-04-08 09:11:27 -耗时 : 1
2019-04-08 09:11:27 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:11:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:11:27 -HTTP METHOD : GET
2019-04-08 09:11:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:11:27 -参数 : [userType]
2019-04-08 09:11:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:11:27 -==> Parameters: userType(String)
2019-04-08 09:11:27 -<==      Total: 2
2019-04-08 09:11:27 -耗时 : 3
2019-04-08 09:11:27 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:11:27 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:11:27 -HTTP METHOD : GET
2019-04-08 09:11:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:11:27 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:11:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:11:27 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:11:27 -<==      Total: 5
2019-04-08 09:11:27 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:11:27 -==> Parameters: 
2019-04-08 09:11:27 -<==      Total: 1
2019-04-08 09:11:27 -耗时 : 6
2019-04-08 09:11:27 -返回值 : com.bootdo.common.utils.PageUtils@5557c922
2019-04-08 09:11:28 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:11:28 -HTTP METHOD : GET
2019-04-08 09:11:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:11:28 -参数 : []
2019-04-08 09:11:28 -耗时 : 0
2019-04-08 09:11:28 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:11:28 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:11:28 -HTTP METHOD : GET
2019-04-08 09:11:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:11:28 -参数 : [userType]
2019-04-08 09:11:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:11:28 -==> Parameters: userType(String)
2019-04-08 09:11:28 -<==      Total: 2
2019-04-08 09:11:28 -耗时 : 3
2019-04-08 09:11:28 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:11:28 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:11:28 -HTTP METHOD : GET
2019-04-08 09:11:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:11:28 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:11:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:11:28 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:11:28 -<==      Total: 5
2019-04-08 09:11:28 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:11:28 -==> Parameters: 
2019-04-08 09:11:28 -<==      Total: 1
2019-04-08 09:11:28 -耗时 : 5
2019-04-08 09:11:28 -返回值 : com.bootdo.common.utils.PageUtils@25145acd
2019-04-08 09:11:29 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:11:29 -HTTP METHOD : GET
2019-04-08 09:11:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:11:29 -参数 : []
2019-04-08 09:11:29 -耗时 : 0
2019-04-08 09:11:29 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:11:29 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:11:29 -HTTP METHOD : GET
2019-04-08 09:11:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:11:29 -参数 : [userType]
2019-04-08 09:11:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:11:29 -==> Parameters: userType(String)
2019-04-08 09:11:29 -<==      Total: 2
2019-04-08 09:11:29 -耗时 : 3
2019-04-08 09:11:29 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:11:29 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:11:29 -HTTP METHOD : GET
2019-04-08 09:11:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:11:29 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:11:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:11:29 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:11:29 -<==      Total: 5
2019-04-08 09:11:29 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:11:29 -==> Parameters: 
2019-04-08 09:11:29 -<==      Total: 1
2019-04-08 09:11:29 -耗时 : 7
2019-04-08 09:11:29 -返回值 : com.bootdo.common.utils.PageUtils@7d9cb9
2019-04-08 09:11:30 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:11:30 -HTTP METHOD : GET
2019-04-08 09:11:30 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:11:30 -参数 : []
2019-04-08 09:11:30 -耗时 : 0
2019-04-08 09:11:30 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:11:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:11:30 -HTTP METHOD : GET
2019-04-08 09:11:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:11:30 -参数 : [userType]
2019-04-08 09:11:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:11:30 -==> Parameters: userType(String)
2019-04-08 09:11:30 -<==      Total: 2
2019-04-08 09:11:30 -耗时 : 4
2019-04-08 09:11:30 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:11:30 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:11:30 -HTTP METHOD : GET
2019-04-08 09:11:30 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:11:30 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:11:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:11:30 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:11:30 -<==      Total: 5
2019-04-08 09:11:30 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:11:30 -==> Parameters: 
2019-04-08 09:11:30 -<==      Total: 1
2019-04-08 09:11:30 -耗时 : 8
2019-04-08 09:11:30 -返回值 : com.bootdo.common.utils.PageUtils@6f3acb03
2019-04-08 09:12:06 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:12:06 -HTTP METHOD : GET
2019-04-08 09:12:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:12:06 -参数 : []
2019-04-08 09:12:06 -耗时 : 1
2019-04-08 09:12:06 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:12:06 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:12:06 -HTTP METHOD : GET
2019-04-08 09:12:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:12:06 -参数 : [userType]
2019-04-08 09:12:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:12:06 -==> Parameters: userType(String)
2019-04-08 09:12:06 -<==      Total: 2
2019-04-08 09:12:06 -耗时 : 3
2019-04-08 09:12:06 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:12:06 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:12:06 -HTTP METHOD : GET
2019-04-08 09:12:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:12:06 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:12:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:12:06 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:12:06 -<==      Total: 5
2019-04-08 09:12:06 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:12:06 -==> Parameters: 
2019-04-08 09:12:06 -<==      Total: 1
2019-04-08 09:12:06 -耗时 : 7
2019-04-08 09:12:06 -返回值 : com.bootdo.common.utils.PageUtils@31738fe5
2019-04-08 09:12:07 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:12:07 -HTTP METHOD : GET
2019-04-08 09:12:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:12:07 -参数 : []
2019-04-08 09:12:07 -耗时 : 1
2019-04-08 09:12:07 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:12:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:12:07 -HTTP METHOD : GET
2019-04-08 09:12:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:12:07 -参数 : [userType]
2019-04-08 09:12:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:12:07 -==> Parameters: userType(String)
2019-04-08 09:12:07 -<==      Total: 2
2019-04-08 09:12:07 -耗时 : 3
2019-04-08 09:12:07 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:12:07 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:12:07 -HTTP METHOD : GET
2019-04-08 09:12:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:12:07 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:12:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:12:07 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:12:07 -<==      Total: 5
2019-04-08 09:12:07 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:12:07 -==> Parameters: 
2019-04-08 09:12:07 -<==      Total: 1
2019-04-08 09:12:07 -耗时 : 5
2019-04-08 09:12:07 -返回值 : com.bootdo.common.utils.PageUtils@740ff178
2019-04-08 09:12:08 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:12:08 -HTTP METHOD : GET
2019-04-08 09:12:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:12:08 -参数 : []
2019-04-08 09:12:08 -耗时 : 0
2019-04-08 09:12:08 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:12:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:12:08 -HTTP METHOD : GET
2019-04-08 09:12:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:12:08 -参数 : [userType]
2019-04-08 09:12:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:12:08 -==> Parameters: userType(String)
2019-04-08 09:12:08 -<==      Total: 2
2019-04-08 09:12:08 -耗时 : 3
2019-04-08 09:12:08 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:12:08 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:12:08 -HTTP METHOD : GET
2019-04-08 09:12:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:12:08 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:12:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:12:08 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:12:08 -<==      Total: 5
2019-04-08 09:12:08 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:12:08 -==> Parameters: 
2019-04-08 09:12:08 -<==      Total: 1
2019-04-08 09:12:08 -耗时 : 8
2019-04-08 09:12:08 -返回值 : com.bootdo.common.utils.PageUtils@67e81379
2019-04-08 09:12:09 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:12:09 -HTTP METHOD : GET
2019-04-08 09:12:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:12:09 -参数 : []
2019-04-08 09:12:09 -耗时 : 0
2019-04-08 09:12:09 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:12:10 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:12:10 -HTTP METHOD : GET
2019-04-08 09:12:10 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:12:10 -参数 : [userType]
2019-04-08 09:12:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:12:10 -==> Parameters: userType(String)
2019-04-08 09:12:10 -<==      Total: 2
2019-04-08 09:12:10 -耗时 : 4
2019-04-08 09:12:10 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:12:10 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:12:10 -HTTP METHOD : GET
2019-04-08 09:12:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:12:10 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:12:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:12:10 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:12:10 -<==      Total: 5
2019-04-08 09:12:10 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:12:10 -==> Parameters: 
2019-04-08 09:12:10 -<==      Total: 1
2019-04-08 09:12:10 -耗时 : 6
2019-04-08 09:12:10 -返回值 : com.bootdo.common.utils.PageUtils@ad12103
2019-04-08 09:12:11 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:12:11 -HTTP METHOD : GET
2019-04-08 09:12:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:12:11 -参数 : []
2019-04-08 09:12:11 -耗时 : 0
2019-04-08 09:12:11 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:12:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:12:11 -HTTP METHOD : GET
2019-04-08 09:12:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:12:11 -参数 : [userType]
2019-04-08 09:12:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:12:11 -==> Parameters: userType(String)
2019-04-08 09:12:11 -<==      Total: 2
2019-04-08 09:12:11 -耗时 : 3
2019-04-08 09:12:11 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:12:11 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:12:11 -HTTP METHOD : GET
2019-04-08 09:12:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:12:11 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:12:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:12:11 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:12:11 -<==      Total: 5
2019-04-08 09:12:11 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:12:11 -==> Parameters: 
2019-04-08 09:12:11 -<==      Total: 1
2019-04-08 09:12:11 -耗时 : 6
2019-04-08 09:12:11 -返回值 : com.bootdo.common.utils.PageUtils@6fb05b7a
2019-04-08 09:12:11 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:12:11 -HTTP METHOD : GET
2019-04-08 09:12:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:12:11 -参数 : []
2019-04-08 09:12:11 -耗时 : 0
2019-04-08 09:12:11 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:12:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:12:11 -HTTP METHOD : GET
2019-04-08 09:12:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:12:11 -参数 : [userType]
2019-04-08 09:12:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:12:11 -==> Parameters: userType(String)
2019-04-08 09:12:11 -<==      Total: 2
2019-04-08 09:12:11 -耗时 : 5
2019-04-08 09:12:11 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:12:11 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:12:11 -HTTP METHOD : GET
2019-04-08 09:12:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:12:11 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:12:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:12:11 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:12:11 -<==      Total: 5
2019-04-08 09:12:11 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:12:11 -==> Parameters: 
2019-04-08 09:12:11 -<==      Total: 1
2019-04-08 09:12:11 -耗时 : 7
2019-04-08 09:12:11 -返回值 : com.bootdo.common.utils.PageUtils@fc7437a
2019-04-08 09:12:12 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:12:12 -HTTP METHOD : GET
2019-04-08 09:12:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:12:12 -参数 : []
2019-04-08 09:12:12 -耗时 : 2
2019-04-08 09:12:12 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:12:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:12:13 -HTTP METHOD : GET
2019-04-08 09:12:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:12:13 -参数 : [userType]
2019-04-08 09:12:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:12:13 -==> Parameters: userType(String)
2019-04-08 09:12:13 -<==      Total: 2
2019-04-08 09:12:13 -耗时 : 5
2019-04-08 09:12:13 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:12:13 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:12:13 -HTTP METHOD : GET
2019-04-08 09:12:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:12:13 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:12:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:12:13 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:12:13 -<==      Total: 5
2019-04-08 09:12:13 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:12:13 -==> Parameters: 
2019-04-08 09:12:13 -<==      Total: 1
2019-04-08 09:12:13 -耗时 : 7
2019-04-08 09:12:13 -返回值 : com.bootdo.common.utils.PageUtils@1c4a2d02
2019-04-08 09:12:14 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:12:14 -HTTP METHOD : GET
2019-04-08 09:12:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:12:14 -参数 : []
2019-04-08 09:12:14 -耗时 : 0
2019-04-08 09:12:14 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:12:14 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:12:14 -HTTP METHOD : GET
2019-04-08 09:12:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:12:14 -参数 : [userType]
2019-04-08 09:12:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:12:14 -==> Parameters: userType(String)
2019-04-08 09:12:14 -<==      Total: 2
2019-04-08 09:12:14 -耗时 : 4
2019-04-08 09:12:14 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:12:14 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:12:14 -HTTP METHOD : GET
2019-04-08 09:12:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:12:14 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:12:14 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:12:14 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:12:14 -<==      Total: 5
2019-04-08 09:12:14 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:12:14 -==> Parameters: 
2019-04-08 09:12:14 -<==      Total: 1
2019-04-08 09:12:14 -耗时 : 6
2019-04-08 09:12:14 -返回值 : com.bootdo.common.utils.PageUtils@46b4485b
2019-04-08 09:12:14 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:12:14 -HTTP METHOD : GET
2019-04-08 09:12:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:12:14 -参数 : []
2019-04-08 09:12:14 -耗时 : 1
2019-04-08 09:12:14 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:12:14 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:12:14 -HTTP METHOD : GET
2019-04-08 09:12:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:12:14 -参数 : [userType]
2019-04-08 09:12:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:12:14 -==> Parameters: userType(String)
2019-04-08 09:12:14 -<==      Total: 2
2019-04-08 09:12:14 -耗时 : 3
2019-04-08 09:12:14 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:12:14 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:12:14 -HTTP METHOD : GET
2019-04-08 09:12:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:12:14 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:12:14 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:12:14 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:12:14 -<==      Total: 5
2019-04-08 09:12:14 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:12:14 -==> Parameters: 
2019-04-08 09:12:14 -<==      Total: 1
2019-04-08 09:12:14 -耗时 : 5
2019-04-08 09:12:14 -返回值 : com.bootdo.common.utils.PageUtils@d365083
2019-04-08 09:12:15 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:12:15 -HTTP METHOD : GET
2019-04-08 09:12:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:12:15 -参数 : []
2019-04-08 09:12:15 -耗时 : 1
2019-04-08 09:12:15 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:12:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:12:15 -HTTP METHOD : GET
2019-04-08 09:12:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:12:15 -参数 : [userType]
2019-04-08 09:12:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:12:15 -==> Parameters: userType(String)
2019-04-08 09:12:15 -<==      Total: 2
2019-04-08 09:12:15 -耗时 : 3
2019-04-08 09:12:15 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:12:15 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:12:15 -HTTP METHOD : GET
2019-04-08 09:12:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:12:15 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:12:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:12:15 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:12:15 -<==      Total: 5
2019-04-08 09:12:15 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:12:15 -==> Parameters: 
2019-04-08 09:12:15 -<==      Total: 1
2019-04-08 09:12:15 -耗时 : 6
2019-04-08 09:12:15 -返回值 : com.bootdo.common.utils.PageUtils@9216dfb
2019-04-08 09:12:16 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:12:16 -HTTP METHOD : GET
2019-04-08 09:12:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:12:16 -参数 : []
2019-04-08 09:12:16 -耗时 : 0
2019-04-08 09:12:16 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:12:16 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:12:16 -HTTP METHOD : GET
2019-04-08 09:12:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:12:16 -参数 : [userType]
2019-04-08 09:12:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:12:16 -==> Parameters: userType(String)
2019-04-08 09:12:16 -<==      Total: 2
2019-04-08 09:12:16 -耗时 : 3
2019-04-08 09:12:16 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:12:16 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:12:16 -HTTP METHOD : GET
2019-04-08 09:12:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:12:16 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:12:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:12:16 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:12:16 -<==      Total: 5
2019-04-08 09:12:16 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:12:16 -==> Parameters: 
2019-04-08 09:12:16 -<==      Total: 1
2019-04-08 09:12:16 -耗时 : 6
2019-04-08 09:12:16 -返回值 : com.bootdo.common.utils.PageUtils@1bd7291f
2019-04-08 09:12:17 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:12:17 -HTTP METHOD : GET
2019-04-08 09:12:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:12:17 -参数 : []
2019-04-08 09:12:17 -耗时 : 0
2019-04-08 09:12:17 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:12:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:12:17 -HTTP METHOD : GET
2019-04-08 09:12:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:12:17 -参数 : [userType]
2019-04-08 09:12:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:12:17 -==> Parameters: userType(String)
2019-04-08 09:12:17 -<==      Total: 2
2019-04-08 09:12:17 -耗时 : 3
2019-04-08 09:12:17 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:12:17 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:12:17 -HTTP METHOD : GET
2019-04-08 09:12:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:12:17 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:12:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:12:17 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:12:17 -<==      Total: 5
2019-04-08 09:12:17 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:12:17 -==> Parameters: 
2019-04-08 09:12:17 -<==      Total: 1
2019-04-08 09:12:17 -耗时 : 6
2019-04-08 09:12:17 -返回值 : com.bootdo.common.utils.PageUtils@1ff8a4cc
2019-04-08 09:12:18 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:12:18 -HTTP METHOD : GET
2019-04-08 09:12:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:12:18 -参数 : []
2019-04-08 09:12:18 -耗时 : 1
2019-04-08 09:12:18 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:12:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:12:18 -HTTP METHOD : GET
2019-04-08 09:12:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:12:18 -参数 : [userType]
2019-04-08 09:12:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:12:18 -==> Parameters: userType(String)
2019-04-08 09:12:18 -<==      Total: 2
2019-04-08 09:12:18 -耗时 : 4
2019-04-08 09:12:18 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:12:18 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:12:18 -HTTP METHOD : GET
2019-04-08 09:12:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:12:18 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:12:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:12:18 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:12:18 -<==      Total: 5
2019-04-08 09:12:18 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:12:18 -==> Parameters: 
2019-04-08 09:12:18 -<==      Total: 1
2019-04-08 09:12:18 -耗时 : 7
2019-04-08 09:12:18 -返回值 : com.bootdo.common.utils.PageUtils@165460ad
2019-04-08 09:12:19 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:12:19 -HTTP METHOD : GET
2019-04-08 09:12:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:12:19 -参数 : []
2019-04-08 09:12:19 -耗时 : 0
2019-04-08 09:12:19 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:12:19 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:12:19 -HTTP METHOD : GET
2019-04-08 09:12:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:12:19 -参数 : [userType]
2019-04-08 09:12:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:12:19 -==> Parameters: userType(String)
2019-04-08 09:12:19 -<==      Total: 2
2019-04-08 09:12:19 -耗时 : 4
2019-04-08 09:12:19 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:12:19 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:12:19 -HTTP METHOD : GET
2019-04-08 09:12:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:12:19 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:12:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:12:19 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:12:19 -<==      Total: 7
2019-04-08 09:12:19 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:12:19 -==> Parameters: 
2019-04-08 09:12:19 -<==      Total: 1
2019-04-08 09:12:19 -耗时 : 6
2019-04-08 09:12:19 -返回值 : com.bootdo.common.utils.PageUtils@175446c
2019-04-08 09:12:20 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:12:20 -HTTP METHOD : GET
2019-04-08 09:12:20 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:12:20 -参数 : []
2019-04-08 09:12:20 -耗时 : 1
2019-04-08 09:12:20 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:12:20 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:12:20 -HTTP METHOD : GET
2019-04-08 09:12:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:12:20 -参数 : [userType]
2019-04-08 09:12:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:12:20 -==> Parameters: userType(String)
2019-04-08 09:12:20 -<==      Total: 2
2019-04-08 09:12:20 -耗时 : 3
2019-04-08 09:12:20 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:12:20 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:12:20 -HTTP METHOD : GET
2019-04-08 09:12:20 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:12:20 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:12:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:12:20 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:12:20 -<==      Total: 5
2019-04-08 09:12:20 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:12:20 -==> Parameters: 
2019-04-08 09:12:20 -<==      Total: 1
2019-04-08 09:12:20 -耗时 : 8
2019-04-08 09:12:20 -返回值 : com.bootdo.common.utils.PageUtils@2dd7c34
2019-04-08 09:12:21 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:12:21 -HTTP METHOD : GET
2019-04-08 09:12:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:12:21 -参数 : []
2019-04-08 09:12:21 -耗时 : 0
2019-04-08 09:12:21 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:12:21 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:12:21 -HTTP METHOD : GET
2019-04-08 09:12:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:12:21 -参数 : [userType]
2019-04-08 09:12:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:12:21 -==> Parameters: userType(String)
2019-04-08 09:12:21 -<==      Total: 2
2019-04-08 09:12:21 -耗时 : 4
2019-04-08 09:12:21 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:12:21 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:12:21 -HTTP METHOD : GET
2019-04-08 09:12:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:12:21 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:12:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:12:21 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:12:21 -<==      Total: 5
2019-04-08 09:12:21 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:12:21 -==> Parameters: 
2019-04-08 09:12:21 -<==      Total: 1
2019-04-08 09:12:21 -耗时 : 5
2019-04-08 09:12:21 -返回值 : com.bootdo.common.utils.PageUtils@2241ab3d
2019-04-08 09:12:22 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:12:22 -HTTP METHOD : GET
2019-04-08 09:12:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:12:22 -参数 : []
2019-04-08 09:12:22 -耗时 : 0
2019-04-08 09:12:22 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:12:22 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:12:22 -HTTP METHOD : GET
2019-04-08 09:12:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:12:22 -参数 : [userType]
2019-04-08 09:12:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:12:22 -==> Parameters: userType(String)
2019-04-08 09:12:22 -<==      Total: 2
2019-04-08 09:12:22 -耗时 : 4
2019-04-08 09:12:22 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:12:22 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:12:22 -HTTP METHOD : GET
2019-04-08 09:12:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:12:22 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:12:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:12:22 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:12:22 -<==      Total: 5
2019-04-08 09:12:22 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:12:22 -==> Parameters: 
2019-04-08 09:12:22 -<==      Total: 1
2019-04-08 09:12:22 -耗时 : 6
2019-04-08 09:12:22 -返回值 : com.bootdo.common.utils.PageUtils@781adb26
2019-04-08 09:12:23 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:12:23 -HTTP METHOD : GET
2019-04-08 09:12:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:12:23 -参数 : []
2019-04-08 09:12:23 -耗时 : 1
2019-04-08 09:12:23 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:12:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:12:23 -HTTP METHOD : GET
2019-04-08 09:12:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:12:23 -参数 : [userType]
2019-04-08 09:12:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:12:23 -==> Parameters: userType(String)
2019-04-08 09:12:23 -<==      Total: 2
2019-04-08 09:12:23 -耗时 : 3
2019-04-08 09:12:23 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:12:23 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:12:23 -HTTP METHOD : GET
2019-04-08 09:12:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:12:23 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:12:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:12:23 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:12:23 -<==      Total: 7
2019-04-08 09:12:23 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:12:23 -==> Parameters: 
2019-04-08 09:12:23 -<==      Total: 1
2019-04-08 09:12:23 -耗时 : 6
2019-04-08 09:12:23 -返回值 : com.bootdo.common.utils.PageUtils@7e85f6b2
2019-04-08 09:12:23 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:12:23 -HTTP METHOD : GET
2019-04-08 09:12:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:12:23 -参数 : []
2019-04-08 09:12:23 -耗时 : 1
2019-04-08 09:12:23 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:12:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:12:24 -HTTP METHOD : GET
2019-04-08 09:12:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:12:24 -参数 : [userType]
2019-04-08 09:12:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:12:24 -==> Parameters: userType(String)
2019-04-08 09:12:24 -<==      Total: 2
2019-04-08 09:12:24 -耗时 : 3
2019-04-08 09:12:24 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:12:24 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:12:24 -HTTP METHOD : GET
2019-04-08 09:12:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:12:24 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:12:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:12:24 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:12:24 -<==      Total: 5
2019-04-08 09:12:24 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:12:24 -==> Parameters: 
2019-04-08 09:12:24 -<==      Total: 1
2019-04-08 09:12:24 -耗时 : 4
2019-04-08 09:12:24 -返回值 : com.bootdo.common.utils.PageUtils@2f72719
2019-04-08 09:12:24 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:12:24 -HTTP METHOD : GET
2019-04-08 09:12:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:12:24 -参数 : []
2019-04-08 09:12:24 -耗时 : 1
2019-04-08 09:12:24 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:12:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:12:24 -HTTP METHOD : GET
2019-04-08 09:12:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:12:24 -参数 : [userType]
2019-04-08 09:12:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:12:24 -==> Parameters: userType(String)
2019-04-08 09:12:24 -<==      Total: 2
2019-04-08 09:12:24 -耗时 : 3
2019-04-08 09:12:24 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:12:24 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:12:24 -HTTP METHOD : GET
2019-04-08 09:12:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:12:24 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:12:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:12:24 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:12:24 -<==      Total: 5
2019-04-08 09:12:24 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:12:24 -==> Parameters: 
2019-04-08 09:12:24 -<==      Total: 1
2019-04-08 09:12:24 -耗时 : 5
2019-04-08 09:12:24 -返回值 : com.bootdo.common.utils.PageUtils@282e9aed
2019-04-08 09:14:09 -请求地址 : http://localhost:8081/login;JSESSIONID=ef2d3ef6-647a-418f-a095-a34ca6221b25
2019-04-08 09:14:09 -HTTP METHOD : GET
2019-04-08 09:14:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-08 09:14:09 -参数 : [{}]
2019-04-08 09:14:09 -耗时 : 1
2019-04-08 09:14:09 -返回值 : login
2019-04-08 09:14:10 -请求地址 : http://localhost:8081/getVerify
2019-04-08 09:14:10 -HTTP METHOD : GET
2019-04-08 09:14:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-08 09:14:10 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@535c75da, org.apache.shiro.web.servlet.ShiroHttpServletResponse@f7964ae]
2019-04-08 09:14:10 -8683
2019-04-08 09:14:10 -耗时 : 21
2019-04-08 09:14:10 -返回值 : null
2019-04-08 09:14:10 -请求地址 : http://localhost:8081/login
2019-04-08 09:14:10 -HTTP METHOD : GET
2019-04-08 09:14:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-08 09:14:10 -参数 : [{}]
2019-04-08 09:14:10 -耗时 : 0
2019-04-08 09:14:10 -返回值 : login
2019-04-08 09:14:16 -请求地址 : http://localhost:8081/login
2019-04-08 09:14:16 -HTTP METHOD : POST
2019-04-08 09:14:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-08 09:14:16 -参数 : [admin, 111111, 8683, org.apache.shiro.web.servlet.ShiroHttpServletRequest@68ffc5a4]
2019-04-08 09:14:16 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-08 09:14:16 -==> Parameters: admin(String)
2019-04-08 09:14:16 -<==      Total: 1
2019-04-08 09:14:16 -耗时 : 93
2019-04-08 09:14:16 -返回值 : {msg=操作成功, code=0}
2019-04-08 09:14:16 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 09:14:16 -==> Parameters: 1(Long), admin(String), 登录(String), 94(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-08 09:14:16.367(Timestamp)
2019-04-08 09:14:16 -请求地址 : http://localhost:8081/index
2019-04-08 09:14:16 -HTTP METHOD : GET
2019-04-08 09:14:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 09:14:16 -参数 : [{}]
2019-04-08 09:14:16 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 09:14:16 -==> Parameters: 1(Long)
2019-04-08 09:14:16 -<==    Updates: 1
2019-04-08 09:14:16 -<==      Total: 46
2019-04-08 09:14:16 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 09:14:16 -==> Parameters: 138(Long)
2019-04-08 09:14:16 -<==      Total: 1
2019-04-08 09:14:16 -耗时 : 185
2019-04-08 09:14:16 -返回值 : index_v1
2019-04-08 09:14:16 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 09:14:16 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 185(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 09:14:16.568(Timestamp)
2019-04-08 09:14:16 -请求地址 : http://localhost:8081/main
2019-04-08 09:14:16 -HTTP METHOD : GET
2019-04-08 09:14:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 09:14:16 -参数 : []
2019-04-08 09:14:16 -耗时 : 0
2019-04-08 09:14:16 -返回值 : main
2019-04-08 09:14:16 -<==    Updates: 1
2019-04-08 09:14:17 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 09:14:17 -HTTP METHOD : GET
2019-04-08 09:14:17 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 09:14:17 -参数 : []
2019-04-08 09:14:17 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 09:14:17 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 09:14:17 -请求地址 : http://localhost:8081/main
2019-04-08 09:14:17 -HTTP METHOD : GET
2019-04-08 09:14:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 09:14:17 -参数 : []
2019-04-08 09:14:17 -耗时 : 0
2019-04-08 09:14:17 -返回值 : main
2019-04-08 09:14:17 -<==      Total: 0
2019-04-08 09:14:17 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 09:14:17 -==> Parameters: 1(Long), 0(String)
2019-04-08 09:14:17 -<==      Total: 1
2019-04-08 09:14:17 -耗时 : 351
2019-04-08 09:14:17 -返回值 : com.bootdo.common.utils.PageUtils@4776c01a
2019-04-08 09:14:22 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-08 09:14:22 -==> Parameters: 1(Long)
2019-04-08 09:14:22 -<==      Total: 90
2019-04-08 09:14:22 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:14:22 -HTTP METHOD : GET
2019-04-08 09:14:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:14:22 -参数 : []
2019-04-08 09:14:22 -耗时 : 1
2019-04-08 09:14:22 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:14:25 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:14:25 -HTTP METHOD : GET
2019-04-08 09:14:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:14:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:14:25 -HTTP METHOD : GET
2019-04-08 09:14:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:14:25 -参数 : [userType]
2019-04-08 09:14:25 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:14:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:14:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:14:25 -==> Parameters: userType(String)
2019-04-08 09:14:25 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:14:25 -<==      Total: 2
2019-04-08 09:14:25 -耗时 : 4
2019-04-08 09:14:25 -<==      Total: 7
2019-04-08 09:14:25 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:14:25 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:14:25 -==> Parameters: 
2019-04-08 09:14:25 -<==      Total: 1
2019-04-08 09:14:25 -耗时 : 8
2019-04-08 09:14:25 -返回值 : com.bootdo.common.utils.PageUtils@774ffcad
2019-04-08 09:14:26 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:14:26 -HTTP METHOD : GET
2019-04-08 09:14:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:14:26 -参数 : []
2019-04-08 09:14:26 -耗时 : 0
2019-04-08 09:14:26 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:14:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:14:27 -HTTP METHOD : GET
2019-04-08 09:14:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:14:27 -参数 : [userType]
2019-04-08 09:14:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:14:27 -==> Parameters: userType(String)
2019-04-08 09:14:27 -<==      Total: 2
2019-04-08 09:14:27 -耗时 : 4
2019-04-08 09:14:27 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:14:27 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:14:27 -HTTP METHOD : GET
2019-04-08 09:14:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:14:27 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:14:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:14:27 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:14:27 -<==      Total: 5
2019-04-08 09:14:27 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:14:27 -==> Parameters: 
2019-04-08 09:14:27 -<==      Total: 1
2019-04-08 09:14:27 -耗时 : 27
2019-04-08 09:14:27 -返回值 : com.bootdo.common.utils.PageUtils@3f94ac05
2019-04-08 09:14:27 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:14:27 -HTTP METHOD : GET
2019-04-08 09:14:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:14:27 -参数 : []
2019-04-08 09:14:27 -耗时 : 1
2019-04-08 09:14:27 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:14:28 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:14:28 -HTTP METHOD : GET
2019-04-08 09:14:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:14:28 -参数 : [userType]
2019-04-08 09:14:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:14:28 -==> Parameters: userType(String)
2019-04-08 09:14:28 -<==      Total: 2
2019-04-08 09:14:28 -耗时 : 4
2019-04-08 09:14:28 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:14:28 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:14:28 -HTTP METHOD : GET
2019-04-08 09:14:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:14:28 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:14:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:14:28 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:14:28 -<==      Total: 5
2019-04-08 09:14:28 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:14:28 -==> Parameters: 
2019-04-08 09:14:28 -<==      Total: 1
2019-04-08 09:14:28 -耗时 : 6
2019-04-08 09:14:28 -返回值 : com.bootdo.common.utils.PageUtils@3c950172
2019-04-08 09:14:28 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:14:28 -HTTP METHOD : GET
2019-04-08 09:14:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:14:28 -参数 : []
2019-04-08 09:14:28 -耗时 : 1
2019-04-08 09:14:28 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:14:29 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:14:29 -HTTP METHOD : GET
2019-04-08 09:14:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:14:29 -参数 : [userType]
2019-04-08 09:14:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:14:29 -==> Parameters: userType(String)
2019-04-08 09:14:29 -<==      Total: 2
2019-04-08 09:14:29 -耗时 : 2
2019-04-08 09:14:29 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:14:29 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:14:29 -HTTP METHOD : GET
2019-04-08 09:14:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:14:29 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:14:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:14:29 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:14:29 -<==      Total: 5
2019-04-08 09:14:29 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:14:29 -==> Parameters: 
2019-04-08 09:14:29 -<==      Total: 1
2019-04-08 09:14:29 -耗时 : 5
2019-04-08 09:14:29 -返回值 : com.bootdo.common.utils.PageUtils@55297a13
2019-04-08 09:14:30 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:14:30 -HTTP METHOD : GET
2019-04-08 09:14:30 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:14:30 -参数 : []
2019-04-08 09:14:30 -耗时 : 1
2019-04-08 09:14:30 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:14:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:14:30 -HTTP METHOD : GET
2019-04-08 09:14:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:14:30 -参数 : [userType]
2019-04-08 09:14:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:14:30 -==> Parameters: userType(String)
2019-04-08 09:14:30 -<==      Total: 2
2019-04-08 09:14:30 -耗时 : 3
2019-04-08 09:14:30 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:14:30 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:14:30 -HTTP METHOD : GET
2019-04-08 09:14:30 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:14:30 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:14:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:14:30 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:14:30 -<==      Total: 7
2019-04-08 09:14:30 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:14:30 -==> Parameters: 
2019-04-08 09:14:30 -<==      Total: 1
2019-04-08 09:14:30 -耗时 : 7
2019-04-08 09:14:30 -返回值 : com.bootdo.common.utils.PageUtils@66735c8a
2019-04-08 09:14:31 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:14:31 -HTTP METHOD : GET
2019-04-08 09:14:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:14:31 -参数 : []
2019-04-08 09:14:31 -耗时 : 1
2019-04-08 09:14:31 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:14:31 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:14:31 -HTTP METHOD : GET
2019-04-08 09:14:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:14:31 -参数 : [userType]
2019-04-08 09:14:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:14:31 -==> Parameters: userType(String)
2019-04-08 09:14:31 -<==      Total: 2
2019-04-08 09:14:31 -耗时 : 3
2019-04-08 09:14:31 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:14:31 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:14:31 -HTTP METHOD : GET
2019-04-08 09:14:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:14:31 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:14:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:14:31 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:14:31 -<==      Total: 5
2019-04-08 09:14:31 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:14:31 -==> Parameters: 
2019-04-08 09:14:31 -<==      Total: 1
2019-04-08 09:14:31 -耗时 : 6
2019-04-08 09:14:31 -返回值 : com.bootdo.common.utils.PageUtils@5cb5a284
2019-04-08 09:14:31 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:14:31 -HTTP METHOD : GET
2019-04-08 09:14:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:14:31 -参数 : []
2019-04-08 09:14:31 -耗时 : 1
2019-04-08 09:14:31 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:14:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:14:32 -HTTP METHOD : GET
2019-04-08 09:14:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:14:32 -参数 : [userType]
2019-04-08 09:14:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:14:32 -==> Parameters: userType(String)
2019-04-08 09:14:32 -<==      Total: 2
2019-04-08 09:14:32 -耗时 : 3
2019-04-08 09:14:32 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:14:32 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:14:32 -HTTP METHOD : GET
2019-04-08 09:14:32 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:14:32 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:14:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:14:32 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:14:32 -<==      Total: 5
2019-04-08 09:14:32 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:14:32 -==> Parameters: 
2019-04-08 09:14:32 -<==      Total: 1
2019-04-08 09:14:32 -耗时 : 4
2019-04-08 09:14:32 -返回值 : com.bootdo.common.utils.PageUtils@753da75d
2019-04-08 09:14:33 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:14:33 -HTTP METHOD : GET
2019-04-08 09:14:33 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:14:33 -参数 : []
2019-04-08 09:14:33 -耗时 : 1
2019-04-08 09:14:33 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:14:33 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:14:33 -HTTP METHOD : GET
2019-04-08 09:14:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:14:33 -参数 : [userType]
2019-04-08 09:14:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:14:33 -==> Parameters: userType(String)
2019-04-08 09:14:33 -<==      Total: 2
2019-04-08 09:14:33 -耗时 : 3
2019-04-08 09:14:33 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:14:33 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:14:33 -HTTP METHOD : GET
2019-04-08 09:14:33 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:14:33 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:14:33 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:14:33 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:14:33 -<==      Total: 5
2019-04-08 09:14:33 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:14:33 -==> Parameters: 
2019-04-08 09:14:33 -<==      Total: 1
2019-04-08 09:14:33 -耗时 : 7
2019-04-08 09:14:33 -返回值 : com.bootdo.common.utils.PageUtils@52e0c009
2019-04-08 09:14:34 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:14:34 -HTTP METHOD : GET
2019-04-08 09:14:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:14:34 -参数 : []
2019-04-08 09:14:34 -耗时 : 0
2019-04-08 09:14:34 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:14:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:14:34 -HTTP METHOD : GET
2019-04-08 09:14:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:14:34 -参数 : [userType]
2019-04-08 09:14:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:14:34 -==> Parameters: userType(String)
2019-04-08 09:14:34 -<==      Total: 2
2019-04-08 09:14:34 -耗时 : 3
2019-04-08 09:14:34 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:14:34 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:14:34 -HTTP METHOD : GET
2019-04-08 09:14:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:14:34 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:14:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:14:34 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:14:34 -<==      Total: 7
2019-04-08 09:14:34 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:14:34 -==> Parameters: 
2019-04-08 09:14:34 -<==      Total: 1
2019-04-08 09:14:34 -耗时 : 5
2019-04-08 09:14:34 -返回值 : com.bootdo.common.utils.PageUtils@17b2cd34
2019-04-08 09:14:34 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:14:34 -HTTP METHOD : GET
2019-04-08 09:14:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:14:34 -参数 : []
2019-04-08 09:14:34 -耗时 : 0
2019-04-08 09:14:34 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:14:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:14:34 -HTTP METHOD : GET
2019-04-08 09:14:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:14:34 -参数 : [userType]
2019-04-08 09:14:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:14:34 -==> Parameters: userType(String)
2019-04-08 09:14:34 -<==      Total: 2
2019-04-08 09:14:34 -耗时 : 5
2019-04-08 09:14:34 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:14:34 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:14:34 -HTTP METHOD : GET
2019-04-08 09:14:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:14:34 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:14:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:14:34 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:14:34 -<==      Total: 5
2019-04-08 09:14:34 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:14:34 -==> Parameters: 
2019-04-08 09:14:34 -<==      Total: 1
2019-04-08 09:14:34 -耗时 : 6
2019-04-08 09:14:34 -返回值 : com.bootdo.common.utils.PageUtils@1504c233
2019-04-08 09:14:35 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:14:35 -HTTP METHOD : GET
2019-04-08 09:14:35 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:14:35 -参数 : []
2019-04-08 09:14:35 -耗时 : 1
2019-04-08 09:14:35 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:14:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:14:35 -HTTP METHOD : GET
2019-04-08 09:14:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:14:35 -参数 : [userType]
2019-04-08 09:14:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:14:35 -==> Parameters: userType(String)
2019-04-08 09:14:35 -<==      Total: 2
2019-04-08 09:14:35 -耗时 : 2
2019-04-08 09:14:35 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:14:35 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:14:35 -HTTP METHOD : GET
2019-04-08 09:14:35 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:14:35 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:14:35 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:14:35 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:14:35 -<==      Total: 5
2019-04-08 09:14:35 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:14:35 -==> Parameters: 
2019-04-08 09:14:35 -<==      Total: 1
2019-04-08 09:14:35 -耗时 : 5
2019-04-08 09:14:35 -返回值 : com.bootdo.common.utils.PageUtils@50be0839
2019-04-08 09:14:36 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:14:36 -HTTP METHOD : GET
2019-04-08 09:14:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:14:36 -参数 : []
2019-04-08 09:14:36 -耗时 : 1
2019-04-08 09:14:36 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:14:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:14:36 -HTTP METHOD : GET
2019-04-08 09:14:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:14:36 -参数 : [userType]
2019-04-08 09:14:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:14:36 -==> Parameters: userType(String)
2019-04-08 09:14:36 -<==      Total: 2
2019-04-08 09:14:36 -耗时 : 3
2019-04-08 09:14:36 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:14:36 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:14:36 -HTTP METHOD : GET
2019-04-08 09:14:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:14:36 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:14:36 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:14:36 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:14:36 -<==      Total: 5
2019-04-08 09:14:36 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:14:36 -==> Parameters: 
2019-04-08 09:14:36 -<==      Total: 1
2019-04-08 09:14:36 -耗时 : 5
2019-04-08 09:14:36 -返回值 : com.bootdo.common.utils.PageUtils@7b6bc1c5
2019-04-08 09:14:37 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:14:37 -HTTP METHOD : GET
2019-04-08 09:14:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:14:37 -参数 : []
2019-04-08 09:14:37 -耗时 : 0
2019-04-08 09:14:37 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:14:37 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:14:37 -HTTP METHOD : GET
2019-04-08 09:14:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:14:37 -参数 : [userType]
2019-04-08 09:14:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:14:37 -==> Parameters: userType(String)
2019-04-08 09:14:37 -<==      Total: 2
2019-04-08 09:14:37 -耗时 : 3
2019-04-08 09:14:37 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:14:37 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:14:37 -HTTP METHOD : GET
2019-04-08 09:14:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:14:37 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:14:37 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:14:37 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:14:37 -<==      Total: 7
2019-04-08 09:14:37 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:14:37 -==> Parameters: 
2019-04-08 09:14:37 -<==      Total: 1
2019-04-08 09:14:37 -耗时 : 5
2019-04-08 09:14:37 -返回值 : com.bootdo.common.utils.PageUtils@23b86a8a
2019-04-08 09:14:38 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:14:38 -HTTP METHOD : GET
2019-04-08 09:14:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:14:38 -参数 : []
2019-04-08 09:14:38 -耗时 : 0
2019-04-08 09:14:38 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:14:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:14:38 -HTTP METHOD : GET
2019-04-08 09:14:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:14:38 -参数 : [userType]
2019-04-08 09:14:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:14:38 -==> Parameters: userType(String)
2019-04-08 09:14:38 -<==      Total: 2
2019-04-08 09:14:38 -耗时 : 3
2019-04-08 09:14:38 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:14:38 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:14:38 -HTTP METHOD : GET
2019-04-08 09:14:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:14:38 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:14:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:14:38 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:14:38 -<==      Total: 5
2019-04-08 09:14:38 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:14:38 -==> Parameters: 
2019-04-08 09:14:38 -<==      Total: 1
2019-04-08 09:14:38 -耗时 : 4
2019-04-08 09:14:38 -返回值 : com.bootdo.common.utils.PageUtils@30c1bd9f
2019-04-08 09:14:38 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:14:38 -HTTP METHOD : GET
2019-04-08 09:14:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:14:38 -参数 : []
2019-04-08 09:14:38 -耗时 : 1
2019-04-08 09:14:38 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:14:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:14:38 -HTTP METHOD : GET
2019-04-08 09:14:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:14:38 -参数 : [userType]
2019-04-08 09:14:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:14:38 -==> Parameters: userType(String)
2019-04-08 09:14:38 -<==      Total: 2
2019-04-08 09:14:38 -耗时 : 3
2019-04-08 09:14:38 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:14:38 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:14:38 -HTTP METHOD : GET
2019-04-08 09:14:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:14:38 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:14:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:14:38 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:14:38 -<==      Total: 5
2019-04-08 09:14:38 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:14:38 -==> Parameters: 
2019-04-08 09:14:38 -<==      Total: 1
2019-04-08 09:14:38 -耗时 : 6
2019-04-08 09:14:38 -返回值 : com.bootdo.common.utils.PageUtils@742b6c02
2019-04-08 09:15:28 -请求地址 : http://localhost:8081/index
2019-04-08 09:15:28 -HTTP METHOD : GET
2019-04-08 09:15:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 09:15:28 -参数 : [{}]
2019-04-08 09:15:28 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 09:15:28 -==> Parameters: 1(Long)
2019-04-08 09:15:28 -<==      Total: 46
2019-04-08 09:15:28 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 09:15:28 -==> Parameters: 138(Long)
2019-04-08 09:15:28 -<==      Total: 1
2019-04-08 09:15:28 -耗时 : 19
2019-04-08 09:15:28 -返回值 : index_v1
2019-04-08 09:15:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 09:15:28 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 09:15:28.25(Timestamp)
2019-04-08 09:15:28 -请求地址 : http://localhost:8081/main
2019-04-08 09:15:28 -HTTP METHOD : GET
2019-04-08 09:15:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 09:15:28 -参数 : []
2019-04-08 09:15:28 -耗时 : 1
2019-04-08 09:15:28 -返回值 : main
2019-04-08 09:15:28 -<==    Updates: 1
2019-04-08 09:15:28 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 09:15:28 -HTTP METHOD : GET
2019-04-08 09:15:28 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 09:15:28 -参数 : []
2019-04-08 09:15:28 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 09:15:28 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 09:15:28 -<==      Total: 0
2019-04-08 09:15:28 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 09:15:28 -==> Parameters: 1(Long), 0(String)
2019-04-08 09:15:28 -<==      Total: 1
2019-04-08 09:15:28 -耗时 : 6
2019-04-08 09:15:28 -返回值 : com.bootdo.common.utils.PageUtils@73508e7e
2019-04-08 09:15:28 -请求地址 : http://localhost:8081/main
2019-04-08 09:15:28 -HTTP METHOD : GET
2019-04-08 09:15:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 09:15:28 -参数 : []
2019-04-08 09:15:28 -耗时 : 1
2019-04-08 09:15:28 -返回值 : main
2019-04-08 09:15:30 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:15:30 -HTTP METHOD : GET
2019-04-08 09:15:30 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:15:30 -参数 : []
2019-04-08 09:15:30 -耗时 : 1
2019-04-08 09:15:30 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:15:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:15:30 -HTTP METHOD : GET
2019-04-08 09:15:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:15:30 -参数 : [userType]
2019-04-08 09:15:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:15:30 -==> Parameters: userType(String)
2019-04-08 09:15:30 -<==      Total: 2
2019-04-08 09:15:30 -耗时 : 3
2019-04-08 09:15:30 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:15:30 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:15:30 -HTTP METHOD : GET
2019-04-08 09:15:30 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:15:30 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:15:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:15:30 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:15:30 -<==      Total: 7
2019-04-08 09:15:30 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:15:30 -==> Parameters: 
2019-04-08 09:15:30 -<==      Total: 1
2019-04-08 09:15:30 -耗时 : 6
2019-04-08 09:15:30 -返回值 : com.bootdo.common.utils.PageUtils@3fdc90f9
2019-04-08 09:15:31 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-08 09:15:31 -HTTP METHOD : GET
2019-04-08 09:15:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-08 09:15:31 -参数 : []
2019-04-08 09:15:31 -耗时 : 1
2019-04-08 09:15:31 -返回值 : /moneyLog/waterLog/waterLog
2019-04-08 09:15:31 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:15:31 -HTTP METHOD : GET
2019-04-08 09:15:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:15:31 -参数 : [userType]
2019-04-08 09:15:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:15:31 -==> Parameters: userType(String)
2019-04-08 09:15:31 -<==      Total: 2
2019-04-08 09:15:31 -耗时 : 3
2019-04-08 09:15:31 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:15:31 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 09:15:31 -HTTP METHOD : GET
2019-04-08 09:15:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 09:15:31 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 09:15:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 09:15:31 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:15:31 -<==      Total: 5
2019-04-08 09:15:31 -==>  Preparing: select count(*) from water_log 
2019-04-08 09:15:31 -==> Parameters: 
2019-04-08 09:15:31 -<==      Total: 1
2019-04-08 09:15:31 -耗时 : 5
2019-04-08 09:15:31 -返回值 : com.bootdo.common.utils.PageUtils@379378b7
2019-04-08 09:15:32 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:15:32 -HTTP METHOD : GET
2019-04-08 09:15:32 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:15:32 -参数 : []
2019-04-08 09:15:32 -耗时 : 0
2019-04-08 09:15:32 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:15:33 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:15:33 -HTTP METHOD : GET
2019-04-08 09:15:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:15:33 -参数 : [userType]
2019-04-08 09:15:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:15:33 -==> Parameters: userType(String)
2019-04-08 09:15:33 -<==      Total: 2
2019-04-08 09:15:33 -耗时 : 3
2019-04-08 09:15:33 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:15:33 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:15:33 -HTTP METHOD : GET
2019-04-08 09:15:33 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:15:33 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:15:33 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:15:33 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:15:33 -<==      Total: 5
2019-04-08 09:15:33 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:15:33 -==> Parameters: 
2019-04-08 09:15:33 -<==      Total: 1
2019-04-08 09:15:33 -耗时 : 5
2019-04-08 09:15:33 -返回值 : com.bootdo.common.utils.PageUtils@72d951bc
2019-04-08 09:15:33 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:15:33 -HTTP METHOD : GET
2019-04-08 09:15:33 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:15:33 -参数 : []
2019-04-08 09:15:33 -耗时 : 0
2019-04-08 09:15:33 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:15:33 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:15:33 -HTTP METHOD : GET
2019-04-08 09:15:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:15:33 -参数 : [userType]
2019-04-08 09:15:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:15:33 -==> Parameters: userType(String)
2019-04-08 09:15:33 -<==      Total: 2
2019-04-08 09:15:33 -耗时 : 2
2019-04-08 09:15:33 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:15:33 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:15:33 -HTTP METHOD : GET
2019-04-08 09:15:33 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:15:33 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:15:33 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:15:33 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:15:33 -<==      Total: 7
2019-04-08 09:15:33 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:15:33 -==> Parameters: 
2019-04-08 09:15:33 -<==      Total: 1
2019-04-08 09:15:33 -耗时 : 5
2019-04-08 09:15:33 -返回值 : com.bootdo.common.utils.PageUtils@f1d5107
2019-04-08 09:15:34 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:15:34 -HTTP METHOD : GET
2019-04-08 09:15:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:15:34 -参数 : []
2019-04-08 09:15:34 -耗时 : 0
2019-04-08 09:15:34 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:15:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:15:34 -HTTP METHOD : GET
2019-04-08 09:15:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:15:34 -参数 : [userType]
2019-04-08 09:15:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:15:34 -==> Parameters: userType(String)
2019-04-08 09:15:34 -<==      Total: 2
2019-04-08 09:15:34 -耗时 : 3
2019-04-08 09:15:34 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:15:34 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:15:34 -HTTP METHOD : GET
2019-04-08 09:15:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:15:34 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:15:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:15:34 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:15:34 -<==      Total: 5
2019-04-08 09:15:34 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:15:34 -==> Parameters: 
2019-04-08 09:15:34 -<==      Total: 1
2019-04-08 09:15:34 -耗时 : 6
2019-04-08 09:15:34 -返回值 : com.bootdo.common.utils.PageUtils@1f6d9805
2019-04-08 09:15:35 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:15:35 -HTTP METHOD : GET
2019-04-08 09:15:35 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:15:35 -参数 : []
2019-04-08 09:15:35 -耗时 : 0
2019-04-08 09:15:35 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:15:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:15:35 -HTTP METHOD : GET
2019-04-08 09:15:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:15:35 -参数 : [userType]
2019-04-08 09:15:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:15:35 -==> Parameters: userType(String)
2019-04-08 09:15:35 -<==      Total: 2
2019-04-08 09:15:35 -耗时 : 3
2019-04-08 09:15:35 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:15:35 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:15:35 -HTTP METHOD : GET
2019-04-08 09:15:35 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:15:35 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:15:35 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:15:35 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:15:35 -<==      Total: 5
2019-04-08 09:15:35 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:15:35 -==> Parameters: 
2019-04-08 09:15:35 -<==      Total: 1
2019-04-08 09:15:35 -耗时 : 6
2019-04-08 09:15:35 -返回值 : com.bootdo.common.utils.PageUtils@5cd266d4
2019-04-08 09:15:36 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:15:36 -HTTP METHOD : GET
2019-04-08 09:15:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:15:36 -参数 : []
2019-04-08 09:15:36 -耗时 : 1
2019-04-08 09:15:36 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:15:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:15:36 -HTTP METHOD : GET
2019-04-08 09:15:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:15:36 -参数 : [userType]
2019-04-08 09:15:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:15:36 -==> Parameters: userType(String)
2019-04-08 09:15:36 -<==      Total: 2
2019-04-08 09:15:36 -耗时 : 4
2019-04-08 09:15:36 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:15:36 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:15:36 -HTTP METHOD : GET
2019-04-08 09:15:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:15:36 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:15:36 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:15:36 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:15:36 -<==      Total: 5
2019-04-08 09:15:36 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:15:36 -==> Parameters: 
2019-04-08 09:15:36 -<==      Total: 1
2019-04-08 09:15:36 -耗时 : 7
2019-04-08 09:15:36 -返回值 : com.bootdo.common.utils.PageUtils@29edc6b6
2019-04-08 09:15:37 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:15:37 -HTTP METHOD : GET
2019-04-08 09:15:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:15:37 -参数 : []
2019-04-08 09:15:37 -耗时 : 0
2019-04-08 09:15:37 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:15:37 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:15:37 -HTTP METHOD : GET
2019-04-08 09:15:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:15:37 -参数 : [userType]
2019-04-08 09:15:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:15:37 -==> Parameters: userType(String)
2019-04-08 09:15:37 -<==      Total: 2
2019-04-08 09:15:37 -耗时 : 2
2019-04-08 09:15:37 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:15:37 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:15:37 -HTTP METHOD : GET
2019-04-08 09:15:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:15:37 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:15:37 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:15:37 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:15:37 -<==      Total: 7
2019-04-08 09:15:37 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:15:37 -==> Parameters: 
2019-04-08 09:15:37 -<==      Total: 1
2019-04-08 09:15:37 -耗时 : 6
2019-04-08 09:15:37 -返回值 : com.bootdo.common.utils.PageUtils@6b5e02fb
2019-04-08 09:15:38 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:15:38 -HTTP METHOD : GET
2019-04-08 09:15:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:15:38 -参数 : []
2019-04-08 09:15:38 -耗时 : 0
2019-04-08 09:15:38 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:15:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:15:38 -HTTP METHOD : GET
2019-04-08 09:15:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:15:38 -参数 : [userType]
2019-04-08 09:15:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:15:38 -==> Parameters: userType(String)
2019-04-08 09:15:38 -<==      Total: 2
2019-04-08 09:15:38 -耗时 : 4
2019-04-08 09:15:38 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:15:38 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:15:38 -HTTP METHOD : GET
2019-04-08 09:15:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:15:38 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:15:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:15:38 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:15:38 -<==      Total: 5
2019-04-08 09:15:38 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:15:38 -==> Parameters: 
2019-04-08 09:15:38 -<==      Total: 1
2019-04-08 09:15:38 -耗时 : 4
2019-04-08 09:15:38 -返回值 : com.bootdo.common.utils.PageUtils@35db8b2d
2019-04-08 09:15:39 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:15:39 -HTTP METHOD : GET
2019-04-08 09:15:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:15:39 -参数 : []
2019-04-08 09:15:39 -耗时 : 0
2019-04-08 09:15:39 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:15:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:15:39 -HTTP METHOD : GET
2019-04-08 09:15:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:15:39 -参数 : [userType]
2019-04-08 09:15:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:15:39 -==> Parameters: userType(String)
2019-04-08 09:15:39 -<==      Total: 2
2019-04-08 09:15:39 -耗时 : 3
2019-04-08 09:15:39 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:15:39 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:15:39 -HTTP METHOD : GET
2019-04-08 09:15:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:15:39 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:15:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:15:39 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:15:39 -<==      Total: 5
2019-04-08 09:15:39 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:15:39 -==> Parameters: 
2019-04-08 09:15:39 -<==      Total: 1
2019-04-08 09:15:39 -耗时 : 5
2019-04-08 09:15:39 -返回值 : com.bootdo.common.utils.PageUtils@23b9a7c8
2019-04-08 09:15:40 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:15:40 -HTTP METHOD : GET
2019-04-08 09:15:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:15:40 -参数 : []
2019-04-08 09:15:40 -耗时 : 0
2019-04-08 09:15:40 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:15:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:15:40 -HTTP METHOD : GET
2019-04-08 09:15:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:15:40 -参数 : [userType]
2019-04-08 09:15:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:15:40 -==> Parameters: userType(String)
2019-04-08 09:15:40 -<==      Total: 2
2019-04-08 09:15:40 -耗时 : 5
2019-04-08 09:15:40 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:15:40 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:15:40 -HTTP METHOD : GET
2019-04-08 09:15:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:15:40 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:15:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:15:40 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:15:40 -<==      Total: 5
2019-04-08 09:15:40 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:15:40 -==> Parameters: 
2019-04-08 09:15:40 -<==      Total: 1
2019-04-08 09:15:40 -耗时 : 7
2019-04-08 09:15:40 -返回值 : com.bootdo.common.utils.PageUtils@7248c4ef
2019-04-08 09:15:40 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:15:40 -HTTP METHOD : GET
2019-04-08 09:15:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:15:40 -参数 : []
2019-04-08 09:15:40 -耗时 : 0
2019-04-08 09:15:40 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:15:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:15:40 -HTTP METHOD : GET
2019-04-08 09:15:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:15:40 -参数 : [userType]
2019-04-08 09:15:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:15:40 -==> Parameters: userType(String)
2019-04-08 09:15:40 -<==      Total: 2
2019-04-08 09:15:40 -耗时 : 2
2019-04-08 09:15:40 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:15:40 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:15:40 -HTTP METHOD : GET
2019-04-08 09:15:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:15:40 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:15:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:15:40 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:15:40 -<==      Total: 5
2019-04-08 09:15:40 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:15:40 -==> Parameters: 
2019-04-08 09:15:40 -<==      Total: 1
2019-04-08 09:15:40 -耗时 : 6
2019-04-08 09:15:40 -返回值 : com.bootdo.common.utils.PageUtils@22407211
2019-04-08 09:15:41 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:15:41 -HTTP METHOD : GET
2019-04-08 09:15:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:15:41 -参数 : []
2019-04-08 09:15:41 -耗时 : 0
2019-04-08 09:15:41 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:15:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:15:41 -HTTP METHOD : GET
2019-04-08 09:15:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:15:41 -参数 : [userType]
2019-04-08 09:15:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:15:41 -==> Parameters: userType(String)
2019-04-08 09:15:41 -<==      Total: 2
2019-04-08 09:15:41 -耗时 : 3
2019-04-08 09:15:41 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:15:41 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:15:41 -HTTP METHOD : GET
2019-04-08 09:15:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:15:41 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:15:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:15:41 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:15:41 -<==      Total: 5
2019-04-08 09:15:41 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:15:41 -==> Parameters: 
2019-04-08 09:15:41 -<==      Total: 1
2019-04-08 09:15:41 -耗时 : 9
2019-04-08 09:15:41 -返回值 : com.bootdo.common.utils.PageUtils@2931ec68
2019-04-08 09:15:41 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:15:41 -HTTP METHOD : GET
2019-04-08 09:15:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:15:41 -参数 : []
2019-04-08 09:15:41 -耗时 : 1
2019-04-08 09:15:41 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:15:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:15:41 -HTTP METHOD : GET
2019-04-08 09:15:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:15:41 -参数 : [userType]
2019-04-08 09:15:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:15:41 -==> Parameters: userType(String)
2019-04-08 09:15:41 -<==      Total: 2
2019-04-08 09:15:41 -耗时 : 3
2019-04-08 09:15:41 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:15:41 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:15:41 -HTTP METHOD : GET
2019-04-08 09:15:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:15:41 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:15:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:15:41 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:15:41 -<==      Total: 5
2019-04-08 09:15:41 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:15:41 -==> Parameters: 
2019-04-08 09:15:41 -<==      Total: 1
2019-04-08 09:15:41 -耗时 : 7
2019-04-08 09:15:41 -返回值 : com.bootdo.common.utils.PageUtils@4d5d2adb
2019-04-08 09:15:42 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:15:42 -HTTP METHOD : GET
2019-04-08 09:15:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:15:42 -参数 : []
2019-04-08 09:15:42 -耗时 : 1
2019-04-08 09:15:42 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:15:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:15:42 -HTTP METHOD : GET
2019-04-08 09:15:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:15:42 -参数 : [userType]
2019-04-08 09:15:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:15:42 -==> Parameters: userType(String)
2019-04-08 09:15:42 -<==      Total: 2
2019-04-08 09:15:42 -耗时 : 2
2019-04-08 09:15:42 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:15:42 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:15:42 -HTTP METHOD : GET
2019-04-08 09:15:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:15:42 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:15:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:15:42 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:15:42 -<==      Total: 5
2019-04-08 09:15:42 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:15:42 -==> Parameters: 
2019-04-08 09:15:42 -<==      Total: 1
2019-04-08 09:15:42 -耗时 : 5
2019-04-08 09:15:42 -返回值 : com.bootdo.common.utils.PageUtils@798f25da
2019-04-08 09:15:43 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:15:43 -HTTP METHOD : GET
2019-04-08 09:15:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:15:43 -参数 : []
2019-04-08 09:15:43 -耗时 : 1
2019-04-08 09:15:43 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:15:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:15:43 -HTTP METHOD : GET
2019-04-08 09:15:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:15:43 -参数 : [userType]
2019-04-08 09:15:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:15:43 -==> Parameters: userType(String)
2019-04-08 09:15:43 -<==      Total: 2
2019-04-08 09:15:43 -耗时 : 2
2019-04-08 09:15:43 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:15:43 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:15:43 -HTTP METHOD : GET
2019-04-08 09:15:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:15:43 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:15:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:15:43 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:15:43 -<==      Total: 7
2019-04-08 09:15:43 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:15:43 -==> Parameters: 
2019-04-08 09:15:43 -<==      Total: 1
2019-04-08 09:15:43 -耗时 : 5
2019-04-08 09:15:43 -返回值 : com.bootdo.common.utils.PageUtils@6544b7d0
2019-04-08 09:15:43 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:15:43 -HTTP METHOD : GET
2019-04-08 09:15:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:15:43 -参数 : []
2019-04-08 09:15:43 -耗时 : 1
2019-04-08 09:15:43 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:15:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:15:44 -HTTP METHOD : GET
2019-04-08 09:15:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:15:44 -参数 : [userType]
2019-04-08 09:15:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:15:44 -==> Parameters: userType(String)
2019-04-08 09:15:44 -<==      Total: 2
2019-04-08 09:15:44 -耗时 : 2
2019-04-08 09:15:44 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:15:44 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:15:44 -HTTP METHOD : GET
2019-04-08 09:15:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:15:44 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:15:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:15:44 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:15:44 -<==      Total: 5
2019-04-08 09:15:44 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:15:44 -==> Parameters: 
2019-04-08 09:15:44 -<==      Total: 1
2019-04-08 09:15:44 -耗时 : 4
2019-04-08 09:15:44 -返回值 : com.bootdo.common.utils.PageUtils@67148a66
2019-04-08 09:15:44 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:15:44 -HTTP METHOD : GET
2019-04-08 09:15:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:15:44 -参数 : []
2019-04-08 09:15:44 -耗时 : 0
2019-04-08 09:15:44 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:15:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:15:44 -HTTP METHOD : GET
2019-04-08 09:15:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:15:44 -参数 : [userType]
2019-04-08 09:15:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:15:44 -==> Parameters: userType(String)
2019-04-08 09:15:44 -<==      Total: 2
2019-04-08 09:15:44 -耗时 : 2
2019-04-08 09:15:44 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:15:44 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:15:44 -HTTP METHOD : GET
2019-04-08 09:15:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:15:44 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:15:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:15:44 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:15:44 -<==      Total: 5
2019-04-08 09:15:44 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:15:44 -==> Parameters: 
2019-04-08 09:15:44 -<==      Total: 1
2019-04-08 09:15:44 -耗时 : 4
2019-04-08 09:15:44 -返回值 : com.bootdo.common.utils.PageUtils@35252f03
2019-04-08 09:15:44 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:15:44 -HTTP METHOD : GET
2019-04-08 09:15:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:15:44 -参数 : []
2019-04-08 09:15:44 -耗时 : 0
2019-04-08 09:15:44 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:15:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:15:45 -HTTP METHOD : GET
2019-04-08 09:15:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:15:45 -参数 : [userType]
2019-04-08 09:15:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:15:45 -==> Parameters: userType(String)
2019-04-08 09:15:45 -<==      Total: 2
2019-04-08 09:15:45 -耗时 : 3
2019-04-08 09:15:45 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:15:45 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:15:45 -HTTP METHOD : GET
2019-04-08 09:15:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:15:45 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:15:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:15:45 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:15:45 -<==      Total: 5
2019-04-08 09:15:45 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:15:45 -==> Parameters: 
2019-04-08 09:15:45 -<==      Total: 1
2019-04-08 09:15:45 -耗时 : 6
2019-04-08 09:15:45 -返回值 : com.bootdo.common.utils.PageUtils@700644d6
2019-04-08 09:15:45 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:15:45 -HTTP METHOD : GET
2019-04-08 09:15:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:15:45 -参数 : []
2019-04-08 09:15:45 -耗时 : 1
2019-04-08 09:15:45 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:15:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:15:45 -HTTP METHOD : GET
2019-04-08 09:15:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:15:45 -参数 : [userType]
2019-04-08 09:15:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:15:45 -==> Parameters: userType(String)
2019-04-08 09:15:45 -<==      Total: 2
2019-04-08 09:15:45 -耗时 : 3
2019-04-08 09:15:45 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:15:45 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:15:45 -HTTP METHOD : GET
2019-04-08 09:15:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:15:45 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:15:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:15:45 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:15:45 -<==      Total: 7
2019-04-08 09:15:45 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:15:45 -==> Parameters: 
2019-04-08 09:15:45 -<==      Total: 1
2019-04-08 09:15:45 -耗时 : 4
2019-04-08 09:15:45 -返回值 : com.bootdo.common.utils.PageUtils@1c77e355
2019-04-08 09:15:45 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:15:45 -HTTP METHOD : GET
2019-04-08 09:15:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:15:45 -参数 : []
2019-04-08 09:15:45 -耗时 : 0
2019-04-08 09:15:45 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:15:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:15:46 -HTTP METHOD : GET
2019-04-08 09:15:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:15:46 -参数 : [userType]
2019-04-08 09:15:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:15:46 -==> Parameters: userType(String)
2019-04-08 09:15:46 -<==      Total: 2
2019-04-08 09:15:46 -耗时 : 3
2019-04-08 09:15:46 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:15:46 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:15:46 -HTTP METHOD : GET
2019-04-08 09:15:46 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:15:46 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:15:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:15:46 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:15:46 -<==      Total: 5
2019-04-08 09:15:46 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:15:46 -==> Parameters: 
2019-04-08 09:15:46 -<==      Total: 1
2019-04-08 09:15:46 -耗时 : 4
2019-04-08 09:15:46 -返回值 : com.bootdo.common.utils.PageUtils@56dbc383
2019-04-08 09:15:46 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:15:46 -HTTP METHOD : GET
2019-04-08 09:15:46 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:15:46 -参数 : []
2019-04-08 09:15:46 -耗时 : 0
2019-04-08 09:15:46 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:15:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:15:46 -HTTP METHOD : GET
2019-04-08 09:15:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:15:46 -参数 : [userType]
2019-04-08 09:15:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:15:46 -==> Parameters: userType(String)
2019-04-08 09:15:46 -<==      Total: 2
2019-04-08 09:15:46 -耗时 : 3
2019-04-08 09:15:46 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:15:46 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:15:46 -HTTP METHOD : GET
2019-04-08 09:15:46 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:15:46 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:15:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:15:46 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:15:46 -<==      Total: 5
2019-04-08 09:15:46 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:15:46 -==> Parameters: 
2019-04-08 09:15:46 -<==      Total: 1
2019-04-08 09:15:46 -耗时 : 6
2019-04-08 09:15:46 -返回值 : com.bootdo.common.utils.PageUtils@325fa262
2019-04-08 09:15:47 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:15:47 -HTTP METHOD : GET
2019-04-08 09:15:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:15:47 -参数 : []
2019-04-08 09:15:47 -耗时 : 1
2019-04-08 09:15:47 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:15:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:15:47 -HTTP METHOD : GET
2019-04-08 09:15:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:15:47 -参数 : [userType]
2019-04-08 09:15:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:15:47 -==> Parameters: userType(String)
2019-04-08 09:15:47 -<==      Total: 2
2019-04-08 09:15:47 -耗时 : 3
2019-04-08 09:15:47 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:15:47 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:15:47 -HTTP METHOD : GET
2019-04-08 09:15:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:15:47 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:15:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:15:47 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:15:47 -<==      Total: 5
2019-04-08 09:15:47 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:15:47 -==> Parameters: 
2019-04-08 09:15:47 -<==      Total: 1
2019-04-08 09:15:47 -耗时 : 4
2019-04-08 09:15:47 -返回值 : com.bootdo.common.utils.PageUtils@6128cd69
2019-04-08 09:15:47 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:15:47 -HTTP METHOD : GET
2019-04-08 09:15:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:15:47 -参数 : []
2019-04-08 09:15:47 -耗时 : 1
2019-04-08 09:15:47 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:15:48 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:15:48 -HTTP METHOD : GET
2019-04-08 09:15:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:15:48 -参数 : [userType]
2019-04-08 09:15:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:15:48 -==> Parameters: userType(String)
2019-04-08 09:15:48 -<==      Total: 2
2019-04-08 09:15:48 -耗时 : 4
2019-04-08 09:15:48 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:15:48 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:15:48 -HTTP METHOD : GET
2019-04-08 09:15:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:15:48 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:15:48 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:15:48 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:15:48 -<==      Total: 7
2019-04-08 09:15:48 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:15:48 -==> Parameters: 
2019-04-08 09:15:48 -<==      Total: 1
2019-04-08 09:15:48 -耗时 : 5
2019-04-08 09:15:48 -返回值 : com.bootdo.common.utils.PageUtils@31a68d46
2019-04-08 09:15:50 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-08 09:15:50 -HTTP METHOD : GET
2019-04-08 09:15:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-08 09:15:50 -参数 : []
2019-04-08 09:15:50 -耗时 : 0
2019-04-08 09:15:50 -返回值 : /moneyLog/waterLog/waterLog
2019-04-08 09:15:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:15:50 -HTTP METHOD : GET
2019-04-08 09:15:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:15:50 -参数 : [userType]
2019-04-08 09:15:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:15:50 -==> Parameters: userType(String)
2019-04-08 09:15:50 -<==      Total: 2
2019-04-08 09:15:50 -耗时 : 3
2019-04-08 09:15:50 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:15:50 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 09:15:50 -HTTP METHOD : GET
2019-04-08 09:15:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 09:15:50 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 09:15:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 09:15:50 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:15:50 -<==      Total: 5
2019-04-08 09:15:50 -==>  Preparing: select count(*) from water_log 
2019-04-08 09:15:50 -==> Parameters: 
2019-04-08 09:15:50 -<==      Total: 1
2019-04-08 09:15:50 -耗时 : 8
2019-04-08 09:15:50 -返回值 : com.bootdo.common.utils.PageUtils@66bb573b
2019-04-08 09:15:54 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:15:54 -HTTP METHOD : GET
2019-04-08 09:15:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:15:54 -参数 : []
2019-04-08 09:15:54 -耗时 : 0
2019-04-08 09:15:54 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:15:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:15:54 -HTTP METHOD : GET
2019-04-08 09:15:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:15:54 -参数 : [userType]
2019-04-08 09:15:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:15:54 -==> Parameters: userType(String)
2019-04-08 09:15:54 -<==      Total: 2
2019-04-08 09:15:54 -耗时 : 3
2019-04-08 09:15:54 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:15:54 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:15:54 -HTTP METHOD : GET
2019-04-08 09:15:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:15:54 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:15:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:15:54 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:15:54 -<==      Total: 5
2019-04-08 09:15:54 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:15:54 -==> Parameters: 
2019-04-08 09:15:54 -<==      Total: 1
2019-04-08 09:15:54 -耗时 : 5
2019-04-08 09:15:54 -返回值 : com.bootdo.common.utils.PageUtils@16c8e038
2019-04-08 09:15:55 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:15:55 -HTTP METHOD : GET
2019-04-08 09:15:55 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:15:55 -参数 : []
2019-04-08 09:15:55 -耗时 : 0
2019-04-08 09:15:55 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:15:56 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:15:56 -HTTP METHOD : GET
2019-04-08 09:15:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:15:56 -参数 : [userType]
2019-04-08 09:15:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:15:56 -==> Parameters: userType(String)
2019-04-08 09:15:56 -<==      Total: 2
2019-04-08 09:15:56 -耗时 : 3
2019-04-08 09:15:56 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:15:56 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:15:56 -HTTP METHOD : GET
2019-04-08 09:15:56 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:15:56 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:15:56 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:15:56 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:15:56 -<==      Total: 7
2019-04-08 09:15:56 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:15:56 -==> Parameters: 
2019-04-08 09:15:56 -<==      Total: 1
2019-04-08 09:15:56 -耗时 : 6
2019-04-08 09:15:56 -返回值 : com.bootdo.common.utils.PageUtils@6d663654
2019-04-08 09:15:57 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-08 09:15:57 -HTTP METHOD : GET
2019-04-08 09:15:57 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-08 09:15:57 -参数 : []
2019-04-08 09:15:57 -耗时 : 1
2019-04-08 09:15:57 -返回值 : /moneyLog/waterLog/waterLog
2019-04-08 09:15:57 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:15:57 -HTTP METHOD : GET
2019-04-08 09:15:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:15:57 -参数 : [userType]
2019-04-08 09:15:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:15:57 -==> Parameters: userType(String)
2019-04-08 09:15:57 -<==      Total: 2
2019-04-08 09:15:57 -耗时 : 4
2019-04-08 09:15:57 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:15:57 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 09:15:57 -HTTP METHOD : GET
2019-04-08 09:15:57 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 09:15:57 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 09:15:57 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 09:15:57 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:15:57 -<==      Total: 5
2019-04-08 09:15:57 -==>  Preparing: select count(*) from water_log 
2019-04-08 09:15:57 -==> Parameters: 
2019-04-08 09:15:57 -<==      Total: 1
2019-04-08 09:15:57 -耗时 : 4
2019-04-08 09:15:57 -返回值 : com.bootdo.common.utils.PageUtils@5a9f5504
2019-04-08 09:15:58 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:15:58 -HTTP METHOD : GET
2019-04-08 09:15:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:15:58 -参数 : []
2019-04-08 09:15:58 -耗时 : 0
2019-04-08 09:15:58 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:15:58 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:15:58 -HTTP METHOD : GET
2019-04-08 09:15:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:15:58 -参数 : [userType]
2019-04-08 09:15:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:15:58 -==> Parameters: userType(String)
2019-04-08 09:15:58 -<==      Total: 2
2019-04-08 09:15:58 -耗时 : 3
2019-04-08 09:15:58 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:15:58 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:15:58 -HTTP METHOD : GET
2019-04-08 09:15:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:15:58 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:15:58 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:15:58 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:15:58 -<==      Total: 5
2019-04-08 09:15:58 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:15:58 -==> Parameters: 
2019-04-08 09:15:58 -<==      Total: 1
2019-04-08 09:15:58 -耗时 : 6
2019-04-08 09:15:58 -返回值 : com.bootdo.common.utils.PageUtils@86507d9
2019-04-08 09:15:59 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:15:59 -HTTP METHOD : GET
2019-04-08 09:15:59 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:15:59 -参数 : []
2019-04-08 09:15:59 -耗时 : 1
2019-04-08 09:15:59 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:15:59 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:15:59 -HTTP METHOD : GET
2019-04-08 09:15:59 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:15:59 -参数 : [userType]
2019-04-08 09:15:59 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:15:59 -==> Parameters: userType(String)
2019-04-08 09:15:59 -<==      Total: 2
2019-04-08 09:15:59 -耗时 : 2
2019-04-08 09:15:59 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:15:59 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:15:59 -HTTP METHOD : GET
2019-04-08 09:15:59 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:15:59 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:15:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:15:59 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:15:59 -<==      Total: 7
2019-04-08 09:15:59 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:15:59 -==> Parameters: 
2019-04-08 09:15:59 -<==      Total: 1
2019-04-08 09:15:59 -耗时 : 5
2019-04-08 09:15:59 -返回值 : com.bootdo.common.utils.PageUtils@23157c2
2019-04-08 09:16:00 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-08 09:16:00 -HTTP METHOD : GET
2019-04-08 09:16:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-08 09:16:00 -参数 : []
2019-04-08 09:16:00 -耗时 : 1
2019-04-08 09:16:00 -返回值 : /moneyLog/waterLog/waterLog
2019-04-08 09:16:00 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:16:00 -HTTP METHOD : GET
2019-04-08 09:16:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:16:00 -参数 : [userType]
2019-04-08 09:16:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:16:00 -==> Parameters: userType(String)
2019-04-08 09:16:00 -<==      Total: 2
2019-04-08 09:16:00 -耗时 : 3
2019-04-08 09:16:00 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:16:00 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 09:16:00 -HTTP METHOD : GET
2019-04-08 09:16:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 09:16:00 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 09:16:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 09:16:00 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:16:00 -<==      Total: 5
2019-04-08 09:16:00 -==>  Preparing: select count(*) from water_log 
2019-04-08 09:16:00 -==> Parameters: 
2019-04-08 09:16:00 -<==      Total: 1
2019-04-08 09:16:00 -耗时 : 6
2019-04-08 09:16:00 -返回值 : com.bootdo.common.utils.PageUtils@6ec3b46e
2019-04-08 09:16:01 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:16:01 -HTTP METHOD : GET
2019-04-08 09:16:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:16:01 -参数 : []
2019-04-08 09:16:01 -耗时 : 0
2019-04-08 09:16:01 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:16:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:16:01 -HTTP METHOD : GET
2019-04-08 09:16:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:16:01 -参数 : [userType]
2019-04-08 09:16:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:16:01 -==> Parameters: userType(String)
2019-04-08 09:16:01 -<==      Total: 2
2019-04-08 09:16:01 -耗时 : 3
2019-04-08 09:16:01 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:16:01 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:16:01 -HTTP METHOD : GET
2019-04-08 09:16:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:16:01 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:16:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:16:01 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:16:01 -<==      Total: 5
2019-04-08 09:16:01 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:16:01 -==> Parameters: 
2019-04-08 09:16:01 -<==      Total: 1
2019-04-08 09:16:01 -耗时 : 6
2019-04-08 09:16:01 -返回值 : com.bootdo.common.utils.PageUtils@3704f7a9
2019-04-08 09:16:02 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:16:02 -HTTP METHOD : GET
2019-04-08 09:16:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:16:02 -参数 : []
2019-04-08 09:16:02 -耗时 : 0
2019-04-08 09:16:02 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:16:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:16:03 -HTTP METHOD : GET
2019-04-08 09:16:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:16:03 -参数 : [userType]
2019-04-08 09:16:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:16:03 -==> Parameters: userType(String)
2019-04-08 09:16:03 -<==      Total: 2
2019-04-08 09:16:03 -耗时 : 3
2019-04-08 09:16:03 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:16:03 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:16:03 -HTTP METHOD : GET
2019-04-08 09:16:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:16:03 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:16:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:16:03 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:16:03 -<==      Total: 7
2019-04-08 09:16:03 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:16:03 -==> Parameters: 
2019-04-08 09:16:03 -<==      Total: 1
2019-04-08 09:16:03 -耗时 : 6
2019-04-08 09:16:03 -返回值 : com.bootdo.common.utils.PageUtils@a0f7abb
2019-04-08 09:16:04 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-08 09:16:04 -HTTP METHOD : GET
2019-04-08 09:16:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-08 09:16:04 -参数 : []
2019-04-08 09:16:04 -耗时 : 1
2019-04-08 09:16:04 -返回值 : /moneyLog/waterLog/waterLog
2019-04-08 09:16:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:16:04 -HTTP METHOD : GET
2019-04-08 09:16:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:16:04 -参数 : [userType]
2019-04-08 09:16:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:16:04 -==> Parameters: userType(String)
2019-04-08 09:16:04 -<==      Total: 2
2019-04-08 09:16:04 -耗时 : 3
2019-04-08 09:16:04 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:16:04 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 09:16:04 -HTTP METHOD : GET
2019-04-08 09:16:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 09:16:04 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 09:16:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 09:16:04 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:16:04 -<==      Total: 5
2019-04-08 09:16:04 -==>  Preparing: select count(*) from water_log 
2019-04-08 09:16:04 -==> Parameters: 
2019-04-08 09:16:04 -<==      Total: 1
2019-04-08 09:16:04 -耗时 : 4
2019-04-08 09:16:04 -返回值 : com.bootdo.common.utils.PageUtils@1944715c
2019-04-08 09:16:05 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:16:05 -HTTP METHOD : GET
2019-04-08 09:16:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:16:05 -参数 : []
2019-04-08 09:16:05 -耗时 : 1
2019-04-08 09:16:05 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:16:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:16:05 -HTTP METHOD : GET
2019-04-08 09:16:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:16:05 -参数 : [userType]
2019-04-08 09:16:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:16:05 -==> Parameters: userType(String)
2019-04-08 09:16:05 -<==      Total: 2
2019-04-08 09:16:05 -耗时 : 3
2019-04-08 09:16:05 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:16:05 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:16:05 -HTTP METHOD : GET
2019-04-08 09:16:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:16:05 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:16:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:16:05 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:16:05 -<==      Total: 5
2019-04-08 09:16:05 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:16:05 -==> Parameters: 
2019-04-08 09:16:05 -<==      Total: 1
2019-04-08 09:16:05 -耗时 : 4
2019-04-08 09:16:05 -返回值 : com.bootdo.common.utils.PageUtils@548577f
2019-04-08 09:16:06 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:16:06 -HTTP METHOD : GET
2019-04-08 09:16:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:16:06 -参数 : []
2019-04-08 09:16:06 -耗时 : 1
2019-04-08 09:16:06 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:16:06 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:16:06 -HTTP METHOD : GET
2019-04-08 09:16:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:16:06 -参数 : [userType]
2019-04-08 09:16:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:16:06 -==> Parameters: userType(String)
2019-04-08 09:16:06 -<==      Total: 2
2019-04-08 09:16:06 -耗时 : 2
2019-04-08 09:16:06 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:16:06 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:16:06 -HTTP METHOD : GET
2019-04-08 09:16:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:16:06 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:16:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:16:06 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:16:06 -<==      Total: 5
2019-04-08 09:16:06 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:16:06 -==> Parameters: 
2019-04-08 09:16:06 -<==      Total: 1
2019-04-08 09:16:06 -耗时 : 5
2019-04-08 09:16:06 -返回值 : com.bootdo.common.utils.PageUtils@613dc883
2019-04-08 09:16:07 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:16:07 -HTTP METHOD : GET
2019-04-08 09:16:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:16:07 -参数 : []
2019-04-08 09:16:07 -耗时 : 1
2019-04-08 09:16:07 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:16:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:16:07 -HTTP METHOD : GET
2019-04-08 09:16:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:16:07 -参数 : [userType]
2019-04-08 09:16:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:16:07 -==> Parameters: userType(String)
2019-04-08 09:16:07 -<==      Total: 2
2019-04-08 09:16:07 -耗时 : 3
2019-04-08 09:16:07 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:16:07 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:16:07 -HTTP METHOD : GET
2019-04-08 09:16:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:16:07 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:16:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:16:07 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:16:07 -<==      Total: 5
2019-04-08 09:16:07 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:16:07 -==> Parameters: 
2019-04-08 09:16:07 -<==      Total: 1
2019-04-08 09:16:07 -耗时 : 5
2019-04-08 09:16:07 -返回值 : com.bootdo.common.utils.PageUtils@277d7659
2019-04-08 09:16:08 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:16:08 -HTTP METHOD : GET
2019-04-08 09:16:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:16:08 -参数 : []
2019-04-08 09:16:08 -耗时 : 0
2019-04-08 09:16:08 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:16:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:16:08 -HTTP METHOD : GET
2019-04-08 09:16:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:16:08 -参数 : [userType]
2019-04-08 09:16:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:16:08 -==> Parameters: userType(String)
2019-04-08 09:16:08 -<==      Total: 2
2019-04-08 09:16:08 -耗时 : 2
2019-04-08 09:16:08 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:16:08 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:16:08 -HTTP METHOD : GET
2019-04-08 09:16:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:16:08 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:16:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:16:08 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:16:08 -<==      Total: 5
2019-04-08 09:16:08 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:16:08 -==> Parameters: 
2019-04-08 09:16:08 -<==      Total: 1
2019-04-08 09:16:08 -耗时 : 5
2019-04-08 09:16:08 -返回值 : com.bootdo.common.utils.PageUtils@2a82f87b
2019-04-08 09:16:08 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:16:08 -HTTP METHOD : GET
2019-04-08 09:16:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:16:08 -参数 : []
2019-04-08 09:16:08 -耗时 : 1
2019-04-08 09:16:08 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:16:09 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:16:09 -HTTP METHOD : GET
2019-04-08 09:16:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:16:09 -参数 : [userType]
2019-04-08 09:16:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:16:09 -==> Parameters: userType(String)
2019-04-08 09:16:09 -<==      Total: 2
2019-04-08 09:16:09 -耗时 : 3
2019-04-08 09:16:09 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:16:09 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:16:09 -HTTP METHOD : GET
2019-04-08 09:16:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:16:09 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:16:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:16:09 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:16:09 -<==      Total: 5
2019-04-08 09:16:09 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:16:09 -==> Parameters: 
2019-04-08 09:16:09 -<==      Total: 1
2019-04-08 09:16:09 -耗时 : 5
2019-04-08 09:16:09 -返回值 : com.bootdo.common.utils.PageUtils@7257e9ef
2019-04-08 09:16:09 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:16:09 -HTTP METHOD : GET
2019-04-08 09:16:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:16:09 -参数 : []
2019-04-08 09:16:09 -耗时 : 1
2019-04-08 09:16:09 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:16:09 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:16:09 -HTTP METHOD : GET
2019-04-08 09:16:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:16:09 -参数 : [userType]
2019-04-08 09:16:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:16:09 -==> Parameters: userType(String)
2019-04-08 09:16:09 -<==      Total: 2
2019-04-08 09:16:09 -耗时 : 3
2019-04-08 09:16:09 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:16:09 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:16:09 -HTTP METHOD : GET
2019-04-08 09:16:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:16:09 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:16:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:16:09 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:16:09 -<==      Total: 5
2019-04-08 09:16:09 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:16:09 -==> Parameters: 
2019-04-08 09:16:09 -<==      Total: 1
2019-04-08 09:16:09 -耗时 : 4
2019-04-08 09:16:09 -返回值 : com.bootdo.common.utils.PageUtils@21a6c732
2019-04-08 09:16:10 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:16:10 -HTTP METHOD : GET
2019-04-08 09:16:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:16:10 -参数 : []
2019-04-08 09:16:10 -耗时 : 1
2019-04-08 09:16:10 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:16:10 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:16:10 -HTTP METHOD : GET
2019-04-08 09:16:10 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:16:10 -参数 : [userType]
2019-04-08 09:16:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:16:10 -==> Parameters: userType(String)
2019-04-08 09:16:10 -<==      Total: 2
2019-04-08 09:16:10 -耗时 : 2
2019-04-08 09:16:10 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:16:10 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:16:10 -HTTP METHOD : GET
2019-04-08 09:16:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:16:10 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:16:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:16:10 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:16:10 -<==      Total: 5
2019-04-08 09:16:10 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:16:10 -==> Parameters: 
2019-04-08 09:16:10 -<==      Total: 1
2019-04-08 09:16:10 -耗时 : 5
2019-04-08 09:16:10 -返回值 : com.bootdo.common.utils.PageUtils@42b76b59
2019-04-08 09:16:10 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:16:10 -HTTP METHOD : GET
2019-04-08 09:16:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:16:10 -参数 : []
2019-04-08 09:16:10 -耗时 : 0
2019-04-08 09:16:10 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:16:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:16:11 -HTTP METHOD : GET
2019-04-08 09:16:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:16:11 -参数 : [userType]
2019-04-08 09:16:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:16:11 -==> Parameters: userType(String)
2019-04-08 09:16:11 -<==      Total: 2
2019-04-08 09:16:11 -耗时 : 3
2019-04-08 09:16:11 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:16:11 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:16:11 -HTTP METHOD : GET
2019-04-08 09:16:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:16:11 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:16:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:16:11 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:16:11 -<==      Total: 5
2019-04-08 09:16:11 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:16:11 -==> Parameters: 
2019-04-08 09:16:11 -<==      Total: 1
2019-04-08 09:16:11 -耗时 : 4
2019-04-08 09:16:11 -返回值 : com.bootdo.common.utils.PageUtils@70bce81b
2019-04-08 09:16:11 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:16:11 -HTTP METHOD : GET
2019-04-08 09:16:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:16:11 -参数 : []
2019-04-08 09:16:11 -耗时 : 0
2019-04-08 09:16:11 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:16:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:16:11 -HTTP METHOD : GET
2019-04-08 09:16:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:16:11 -参数 : [userType]
2019-04-08 09:16:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:16:11 -==> Parameters: userType(String)
2019-04-08 09:16:11 -<==      Total: 2
2019-04-08 09:16:11 -耗时 : 2
2019-04-08 09:16:11 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:16:11 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:16:11 -HTTP METHOD : GET
2019-04-08 09:16:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:16:11 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:16:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:16:11 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:16:11 -<==      Total: 7
2019-04-08 09:16:11 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:16:11 -==> Parameters: 
2019-04-08 09:16:11 -<==      Total: 1
2019-04-08 09:16:11 -耗时 : 6
2019-04-08 09:16:11 -返回值 : com.bootdo.common.utils.PageUtils@3b766376
2019-04-08 09:16:12 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-08 09:16:12 -HTTP METHOD : GET
2019-04-08 09:16:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-08 09:16:12 -参数 : []
2019-04-08 09:16:12 -耗时 : 0
2019-04-08 09:16:12 -返回值 : /moneyLog/waterLog/waterLog
2019-04-08 09:16:12 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:16:12 -HTTP METHOD : GET
2019-04-08 09:16:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:16:12 -参数 : [userType]
2019-04-08 09:16:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:16:12 -==> Parameters: userType(String)
2019-04-08 09:16:12 -<==      Total: 2
2019-04-08 09:16:12 -耗时 : 3
2019-04-08 09:16:12 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:16:12 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 09:16:12 -HTTP METHOD : GET
2019-04-08 09:16:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 09:16:12 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 09:16:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 09:16:12 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:16:12 -<==      Total: 5
2019-04-08 09:16:12 -==>  Preparing: select count(*) from water_log 
2019-04-08 09:16:12 -==> Parameters: 
2019-04-08 09:16:12 -<==      Total: 1
2019-04-08 09:16:12 -耗时 : 5
2019-04-08 09:16:12 -返回值 : com.bootdo.common.utils.PageUtils@1641934a
2019-04-08 09:16:13 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:16:13 -HTTP METHOD : GET
2019-04-08 09:16:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:16:13 -参数 : []
2019-04-08 09:16:13 -耗时 : 0
2019-04-08 09:16:13 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:16:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:16:13 -HTTP METHOD : GET
2019-04-08 09:16:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:16:13 -参数 : [userType]
2019-04-08 09:16:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:16:13 -==> Parameters: userType(String)
2019-04-08 09:16:13 -<==      Total: 2
2019-04-08 09:16:13 -耗时 : 3
2019-04-08 09:16:13 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:16:13 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:16:13 -HTTP METHOD : GET
2019-04-08 09:16:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:16:13 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:16:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:16:13 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:16:13 -<==      Total: 5
2019-04-08 09:16:13 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:16:13 -==> Parameters: 
2019-04-08 09:16:13 -<==      Total: 1
2019-04-08 09:16:13 -耗时 : 4
2019-04-08 09:16:13 -返回值 : com.bootdo.common.utils.PageUtils@113c9f8e
2019-04-08 09:16:14 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:16:14 -HTTP METHOD : GET
2019-04-08 09:16:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:16:14 -参数 : []
2019-04-08 09:16:14 -耗时 : 0
2019-04-08 09:16:14 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:16:14 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:16:14 -HTTP METHOD : GET
2019-04-08 09:16:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:16:14 -参数 : [userType]
2019-04-08 09:16:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:16:14 -==> Parameters: userType(String)
2019-04-08 09:16:14 -<==      Total: 2
2019-04-08 09:16:14 -耗时 : 4
2019-04-08 09:16:14 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:16:14 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:16:14 -HTTP METHOD : GET
2019-04-08 09:16:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:16:14 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:16:14 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:16:14 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:16:14 -<==      Total: 7
2019-04-08 09:16:14 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:16:14 -==> Parameters: 
2019-04-08 09:16:14 -<==      Total: 1
2019-04-08 09:16:14 -耗时 : 6
2019-04-08 09:16:14 -返回值 : com.bootdo.common.utils.PageUtils@76b5a512
2019-04-08 09:16:15 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-08 09:16:15 -HTTP METHOD : GET
2019-04-08 09:16:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-08 09:16:15 -参数 : []
2019-04-08 09:16:15 -耗时 : 0
2019-04-08 09:16:15 -返回值 : /moneyLog/waterLog/waterLog
2019-04-08 09:16:16 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:16:16 -HTTP METHOD : GET
2019-04-08 09:16:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:16:16 -参数 : [userType]
2019-04-08 09:16:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:16:16 -==> Parameters: userType(String)
2019-04-08 09:16:16 -<==      Total: 2
2019-04-08 09:16:16 -耗时 : 4
2019-04-08 09:16:16 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:16:16 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 09:16:16 -HTTP METHOD : GET
2019-04-08 09:16:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 09:16:16 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 09:16:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 09:16:16 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:16:16 -<==      Total: 5
2019-04-08 09:16:16 -==>  Preparing: select count(*) from water_log 
2019-04-08 09:16:16 -==> Parameters: 
2019-04-08 09:16:16 -<==      Total: 1
2019-04-08 09:16:16 -耗时 : 6
2019-04-08 09:16:16 -返回值 : com.bootdo.common.utils.PageUtils@678cd535
2019-04-08 09:16:17 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:16:17 -HTTP METHOD : GET
2019-04-08 09:16:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:16:17 -参数 : []
2019-04-08 09:16:17 -耗时 : 1
2019-04-08 09:16:17 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:16:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:16:17 -HTTP METHOD : GET
2019-04-08 09:16:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:16:17 -参数 : [userType]
2019-04-08 09:16:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:16:17 -==> Parameters: userType(String)
2019-04-08 09:16:17 -<==      Total: 2
2019-04-08 09:16:17 -耗时 : 2
2019-04-08 09:16:17 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:16:17 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:16:17 -HTTP METHOD : GET
2019-04-08 09:16:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:16:17 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:16:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:16:17 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:16:17 -<==      Total: 5
2019-04-08 09:16:17 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:16:17 -==> Parameters: 
2019-04-08 09:16:17 -<==      Total: 1
2019-04-08 09:16:17 -耗时 : 5
2019-04-08 09:16:17 -返回值 : com.bootdo.common.utils.PageUtils@43695e4b
2019-04-08 09:16:17 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:16:17 -HTTP METHOD : GET
2019-04-08 09:16:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:16:17 -参数 : []
2019-04-08 09:16:17 -耗时 : 0
2019-04-08 09:16:17 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:16:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:16:18 -HTTP METHOD : GET
2019-04-08 09:16:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:16:18 -参数 : [userType]
2019-04-08 09:16:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:16:18 -==> Parameters: userType(String)
2019-04-08 09:16:18 -<==      Total: 2
2019-04-08 09:16:18 -耗时 : 2
2019-04-08 09:16:18 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:16:18 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:16:18 -HTTP METHOD : GET
2019-04-08 09:16:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:16:18 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:16:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:16:18 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:16:18 -<==      Total: 7
2019-04-08 09:16:18 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:16:18 -==> Parameters: 
2019-04-08 09:16:18 -<==      Total: 1
2019-04-08 09:16:18 -耗时 : 4
2019-04-08 09:16:18 -返回值 : com.bootdo.common.utils.PageUtils@25e72e7e
2019-04-08 09:16:18 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-08 09:16:18 -HTTP METHOD : GET
2019-04-08 09:16:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-08 09:16:18 -参数 : []
2019-04-08 09:16:18 -耗时 : 1
2019-04-08 09:16:18 -返回值 : /moneyLog/waterLog/waterLog
2019-04-08 09:16:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:16:18 -HTTP METHOD : GET
2019-04-08 09:16:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:16:18 -参数 : [userType]
2019-04-08 09:16:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:16:18 -==> Parameters: userType(String)
2019-04-08 09:16:18 -<==      Total: 2
2019-04-08 09:16:18 -耗时 : 2
2019-04-08 09:16:18 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:16:18 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 09:16:18 -HTTP METHOD : GET
2019-04-08 09:16:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 09:16:18 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 09:16:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 09:16:18 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:16:18 -<==      Total: 5
2019-04-08 09:16:18 -==>  Preparing: select count(*) from water_log 
2019-04-08 09:16:18 -==> Parameters: 
2019-04-08 09:16:18 -<==      Total: 1
2019-04-08 09:16:18 -耗时 : 5
2019-04-08 09:16:18 -返回值 : com.bootdo.common.utils.PageUtils@27eb5d98
2019-04-08 09:16:20 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:16:20 -HTTP METHOD : GET
2019-04-08 09:16:20 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:16:20 -参数 : []
2019-04-08 09:16:20 -耗时 : 0
2019-04-08 09:16:20 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:16:20 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:16:20 -HTTP METHOD : GET
2019-04-08 09:16:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:16:20 -参数 : [userType]
2019-04-08 09:16:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:16:20 -==> Parameters: userType(String)
2019-04-08 09:16:20 -<==      Total: 2
2019-04-08 09:16:20 -耗时 : 4
2019-04-08 09:16:20 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:16:20 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:16:20 -HTTP METHOD : GET
2019-04-08 09:16:20 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:16:20 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:16:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:16:20 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:16:20 -<==      Total: 5
2019-04-08 09:16:20 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:16:20 -==> Parameters: 
2019-04-08 09:16:20 -<==      Total: 1
2019-04-08 09:16:20 -耗时 : 5
2019-04-08 09:16:20 -返回值 : com.bootdo.common.utils.PageUtils@7dce3fb5
2019-04-08 09:16:21 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:16:21 -HTTP METHOD : GET
2019-04-08 09:16:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:16:21 -参数 : []
2019-04-08 09:16:21 -耗时 : 1
2019-04-08 09:16:21 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:16:21 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:16:21 -HTTP METHOD : GET
2019-04-08 09:16:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:16:21 -参数 : [userType]
2019-04-08 09:16:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:16:21 -==> Parameters: userType(String)
2019-04-08 09:16:21 -<==      Total: 2
2019-04-08 09:16:21 -耗时 : 4
2019-04-08 09:16:21 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:16:21 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:16:21 -HTTP METHOD : GET
2019-04-08 09:16:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:16:21 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:16:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:16:21 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:16:21 -<==      Total: 7
2019-04-08 09:16:21 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:16:21 -==> Parameters: 
2019-04-08 09:16:21 -<==      Total: 1
2019-04-08 09:16:21 -耗时 : 5
2019-04-08 09:16:21 -返回值 : com.bootdo.common.utils.PageUtils@4c0a0183
2019-04-08 09:16:22 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-08 09:16:22 -HTTP METHOD : GET
2019-04-08 09:16:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-08 09:16:22 -参数 : []
2019-04-08 09:16:22 -耗时 : 0
2019-04-08 09:16:22 -返回值 : /moneyLog/waterLog/waterLog
2019-04-08 09:16:22 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:16:22 -HTTP METHOD : GET
2019-04-08 09:16:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:16:22 -参数 : [userType]
2019-04-08 09:16:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:16:22 -==> Parameters: userType(String)
2019-04-08 09:16:22 -<==      Total: 2
2019-04-08 09:16:22 -耗时 : 3
2019-04-08 09:16:22 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:16:22 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 09:16:22 -HTTP METHOD : GET
2019-04-08 09:16:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 09:16:22 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 09:16:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 09:16:22 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:16:22 -<==      Total: 5
2019-04-08 09:16:22 -==>  Preparing: select count(*) from water_log 
2019-04-08 09:16:22 -==> Parameters: 
2019-04-08 09:16:22 -<==      Total: 1
2019-04-08 09:16:22 -耗时 : 4
2019-04-08 09:16:22 -返回值 : com.bootdo.common.utils.PageUtils@33b9fc73
2019-04-08 09:16:23 -请求地址 : http://localhost:8081/moneyLog/waterLog/add
2019-04-08 09:16:23 -HTTP METHOD : GET
2019-04-08 09:16:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.add
2019-04-08 09:16:23 -参数 : []
2019-04-08 09:16:23 -耗时 : 0
2019-04-08 09:16:23 -返回值 : moneyLog/waterLog/add
2019-04-08 09:16:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:16:24 -HTTP METHOD : GET
2019-04-08 09:16:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:16:24 -参数 : [userType]
2019-04-08 09:16:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:16:24 -==> Parameters: userType(String)
2019-04-08 09:16:24 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-08 09:16:24 -HTTP METHOD : GET
2019-04-08 09:16:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:16:24 -参数 : [waterType]
2019-04-08 09:16:24 -<==      Total: 2
2019-04-08 09:16:24 -耗时 : 3
2019-04-08 09:16:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:16:24 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:16:24 -==> Parameters: waterType(String)
2019-04-08 09:16:24 -<==      Total: 6
2019-04-08 09:16:24 -耗时 : 6
2019-04-08 09:16:24 -返回值 : [DictDO{id=132, name='特殊水费4', value='5', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=131, name='特殊水费3', value='4', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=130, name='特殊水费2', value='3', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=129, name='特殊水费1', value='2', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=128, name='民用水', value='1', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='0', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:17:44 -请求地址 : http://localhost:8081/index
2019-04-08 09:17:44 -HTTP METHOD : GET
2019-04-08 09:17:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 09:17:44 -参数 : [{}]
2019-04-08 09:17:44 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 09:17:44 -==> Parameters: 1(Long)
2019-04-08 09:17:44 -<==      Total: 46
2019-04-08 09:17:44 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 09:17:44 -==> Parameters: 138(Long)
2019-04-08 09:17:44 -<==      Total: 1
2019-04-08 09:17:44 -耗时 : 14
2019-04-08 09:17:44 -返回值 : index_v1
2019-04-08 09:17:44 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 09:17:44 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 14(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 09:17:44.186(Timestamp)
2019-04-08 09:17:44 -请求地址 : http://localhost:8081/main
2019-04-08 09:17:44 -HTTP METHOD : GET
2019-04-08 09:17:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 09:17:44 -参数 : []
2019-04-08 09:17:44 -耗时 : 0
2019-04-08 09:17:44 -返回值 : main
2019-04-08 09:17:44 -<==    Updates: 1
2019-04-08 09:17:44 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 09:17:44 -HTTP METHOD : GET
2019-04-08 09:17:44 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 09:17:44 -参数 : []
2019-04-08 09:17:44 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 09:17:44 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 09:17:44 -<==      Total: 0
2019-04-08 09:17:44 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 09:17:44 -==> Parameters: 1(Long), 0(String)
2019-04-08 09:17:44 -<==      Total: 1
2019-04-08 09:17:44 -耗时 : 4
2019-04-08 09:17:44 -返回值 : com.bootdo.common.utils.PageUtils@1ad207c5
2019-04-08 09:17:44 -请求地址 : http://localhost:8081/main
2019-04-08 09:17:44 -HTTP METHOD : GET
2019-04-08 09:17:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 09:17:44 -参数 : []
2019-04-08 09:17:44 -耗时 : 1
2019-04-08 09:17:44 -返回值 : main
2019-04-08 09:17:46 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:17:46 -HTTP METHOD : GET
2019-04-08 09:17:46 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:17:46 -参数 : []
2019-04-08 09:17:46 -耗时 : 2
2019-04-08 09:17:46 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:17:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:17:46 -HTTP METHOD : GET
2019-04-08 09:17:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:17:46 -参数 : [userType]
2019-04-08 09:17:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:17:46 -==> Parameters: userType(String)
2019-04-08 09:17:46 -<==      Total: 2
2019-04-08 09:17:46 -耗时 : 3
2019-04-08 09:17:46 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:17:46 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:17:46 -HTTP METHOD : GET
2019-04-08 09:17:46 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:17:46 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:17:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:17:46 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:17:46 -<==      Total: 7
2019-04-08 09:17:46 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:17:46 -==> Parameters: 
2019-04-08 09:17:46 -<==      Total: 1
2019-04-08 09:17:46 -耗时 : 6
2019-04-08 09:17:46 -返回值 : com.bootdo.common.utils.PageUtils@2761e267
2019-04-08 09:17:47 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-08 09:17:47 -HTTP METHOD : GET
2019-04-08 09:17:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-08 09:17:47 -参数 : []
2019-04-08 09:17:47 -耗时 : 2
2019-04-08 09:17:47 -返回值 : /moneyLog/waterLog/waterLog
2019-04-08 09:17:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:17:47 -HTTP METHOD : GET
2019-04-08 09:17:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:17:47 -参数 : [userType]
2019-04-08 09:17:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:17:47 -==> Parameters: userType(String)
2019-04-08 09:17:47 -<==      Total: 2
2019-04-08 09:17:47 -耗时 : 3
2019-04-08 09:17:47 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:17:48 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 09:17:48 -HTTP METHOD : GET
2019-04-08 09:17:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 09:17:48 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 09:17:48 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 09:17:48 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:17:48 -<==      Total: 5
2019-04-08 09:17:48 -==>  Preparing: select count(*) from water_log 
2019-04-08 09:17:48 -==> Parameters: 
2019-04-08 09:17:48 -<==      Total: 1
2019-04-08 09:17:48 -耗时 : 9
2019-04-08 09:17:48 -返回值 : com.bootdo.common.utils.PageUtils@688bb36c
2019-04-08 09:17:51 -请求地址 : http://localhost:8081/moneyLog/waterLog/add
2019-04-08 09:17:51 -HTTP METHOD : GET
2019-04-08 09:17:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.add
2019-04-08 09:17:51 -参数 : []
2019-04-08 09:17:51 -耗时 : 0
2019-04-08 09:17:51 -返回值 : moneyLog/waterLog/add
2019-04-08 09:17:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:17:51 -HTTP METHOD : GET
2019-04-08 09:17:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:17:51 -参数 : [userType]
2019-04-08 09:17:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:17:51 -==> Parameters: userType(String)
2019-04-08 09:17:51 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-08 09:17:51 -HTTP METHOD : GET
2019-04-08 09:17:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:17:51 -参数 : [waterType]
2019-04-08 09:17:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:17:51 -==> Parameters: waterType(String)
2019-04-08 09:17:51 -<==      Total: 2
2019-04-08 09:17:51 -耗时 : 4
2019-04-08 09:17:51 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:17:51 -<==      Total: 6
2019-04-08 09:17:51 -耗时 : 5
2019-04-08 09:17:51 -返回值 : [DictDO{id=132, name='特殊水费4', value='5', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=131, name='特殊水费3', value='4', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=130, name='特殊水费2', value='3', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=129, name='特殊水费1', value='2', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=128, name='民用水', value='1', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='0', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:18:09 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 09:18:09 -HTTP METHOD : GET
2019-04-08 09:18:09 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 09:18:09 -参数 : []
2019-04-08 09:18:09 -耗时 : 1
2019-04-08 09:18:09 -返回值 : system/dept/deptTree
2019-04-08 09:18:09 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 09:18:09 -HTTP METHOD : GET
2019-04-08 09:18:09 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 09:18:09 -参数 : []
2019-04-08 09:18:09 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 09:18:09 -==> Parameters: 
2019-04-08 09:18:09 -<==      Total: 3
2019-04-08 09:18:09 -耗时 : 3
2019-04-08 09:18:09 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 09:18:25 -请求地址 : http://localhost:8081/moneyLog/waterLog/save
2019-04-08 09:18:25 -HTTP METHOD : POST
2019-04-08 09:18:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.save
2019-04-08 09:18:25 -参数 : [com.bootdo.moneyLog.domain.WaterLogDO@75e1e792]
2019-04-08 09:18:25 -==>  Preparing: insert into water_log ( `user_id`, `user_name`, `user_type`, `user_org`, `water_type`, `water_money`, `water_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 09:18:25 -==> Parameters: 00000p(String), pppppppppp(String), A(String), 2(String), 1(String), 111(BigDecimal), 2019-04-08 00:00:00.0(Timestamp), 2019-04(String), 1(Long), 2019-04-08 09:18:25.804(Timestamp), 1(Long), 11111111(String)
2019-04-08 09:18:25 -<==    Updates: 1
2019-04-08 09:18:25 -耗时 : 125
2019-04-08 09:18:25 -返回值 : {msg=操作成功, code=0}
2019-04-08 09:18:25 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 09:18:25 -HTTP METHOD : GET
2019-04-08 09:18:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 09:18:25 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 09:18:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 09:18:25 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:18:25 -<==      Total: 6
2019-04-08 09:18:25 -==>  Preparing: select count(*) from water_log 
2019-04-08 09:18:25 -==> Parameters: 
2019-04-08 09:18:25 -<==      Total: 1
2019-04-08 09:18:25 -耗时 : 4
2019-04-08 09:18:25 -返回值 : com.bootdo.common.utils.PageUtils@38e9da3d
2019-04-08 09:18:54 -请求地址 : http://localhost:8081/moneyLog/waterLog/edit/7
2019-04-08 09:18:54 -HTTP METHOD : GET
2019-04-08 09:18:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.edit
2019-04-08 09:18:54 -参数 : [7, {}]
2019-04-08 09:18:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log where id = ? 
2019-04-08 09:18:54 -==> Parameters: 7(Long)
2019-04-08 09:18:54 -<==      Total: 1
2019-04-08 09:18:54 -耗时 : 2
2019-04-08 09:18:54 -返回值 : moneyLog/waterLog/edit
2019-04-08 09:18:55 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-08 09:18:55 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:18:55 -HTTP METHOD : GET
2019-04-08 09:18:55 -HTTP METHOD : GET
2019-04-08 09:18:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:18:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:18:55 -参数 : [userType]
2019-04-08 09:18:55 -参数 : [waterType]
2019-04-08 09:18:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:18:55 -==> Parameters: waterType(String)
2019-04-08 09:18:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:18:55 -==> Parameters: userType(String)
2019-04-08 09:18:55 -<==      Total: 6
2019-04-08 09:18:55 -耗时 : 5
2019-04-08 09:18:55 -返回值 : [DictDO{id=132, name='特殊水费4', value='5', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=131, name='特殊水费3', value='4', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=130, name='特殊水费2', value='3', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=129, name='特殊水费1', value='2', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=128, name='民用水', value='1', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='0', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:18:55 -<==      Total: 2
2019-04-08 09:18:55 -耗时 : 6
2019-04-08 09:18:55 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:18:58 -请求地址 : http://localhost:8081/moneyLog/waterLog/update
2019-04-08 09:18:58 -HTTP METHOD : POST
2019-04-08 09:18:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.update
2019-04-08 09:18:58 -参数 : [{id=7, userId=00000p, userName=pppppppppp, TuserType=A, userType=A, userOrg=2, userOrgName=五九, TwaterType=1, waterType=1, waterMoney=111.00, createTime=2019-04, waterDate=2019-04-08 00:00:00, remark=}, com.bootdo.moneyLog.domain.WaterLogDO@46038263]
2019-04-08 09:18:58 -==>  Preparing: update water_log SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `water_type` = ?, `water_money` = ?, `water_date` = ?, `create_time` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-04-08 09:18:58 -==> Parameters: 00000p(String), pppppppppp(String), A(String), 2(String), 1(String), 111.00(BigDecimal), 2019-04-08 00:00:00.0(Timestamp), 2019-04(String), 2019-04-08 09:18:58.007(Timestamp), 1(Long), (String), 7(Long)
2019-04-08 09:18:58 -<==    Updates: 1
2019-04-08 09:18:58 -耗时 : 106
2019-04-08 09:18:58 -返回值 : {msg=操作成功, code=0}
2019-04-08 09:18:58 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 09:18:58 -HTTP METHOD : GET
2019-04-08 09:18:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 09:18:58 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 09:18:58 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 09:18:58 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:18:58 -<==      Total: 6
2019-04-08 09:18:58 -==>  Preparing: select count(*) from water_log 
2019-04-08 09:18:58 -==> Parameters: 
2019-04-08 09:18:58 -<==      Total: 1
2019-04-08 09:18:58 -耗时 : 5
2019-04-08 09:18:58 -返回值 : com.bootdo.common.utils.PageUtils@4c279006
2019-04-08 09:19:01 -请求地址 : http://localhost:8081/moneyLog/waterLog/edit/7
2019-04-08 09:19:01 -HTTP METHOD : GET
2019-04-08 09:19:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.edit
2019-04-08 09:19:01 -参数 : [7, {}]
2019-04-08 09:19:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log where id = ? 
2019-04-08 09:19:01 -==> Parameters: 7(Long)
2019-04-08 09:19:01 -<==      Total: 1
2019-04-08 09:19:01 -耗时 : 3
2019-04-08 09:19:01 -返回值 : moneyLog/waterLog/edit
2019-04-08 09:19:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:19:01 -HTTP METHOD : GET
2019-04-08 09:19:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:19:01 -参数 : [userType]
2019-04-08 09:19:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:19:01 -==> Parameters: userType(String)
2019-04-08 09:19:01 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-08 09:19:01 -HTTP METHOD : GET
2019-04-08 09:19:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:19:01 -参数 : [waterType]
2019-04-08 09:19:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:19:01 -==> Parameters: waterType(String)
2019-04-08 09:19:01 -<==      Total: 6
2019-04-08 09:19:01 -<==      Total: 2
2019-04-08 09:19:01 -耗时 : 8
2019-04-08 09:19:01 -耗时 : 7
2019-04-08 09:19:01 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:19:01 -返回值 : [DictDO{id=132, name='特殊水费4', value='5', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=131, name='特殊水费3', value='4', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=130, name='特殊水费2', value='3', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=129, name='特殊水费1', value='2', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=128, name='民用水', value='1', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='0', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:19:35 -请求地址 : http://localhost:8081/moneyLog/waterLog/update
2019-04-08 09:19:35 -HTTP METHOD : POST
2019-04-08 09:19:35 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.update
2019-04-08 09:19:35 -参数 : [{id=7, userId=00000p, userName=ppp, TuserType=A, userType=A, userOrg=2, userOrgName=五九, TwaterType=1, waterType=1, waterMoney=1111111, createTime=2019-04, waterDate=2019-04-08 00:00:00, remark=}, com.bootdo.moneyLog.domain.WaterLogDO@4fcb43e5]
2019-04-08 09:19:35 -==>  Preparing: update water_log SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `water_type` = ?, `water_money` = ?, `water_date` = ?, `create_time` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-04-08 09:19:35 -==> Parameters: 00000p(String), ppp(String), A(String), 2(String), 1(String), 1111111(BigDecimal), 2019-04-08 00:00:00.0(Timestamp), 2019-04(String), 2019-04-08 09:19:35.309(Timestamp), 1(Long), (String), 7(Long)
2019-04-08 09:19:35 -<==    Updates: 1
2019-04-08 09:19:35 -耗时 : 110
2019-04-08 09:19:35 -返回值 : {msg=操作成功, code=0}
2019-04-08 09:19:35 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 09:19:35 -HTTP METHOD : GET
2019-04-08 09:19:35 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 09:19:35 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 09:19:35 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 09:19:35 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:19:35 -<==      Total: 6
2019-04-08 09:19:35 -==>  Preparing: select count(*) from water_log 
2019-04-08 09:19:35 -==> Parameters: 
2019-04-08 09:19:35 -<==      Total: 1
2019-04-08 09:19:35 -耗时 : 6
2019-04-08 09:19:35 -返回值 : com.bootdo.common.utils.PageUtils@4e08b913
2019-04-08 09:22:43 -请求地址 : http://localhost:8081/index
2019-04-08 09:22:43 -HTTP METHOD : GET
2019-04-08 09:22:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 09:22:43 -参数 : [{}]
2019-04-08 09:22:43 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 09:22:43 -==> Parameters: 1(Long)
2019-04-08 09:22:43 -<==      Total: 46
2019-04-08 09:22:43 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 09:22:43 -==> Parameters: 138(Long)
2019-04-08 09:22:43 -<==      Total: 1
2019-04-08 09:22:43 -耗时 : 18
2019-04-08 09:22:43 -返回值 : index_v1
2019-04-08 09:22:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 09:22:43 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 18(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 09:22:43.317(Timestamp)
2019-04-08 09:22:43 -<==    Updates: 1
2019-04-08 09:22:43 -请求地址 : http://localhost:8081/main
2019-04-08 09:22:43 -HTTP METHOD : GET
2019-04-08 09:22:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 09:22:43 -参数 : []
2019-04-08 09:22:43 -耗时 : 0
2019-04-08 09:22:43 -返回值 : main
2019-04-08 09:22:43 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 09:22:43 -HTTP METHOD : GET
2019-04-08 09:22:43 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 09:22:43 -参数 : []
2019-04-08 09:22:43 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 09:22:43 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 09:22:43 -<==      Total: 0
2019-04-08 09:22:43 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 09:22:43 -==> Parameters: 1(Long), 0(String)
2019-04-08 09:22:43 -<==      Total: 1
2019-04-08 09:22:43 -耗时 : 4
2019-04-08 09:22:43 -返回值 : com.bootdo.common.utils.PageUtils@3e7181cf
2019-04-08 09:22:43 -请求地址 : http://localhost:8081/main
2019-04-08 09:22:43 -HTTP METHOD : GET
2019-04-08 09:22:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 09:22:43 -参数 : []
2019-04-08 09:22:43 -耗时 : 0
2019-04-08 09:22:43 -返回值 : main
2019-04-08 09:22:45 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:22:45 -HTTP METHOD : GET
2019-04-08 09:22:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:22:45 -参数 : []
2019-04-08 09:22:45 -耗时 : 0
2019-04-08 09:22:45 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:22:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:22:45 -HTTP METHOD : GET
2019-04-08 09:22:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:22:45 -参数 : [userType]
2019-04-08 09:22:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:22:45 -==> Parameters: userType(String)
2019-04-08 09:22:45 -<==      Total: 2
2019-04-08 09:22:45 -耗时 : 4
2019-04-08 09:22:45 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:22:45 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:22:45 -HTTP METHOD : GET
2019-04-08 09:22:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:22:45 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:22:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:22:45 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:22:45 -<==      Total: 7
2019-04-08 09:22:45 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:22:45 -==> Parameters: 
2019-04-08 09:22:45 -<==      Total: 1
2019-04-08 09:22:45 -耗时 : 4
2019-04-08 09:22:45 -返回值 : com.bootdo.common.utils.PageUtils@7de54d45
2019-04-08 09:22:46 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-08 09:22:46 -HTTP METHOD : GET
2019-04-08 09:22:46 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-08 09:22:46 -参数 : []
2019-04-08 09:22:46 -耗时 : 1
2019-04-08 09:22:46 -返回值 : /moneyLog/waterLog/waterLog
2019-04-08 09:22:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:22:46 -HTTP METHOD : GET
2019-04-08 09:22:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:22:46 -参数 : [userType]
2019-04-08 09:22:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:22:46 -==> Parameters: userType(String)
2019-04-08 09:22:46 -<==      Total: 2
2019-04-08 09:22:46 -耗时 : 2
2019-04-08 09:22:46 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:22:46 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 09:22:46 -HTTP METHOD : GET
2019-04-08 09:22:46 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 09:22:46 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 09:22:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 09:22:46 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:22:46 -<==      Total: 6
2019-04-08 09:22:46 -==>  Preparing: select count(*) from water_log 
2019-04-08 09:22:46 -==> Parameters: 
2019-04-08 09:22:46 -<==      Total: 1
2019-04-08 09:22:46 -耗时 : 5
2019-04-08 09:22:46 -返回值 : com.bootdo.common.utils.PageUtils@6796654e
2019-04-08 09:22:49 -请求地址 : http://localhost:8081/moneyLog/waterLog/add
2019-04-08 09:22:49 -HTTP METHOD : GET
2019-04-08 09:22:49 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.add
2019-04-08 09:22:49 -参数 : []
2019-04-08 09:22:49 -耗时 : 1
2019-04-08 09:22:49 -返回值 : moneyLog/waterLog/add
2019-04-08 09:22:49 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:22:49 -HTTP METHOD : GET
2019-04-08 09:22:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:22:49 -参数 : [userType]
2019-04-08 09:22:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:22:49 -==> Parameters: userType(String)
2019-04-08 09:22:49 -<==      Total: 2
2019-04-08 09:22:49 -耗时 : 2
2019-04-08 09:22:49 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-08 09:22:49 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:22:49 -HTTP METHOD : GET
2019-04-08 09:22:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:22:49 -参数 : [waterType]
2019-04-08 09:22:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:22:49 -==> Parameters: waterType(String)
2019-04-08 09:22:49 -<==      Total: 6
2019-04-08 09:22:49 -耗时 : 4
2019-04-08 09:22:49 -返回值 : [DictDO{id=132, name='特殊水费4', value='5', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=131, name='特殊水费3', value='4', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=130, name='特殊水费2', value='3', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=129, name='特殊水费1', value='2', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=128, name='民用水', value='1', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='0', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:22:54 -请求地址 : http://localhost:8081/moneyLog/waterLog/edit/7
2019-04-08 09:22:54 -HTTP METHOD : GET
2019-04-08 09:22:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.edit
2019-04-08 09:22:54 -参数 : [7, {}]
2019-04-08 09:22:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log where id = ? 
2019-04-08 09:22:54 -==> Parameters: 7(Long)
2019-04-08 09:22:54 -<==      Total: 1
2019-04-08 09:22:54 -耗时 : 4
2019-04-08 09:22:54 -返回值 : moneyLog/waterLog/edit
2019-04-08 09:22:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:22:54 -请求地址 : http://localhost:8081/common/dict/list/waterType
2019-04-08 09:22:54 -HTTP METHOD : GET
2019-04-08 09:22:54 -HTTP METHOD : GET
2019-04-08 09:22:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:22:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:22:54 -参数 : [userType]
2019-04-08 09:22:54 -参数 : [waterType]
2019-04-08 09:22:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:22:54 -==> Parameters: userType(String)
2019-04-08 09:22:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:22:54 -==> Parameters: waterType(String)
2019-04-08 09:22:54 -<==      Total: 2
2019-04-08 09:22:54 -<==      Total: 6
2019-04-08 09:22:54 -耗时 : 3
2019-04-08 09:22:54 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:22:54 -耗时 : 3
2019-04-08 09:22:54 -返回值 : [DictDO{id=132, name='特殊水费4', value='5', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=131, name='特殊水费3', value='4', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=130, name='特殊水费2', value='3', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=129, name='特殊水费1', value='2', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=128, name='民用水', value='1', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=127, name='商业水', value='0', type='waterType', description='用水性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:23:14 -请求地址 : http://localhost:8081/moneyLog/waterLog/update
2019-04-08 09:23:14 -HTTP METHOD : POST
2019-04-08 09:23:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.update
2019-04-08 09:23:14 -参数 : [{id=7, userId=00000p, userName=ppp, TuserType=A, userType=A, userOrg=2, userOrgName=五九, TwaterType=1, waterType=1, waterMoney=111, createTime=2019-04, waterDate=2019-08-08 00:00:00, remark=}, com.bootdo.moneyLog.domain.WaterLogDO@6bf4799d]
2019-04-08 09:23:14 -==>  Preparing: update water_log SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `water_type` = ?, `water_money` = ?, `water_date` = ?, `create_time` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-04-08 09:23:14 -==> Parameters: 00000p(String), ppp(String), A(String), 2(String), 1(String), 111(BigDecimal), 2019-08-08 00:00:00.0(Timestamp), 2019-04(String), 2019-04-08 09:23:14.849(Timestamp), 1(Long), (String), 7(Long)
2019-04-08 09:23:15 -<==    Updates: 1
2019-04-08 09:23:15 -耗时 : 154
2019-04-08 09:23:15 -返回值 : {msg=操作成功, code=0}
2019-04-08 09:23:15 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 09:23:15 -HTTP METHOD : GET
2019-04-08 09:23:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 09:23:15 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 09:23:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 09:23:15 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:23:15 -<==      Total: 6
2019-04-08 09:23:15 -==>  Preparing: select count(*) from water_log 
2019-04-08 09:23:15 -==> Parameters: 
2019-04-08 09:23:15 -<==      Total: 1
2019-04-08 09:23:15 -耗时 : 8
2019-04-08 09:23:15 -返回值 : com.bootdo.common.utils.PageUtils@40b4d4aa
2019-04-08 09:23:32 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:23:32 -HTTP METHOD : GET
2019-04-08 09:23:32 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:23:32 -参数 : []
2019-04-08 09:23:32 -耗时 : 0
2019-04-08 09:23:32 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:23:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:23:32 -HTTP METHOD : GET
2019-04-08 09:23:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:23:32 -参数 : [userType]
2019-04-08 09:23:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:23:32 -==> Parameters: userType(String)
2019-04-08 09:23:32 -<==      Total: 2
2019-04-08 09:23:32 -耗时 : 4
2019-04-08 09:23:32 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:23:32 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:23:32 -HTTP METHOD : GET
2019-04-08 09:23:32 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:23:32 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:23:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:23:32 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:23:32 -<==      Total: 5
2019-04-08 09:23:32 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:23:32 -==> Parameters: 
2019-04-08 09:23:32 -<==      Total: 1
2019-04-08 09:23:32 -耗时 : 5
2019-04-08 09:23:32 -返回值 : com.bootdo.common.utils.PageUtils@3d374989
2019-04-08 09:23:35 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:23:35 -HTTP METHOD : GET
2019-04-08 09:23:35 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:23:35 -参数 : []
2019-04-08 09:23:35 -耗时 : 0
2019-04-08 09:23:35 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:23:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:23:35 -HTTP METHOD : GET
2019-04-08 09:23:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:23:35 -参数 : [userType]
2019-04-08 09:23:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:23:35 -==> Parameters: userType(String)
2019-04-08 09:23:35 -<==      Total: 2
2019-04-08 09:23:35 -耗时 : 3
2019-04-08 09:23:35 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:23:35 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:23:35 -HTTP METHOD : GET
2019-04-08 09:23:35 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:23:35 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:23:35 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:23:35 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:23:35 -<==      Total: 7
2019-04-08 09:23:35 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:23:35 -==> Parameters: 
2019-04-08 09:23:35 -<==      Total: 1
2019-04-08 09:23:35 -耗时 : 5
2019-04-08 09:23:35 -返回值 : com.bootdo.common.utils.PageUtils@74e54948
2019-04-08 09:23:36 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:23:36 -HTTP METHOD : GET
2019-04-08 09:23:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:23:36 -参数 : []
2019-04-08 09:23:36 -耗时 : 0
2019-04-08 09:23:36 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:23:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:23:36 -HTTP METHOD : GET
2019-04-08 09:23:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:23:36 -参数 : [userType]
2019-04-08 09:23:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:23:36 -==> Parameters: userType(String)
2019-04-08 09:23:36 -<==      Total: 2
2019-04-08 09:23:36 -耗时 : 3
2019-04-08 09:23:36 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:23:36 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:23:36 -HTTP METHOD : GET
2019-04-08 09:23:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:23:36 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:23:36 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:23:36 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:23:36 -<==      Total: 5
2019-04-08 09:23:36 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:23:36 -==> Parameters: 
2019-04-08 09:23:36 -<==      Total: 1
2019-04-08 09:23:36 -耗时 : 5
2019-04-08 09:23:36 -返回值 : com.bootdo.common.utils.PageUtils@5d37335e
2019-04-08 09:23:36 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:23:36 -HTTP METHOD : GET
2019-04-08 09:23:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:23:36 -参数 : []
2019-04-08 09:23:36 -耗时 : 1
2019-04-08 09:23:36 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:23:37 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:23:37 -HTTP METHOD : GET
2019-04-08 09:23:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:23:37 -参数 : [userType]
2019-04-08 09:23:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:23:37 -==> Parameters: userType(String)
2019-04-08 09:23:37 -<==      Total: 2
2019-04-08 09:23:37 -耗时 : 3
2019-04-08 09:23:37 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:23:37 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:23:37 -HTTP METHOD : GET
2019-04-08 09:23:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:23:37 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:23:37 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:23:37 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:23:37 -<==      Total: 5
2019-04-08 09:23:37 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:23:37 -==> Parameters: 
2019-04-08 09:23:37 -<==      Total: 1
2019-04-08 09:23:37 -耗时 : 4
2019-04-08 09:23:37 -返回值 : com.bootdo.common.utils.PageUtils@7bc38c8b
2019-04-08 09:23:37 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:23:37 -HTTP METHOD : GET
2019-04-08 09:23:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:23:37 -参数 : []
2019-04-08 09:23:37 -耗时 : 0
2019-04-08 09:23:37 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:23:37 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:23:37 -HTTP METHOD : GET
2019-04-08 09:23:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:23:37 -参数 : [userType]
2019-04-08 09:23:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:23:37 -==> Parameters: userType(String)
2019-04-08 09:23:37 -<==      Total: 2
2019-04-08 09:23:37 -耗时 : 3
2019-04-08 09:23:37 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:23:37 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:23:37 -HTTP METHOD : GET
2019-04-08 09:23:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:23:37 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:23:37 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:23:37 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:23:37 -<==      Total: 5
2019-04-08 09:23:37 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:23:37 -==> Parameters: 
2019-04-08 09:23:37 -<==      Total: 1
2019-04-08 09:23:37 -耗时 : 4
2019-04-08 09:23:37 -返回值 : com.bootdo.common.utils.PageUtils@509b40fe
2019-04-08 09:23:38 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:23:38 -HTTP METHOD : GET
2019-04-08 09:23:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:23:38 -参数 : []
2019-04-08 09:23:38 -耗时 : 0
2019-04-08 09:23:38 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:23:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:23:38 -HTTP METHOD : GET
2019-04-08 09:23:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:23:38 -参数 : [userType]
2019-04-08 09:23:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:23:38 -==> Parameters: userType(String)
2019-04-08 09:23:38 -<==      Total: 2
2019-04-08 09:23:38 -耗时 : 2
2019-04-08 09:23:38 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:23:38 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:23:38 -HTTP METHOD : GET
2019-04-08 09:23:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:23:38 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:23:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:23:38 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:23:38 -<==      Total: 5
2019-04-08 09:23:38 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:23:38 -==> Parameters: 
2019-04-08 09:23:38 -<==      Total: 1
2019-04-08 09:23:38 -耗时 : 6
2019-04-08 09:23:38 -返回值 : com.bootdo.common.utils.PageUtils@401014f8
2019-04-08 09:23:39 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:23:39 -HTTP METHOD : GET
2019-04-08 09:23:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:23:39 -参数 : []
2019-04-08 09:23:39 -耗时 : 1
2019-04-08 09:23:39 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:23:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:23:39 -HTTP METHOD : GET
2019-04-08 09:23:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:23:39 -参数 : [userType]
2019-04-08 09:23:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:23:39 -==> Parameters: userType(String)
2019-04-08 09:23:39 -<==      Total: 2
2019-04-08 09:23:39 -耗时 : 3
2019-04-08 09:23:39 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:23:39 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:23:39 -HTTP METHOD : GET
2019-04-08 09:23:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:23:39 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:23:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:23:39 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:23:39 -<==      Total: 5
2019-04-08 09:23:39 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:23:39 -==> Parameters: 
2019-04-08 09:23:39 -<==      Total: 1
2019-04-08 09:23:39 -耗时 : 5
2019-04-08 09:23:39 -返回值 : com.bootdo.common.utils.PageUtils@fe42ef
2019-04-08 09:23:40 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:23:40 -HTTP METHOD : GET
2019-04-08 09:23:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:23:40 -参数 : []
2019-04-08 09:23:40 -耗时 : 0
2019-04-08 09:23:40 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:23:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:23:40 -HTTP METHOD : GET
2019-04-08 09:23:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:23:40 -参数 : [userType]
2019-04-08 09:23:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:23:40 -==> Parameters: userType(String)
2019-04-08 09:23:40 -<==      Total: 2
2019-04-08 09:23:40 -耗时 : 3
2019-04-08 09:23:40 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:23:40 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:23:40 -HTTP METHOD : GET
2019-04-08 09:23:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:23:40 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:23:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:23:40 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:23:40 -<==      Total: 7
2019-04-08 09:23:40 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:23:40 -==> Parameters: 
2019-04-08 09:23:40 -<==      Total: 1
2019-04-08 09:23:40 -耗时 : 6
2019-04-08 09:23:40 -返回值 : com.bootdo.common.utils.PageUtils@50154b64
2019-04-08 09:23:41 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-08 09:23:41 -HTTP METHOD : GET
2019-04-08 09:23:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-08 09:23:41 -参数 : []
2019-04-08 09:23:41 -耗时 : 1
2019-04-08 09:23:41 -返回值 : /moneyLog/waterLog/waterLog
2019-04-08 09:23:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:23:41 -HTTP METHOD : GET
2019-04-08 09:23:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:23:41 -参数 : [userType]
2019-04-08 09:23:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:23:41 -==> Parameters: userType(String)
2019-04-08 09:23:41 -<==      Total: 2
2019-04-08 09:23:41 -耗时 : 2
2019-04-08 09:23:41 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:23:41 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 09:23:41 -HTTP METHOD : GET
2019-04-08 09:23:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 09:23:41 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 09:23:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 09:23:41 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:23:41 -<==      Total: 6
2019-04-08 09:23:41 -==>  Preparing: select count(*) from water_log 
2019-04-08 09:23:41 -==> Parameters: 
2019-04-08 09:23:41 -<==      Total: 1
2019-04-08 09:23:41 -耗时 : 4
2019-04-08 09:23:41 -返回值 : com.bootdo.common.utils.PageUtils@2aa84849
2019-04-08 09:23:43 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:23:43 -HTTP METHOD : GET
2019-04-08 09:23:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:23:43 -参数 : []
2019-04-08 09:23:43 -耗时 : 0
2019-04-08 09:23:43 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:23:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:23:43 -HTTP METHOD : GET
2019-04-08 09:23:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:23:43 -参数 : [userType]
2019-04-08 09:23:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:23:43 -==> Parameters: userType(String)
2019-04-08 09:23:43 -<==      Total: 2
2019-04-08 09:23:43 -耗时 : 2
2019-04-08 09:23:43 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:23:43 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:23:43 -HTTP METHOD : GET
2019-04-08 09:23:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:23:43 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:23:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:23:43 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:23:43 -<==      Total: 5
2019-04-08 09:23:43 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:23:43 -==> Parameters: 
2019-04-08 09:23:43 -<==      Total: 1
2019-04-08 09:23:43 -耗时 : 4
2019-04-08 09:23:43 -返回值 : com.bootdo.common.utils.PageUtils@55330f1e
2019-04-08 09:23:43 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:23:43 -HTTP METHOD : GET
2019-04-08 09:23:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:23:43 -参数 : []
2019-04-08 09:23:43 -耗时 : 0
2019-04-08 09:23:43 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:23:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:23:44 -HTTP METHOD : GET
2019-04-08 09:23:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:23:44 -参数 : [userType]
2019-04-08 09:23:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:23:44 -==> Parameters: userType(String)
2019-04-08 09:23:44 -<==      Total: 2
2019-04-08 09:23:44 -耗时 : 3
2019-04-08 09:23:44 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:23:44 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:23:44 -HTTP METHOD : GET
2019-04-08 09:23:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:23:44 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:23:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:23:44 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:23:44 -<==      Total: 7
2019-04-08 09:23:44 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:23:44 -==> Parameters: 
2019-04-08 09:23:44 -<==      Total: 1
2019-04-08 09:23:44 -耗时 : 6
2019-04-08 09:23:44 -返回值 : com.bootdo.common.utils.PageUtils@44f8fe0b
2019-04-08 09:23:45 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-08 09:23:45 -HTTP METHOD : GET
2019-04-08 09:23:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-08 09:23:45 -参数 : []
2019-04-08 09:23:45 -耗时 : 0
2019-04-08 09:23:45 -返回值 : /moneyLog/waterLog/waterLog
2019-04-08 09:23:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:23:45 -HTTP METHOD : GET
2019-04-08 09:23:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:23:45 -参数 : [userType]
2019-04-08 09:23:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:23:45 -==> Parameters: userType(String)
2019-04-08 09:23:45 -<==      Total: 2
2019-04-08 09:23:45 -耗时 : 2
2019-04-08 09:23:45 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:23:45 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 09:23:45 -HTTP METHOD : GET
2019-04-08 09:23:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 09:23:45 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 09:23:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 09:23:45 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:23:45 -<==      Total: 6
2019-04-08 09:23:45 -==>  Preparing: select count(*) from water_log 
2019-04-08 09:23:45 -==> Parameters: 
2019-04-08 09:23:45 -<==      Total: 1
2019-04-08 09:23:45 -耗时 : 4
2019-04-08 09:23:45 -返回值 : com.bootdo.common.utils.PageUtils@6c1944af
2019-04-08 09:23:47 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:23:47 -HTTP METHOD : GET
2019-04-08 09:23:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:23:47 -参数 : []
2019-04-08 09:23:47 -耗时 : 1
2019-04-08 09:23:47 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:23:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:23:47 -HTTP METHOD : GET
2019-04-08 09:23:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:23:47 -参数 : [userType]
2019-04-08 09:23:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:23:47 -==> Parameters: userType(String)
2019-04-08 09:23:47 -<==      Total: 2
2019-04-08 09:23:47 -耗时 : 3
2019-04-08 09:23:47 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:23:47 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:23:47 -HTTP METHOD : GET
2019-04-08 09:23:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:23:47 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:23:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:23:47 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:23:47 -<==      Total: 5
2019-04-08 09:23:47 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:23:47 -==> Parameters: 
2019-04-08 09:23:47 -<==      Total: 1
2019-04-08 09:23:47 -耗时 : 4
2019-04-08 09:23:47 -返回值 : com.bootdo.common.utils.PageUtils@2a6fe7a1
2019-04-08 09:23:48 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:23:48 -HTTP METHOD : GET
2019-04-08 09:23:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:23:48 -参数 : []
2019-04-08 09:23:48 -耗时 : 0
2019-04-08 09:23:48 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:23:48 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:23:48 -HTTP METHOD : GET
2019-04-08 09:23:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:23:48 -参数 : [userType]
2019-04-08 09:23:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:23:48 -==> Parameters: userType(String)
2019-04-08 09:23:48 -<==      Total: 2
2019-04-08 09:23:48 -耗时 : 2
2019-04-08 09:23:48 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:23:48 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:23:48 -HTTP METHOD : GET
2019-04-08 09:23:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:23:48 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:23:48 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:23:48 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:23:48 -<==      Total: 7
2019-04-08 09:23:48 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:23:48 -==> Parameters: 
2019-04-08 09:23:48 -<==      Total: 1
2019-04-08 09:23:48 -耗时 : 4
2019-04-08 09:23:48 -返回值 : com.bootdo.common.utils.PageUtils@6ea85f11
2019-04-08 09:23:49 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-08 09:23:49 -HTTP METHOD : GET
2019-04-08 09:23:49 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-08 09:23:49 -参数 : []
2019-04-08 09:23:49 -耗时 : 0
2019-04-08 09:23:49 -返回值 : /moneyLog/waterLog/waterLog
2019-04-08 09:23:49 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:23:49 -HTTP METHOD : GET
2019-04-08 09:23:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:23:49 -参数 : [userType]
2019-04-08 09:23:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:23:49 -==> Parameters: userType(String)
2019-04-08 09:23:49 -<==      Total: 2
2019-04-08 09:23:49 -耗时 : 3
2019-04-08 09:23:49 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:23:49 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 09:23:49 -HTTP METHOD : GET
2019-04-08 09:23:49 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 09:23:49 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 09:23:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 09:23:49 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:23:49 -<==      Total: 6
2019-04-08 09:23:49 -==>  Preparing: select count(*) from water_log 
2019-04-08 09:23:49 -==> Parameters: 
2019-04-08 09:23:49 -<==      Total: 1
2019-04-08 09:23:49 -耗时 : 4
2019-04-08 09:23:49 -返回值 : com.bootdo.common.utils.PageUtils@16e7d8ca
2019-04-08 09:23:50 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:23:50 -HTTP METHOD : GET
2019-04-08 09:23:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:23:50 -参数 : []
2019-04-08 09:23:50 -耗时 : 1
2019-04-08 09:23:50 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:23:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:23:50 -HTTP METHOD : GET
2019-04-08 09:23:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:23:50 -参数 : [userType]
2019-04-08 09:23:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:23:50 -==> Parameters: userType(String)
2019-04-08 09:23:50 -<==      Total: 2
2019-04-08 09:23:50 -耗时 : 3
2019-04-08 09:23:50 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:23:50 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:23:50 -HTTP METHOD : GET
2019-04-08 09:23:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:23:50 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:23:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:23:50 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:23:50 -<==      Total: 5
2019-04-08 09:23:50 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:23:50 -==> Parameters: 
2019-04-08 09:23:50 -<==      Total: 1
2019-04-08 09:23:50 -耗时 : 4
2019-04-08 09:23:50 -返回值 : com.bootdo.common.utils.PageUtils@1fe732ab
2019-04-08 09:23:51 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:23:51 -HTTP METHOD : GET
2019-04-08 09:23:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:23:51 -参数 : []
2019-04-08 09:23:51 -耗时 : 0
2019-04-08 09:23:51 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:23:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:23:51 -HTTP METHOD : GET
2019-04-08 09:23:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:23:51 -参数 : [userType]
2019-04-08 09:23:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:23:51 -==> Parameters: userType(String)
2019-04-08 09:23:51 -<==      Total: 2
2019-04-08 09:23:51 -耗时 : 3
2019-04-08 09:23:51 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:23:51 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:23:51 -HTTP METHOD : GET
2019-04-08 09:23:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:23:51 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:23:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:23:51 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:23:51 -<==      Total: 7
2019-04-08 09:23:51 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:23:51 -==> Parameters: 
2019-04-08 09:23:51 -<==      Total: 1
2019-04-08 09:23:51 -耗时 : 4
2019-04-08 09:23:51 -返回值 : com.bootdo.common.utils.PageUtils@297370f
2019-04-08 09:23:52 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-08 09:23:52 -HTTP METHOD : GET
2019-04-08 09:23:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-08 09:23:52 -参数 : []
2019-04-08 09:23:52 -耗时 : 0
2019-04-08 09:23:52 -返回值 : /moneyLog/waterLog/waterLog
2019-04-08 09:23:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:23:52 -HTTP METHOD : GET
2019-04-08 09:23:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:23:52 -参数 : [userType]
2019-04-08 09:23:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:23:52 -==> Parameters: userType(String)
2019-04-08 09:23:52 -<==      Total: 2
2019-04-08 09:23:52 -耗时 : 3
2019-04-08 09:23:52 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:23:52 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 09:23:52 -HTTP METHOD : GET
2019-04-08 09:23:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 09:23:52 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 09:23:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 09:23:52 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:23:52 -<==      Total: 6
2019-04-08 09:23:52 -==>  Preparing: select count(*) from water_log 
2019-04-08 09:23:52 -==> Parameters: 
2019-04-08 09:23:52 -<==      Total: 1
2019-04-08 09:23:52 -耗时 : 4
2019-04-08 09:23:52 -返回值 : com.bootdo.common.utils.PageUtils@56eecf44
2019-04-08 09:23:53 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:23:53 -HTTP METHOD : GET
2019-04-08 09:23:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:23:53 -参数 : []
2019-04-08 09:23:53 -耗时 : 1
2019-04-08 09:23:53 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:23:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:23:53 -HTTP METHOD : GET
2019-04-08 09:23:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:23:53 -参数 : [userType]
2019-04-08 09:23:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:23:53 -==> Parameters: userType(String)
2019-04-08 09:23:53 -<==      Total: 2
2019-04-08 09:23:53 -耗时 : 4
2019-04-08 09:23:53 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:23:53 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:23:53 -HTTP METHOD : GET
2019-04-08 09:23:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:23:53 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:23:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:23:53 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:23:53 -<==      Total: 5
2019-04-08 09:23:53 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:23:53 -==> Parameters: 
2019-04-08 09:23:53 -<==      Total: 1
2019-04-08 09:23:53 -耗时 : 5
2019-04-08 09:23:53 -返回值 : com.bootdo.common.utils.PageUtils@2ebc6da3
2019-04-08 09:23:54 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:23:54 -HTTP METHOD : GET
2019-04-08 09:23:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:23:54 -参数 : []
2019-04-08 09:23:54 -耗时 : 0
2019-04-08 09:23:54 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:23:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:23:54 -HTTP METHOD : GET
2019-04-08 09:23:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:23:54 -参数 : [userType]
2019-04-08 09:23:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:23:54 -==> Parameters: userType(String)
2019-04-08 09:23:54 -<==      Total: 2
2019-04-08 09:23:54 -耗时 : 2
2019-04-08 09:23:54 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:23:54 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:23:54 -HTTP METHOD : GET
2019-04-08 09:23:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:23:54 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:23:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:23:54 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:23:54 -<==      Total: 5
2019-04-08 09:23:54 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:23:54 -==> Parameters: 
2019-04-08 09:23:54 -<==      Total: 1
2019-04-08 09:23:54 -耗时 : 4
2019-04-08 09:23:54 -返回值 : com.bootdo.common.utils.PageUtils@4e1a097
2019-04-08 09:23:55 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:23:55 -HTTP METHOD : GET
2019-04-08 09:23:55 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:23:55 -参数 : []
2019-04-08 09:23:55 -耗时 : 0
2019-04-08 09:23:55 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:23:55 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:23:55 -HTTP METHOD : GET
2019-04-08 09:23:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:23:55 -参数 : [userType]
2019-04-08 09:23:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:23:55 -==> Parameters: userType(String)
2019-04-08 09:23:55 -<==      Total: 2
2019-04-08 09:23:55 -耗时 : 5
2019-04-08 09:23:55 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:23:55 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:23:55 -HTTP METHOD : GET
2019-04-08 09:23:55 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:23:55 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:23:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:23:55 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:23:55 -<==      Total: 5
2019-04-08 09:23:55 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:23:55 -==> Parameters: 
2019-04-08 09:23:55 -<==      Total: 1
2019-04-08 09:23:55 -耗时 : 5
2019-04-08 09:23:55 -返回值 : com.bootdo.common.utils.PageUtils@d27236a
2019-04-08 09:23:55 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:23:55 -HTTP METHOD : GET
2019-04-08 09:23:55 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:23:55 -参数 : []
2019-04-08 09:23:55 -耗时 : 0
2019-04-08 09:23:55 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:23:56 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:23:56 -HTTP METHOD : GET
2019-04-08 09:23:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:23:56 -参数 : [userType]
2019-04-08 09:23:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:23:56 -==> Parameters: userType(String)
2019-04-08 09:23:56 -<==      Total: 2
2019-04-08 09:23:56 -耗时 : 2
2019-04-08 09:23:56 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:23:56 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:23:56 -HTTP METHOD : GET
2019-04-08 09:23:56 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:23:56 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:23:56 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:23:56 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:23:56 -<==      Total: 5
2019-04-08 09:23:56 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:23:56 -==> Parameters: 
2019-04-08 09:23:56 -<==      Total: 1
2019-04-08 09:23:56 -耗时 : 5
2019-04-08 09:23:56 -返回值 : com.bootdo.common.utils.PageUtils@3d1ee70a
2019-04-08 09:23:56 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:23:56 -HTTP METHOD : GET
2019-04-08 09:23:56 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:23:56 -参数 : []
2019-04-08 09:23:56 -耗时 : 0
2019-04-08 09:23:56 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:23:56 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:23:56 -HTTP METHOD : GET
2019-04-08 09:23:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:23:56 -参数 : [userType]
2019-04-08 09:23:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:23:56 -==> Parameters: userType(String)
2019-04-08 09:23:56 -<==      Total: 2
2019-04-08 09:23:56 -耗时 : 3
2019-04-08 09:23:56 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:23:56 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:23:56 -HTTP METHOD : GET
2019-04-08 09:23:56 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:23:56 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:23:56 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:23:56 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:23:56 -<==      Total: 5
2019-04-08 09:23:56 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:23:56 -==> Parameters: 
2019-04-08 09:23:56 -<==      Total: 1
2019-04-08 09:23:56 -耗时 : 6
2019-04-08 09:23:56 -返回值 : com.bootdo.common.utils.PageUtils@4b70298c
2019-04-08 09:23:57 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:23:57 -HTTP METHOD : GET
2019-04-08 09:23:57 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:23:57 -参数 : []
2019-04-08 09:23:57 -耗时 : 1
2019-04-08 09:23:57 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:23:57 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:23:57 -HTTP METHOD : GET
2019-04-08 09:23:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:23:57 -参数 : [userType]
2019-04-08 09:23:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:23:57 -==> Parameters: userType(String)
2019-04-08 09:23:57 -<==      Total: 2
2019-04-08 09:23:57 -耗时 : 3
2019-04-08 09:23:57 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:23:57 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:23:57 -HTTP METHOD : GET
2019-04-08 09:23:57 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:23:57 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:23:57 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:23:57 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:23:57 -<==      Total: 7
2019-04-08 09:23:57 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:23:57 -==> Parameters: 
2019-04-08 09:23:57 -<==      Total: 1
2019-04-08 09:23:57 -耗时 : 6
2019-04-08 09:23:57 -返回值 : com.bootdo.common.utils.PageUtils@39e01784
2019-04-08 09:23:58 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:23:58 -HTTP METHOD : GET
2019-04-08 09:23:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:23:58 -参数 : []
2019-04-08 09:23:58 -耗时 : 1
2019-04-08 09:23:58 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:23:58 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:23:58 -HTTP METHOD : GET
2019-04-08 09:23:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:23:58 -参数 : [userType]
2019-04-08 09:23:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:23:58 -==> Parameters: userType(String)
2019-04-08 09:23:58 -<==      Total: 2
2019-04-08 09:23:58 -耗时 : 4
2019-04-08 09:23:58 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:23:58 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:23:58 -HTTP METHOD : GET
2019-04-08 09:23:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:23:58 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:23:58 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:23:58 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:23:58 -<==      Total: 5
2019-04-08 09:23:58 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:23:58 -==> Parameters: 
2019-04-08 09:23:58 -<==      Total: 1
2019-04-08 09:23:58 -耗时 : 4
2019-04-08 09:23:58 -返回值 : com.bootdo.common.utils.PageUtils@6cf47b0a
2019-04-08 09:23:59 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:23:59 -HTTP METHOD : GET
2019-04-08 09:23:59 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:23:59 -参数 : []
2019-04-08 09:23:59 -耗时 : 0
2019-04-08 09:23:59 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:23:59 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:23:59 -HTTP METHOD : GET
2019-04-08 09:23:59 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:23:59 -参数 : [userType]
2019-04-08 09:23:59 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:23:59 -==> Parameters: userType(String)
2019-04-08 09:23:59 -<==      Total: 2
2019-04-08 09:23:59 -耗时 : 2
2019-04-08 09:23:59 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:23:59 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:23:59 -HTTP METHOD : GET
2019-04-08 09:23:59 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:23:59 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:23:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:23:59 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:23:59 -<==      Total: 5
2019-04-08 09:23:59 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:23:59 -==> Parameters: 
2019-04-08 09:23:59 -<==      Total: 1
2019-04-08 09:23:59 -耗时 : 4
2019-04-08 09:23:59 -返回值 : com.bootdo.common.utils.PageUtils@6e51cd55
2019-04-08 09:24:00 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:24:00 -HTTP METHOD : GET
2019-04-08 09:24:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:24:00 -参数 : []
2019-04-08 09:24:00 -耗时 : 0
2019-04-08 09:24:00 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:24:00 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:24:00 -HTTP METHOD : GET
2019-04-08 09:24:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:24:00 -参数 : [userType]
2019-04-08 09:24:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:24:00 -==> Parameters: userType(String)
2019-04-08 09:24:00 -<==      Total: 2
2019-04-08 09:24:00 -耗时 : 2
2019-04-08 09:24:00 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:24:00 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:24:00 -HTTP METHOD : GET
2019-04-08 09:24:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:24:00 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:24:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:24:00 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:24:00 -<==      Total: 5
2019-04-08 09:24:00 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:24:00 -==> Parameters: 
2019-04-08 09:24:00 -<==      Total: 1
2019-04-08 09:24:00 -耗时 : 4
2019-04-08 09:24:00 -返回值 : com.bootdo.common.utils.PageUtils@5e36becd
2019-04-08 09:24:00 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:24:00 -HTTP METHOD : GET
2019-04-08 09:24:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:24:00 -参数 : []
2019-04-08 09:24:00 -耗时 : 0
2019-04-08 09:24:00 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:24:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:24:01 -HTTP METHOD : GET
2019-04-08 09:24:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:24:01 -参数 : [userType]
2019-04-08 09:24:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:24:01 -==> Parameters: userType(String)
2019-04-08 09:24:01 -<==      Total: 2
2019-04-08 09:24:01 -耗时 : 4
2019-04-08 09:24:01 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:24:01 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:24:01 -HTTP METHOD : GET
2019-04-08 09:24:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:24:01 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:24:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:24:01 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:24:01 -<==      Total: 5
2019-04-08 09:24:01 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:24:01 -==> Parameters: 
2019-04-08 09:24:01 -<==      Total: 1
2019-04-08 09:24:01 -耗时 : 4
2019-04-08 09:24:01 -返回值 : com.bootdo.common.utils.PageUtils@7fa36da8
2019-04-08 09:24:01 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:24:01 -HTTP METHOD : GET
2019-04-08 09:24:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:24:01 -参数 : []
2019-04-08 09:24:01 -耗时 : 0
2019-04-08 09:24:01 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:24:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:24:01 -HTTP METHOD : GET
2019-04-08 09:24:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:24:01 -参数 : [userType]
2019-04-08 09:24:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:24:01 -==> Parameters: userType(String)
2019-04-08 09:24:01 -<==      Total: 2
2019-04-08 09:24:01 -耗时 : 4
2019-04-08 09:24:01 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:24:01 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:24:01 -HTTP METHOD : GET
2019-04-08 09:24:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:24:01 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:24:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:24:01 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:24:01 -<==      Total: 5
2019-04-08 09:24:01 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:24:01 -==> Parameters: 
2019-04-08 09:24:01 -<==      Total: 1
2019-04-08 09:24:01 -耗时 : 4
2019-04-08 09:24:01 -返回值 : com.bootdo.common.utils.PageUtils@546c3796
2019-04-08 09:24:02 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:24:02 -HTTP METHOD : GET
2019-04-08 09:24:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:24:02 -参数 : []
2019-04-08 09:24:02 -耗时 : 1
2019-04-08 09:24:02 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:24:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:24:02 -HTTP METHOD : GET
2019-04-08 09:24:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:24:02 -参数 : [userType]
2019-04-08 09:24:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:24:02 -==> Parameters: userType(String)
2019-04-08 09:24:02 -<==      Total: 2
2019-04-08 09:24:02 -耗时 : 4
2019-04-08 09:24:02 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:24:02 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:24:02 -HTTP METHOD : GET
2019-04-08 09:24:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:24:02 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:24:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:24:02 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:24:02 -<==      Total: 5
2019-04-08 09:24:02 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:24:02 -==> Parameters: 
2019-04-08 09:24:02 -<==      Total: 1
2019-04-08 09:24:02 -耗时 : 4
2019-04-08 09:24:02 -返回值 : com.bootdo.common.utils.PageUtils@5dd4f79f
2019-04-08 09:24:03 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:24:03 -HTTP METHOD : GET
2019-04-08 09:24:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:24:03 -参数 : []
2019-04-08 09:24:03 -耗时 : 0
2019-04-08 09:24:03 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:24:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:24:03 -HTTP METHOD : GET
2019-04-08 09:24:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:24:03 -参数 : [userType]
2019-04-08 09:24:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:24:03 -==> Parameters: userType(String)
2019-04-08 09:24:03 -<==      Total: 2
2019-04-08 09:24:03 -耗时 : 2
2019-04-08 09:24:03 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:24:03 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:24:03 -HTTP METHOD : GET
2019-04-08 09:24:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:24:03 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:24:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:24:03 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:24:03 -<==      Total: 5
2019-04-08 09:24:03 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:24:03 -==> Parameters: 
2019-04-08 09:24:03 -<==      Total: 1
2019-04-08 09:24:03 -耗时 : 5
2019-04-08 09:24:03 -返回值 : com.bootdo.common.utils.PageUtils@2514b56
2019-04-08 09:24:03 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:24:03 -HTTP METHOD : GET
2019-04-08 09:24:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:24:03 -参数 : []
2019-04-08 09:24:03 -耗时 : 0
2019-04-08 09:24:03 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:24:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:24:04 -HTTP METHOD : GET
2019-04-08 09:24:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:24:04 -参数 : [userType]
2019-04-08 09:24:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:24:04 -==> Parameters: userType(String)
2019-04-08 09:24:04 -<==      Total: 2
2019-04-08 09:24:04 -耗时 : 2
2019-04-08 09:24:04 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:24:04 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:24:04 -HTTP METHOD : GET
2019-04-08 09:24:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:24:04 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:24:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:24:04 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:24:04 -<==      Total: 5
2019-04-08 09:24:04 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:24:04 -==> Parameters: 
2019-04-08 09:24:04 -<==      Total: 1
2019-04-08 09:24:04 -耗时 : 4
2019-04-08 09:24:04 -返回值 : com.bootdo.common.utils.PageUtils@10663a22
2019-04-08 09:24:04 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:24:04 -HTTP METHOD : GET
2019-04-08 09:24:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:24:04 -参数 : []
2019-04-08 09:24:04 -耗时 : 1
2019-04-08 09:24:04 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:24:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:24:04 -HTTP METHOD : GET
2019-04-08 09:24:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:24:04 -参数 : [userType]
2019-04-08 09:24:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:24:04 -==> Parameters: userType(String)
2019-04-08 09:24:04 -<==      Total: 2
2019-04-08 09:24:04 -耗时 : 3
2019-04-08 09:24:04 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:24:04 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:24:04 -HTTP METHOD : GET
2019-04-08 09:24:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:24:04 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:24:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:24:04 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:24:04 -<==      Total: 5
2019-04-08 09:24:04 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:24:04 -==> Parameters: 
2019-04-08 09:24:04 -<==      Total: 1
2019-04-08 09:24:04 -耗时 : 5
2019-04-08 09:24:04 -返回值 : com.bootdo.common.utils.PageUtils@4600608
2019-04-08 09:24:04 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:24:04 -HTTP METHOD : GET
2019-04-08 09:24:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:24:04 -参数 : []
2019-04-08 09:24:04 -耗时 : 0
2019-04-08 09:24:04 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:24:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:24:05 -HTTP METHOD : GET
2019-04-08 09:24:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:24:05 -参数 : [userType]
2019-04-08 09:24:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:24:05 -==> Parameters: userType(String)
2019-04-08 09:24:05 -<==      Total: 2
2019-04-08 09:24:05 -耗时 : 3
2019-04-08 09:24:05 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:24:05 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:24:05 -HTTP METHOD : GET
2019-04-08 09:24:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:24:05 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:24:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:24:05 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:24:05 -<==      Total: 5
2019-04-08 09:24:05 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:24:05 -==> Parameters: 
2019-04-08 09:24:05 -<==      Total: 1
2019-04-08 09:24:05 -耗时 : 4
2019-04-08 09:24:05 -返回值 : com.bootdo.common.utils.PageUtils@10cd6368
2019-04-08 09:24:05 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:24:05 -HTTP METHOD : GET
2019-04-08 09:24:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:24:05 -参数 : []
2019-04-08 09:24:05 -耗时 : 1
2019-04-08 09:24:05 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:24:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:24:05 -HTTP METHOD : GET
2019-04-08 09:24:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:24:05 -参数 : [userType]
2019-04-08 09:24:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:24:05 -==> Parameters: userType(String)
2019-04-08 09:24:05 -<==      Total: 2
2019-04-08 09:24:05 -耗时 : 3
2019-04-08 09:24:05 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:24:05 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:24:05 -HTTP METHOD : GET
2019-04-08 09:24:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:24:05 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:24:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:24:05 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:24:05 -<==      Total: 5
2019-04-08 09:24:05 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:24:05 -==> Parameters: 
2019-04-08 09:24:05 -<==      Total: 1
2019-04-08 09:24:05 -耗时 : 4
2019-04-08 09:24:05 -返回值 : com.bootdo.common.utils.PageUtils@25da079
2019-04-08 09:24:05 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:24:05 -HTTP METHOD : GET
2019-04-08 09:24:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:24:05 -参数 : []
2019-04-08 09:24:05 -耗时 : 0
2019-04-08 09:24:05 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:24:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:24:05 -HTTP METHOD : GET
2019-04-08 09:24:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:24:05 -参数 : [userType]
2019-04-08 09:24:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:24:05 -==> Parameters: userType(String)
2019-04-08 09:24:05 -<==      Total: 2
2019-04-08 09:24:05 -耗时 : 3
2019-04-08 09:24:05 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:24:05 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:24:05 -HTTP METHOD : GET
2019-04-08 09:24:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:24:05 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:24:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:24:05 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:24:05 -<==      Total: 5
2019-04-08 09:24:05 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:24:05 -==> Parameters: 
2019-04-08 09:24:05 -<==      Total: 1
2019-04-08 09:24:05 -耗时 : 4
2019-04-08 09:24:05 -返回值 : com.bootdo.common.utils.PageUtils@60842144
2019-04-08 09:24:05 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:24:05 -HTTP METHOD : GET
2019-04-08 09:24:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:24:05 -参数 : []
2019-04-08 09:24:05 -耗时 : 0
2019-04-08 09:24:05 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:24:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:24:05 -HTTP METHOD : GET
2019-04-08 09:24:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:24:05 -参数 : [userType]
2019-04-08 09:24:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:24:05 -==> Parameters: userType(String)
2019-04-08 09:24:05 -<==      Total: 2
2019-04-08 09:24:05 -耗时 : 3
2019-04-08 09:24:05 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:24:05 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:24:05 -HTTP METHOD : GET
2019-04-08 09:24:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:24:05 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:24:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:24:05 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:24:05 -<==      Total: 5
2019-04-08 09:24:05 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:24:05 -==> Parameters: 
2019-04-08 09:24:05 -<==      Total: 1
2019-04-08 09:24:05 -耗时 : 4
2019-04-08 09:24:05 -返回值 : com.bootdo.common.utils.PageUtils@2f2527dc
2019-04-08 09:24:06 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:24:06 -HTTP METHOD : GET
2019-04-08 09:24:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:24:06 -参数 : []
2019-04-08 09:24:06 -耗时 : 0
2019-04-08 09:24:06 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:24:06 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:24:06 -HTTP METHOD : GET
2019-04-08 09:24:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:24:06 -参数 : [userType]
2019-04-08 09:24:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:24:06 -==> Parameters: userType(String)
2019-04-08 09:24:06 -<==      Total: 2
2019-04-08 09:24:06 -耗时 : 2
2019-04-08 09:24:06 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:24:06 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:24:06 -HTTP METHOD : GET
2019-04-08 09:24:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:24:06 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:24:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:24:06 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:24:06 -<==      Total: 5
2019-04-08 09:24:06 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:24:06 -==> Parameters: 
2019-04-08 09:24:06 -<==      Total: 1
2019-04-08 09:24:06 -耗时 : 4
2019-04-08 09:24:06 -返回值 : com.bootdo.common.utils.PageUtils@73f08b96
2019-04-08 09:24:06 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:24:06 -HTTP METHOD : GET
2019-04-08 09:24:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:24:06 -参数 : []
2019-04-08 09:24:06 -耗时 : 0
2019-04-08 09:24:06 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:24:06 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:24:06 -HTTP METHOD : GET
2019-04-08 09:24:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:24:06 -参数 : [userType]
2019-04-08 09:24:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:24:06 -==> Parameters: userType(String)
2019-04-08 09:24:06 -<==      Total: 2
2019-04-08 09:24:06 -耗时 : 2
2019-04-08 09:24:06 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:24:06 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:24:06 -HTTP METHOD : GET
2019-04-08 09:24:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:24:06 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:24:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:24:06 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:24:06 -<==      Total: 5
2019-04-08 09:24:06 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:24:06 -==> Parameters: 
2019-04-08 09:24:06 -<==      Total: 1
2019-04-08 09:24:06 -耗时 : 4
2019-04-08 09:24:06 -返回值 : com.bootdo.common.utils.PageUtils@67474378
2019-04-08 09:24:07 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:24:07 -HTTP METHOD : GET
2019-04-08 09:24:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:24:07 -参数 : []
2019-04-08 09:24:07 -耗时 : 0
2019-04-08 09:24:07 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:24:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:24:07 -HTTP METHOD : GET
2019-04-08 09:24:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:24:07 -参数 : [userType]
2019-04-08 09:24:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:24:07 -==> Parameters: userType(String)
2019-04-08 09:24:07 -<==      Total: 2
2019-04-08 09:24:07 -耗时 : 3
2019-04-08 09:24:07 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:24:07 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:24:07 -HTTP METHOD : GET
2019-04-08 09:24:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:24:07 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:24:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:24:07 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:24:07 -<==      Total: 5
2019-04-08 09:24:07 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:24:07 -==> Parameters: 
2019-04-08 09:24:07 -<==      Total: 1
2019-04-08 09:24:07 -耗时 : 4
2019-04-08 09:24:07 -返回值 : com.bootdo.common.utils.PageUtils@15d33e47
2019-04-08 09:24:08 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:24:08 -HTTP METHOD : GET
2019-04-08 09:24:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:24:08 -参数 : []
2019-04-08 09:24:08 -耗时 : 1
2019-04-08 09:24:08 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:24:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:24:08 -HTTP METHOD : GET
2019-04-08 09:24:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:24:08 -参数 : [userType]
2019-04-08 09:24:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:24:08 -==> Parameters: userType(String)
2019-04-08 09:24:08 -<==      Total: 2
2019-04-08 09:24:08 -耗时 : 2
2019-04-08 09:24:08 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:24:08 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:24:08 -HTTP METHOD : GET
2019-04-08 09:24:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:24:08 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:24:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:24:08 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:24:08 -<==      Total: 7
2019-04-08 09:24:08 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:24:08 -==> Parameters: 
2019-04-08 09:24:08 -<==      Total: 1
2019-04-08 09:24:08 -耗时 : 4
2019-04-08 09:24:08 -返回值 : com.bootdo.common.utils.PageUtils@5b242f95
2019-04-08 09:24:08 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:24:08 -HTTP METHOD : GET
2019-04-08 09:24:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:24:08 -参数 : []
2019-04-08 09:24:08 -耗时 : 0
2019-04-08 09:24:08 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:24:09 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:24:09 -HTTP METHOD : GET
2019-04-08 09:24:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:24:09 -参数 : [userType]
2019-04-08 09:24:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:24:09 -==> Parameters: userType(String)
2019-04-08 09:24:09 -<==      Total: 2
2019-04-08 09:24:09 -耗时 : 2
2019-04-08 09:24:09 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:24:09 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:24:09 -HTTP METHOD : GET
2019-04-08 09:24:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:24:09 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:24:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:24:09 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:24:09 -<==      Total: 5
2019-04-08 09:24:09 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:24:09 -==> Parameters: 
2019-04-08 09:24:09 -<==      Total: 1
2019-04-08 09:24:09 -耗时 : 4
2019-04-08 09:24:09 -返回值 : com.bootdo.common.utils.PageUtils@6b60f4f8
2019-04-08 09:24:09 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:24:09 -HTTP METHOD : GET
2019-04-08 09:24:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:24:09 -参数 : []
2019-04-08 09:24:09 -耗时 : 0
2019-04-08 09:24:09 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:24:09 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:24:09 -HTTP METHOD : GET
2019-04-08 09:24:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:24:09 -参数 : [userType]
2019-04-08 09:24:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:24:09 -==> Parameters: userType(String)
2019-04-08 09:24:09 -<==      Total: 2
2019-04-08 09:24:09 -耗时 : 2
2019-04-08 09:24:09 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:24:09 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:24:09 -HTTP METHOD : GET
2019-04-08 09:24:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:24:09 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:24:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:24:09 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:24:10 -<==      Total: 7
2019-04-08 09:24:10 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:24:10 -==> Parameters: 
2019-04-08 09:24:10 -<==      Total: 1
2019-04-08 09:24:10 -耗时 : 6
2019-04-08 09:24:10 -返回值 : com.bootdo.common.utils.PageUtils@16ceb76a
2019-04-08 09:24:11 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-08 09:24:11 -HTTP METHOD : GET
2019-04-08 09:24:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-08 09:24:11 -参数 : []
2019-04-08 09:24:11 -耗时 : 0
2019-04-08 09:24:11 -返回值 : /moneyLog/waterLog/waterLog
2019-04-08 09:24:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:24:11 -HTTP METHOD : GET
2019-04-08 09:24:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:24:11 -参数 : [userType]
2019-04-08 09:24:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:24:11 -==> Parameters: userType(String)
2019-04-08 09:24:11 -<==      Total: 2
2019-04-08 09:24:11 -耗时 : 3
2019-04-08 09:24:11 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:24:11 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 09:24:11 -HTTP METHOD : GET
2019-04-08 09:24:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 09:24:11 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 09:24:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 09:24:11 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:24:11 -<==      Total: 6
2019-04-08 09:24:11 -==>  Preparing: select count(*) from water_log 
2019-04-08 09:24:11 -==> Parameters: 
2019-04-08 09:24:11 -<==      Total: 1
2019-04-08 09:24:11 -耗时 : 4
2019-04-08 09:24:11 -返回值 : com.bootdo.common.utils.PageUtils@20840574
2019-04-08 09:24:12 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:24:12 -HTTP METHOD : GET
2019-04-08 09:24:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:24:12 -参数 : []
2019-04-08 09:24:12 -耗时 : 0
2019-04-08 09:24:12 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:24:12 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:24:12 -HTTP METHOD : GET
2019-04-08 09:24:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:24:12 -参数 : [userType]
2019-04-08 09:24:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:24:12 -==> Parameters: userType(String)
2019-04-08 09:24:12 -<==      Total: 2
2019-04-08 09:24:12 -耗时 : 4
2019-04-08 09:24:12 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:24:12 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:24:12 -HTTP METHOD : GET
2019-04-08 09:24:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:24:12 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:24:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:24:12 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:24:12 -<==      Total: 7
2019-04-08 09:24:12 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:24:12 -==> Parameters: 
2019-04-08 09:24:12 -<==      Total: 1
2019-04-08 09:24:12 -耗时 : 7
2019-04-08 09:24:12 -返回值 : com.bootdo.common.utils.PageUtils@1f3211bb
2019-04-08 09:24:13 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:24:13 -HTTP METHOD : GET
2019-04-08 09:24:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:24:13 -参数 : []
2019-04-08 09:24:13 -耗时 : 1
2019-04-08 09:24:13 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:24:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:24:13 -HTTP METHOD : GET
2019-04-08 09:24:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:24:13 -参数 : [userType]
2019-04-08 09:24:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:24:13 -==> Parameters: userType(String)
2019-04-08 09:24:13 -<==      Total: 2
2019-04-08 09:24:13 -耗时 : 2
2019-04-08 09:24:13 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:24:13 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:24:13 -HTTP METHOD : GET
2019-04-08 09:24:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:24:13 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:24:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:24:13 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:24:13 -<==      Total: 5
2019-04-08 09:24:13 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:24:13 -==> Parameters: 
2019-04-08 09:24:13 -<==      Total: 1
2019-04-08 09:24:13 -耗时 : 5
2019-04-08 09:24:13 -返回值 : com.bootdo.common.utils.PageUtils@5b62c94c
2019-04-08 09:24:14 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:24:14 -HTTP METHOD : GET
2019-04-08 09:24:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:24:14 -参数 : []
2019-04-08 09:24:14 -耗时 : 1
2019-04-08 09:24:14 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:24:14 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:24:14 -HTTP METHOD : GET
2019-04-08 09:24:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:24:14 -参数 : [userType]
2019-04-08 09:24:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:24:14 -==> Parameters: userType(String)
2019-04-08 09:24:14 -<==      Total: 2
2019-04-08 09:24:14 -耗时 : 4
2019-04-08 09:24:14 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:24:14 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:24:14 -HTTP METHOD : GET
2019-04-08 09:24:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:24:14 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:24:14 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:24:14 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:24:14 -<==      Total: 7
2019-04-08 09:24:14 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:24:14 -==> Parameters: 
2019-04-08 09:24:14 -<==      Total: 1
2019-04-08 09:24:14 -耗时 : 7
2019-04-08 09:24:14 -返回值 : com.bootdo.common.utils.PageUtils@64d7ff07
2019-04-08 09:24:15 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-08 09:24:15 -HTTP METHOD : GET
2019-04-08 09:24:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-08 09:24:15 -参数 : []
2019-04-08 09:24:15 -耗时 : 1
2019-04-08 09:24:15 -返回值 : /moneyLog/waterLog/waterLog
2019-04-08 09:24:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:24:15 -HTTP METHOD : GET
2019-04-08 09:24:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:24:15 -参数 : [userType]
2019-04-08 09:24:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:24:15 -==> Parameters: userType(String)
2019-04-08 09:24:15 -<==      Total: 2
2019-04-08 09:24:15 -耗时 : 3
2019-04-08 09:24:15 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:24:15 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 09:24:15 -HTTP METHOD : GET
2019-04-08 09:24:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 09:24:15 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 09:24:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 09:24:15 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:24:15 -<==      Total: 6
2019-04-08 09:24:15 -==>  Preparing: select count(*) from water_log 
2019-04-08 09:24:15 -==> Parameters: 
2019-04-08 09:24:15 -<==      Total: 1
2019-04-08 09:24:15 -耗时 : 4
2019-04-08 09:24:15 -返回值 : com.bootdo.common.utils.PageUtils@1f818439
2019-04-08 09:24:16 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:24:16 -HTTP METHOD : GET
2019-04-08 09:24:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:24:16 -参数 : []
2019-04-08 09:24:16 -耗时 : 0
2019-04-08 09:24:16 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:24:16 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:24:16 -HTTP METHOD : GET
2019-04-08 09:24:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:24:16 -参数 : [userType]
2019-04-08 09:24:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:24:16 -==> Parameters: userType(String)
2019-04-08 09:24:16 -<==      Total: 2
2019-04-08 09:24:16 -耗时 : 3
2019-04-08 09:24:16 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:24:16 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:24:16 -HTTP METHOD : GET
2019-04-08 09:24:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:24:16 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:24:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:24:16 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:24:16 -<==      Total: 5
2019-04-08 09:24:16 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:24:16 -==> Parameters: 
2019-04-08 09:24:16 -<==      Total: 1
2019-04-08 09:24:16 -耗时 : 5
2019-04-08 09:24:16 -返回值 : com.bootdo.common.utils.PageUtils@665e1091
2019-04-08 09:24:16 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:24:16 -HTTP METHOD : GET
2019-04-08 09:24:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:24:16 -参数 : []
2019-04-08 09:24:16 -耗时 : 0
2019-04-08 09:24:16 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:24:16 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:24:16 -HTTP METHOD : GET
2019-04-08 09:24:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:24:16 -参数 : [userType]
2019-04-08 09:24:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:24:16 -==> Parameters: userType(String)
2019-04-08 09:24:16 -<==      Total: 2
2019-04-08 09:24:16 -耗时 : 3
2019-04-08 09:24:16 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:24:16 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:24:16 -HTTP METHOD : GET
2019-04-08 09:24:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:24:16 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:24:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:24:16 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:24:16 -<==      Total: 5
2019-04-08 09:24:16 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:24:16 -==> Parameters: 
2019-04-08 09:24:16 -<==      Total: 1
2019-04-08 09:24:16 -耗时 : 3
2019-04-08 09:24:16 -返回值 : com.bootdo.common.utils.PageUtils@3472611e
2019-04-08 09:24:16 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:24:16 -HTTP METHOD : GET
2019-04-08 09:24:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:24:16 -参数 : []
2019-04-08 09:24:16 -耗时 : 0
2019-04-08 09:24:16 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:24:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:24:17 -HTTP METHOD : GET
2019-04-08 09:24:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:24:17 -参数 : [userType]
2019-04-08 09:24:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:24:17 -==> Parameters: userType(String)
2019-04-08 09:24:17 -<==      Total: 2
2019-04-08 09:24:17 -耗时 : 2
2019-04-08 09:24:17 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:24:17 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:24:17 -HTTP METHOD : GET
2019-04-08 09:24:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:24:17 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:24:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:24:17 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:24:17 -<==      Total: 5
2019-04-08 09:24:17 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:24:17 -==> Parameters: 
2019-04-08 09:24:17 -<==      Total: 1
2019-04-08 09:24:17 -耗时 : 5
2019-04-08 09:24:17 -返回值 : com.bootdo.common.utils.PageUtils@58ff7c1d
2019-04-08 09:24:18 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:24:18 -HTTP METHOD : GET
2019-04-08 09:24:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:24:18 -参数 : []
2019-04-08 09:24:18 -耗时 : 0
2019-04-08 09:24:18 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:24:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:24:18 -HTTP METHOD : GET
2019-04-08 09:24:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:24:18 -参数 : [userType]
2019-04-08 09:24:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:24:18 -==> Parameters: userType(String)
2019-04-08 09:24:18 -<==      Total: 2
2019-04-08 09:24:18 -耗时 : 3
2019-04-08 09:24:18 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:24:18 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:24:18 -HTTP METHOD : GET
2019-04-08 09:24:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:24:18 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:24:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:24:18 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:24:18 -<==      Total: 5
2019-04-08 09:24:18 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:24:18 -==> Parameters: 
2019-04-08 09:24:18 -<==      Total: 1
2019-04-08 09:24:18 -耗时 : 4
2019-04-08 09:24:18 -返回值 : com.bootdo.common.utils.PageUtils@3b15772
2019-04-08 09:29:42 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-08 09:29:42 -==> Parameters: 1(Long)
2019-04-08 09:29:42 -<==      Total: 90
2019-04-08 09:29:42 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:29:42 -HTTP METHOD : GET
2019-04-08 09:29:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:29:42 -参数 : []
2019-04-08 09:29:42 -耗时 : 0
2019-04-08 09:29:42 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:29:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:29:43 -HTTP METHOD : GET
2019-04-08 09:29:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:29:43 -参数 : [userType]
2019-04-08 09:29:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:29:43 -==> Parameters: userType(String)
2019-04-08 09:29:43 -<==      Total: 2
2019-04-08 09:29:43 -耗时 : 3
2019-04-08 09:29:43 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:29:43 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:29:43 -HTTP METHOD : GET
2019-04-08 09:29:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:29:43 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:29:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:29:43 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:29:43 -<==      Total: 5
2019-04-08 09:29:43 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:29:43 -==> Parameters: 
2019-04-08 09:29:43 -<==      Total: 1
2019-04-08 09:29:43 -耗时 : 4
2019-04-08 09:29:43 -返回值 : com.bootdo.common.utils.PageUtils@2a37aa1b
2019-04-08 09:29:43 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:29:43 -HTTP METHOD : GET
2019-04-08 09:29:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:29:43 -参数 : []
2019-04-08 09:29:43 -耗时 : 1
2019-04-08 09:29:43 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:29:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:29:43 -HTTP METHOD : GET
2019-04-08 09:29:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:29:43 -参数 : [userType]
2019-04-08 09:29:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:29:43 -==> Parameters: userType(String)
2019-04-08 09:29:43 -<==      Total: 2
2019-04-08 09:29:43 -耗时 : 3
2019-04-08 09:29:43 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:29:43 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:29:43 -HTTP METHOD : GET
2019-04-08 09:29:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:29:43 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:29:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:29:43 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:29:43 -<==      Total: 5
2019-04-08 09:29:43 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:29:43 -==> Parameters: 
2019-04-08 09:29:43 -<==      Total: 1
2019-04-08 09:29:43 -耗时 : 4
2019-04-08 09:29:43 -返回值 : com.bootdo.common.utils.PageUtils@1e8a14bb
2019-04-08 09:29:44 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:29:44 -HTTP METHOD : GET
2019-04-08 09:29:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:29:44 -参数 : []
2019-04-08 09:29:44 -耗时 : 0
2019-04-08 09:29:44 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:29:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:29:44 -HTTP METHOD : GET
2019-04-08 09:29:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:29:44 -参数 : [userType]
2019-04-08 09:29:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:29:44 -==> Parameters: userType(String)
2019-04-08 09:29:44 -<==      Total: 2
2019-04-08 09:29:44 -耗时 : 2
2019-04-08 09:29:44 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:29:44 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:29:44 -HTTP METHOD : GET
2019-04-08 09:29:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:29:44 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:29:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:29:44 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:29:44 -<==      Total: 5
2019-04-08 09:29:44 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:29:44 -==> Parameters: 
2019-04-08 09:29:44 -<==      Total: 1
2019-04-08 09:29:44 -耗时 : 4
2019-04-08 09:29:44 -返回值 : com.bootdo.common.utils.PageUtils@48a766b5
2019-04-08 09:29:44 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:29:44 -HTTP METHOD : GET
2019-04-08 09:29:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:29:44 -参数 : []
2019-04-08 09:29:44 -耗时 : 0
2019-04-08 09:29:44 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:29:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:29:44 -HTTP METHOD : GET
2019-04-08 09:29:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:29:44 -参数 : [userType]
2019-04-08 09:29:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:29:44 -==> Parameters: userType(String)
2019-04-08 09:29:44 -<==      Total: 2
2019-04-08 09:29:44 -耗时 : 2
2019-04-08 09:29:44 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:29:44 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:29:44 -HTTP METHOD : GET
2019-04-08 09:29:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:29:44 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:29:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:29:44 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:29:44 -<==      Total: 5
2019-04-08 09:29:44 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:29:44 -==> Parameters: 
2019-04-08 09:29:44 -<==      Total: 1
2019-04-08 09:29:44 -耗时 : 5
2019-04-08 09:29:44 -返回值 : com.bootdo.common.utils.PageUtils@59474031
2019-04-08 09:29:45 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:29:45 -HTTP METHOD : GET
2019-04-08 09:29:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:29:45 -参数 : []
2019-04-08 09:29:45 -耗时 : 0
2019-04-08 09:29:45 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:29:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:29:45 -HTTP METHOD : GET
2019-04-08 09:29:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:29:45 -参数 : [userType]
2019-04-08 09:29:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:29:45 -==> Parameters: userType(String)
2019-04-08 09:29:45 -<==      Total: 2
2019-04-08 09:29:45 -耗时 : 2
2019-04-08 09:29:45 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:29:45 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:29:45 -HTTP METHOD : GET
2019-04-08 09:29:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:29:45 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:29:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:29:45 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:29:45 -<==      Total: 5
2019-04-08 09:29:45 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:29:45 -==> Parameters: 
2019-04-08 09:29:45 -<==      Total: 1
2019-04-08 09:29:45 -耗时 : 6
2019-04-08 09:29:45 -返回值 : com.bootdo.common.utils.PageUtils@30b86a8b
2019-04-08 09:29:46 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:29:46 -HTTP METHOD : GET
2019-04-08 09:29:46 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:29:46 -参数 : []
2019-04-08 09:29:46 -耗时 : 1
2019-04-08 09:29:46 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:29:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:29:46 -HTTP METHOD : GET
2019-04-08 09:29:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:29:46 -参数 : [userType]
2019-04-08 09:29:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:29:46 -==> Parameters: userType(String)
2019-04-08 09:29:46 -<==      Total: 2
2019-04-08 09:29:46 -耗时 : 2
2019-04-08 09:29:46 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:29:46 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:29:46 -HTTP METHOD : GET
2019-04-08 09:29:46 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:29:46 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:29:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:29:46 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:29:46 -<==      Total: 7
2019-04-08 09:29:46 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:29:46 -==> Parameters: 
2019-04-08 09:29:46 -<==      Total: 1
2019-04-08 09:29:46 -耗时 : 6
2019-04-08 09:29:46 -返回值 : com.bootdo.common.utils.PageUtils@6dd7c253
2019-04-08 09:29:47 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:29:47 -HTTP METHOD : GET
2019-04-08 09:29:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:29:47 -参数 : []
2019-04-08 09:29:47 -耗时 : 2
2019-04-08 09:29:47 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:29:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:29:47 -HTTP METHOD : GET
2019-04-08 09:29:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:29:47 -参数 : [userType]
2019-04-08 09:29:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:29:47 -==> Parameters: userType(String)
2019-04-08 09:29:47 -<==      Total: 2
2019-04-08 09:29:47 -耗时 : 3
2019-04-08 09:29:47 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:29:47 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:29:47 -HTTP METHOD : GET
2019-04-08 09:29:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:29:47 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:29:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:29:47 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:29:47 -<==      Total: 5
2019-04-08 09:29:47 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:29:47 -==> Parameters: 
2019-04-08 09:29:47 -<==      Total: 1
2019-04-08 09:29:47 -耗时 : 4
2019-04-08 09:29:47 -返回值 : com.bootdo.common.utils.PageUtils@64ab14df
2019-04-08 09:29:47 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:29:47 -HTTP METHOD : GET
2019-04-08 09:29:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:29:47 -参数 : []
2019-04-08 09:29:47 -耗时 : 0
2019-04-08 09:29:47 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:29:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:29:47 -HTTP METHOD : GET
2019-04-08 09:29:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:29:47 -参数 : [userType]
2019-04-08 09:29:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:29:47 -==> Parameters: userType(String)
2019-04-08 09:29:47 -<==      Total: 2
2019-04-08 09:29:47 -耗时 : 2
2019-04-08 09:29:47 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:29:47 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:29:47 -HTTP METHOD : GET
2019-04-08 09:29:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:29:47 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:29:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:29:47 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:29:47 -<==      Total: 5
2019-04-08 09:29:47 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:29:47 -==> Parameters: 
2019-04-08 09:29:48 -<==      Total: 1
2019-04-08 09:29:48 -耗时 : 4
2019-04-08 09:29:48 -返回值 : com.bootdo.common.utils.PageUtils@36c4e81c
2019-04-08 09:29:48 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:29:48 -HTTP METHOD : GET
2019-04-08 09:29:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:29:48 -参数 : []
2019-04-08 09:29:48 -耗时 : 0
2019-04-08 09:29:48 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:29:48 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:29:48 -HTTP METHOD : GET
2019-04-08 09:29:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:29:48 -参数 : [userType]
2019-04-08 09:29:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:29:48 -==> Parameters: userType(String)
2019-04-08 09:29:48 -<==      Total: 2
2019-04-08 09:29:48 -耗时 : 2
2019-04-08 09:29:48 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:29:48 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:29:48 -HTTP METHOD : GET
2019-04-08 09:29:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:29:48 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:29:48 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:29:48 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:29:48 -<==      Total: 7
2019-04-08 09:29:48 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:29:48 -==> Parameters: 
2019-04-08 09:29:48 -<==      Total: 1
2019-04-08 09:29:48 -耗时 : 3
2019-04-08 09:29:48 -返回值 : com.bootdo.common.utils.PageUtils@1a86ee57
2019-04-08 09:29:49 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:29:49 -HTTP METHOD : GET
2019-04-08 09:29:49 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:29:49 -参数 : []
2019-04-08 09:29:49 -耗时 : 0
2019-04-08 09:29:49 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:29:49 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:29:49 -HTTP METHOD : GET
2019-04-08 09:29:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:29:49 -参数 : [userType]
2019-04-08 09:29:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:29:49 -==> Parameters: userType(String)
2019-04-08 09:29:49 -<==      Total: 2
2019-04-08 09:29:49 -耗时 : 3
2019-04-08 09:29:49 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:29:49 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:29:49 -HTTP METHOD : GET
2019-04-08 09:29:49 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:29:49 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:29:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:29:49 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:29:49 -<==      Total: 5
2019-04-08 09:29:49 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:29:49 -==> Parameters: 
2019-04-08 09:29:49 -<==      Total: 1
2019-04-08 09:29:49 -耗时 : 6
2019-04-08 09:29:49 -返回值 : com.bootdo.common.utils.PageUtils@3d215874
2019-04-08 09:29:50 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:29:50 -HTTP METHOD : GET
2019-04-08 09:29:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:29:50 -参数 : []
2019-04-08 09:29:50 -耗时 : 0
2019-04-08 09:29:50 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:29:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:29:50 -HTTP METHOD : GET
2019-04-08 09:29:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:29:50 -参数 : [userType]
2019-04-08 09:29:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:29:50 -==> Parameters: userType(String)
2019-04-08 09:29:50 -<==      Total: 2
2019-04-08 09:29:50 -耗时 : 3
2019-04-08 09:29:50 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:29:50 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:29:50 -HTTP METHOD : GET
2019-04-08 09:29:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:29:50 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:29:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:29:50 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:29:50 -<==      Total: 5
2019-04-08 09:29:50 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:29:50 -==> Parameters: 
2019-04-08 09:29:50 -<==      Total: 1
2019-04-08 09:29:50 -耗时 : 3
2019-04-08 09:29:50 -返回值 : com.bootdo.common.utils.PageUtils@1c974de0
2019-04-08 09:29:50 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:29:50 -HTTP METHOD : GET
2019-04-08 09:29:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:29:50 -参数 : []
2019-04-08 09:29:50 -耗时 : 1
2019-04-08 09:29:50 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:29:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:29:50 -HTTP METHOD : GET
2019-04-08 09:29:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:29:50 -参数 : [userType]
2019-04-08 09:29:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:29:50 -==> Parameters: userType(String)
2019-04-08 09:29:50 -<==      Total: 2
2019-04-08 09:29:50 -耗时 : 2
2019-04-08 09:29:50 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:29:50 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:29:50 -HTTP METHOD : GET
2019-04-08 09:29:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:29:50 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:29:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:29:50 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:29:50 -<==      Total: 5
2019-04-08 09:29:50 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:29:50 -==> Parameters: 
2019-04-08 09:29:50 -<==      Total: 1
2019-04-08 09:29:50 -耗时 : 5
2019-04-08 09:29:50 -返回值 : com.bootdo.common.utils.PageUtils@49a5d213
2019-04-08 09:29:51 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:29:51 -HTTP METHOD : GET
2019-04-08 09:29:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:29:51 -参数 : []
2019-04-08 09:29:51 -耗时 : 0
2019-04-08 09:29:51 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:29:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:29:51 -HTTP METHOD : GET
2019-04-08 09:29:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:29:51 -参数 : [userType]
2019-04-08 09:29:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:29:51 -==> Parameters: userType(String)
2019-04-08 09:29:51 -<==      Total: 2
2019-04-08 09:29:51 -耗时 : 3
2019-04-08 09:29:51 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:29:51 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:29:51 -HTTP METHOD : GET
2019-04-08 09:29:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:29:51 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:29:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:29:51 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:29:51 -<==      Total: 7
2019-04-08 09:29:51 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:29:51 -==> Parameters: 
2019-04-08 09:29:51 -<==      Total: 1
2019-04-08 09:29:51 -耗时 : 4
2019-04-08 09:29:51 -返回值 : com.bootdo.common.utils.PageUtils@158de224
2019-04-08 09:29:51 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:29:51 -HTTP METHOD : GET
2019-04-08 09:29:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:29:51 -参数 : []
2019-04-08 09:29:51 -耗时 : 0
2019-04-08 09:29:51 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:29:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:29:52 -HTTP METHOD : GET
2019-04-08 09:29:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:29:52 -参数 : [userType]
2019-04-08 09:29:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:29:52 -==> Parameters: userType(String)
2019-04-08 09:29:52 -<==      Total: 2
2019-04-08 09:29:52 -耗时 : 2
2019-04-08 09:29:52 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:29:52 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:29:52 -HTTP METHOD : GET
2019-04-08 09:29:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:29:52 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:29:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:29:52 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:29:52 -<==      Total: 5
2019-04-08 09:29:52 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:29:52 -==> Parameters: 
2019-04-08 09:29:52 -<==      Total: 1
2019-04-08 09:29:52 -耗时 : 5
2019-04-08 09:29:52 -返回值 : com.bootdo.common.utils.PageUtils@1edc0b15
2019-04-08 09:29:52 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:29:52 -HTTP METHOD : GET
2019-04-08 09:29:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:29:52 -参数 : []
2019-04-08 09:29:52 -耗时 : 0
2019-04-08 09:29:52 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:29:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:29:52 -HTTP METHOD : GET
2019-04-08 09:29:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:29:52 -参数 : [userType]
2019-04-08 09:29:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:29:52 -==> Parameters: userType(String)
2019-04-08 09:29:52 -<==      Total: 2
2019-04-08 09:29:52 -耗时 : 3
2019-04-08 09:29:52 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:29:52 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:29:52 -HTTP METHOD : GET
2019-04-08 09:29:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:29:52 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:29:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:29:52 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:29:52 -<==      Total: 5
2019-04-08 09:29:52 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:29:52 -==> Parameters: 
2019-04-08 09:29:52 -<==      Total: 1
2019-04-08 09:29:52 -耗时 : 4
2019-04-08 09:29:52 -返回值 : com.bootdo.common.utils.PageUtils@798b8410
2019-04-08 09:29:52 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:29:52 -HTTP METHOD : GET
2019-04-08 09:29:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:29:52 -参数 : []
2019-04-08 09:29:52 -耗时 : 1
2019-04-08 09:29:52 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:29:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:29:52 -HTTP METHOD : GET
2019-04-08 09:29:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:29:52 -参数 : [userType]
2019-04-08 09:29:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:29:52 -==> Parameters: userType(String)
2019-04-08 09:29:52 -<==      Total: 2
2019-04-08 09:29:52 -耗时 : 2
2019-04-08 09:29:52 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:29:52 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:29:52 -HTTP METHOD : GET
2019-04-08 09:29:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:29:52 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:29:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:29:52 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:29:52 -<==      Total: 5
2019-04-08 09:29:52 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:29:52 -==> Parameters: 
2019-04-08 09:29:52 -<==      Total: 1
2019-04-08 09:29:52 -耗时 : 3
2019-04-08 09:29:52 -返回值 : com.bootdo.common.utils.PageUtils@7ef20b4b
2019-04-08 09:29:53 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:29:53 -HTTP METHOD : GET
2019-04-08 09:29:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:29:53 -参数 : []
2019-04-08 09:29:53 -耗时 : 0
2019-04-08 09:29:53 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:29:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:29:53 -HTTP METHOD : GET
2019-04-08 09:29:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:29:53 -参数 : [userType]
2019-04-08 09:29:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:29:53 -==> Parameters: userType(String)
2019-04-08 09:29:53 -<==      Total: 2
2019-04-08 09:29:53 -耗时 : 2
2019-04-08 09:29:53 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:29:53 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:29:53 -HTTP METHOD : GET
2019-04-08 09:29:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:29:53 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:29:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:29:53 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:29:53 -<==      Total: 7
2019-04-08 09:29:53 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:29:53 -==> Parameters: 
2019-04-08 09:29:53 -<==      Total: 1
2019-04-08 09:29:53 -耗时 : 4
2019-04-08 09:29:53 -返回值 : com.bootdo.common.utils.PageUtils@550a279e
2019-04-08 09:29:55 -请求地址 : http://localhost:8081/index
2019-04-08 09:29:55 -HTTP METHOD : GET
2019-04-08 09:29:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 09:29:55 -参数 : [{}]
2019-04-08 09:29:55 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 09:29:55 -==> Parameters: 1(Long)
2019-04-08 09:29:55 -<==      Total: 46
2019-04-08 09:29:55 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 09:29:55 -==> Parameters: 138(Long)
2019-04-08 09:29:55 -<==      Total: 1
2019-04-08 09:29:55 -耗时 : 11
2019-04-08 09:29:55 -返回值 : index_v1
2019-04-08 09:29:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 09:29:55 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 11(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 09:29:55.143(Timestamp)
2019-04-08 09:29:55 -<==    Updates: 1
2019-04-08 09:29:55 -请求地址 : http://localhost:8081/main
2019-04-08 09:29:55 -HTTP METHOD : GET
2019-04-08 09:29:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 09:29:55 -参数 : []
2019-04-08 09:29:55 -耗时 : 1
2019-04-08 09:29:55 -返回值 : main
2019-04-08 09:29:55 -请求地址 : http://localhost:8081/main
2019-04-08 09:29:55 -HTTP METHOD : GET
2019-04-08 09:29:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 09:29:55 -参数 : []
2019-04-08 09:29:55 -耗时 : 0
2019-04-08 09:29:55 -返回值 : main
2019-04-08 09:29:55 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 09:29:55 -HTTP METHOD : GET
2019-04-08 09:29:55 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 09:29:55 -参数 : []
2019-04-08 09:29:55 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 09:29:55 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 09:29:55 -<==      Total: 0
2019-04-08 09:29:55 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 09:29:55 -==> Parameters: 1(Long), 0(String)
2019-04-08 09:29:55 -<==      Total: 1
2019-04-08 09:29:55 -耗时 : 7
2019-04-08 09:29:55 -返回值 : com.bootdo.common.utils.PageUtils@5a2236ca
2019-04-08 09:29:57 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:29:57 -HTTP METHOD : GET
2019-04-08 09:29:57 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:29:57 -参数 : []
2019-04-08 09:29:57 -耗时 : 0
2019-04-08 09:29:57 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:29:57 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:29:57 -HTTP METHOD : GET
2019-04-08 09:29:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:29:57 -参数 : [userType]
2019-04-08 09:29:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:29:57 -==> Parameters: userType(String)
2019-04-08 09:29:57 -<==      Total: 2
2019-04-08 09:29:57 -耗时 : 2
2019-04-08 09:29:57 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:29:57 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:29:57 -HTTP METHOD : GET
2019-04-08 09:29:57 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:29:57 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:29:57 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:29:57 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:29:57 -<==      Total: 7
2019-04-08 09:29:57 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:29:57 -==> Parameters: 
2019-04-08 09:29:57 -<==      Total: 1
2019-04-08 09:29:57 -耗时 : 3
2019-04-08 09:29:57 -返回值 : com.bootdo.common.utils.PageUtils@6d7a0bfd
2019-04-08 09:29:58 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-08 09:29:58 -HTTP METHOD : GET
2019-04-08 09:29:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-08 09:29:58 -参数 : []
2019-04-08 09:29:58 -耗时 : 0
2019-04-08 09:29:58 -返回值 : /moneyLog/waterLog/waterLog
2019-04-08 09:29:58 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:29:58 -HTTP METHOD : GET
2019-04-08 09:29:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:29:58 -参数 : [userType]
2019-04-08 09:29:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:29:58 -==> Parameters: userType(String)
2019-04-08 09:29:58 -<==      Total: 2
2019-04-08 09:29:58 -耗时 : 2
2019-04-08 09:29:58 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:29:58 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 09:29:58 -HTTP METHOD : GET
2019-04-08 09:29:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 09:29:58 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 09:29:58 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 09:29:58 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:29:58 -<==      Total: 6
2019-04-08 09:29:58 -==>  Preparing: select count(*) from water_log 
2019-04-08 09:29:58 -==> Parameters: 
2019-04-08 09:29:58 -<==      Total: 1
2019-04-08 09:29:58 -耗时 : 4
2019-04-08 09:29:58 -返回值 : com.bootdo.common.utils.PageUtils@41e42c08
2019-04-08 09:29:59 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:29:59 -HTTP METHOD : GET
2019-04-08 09:29:59 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:29:59 -参数 : []
2019-04-08 09:29:59 -耗时 : 0
2019-04-08 09:29:59 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:29:59 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:29:59 -HTTP METHOD : GET
2019-04-08 09:29:59 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:29:59 -参数 : [userType]
2019-04-08 09:29:59 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:29:59 -==> Parameters: userType(String)
2019-04-08 09:29:59 -<==      Total: 2
2019-04-08 09:29:59 -耗时 : 3
2019-04-08 09:29:59 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:29:59 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:29:59 -HTTP METHOD : GET
2019-04-08 09:29:59 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:29:59 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:29:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:29:59 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:29:59 -<==      Total: 5
2019-04-08 09:29:59 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:29:59 -==> Parameters: 
2019-04-08 09:29:59 -<==      Total: 1
2019-04-08 09:29:59 -耗时 : 4
2019-04-08 09:29:59 -返回值 : com.bootdo.common.utils.PageUtils@4447ac27
2019-04-08 09:30:00 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:30:00 -HTTP METHOD : GET
2019-04-08 09:30:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:30:00 -参数 : []
2019-04-08 09:30:00 -耗时 : 0
2019-04-08 09:30:00 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:30:00 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:30:00 -HTTP METHOD : GET
2019-04-08 09:30:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:30:00 -参数 : [userType]
2019-04-08 09:30:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:30:00 -==> Parameters: userType(String)
2019-04-08 09:30:00 -<==      Total: 2
2019-04-08 09:30:00 -耗时 : 2
2019-04-08 09:30:00 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:30:00 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:30:00 -HTTP METHOD : GET
2019-04-08 09:30:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:30:00 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:30:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:30:00 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:30:00 -<==      Total: 7
2019-04-08 09:30:00 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:30:00 -==> Parameters: 
2019-04-08 09:30:00 -<==      Total: 1
2019-04-08 09:30:00 -耗时 : 4
2019-04-08 09:30:00 -返回值 : com.bootdo.common.utils.PageUtils@38b6767d
2019-04-08 09:30:02 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-08 09:30:02 -HTTP METHOD : GET
2019-04-08 09:30:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-08 09:30:02 -参数 : []
2019-04-08 09:30:02 -耗时 : 0
2019-04-08 09:30:02 -返回值 : /moneyLog/waterLog/waterLog
2019-04-08 09:30:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:30:02 -HTTP METHOD : GET
2019-04-08 09:30:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:30:02 -参数 : [userType]
2019-04-08 09:30:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:30:02 -==> Parameters: userType(String)
2019-04-08 09:30:02 -<==      Total: 2
2019-04-08 09:30:02 -耗时 : 3
2019-04-08 09:30:02 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:30:02 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 09:30:02 -HTTP METHOD : GET
2019-04-08 09:30:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 09:30:02 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 09:30:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 09:30:02 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:30:02 -<==      Total: 6
2019-04-08 09:30:02 -==>  Preparing: select count(*) from water_log 
2019-04-08 09:30:02 -==> Parameters: 
2019-04-08 09:30:02 -<==      Total: 1
2019-04-08 09:30:02 -耗时 : 4
2019-04-08 09:30:02 -返回值 : com.bootdo.common.utils.PageUtils@4362c68a
2019-04-08 09:30:04 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:30:04 -HTTP METHOD : GET
2019-04-08 09:30:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:30:04 -参数 : []
2019-04-08 09:30:04 -耗时 : 1
2019-04-08 09:30:04 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:30:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:30:04 -HTTP METHOD : GET
2019-04-08 09:30:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:30:04 -参数 : [userType]
2019-04-08 09:30:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:30:04 -==> Parameters: userType(String)
2019-04-08 09:30:04 -<==      Total: 2
2019-04-08 09:30:04 -耗时 : 4
2019-04-08 09:30:04 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:30:04 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:30:04 -HTTP METHOD : GET
2019-04-08 09:30:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:30:04 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:30:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:30:04 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:30:04 -<==      Total: 5
2019-04-08 09:30:04 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:30:04 -==> Parameters: 
2019-04-08 09:30:04 -<==      Total: 1
2019-04-08 09:30:04 -耗时 : 5
2019-04-08 09:30:04 -返回值 : com.bootdo.common.utils.PageUtils@7528dc86
2019-04-08 09:30:05 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:30:05 -HTTP METHOD : GET
2019-04-08 09:30:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:30:05 -参数 : []
2019-04-08 09:30:05 -耗时 : 1
2019-04-08 09:30:05 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:30:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:30:05 -HTTP METHOD : GET
2019-04-08 09:30:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:30:05 -参数 : [userType]
2019-04-08 09:30:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:30:05 -==> Parameters: userType(String)
2019-04-08 09:30:05 -<==      Total: 2
2019-04-08 09:30:05 -耗时 : 2
2019-04-08 09:30:05 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:30:05 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:30:05 -HTTP METHOD : GET
2019-04-08 09:30:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:30:05 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:30:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:30:05 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:30:05 -<==      Total: 5
2019-04-08 09:30:05 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:30:05 -==> Parameters: 
2019-04-08 09:30:05 -<==      Total: 1
2019-04-08 09:30:05 -耗时 : 4
2019-04-08 09:30:05 -返回值 : com.bootdo.common.utils.PageUtils@77dc58b8
2019-04-08 09:30:06 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:30:06 -HTTP METHOD : GET
2019-04-08 09:30:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:30:06 -参数 : []
2019-04-08 09:30:06 -耗时 : 1
2019-04-08 09:30:06 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:30:06 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:30:06 -HTTP METHOD : GET
2019-04-08 09:30:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:30:06 -参数 : [userType]
2019-04-08 09:30:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:30:06 -==> Parameters: userType(String)
2019-04-08 09:30:06 -<==      Total: 2
2019-04-08 09:30:06 -耗时 : 2
2019-04-08 09:30:06 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:30:06 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:30:06 -HTTP METHOD : GET
2019-04-08 09:30:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:30:06 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:30:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:30:06 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:30:06 -<==      Total: 5
2019-04-08 09:30:06 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:30:06 -==> Parameters: 
2019-04-08 09:30:06 -<==      Total: 1
2019-04-08 09:30:06 -耗时 : 3
2019-04-08 09:30:06 -返回值 : com.bootdo.common.utils.PageUtils@11768496
2019-04-08 09:30:06 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:30:06 -HTTP METHOD : GET
2019-04-08 09:30:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:30:06 -参数 : []
2019-04-08 09:30:06 -耗时 : 0
2019-04-08 09:30:06 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:30:06 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:30:06 -HTTP METHOD : GET
2019-04-08 09:30:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:30:06 -参数 : [userType]
2019-04-08 09:30:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:30:06 -==> Parameters: userType(String)
2019-04-08 09:30:06 -<==      Total: 2
2019-04-08 09:30:06 -耗时 : 2
2019-04-08 09:30:06 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:30:06 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:30:06 -HTTP METHOD : GET
2019-04-08 09:30:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:30:06 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:30:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:30:06 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:30:06 -<==      Total: 5
2019-04-08 09:30:06 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:30:06 -==> Parameters: 
2019-04-08 09:30:06 -<==      Total: 1
2019-04-08 09:30:06 -耗时 : 4
2019-04-08 09:30:06 -返回值 : com.bootdo.common.utils.PageUtils@310de694
2019-04-08 09:30:07 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:30:07 -HTTP METHOD : GET
2019-04-08 09:30:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:30:07 -参数 : []
2019-04-08 09:30:07 -耗时 : 1
2019-04-08 09:30:07 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:30:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:30:07 -HTTP METHOD : GET
2019-04-08 09:30:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:30:07 -参数 : [userType]
2019-04-08 09:30:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:30:07 -==> Parameters: userType(String)
2019-04-08 09:30:07 -<==      Total: 2
2019-04-08 09:30:07 -耗时 : 4
2019-04-08 09:30:07 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:30:07 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:30:07 -HTTP METHOD : GET
2019-04-08 09:30:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:30:07 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:30:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:30:07 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:30:07 -<==      Total: 5
2019-04-08 09:30:07 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:30:07 -==> Parameters: 
2019-04-08 09:30:07 -<==      Total: 1
2019-04-08 09:30:07 -耗时 : 6
2019-04-08 09:30:07 -返回值 : com.bootdo.common.utils.PageUtils@458e1b81
2019-04-08 09:30:07 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:30:07 -HTTP METHOD : GET
2019-04-08 09:30:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:30:07 -参数 : []
2019-04-08 09:30:07 -耗时 : 1
2019-04-08 09:30:07 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:30:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:30:08 -HTTP METHOD : GET
2019-04-08 09:30:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:30:08 -参数 : [userType]
2019-04-08 09:30:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:30:08 -==> Parameters: userType(String)
2019-04-08 09:30:08 -<==      Total: 2
2019-04-08 09:30:08 -耗时 : 4
2019-04-08 09:30:08 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:30:08 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:30:08 -HTTP METHOD : GET
2019-04-08 09:30:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:30:08 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:30:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:30:08 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:30:08 -<==      Total: 5
2019-04-08 09:30:08 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:30:08 -==> Parameters: 
2019-04-08 09:30:08 -<==      Total: 1
2019-04-08 09:30:08 -耗时 : 6
2019-04-08 09:30:08 -返回值 : com.bootdo.common.utils.PageUtils@45779d9c
2019-04-08 09:30:08 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:30:08 -HTTP METHOD : GET
2019-04-08 09:30:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:30:08 -参数 : []
2019-04-08 09:30:08 -耗时 : 2
2019-04-08 09:30:08 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:30:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:30:08 -HTTP METHOD : GET
2019-04-08 09:30:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:30:08 -参数 : [userType]
2019-04-08 09:30:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:30:08 -==> Parameters: userType(String)
2019-04-08 09:30:08 -<==      Total: 2
2019-04-08 09:30:08 -耗时 : 4
2019-04-08 09:30:08 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:30:08 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:30:08 -HTTP METHOD : GET
2019-04-08 09:30:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:30:08 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:30:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:30:08 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:30:08 -<==      Total: 5
2019-04-08 09:30:08 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:30:08 -==> Parameters: 
2019-04-08 09:30:08 -<==      Total: 1
2019-04-08 09:30:08 -耗时 : 6
2019-04-08 09:30:08 -返回值 : com.bootdo.common.utils.PageUtils@19c25319
2019-04-08 09:30:08 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:30:08 -HTTP METHOD : GET
2019-04-08 09:30:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:30:08 -参数 : []
2019-04-08 09:30:08 -耗时 : 0
2019-04-08 09:30:08 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:30:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:30:08 -HTTP METHOD : GET
2019-04-08 09:30:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:30:08 -参数 : [userType]
2019-04-08 09:30:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:30:08 -==> Parameters: userType(String)
2019-04-08 09:30:08 -<==      Total: 2
2019-04-08 09:30:08 -耗时 : 4
2019-04-08 09:30:08 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:30:08 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:30:08 -HTTP METHOD : GET
2019-04-08 09:30:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:30:08 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:30:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:30:08 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:30:08 -<==      Total: 5
2019-04-08 09:30:08 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:30:08 -==> Parameters: 
2019-04-08 09:30:08 -<==      Total: 1
2019-04-08 09:30:08 -耗时 : 7
2019-04-08 09:30:08 -返回值 : com.bootdo.common.utils.PageUtils@41a7a43f
2019-04-08 09:30:08 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:30:08 -HTTP METHOD : GET
2019-04-08 09:30:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:30:08 -参数 : []
2019-04-08 09:30:08 -耗时 : 1
2019-04-08 09:30:08 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:30:09 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:30:09 -HTTP METHOD : GET
2019-04-08 09:30:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:30:09 -参数 : [userType]
2019-04-08 09:30:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:30:09 -==> Parameters: userType(String)
2019-04-08 09:30:09 -<==      Total: 2
2019-04-08 09:30:09 -耗时 : 2
2019-04-08 09:30:09 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:30:09 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:30:09 -HTTP METHOD : GET
2019-04-08 09:30:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:30:09 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:30:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:30:09 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:30:09 -<==      Total: 5
2019-04-08 09:30:09 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:30:09 -==> Parameters: 
2019-04-08 09:30:09 -<==      Total: 1
2019-04-08 09:30:09 -耗时 : 4
2019-04-08 09:30:09 -返回值 : com.bootdo.common.utils.PageUtils@3e18bab0
2019-04-08 09:30:09 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:30:09 -HTTP METHOD : GET
2019-04-08 09:30:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:30:09 -参数 : []
2019-04-08 09:30:09 -耗时 : 0
2019-04-08 09:30:09 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:30:09 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:30:09 -HTTP METHOD : GET
2019-04-08 09:30:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:30:09 -参数 : [userType]
2019-04-08 09:30:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:30:09 -==> Parameters: userType(String)
2019-04-08 09:30:09 -<==      Total: 2
2019-04-08 09:30:09 -耗时 : 3
2019-04-08 09:30:09 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:30:09 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:30:09 -HTTP METHOD : GET
2019-04-08 09:30:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:30:09 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:30:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:30:09 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:30:09 -<==      Total: 5
2019-04-08 09:30:09 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:30:09 -==> Parameters: 
2019-04-08 09:30:09 -<==      Total: 1
2019-04-08 09:30:09 -耗时 : 5
2019-04-08 09:30:09 -返回值 : com.bootdo.common.utils.PageUtils@1c7dad3e
2019-04-08 09:30:09 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:30:09 -HTTP METHOD : GET
2019-04-08 09:30:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:30:09 -参数 : []
2019-04-08 09:30:09 -耗时 : 0
2019-04-08 09:30:09 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:30:09 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:30:09 -HTTP METHOD : GET
2019-04-08 09:30:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:30:09 -参数 : [userType]
2019-04-08 09:30:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:30:09 -==> Parameters: userType(String)
2019-04-08 09:30:09 -<==      Total: 2
2019-04-08 09:30:09 -耗时 : 2
2019-04-08 09:30:09 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:30:09 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:30:09 -HTTP METHOD : GET
2019-04-08 09:30:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:30:09 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:30:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:30:09 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:30:09 -<==      Total: 5
2019-04-08 09:30:09 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:30:09 -==> Parameters: 
2019-04-08 09:30:09 -<==      Total: 1
2019-04-08 09:30:09 -耗时 : 4
2019-04-08 09:30:09 -返回值 : com.bootdo.common.utils.PageUtils@3086ec45
2019-04-08 09:30:10 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:30:10 -HTTP METHOD : GET
2019-04-08 09:30:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:30:10 -参数 : []
2019-04-08 09:30:10 -耗时 : 0
2019-04-08 09:30:10 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:30:10 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:30:10 -HTTP METHOD : GET
2019-04-08 09:30:10 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:30:10 -参数 : [userType]
2019-04-08 09:30:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:30:10 -==> Parameters: userType(String)
2019-04-08 09:30:10 -<==      Total: 2
2019-04-08 09:30:10 -耗时 : 2
2019-04-08 09:30:10 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:30:10 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:30:10 -HTTP METHOD : GET
2019-04-08 09:30:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:30:10 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:30:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:30:10 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:30:10 -<==      Total: 5
2019-04-08 09:30:10 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:30:10 -==> Parameters: 
2019-04-08 09:30:10 -<==      Total: 1
2019-04-08 09:30:10 -耗时 : 4
2019-04-08 09:30:10 -返回值 : com.bootdo.common.utils.PageUtils@193adb30
2019-04-08 09:30:10 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:30:10 -HTTP METHOD : GET
2019-04-08 09:30:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:30:10 -参数 : []
2019-04-08 09:30:10 -耗时 : 0
2019-04-08 09:30:10 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:30:10 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:30:10 -HTTP METHOD : GET
2019-04-08 09:30:10 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:30:10 -参数 : [userType]
2019-04-08 09:30:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:30:10 -==> Parameters: userType(String)
2019-04-08 09:30:10 -<==      Total: 2
2019-04-08 09:30:10 -耗时 : 2
2019-04-08 09:30:10 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:30:10 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:30:10 -HTTP METHOD : GET
2019-04-08 09:30:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:30:10 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:30:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:30:10 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:30:10 -<==      Total: 5
2019-04-08 09:30:10 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:30:10 -==> Parameters: 
2019-04-08 09:30:10 -<==      Total: 1
2019-04-08 09:30:10 -耗时 : 5
2019-04-08 09:30:10 -返回值 : com.bootdo.common.utils.PageUtils@728ad6a9
2019-04-08 09:30:10 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:30:10 -HTTP METHOD : GET
2019-04-08 09:30:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:30:10 -参数 : []
2019-04-08 09:30:10 -耗时 : 1
2019-04-08 09:30:10 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:30:10 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:30:10 -HTTP METHOD : GET
2019-04-08 09:30:10 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:30:10 -参数 : [userType]
2019-04-08 09:30:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:30:10 -==> Parameters: userType(String)
2019-04-08 09:30:10 -<==      Total: 2
2019-04-08 09:30:10 -耗时 : 3
2019-04-08 09:30:10 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:30:10 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:30:10 -HTTP METHOD : GET
2019-04-08 09:30:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:30:10 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:30:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:30:10 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:30:10 -<==      Total: 5
2019-04-08 09:30:10 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:30:10 -==> Parameters: 
2019-04-08 09:30:10 -<==      Total: 1
2019-04-08 09:30:10 -耗时 : 4
2019-04-08 09:30:10 -返回值 : com.bootdo.common.utils.PageUtils@244b4550
2019-04-08 09:30:11 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:30:11 -HTTP METHOD : GET
2019-04-08 09:30:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:30:11 -参数 : []
2019-04-08 09:30:11 -耗时 : 0
2019-04-08 09:30:11 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:30:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:30:11 -HTTP METHOD : GET
2019-04-08 09:30:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:30:11 -参数 : [userType]
2019-04-08 09:30:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:30:11 -==> Parameters: userType(String)
2019-04-08 09:30:11 -<==      Total: 2
2019-04-08 09:30:11 -耗时 : 2
2019-04-08 09:30:11 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:30:11 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:30:11 -HTTP METHOD : GET
2019-04-08 09:30:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:30:11 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:30:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:30:11 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:30:11 -<==      Total: 5
2019-04-08 09:30:11 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:30:11 -==> Parameters: 
2019-04-08 09:30:11 -<==      Total: 1
2019-04-08 09:30:11 -耗时 : 4
2019-04-08 09:30:11 -返回值 : com.bootdo.common.utils.PageUtils@4119d8ed
2019-04-08 09:30:11 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:30:11 -HTTP METHOD : GET
2019-04-08 09:30:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:30:11 -参数 : []
2019-04-08 09:30:11 -耗时 : 0
2019-04-08 09:30:11 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:30:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:30:11 -HTTP METHOD : GET
2019-04-08 09:30:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:30:11 -参数 : [userType]
2019-04-08 09:30:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:30:11 -==> Parameters: userType(String)
2019-04-08 09:30:11 -<==      Total: 2
2019-04-08 09:30:11 -耗时 : 3
2019-04-08 09:30:11 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:30:11 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:30:11 -HTTP METHOD : GET
2019-04-08 09:30:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:30:11 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:30:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:30:11 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:30:11 -<==      Total: 5
2019-04-08 09:30:11 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:30:11 -==> Parameters: 
2019-04-08 09:30:11 -<==      Total: 1
2019-04-08 09:30:11 -耗时 : 3
2019-04-08 09:30:11 -返回值 : com.bootdo.common.utils.PageUtils@2cf611b9
2019-04-08 09:30:13 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:30:13 -HTTP METHOD : GET
2019-04-08 09:30:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:30:13 -参数 : []
2019-04-08 09:30:13 -耗时 : 0
2019-04-08 09:30:13 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:30:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:30:13 -HTTP METHOD : GET
2019-04-08 09:30:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:30:13 -参数 : [userType]
2019-04-08 09:30:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:30:13 -==> Parameters: userType(String)
2019-04-08 09:30:13 -<==      Total: 2
2019-04-08 09:30:13 -耗时 : 2
2019-04-08 09:30:13 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:30:13 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:30:13 -HTTP METHOD : GET
2019-04-08 09:30:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:30:13 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:30:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:30:13 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:30:13 -<==      Total: 5
2019-04-08 09:30:13 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:30:13 -==> Parameters: 
2019-04-08 09:30:13 -<==      Total: 1
2019-04-08 09:30:13 -耗时 : 5
2019-04-08 09:30:13 -返回值 : com.bootdo.common.utils.PageUtils@3dbe9971
2019-04-08 09:30:13 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:30:13 -HTTP METHOD : GET
2019-04-08 09:30:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:30:13 -参数 : []
2019-04-08 09:30:13 -耗时 : 0
2019-04-08 09:30:13 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:30:14 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:30:14 -HTTP METHOD : GET
2019-04-08 09:30:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:30:14 -参数 : [userType]
2019-04-08 09:30:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:30:14 -==> Parameters: userType(String)
2019-04-08 09:30:14 -<==      Total: 2
2019-04-08 09:30:14 -耗时 : 2
2019-04-08 09:30:14 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:30:14 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:30:14 -HTTP METHOD : GET
2019-04-08 09:30:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:30:14 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:30:14 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:30:14 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:30:14 -<==      Total: 7
2019-04-08 09:30:14 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:30:14 -==> Parameters: 
2019-04-08 09:30:14 -<==      Total: 1
2019-04-08 09:30:14 -耗时 : 4
2019-04-08 09:30:14 -返回值 : com.bootdo.common.utils.PageUtils@44d946a4
2019-04-08 09:30:14 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:30:14 -HTTP METHOD : GET
2019-04-08 09:30:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:30:14 -参数 : []
2019-04-08 09:30:14 -耗时 : 1
2019-04-08 09:30:14 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:30:14 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:30:14 -HTTP METHOD : GET
2019-04-08 09:30:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:30:14 -参数 : [userType]
2019-04-08 09:30:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:30:14 -==> Parameters: userType(String)
2019-04-08 09:30:14 -<==      Total: 2
2019-04-08 09:30:14 -耗时 : 2
2019-04-08 09:30:14 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:30:14 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:30:14 -HTTP METHOD : GET
2019-04-08 09:30:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:30:14 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:30:14 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:30:14 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:30:14 -<==      Total: 5
2019-04-08 09:30:14 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:30:14 -==> Parameters: 
2019-04-08 09:30:14 -<==      Total: 1
2019-04-08 09:30:14 -耗时 : 4
2019-04-08 09:30:14 -返回值 : com.bootdo.common.utils.PageUtils@533cb89d
2019-04-08 09:30:14 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:30:14 -HTTP METHOD : GET
2019-04-08 09:30:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:30:14 -参数 : []
2019-04-08 09:30:14 -耗时 : 1
2019-04-08 09:30:14 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:30:14 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:30:14 -HTTP METHOD : GET
2019-04-08 09:30:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:30:14 -参数 : [userType]
2019-04-08 09:30:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:30:14 -==> Parameters: userType(String)
2019-04-08 09:30:14 -<==      Total: 2
2019-04-08 09:30:14 -耗时 : 2
2019-04-08 09:30:14 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:30:14 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:30:14 -HTTP METHOD : GET
2019-04-08 09:30:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:30:14 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:30:14 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:30:14 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:30:14 -<==      Total: 5
2019-04-08 09:30:14 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:30:14 -==> Parameters: 
2019-04-08 09:30:14 -<==      Total: 1
2019-04-08 09:30:14 -耗时 : 3
2019-04-08 09:30:14 -返回值 : com.bootdo.common.utils.PageUtils@189ce4dc
2019-04-08 09:30:15 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:30:15 -HTTP METHOD : GET
2019-04-08 09:30:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:30:15 -参数 : []
2019-04-08 09:30:15 -耗时 : 0
2019-04-08 09:30:15 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:30:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:30:15 -HTTP METHOD : GET
2019-04-08 09:30:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:30:15 -参数 : [userType]
2019-04-08 09:30:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:30:15 -==> Parameters: userType(String)
2019-04-08 09:30:15 -<==      Total: 2
2019-04-08 09:30:15 -耗时 : 4
2019-04-08 09:30:15 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:30:15 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:30:15 -HTTP METHOD : GET
2019-04-08 09:30:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:30:15 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:30:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:30:15 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:30:15 -<==      Total: 5
2019-04-08 09:30:15 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:30:15 -==> Parameters: 
2019-04-08 09:30:15 -<==      Total: 1
2019-04-08 09:30:15 -耗时 : 3
2019-04-08 09:30:15 -返回值 : com.bootdo.common.utils.PageUtils@6a2ed7a9
2019-04-08 09:30:15 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:30:15 -HTTP METHOD : GET
2019-04-08 09:30:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:30:15 -参数 : []
2019-04-08 09:30:15 -耗时 : 1
2019-04-08 09:30:15 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:30:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:30:15 -HTTP METHOD : GET
2019-04-08 09:30:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:30:15 -参数 : [userType]
2019-04-08 09:30:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:30:15 -==> Parameters: userType(String)
2019-04-08 09:30:15 -<==      Total: 2
2019-04-08 09:30:15 -耗时 : 2
2019-04-08 09:30:15 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:30:15 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:30:15 -HTTP METHOD : GET
2019-04-08 09:30:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:30:15 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:30:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:30:15 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:30:15 -<==      Total: 7
2019-04-08 09:30:15 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:30:15 -==> Parameters: 
2019-04-08 09:30:15 -<==      Total: 1
2019-04-08 09:30:15 -耗时 : 4
2019-04-08 09:30:15 -返回值 : com.bootdo.common.utils.PageUtils@13c4838c
2019-04-08 09:30:15 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-08 09:30:15 -HTTP METHOD : GET
2019-04-08 09:30:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-08 09:30:15 -参数 : []
2019-04-08 09:30:15 -耗时 : 0
2019-04-08 09:30:15 -返回值 : /moneyLog/waterLog/waterLog
2019-04-08 09:30:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:30:15 -HTTP METHOD : GET
2019-04-08 09:30:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:30:15 -参数 : [userType]
2019-04-08 09:30:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:30:15 -==> Parameters: userType(String)
2019-04-08 09:30:15 -<==      Total: 2
2019-04-08 09:30:15 -耗时 : 3
2019-04-08 09:30:15 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:30:15 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 09:30:15 -HTTP METHOD : GET
2019-04-08 09:30:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 09:30:15 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 09:30:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 09:30:15 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:30:16 -<==      Total: 6
2019-04-08 09:30:16 -==>  Preparing: select count(*) from water_log 
2019-04-08 09:30:16 -==> Parameters: 
2019-04-08 09:30:16 -<==      Total: 1
2019-04-08 09:30:16 -耗时 : 5
2019-04-08 09:30:16 -返回值 : com.bootdo.common.utils.PageUtils@3b65f408
2019-04-08 09:30:16 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:30:16 -HTTP METHOD : GET
2019-04-08 09:30:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:30:16 -参数 : []
2019-04-08 09:30:16 -耗时 : 0
2019-04-08 09:30:16 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:30:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:30:17 -HTTP METHOD : GET
2019-04-08 09:30:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:30:17 -参数 : [userType]
2019-04-08 09:30:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:30:17 -==> Parameters: userType(String)
2019-04-08 09:30:17 -<==      Total: 2
2019-04-08 09:30:17 -耗时 : 3
2019-04-08 09:30:17 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:30:17 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:30:17 -HTTP METHOD : GET
2019-04-08 09:30:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:30:17 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:30:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:30:17 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:30:17 -<==      Total: 5
2019-04-08 09:30:17 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:30:17 -==> Parameters: 
2019-04-08 09:30:17 -<==      Total: 1
2019-04-08 09:30:17 -耗时 : 3
2019-04-08 09:30:17 -返回值 : com.bootdo.common.utils.PageUtils@41fbbd31
2019-04-08 09:30:17 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:30:17 -HTTP METHOD : GET
2019-04-08 09:30:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:30:17 -参数 : []
2019-04-08 09:30:17 -耗时 : 1
2019-04-08 09:30:17 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:30:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:30:17 -HTTP METHOD : GET
2019-04-08 09:30:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:30:17 -参数 : [userType]
2019-04-08 09:30:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:30:17 -==> Parameters: userType(String)
2019-04-08 09:30:17 -<==      Total: 2
2019-04-08 09:30:17 -耗时 : 2
2019-04-08 09:30:17 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:30:17 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:30:17 -HTTP METHOD : GET
2019-04-08 09:30:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:30:17 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:30:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:30:17 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:30:17 -<==      Total: 7
2019-04-08 09:30:17 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:30:17 -==> Parameters: 
2019-04-08 09:30:17 -<==      Total: 1
2019-04-08 09:30:17 -耗时 : 5
2019-04-08 09:30:17 -返回值 : com.bootdo.common.utils.PageUtils@52618608
2019-04-08 09:30:18 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-08 09:30:18 -HTTP METHOD : GET
2019-04-08 09:30:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-08 09:30:18 -参数 : []
2019-04-08 09:30:18 -耗时 : 0
2019-04-08 09:30:18 -返回值 : /moneyLog/waterLog/waterLog
2019-04-08 09:30:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:30:18 -HTTP METHOD : GET
2019-04-08 09:30:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:30:18 -参数 : [userType]
2019-04-08 09:30:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:30:18 -==> Parameters: userType(String)
2019-04-08 09:30:18 -<==      Total: 2
2019-04-08 09:30:18 -耗时 : 2
2019-04-08 09:30:18 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:30:18 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 09:30:18 -HTTP METHOD : GET
2019-04-08 09:30:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 09:30:18 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 09:30:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 09:30:18 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:30:18 -<==      Total: 6
2019-04-08 09:30:18 -==>  Preparing: select count(*) from water_log 
2019-04-08 09:30:18 -==> Parameters: 
2019-04-08 09:30:18 -<==      Total: 1
2019-04-08 09:30:18 -耗时 : 4
2019-04-08 09:30:18 -返回值 : com.bootdo.common.utils.PageUtils@4008baa5
2019-04-08 09:30:19 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:30:19 -HTTP METHOD : GET
2019-04-08 09:30:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:30:19 -参数 : []
2019-04-08 09:30:19 -耗时 : 0
2019-04-08 09:30:19 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:30:19 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:30:19 -HTTP METHOD : GET
2019-04-08 09:30:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:30:19 -参数 : [userType]
2019-04-08 09:30:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:30:19 -==> Parameters: userType(String)
2019-04-08 09:30:19 -<==      Total: 2
2019-04-08 09:30:19 -耗时 : 3
2019-04-08 09:30:19 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:30:19 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:30:19 -HTTP METHOD : GET
2019-04-08 09:30:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:30:19 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:30:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:30:19 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:30:19 -<==      Total: 5
2019-04-08 09:30:19 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:30:19 -==> Parameters: 
2019-04-08 09:30:19 -<==      Total: 1
2019-04-08 09:30:19 -耗时 : 4
2019-04-08 09:30:19 -返回值 : com.bootdo.common.utils.PageUtils@268e78e
2019-04-08 09:30:20 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:30:20 -HTTP METHOD : GET
2019-04-08 09:30:20 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:30:20 -参数 : []
2019-04-08 09:30:20 -耗时 : 0
2019-04-08 09:30:20 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:30:20 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:30:20 -HTTP METHOD : GET
2019-04-08 09:30:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:30:20 -参数 : [userType]
2019-04-08 09:30:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:30:20 -==> Parameters: userType(String)
2019-04-08 09:30:20 -<==      Total: 2
2019-04-08 09:30:20 -耗时 : 3
2019-04-08 09:30:20 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:30:20 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:30:20 -HTTP METHOD : GET
2019-04-08 09:30:20 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:30:20 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:30:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:30:20 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:30:20 -<==      Total: 7
2019-04-08 09:30:20 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:30:20 -==> Parameters: 
2019-04-08 09:30:20 -<==      Total: 1
2019-04-08 09:30:20 -耗时 : 6
2019-04-08 09:30:20 -返回值 : com.bootdo.common.utils.PageUtils@78302112
2019-04-08 09:30:21 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:30:21 -HTTP METHOD : GET
2019-04-08 09:30:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:30:21 -参数 : []
2019-04-08 09:30:21 -耗时 : 1
2019-04-08 09:30:21 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:30:21 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:30:21 -HTTP METHOD : GET
2019-04-08 09:30:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:30:21 -参数 : [userType]
2019-04-08 09:30:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:30:21 -==> Parameters: userType(String)
2019-04-08 09:30:21 -<==      Total: 2
2019-04-08 09:30:21 -耗时 : 2
2019-04-08 09:30:21 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:30:21 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:30:21 -HTTP METHOD : GET
2019-04-08 09:30:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:30:21 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:30:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:30:21 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:30:21 -<==      Total: 5
2019-04-08 09:30:21 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:30:21 -==> Parameters: 
2019-04-08 09:30:21 -<==      Total: 1
2019-04-08 09:30:21 -耗时 : 3
2019-04-08 09:30:21 -返回值 : com.bootdo.common.utils.PageUtils@43546b04
2019-04-08 09:30:22 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:30:22 -HTTP METHOD : GET
2019-04-08 09:30:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:30:22 -参数 : []
2019-04-08 09:30:22 -耗时 : 0
2019-04-08 09:30:22 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:30:22 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:30:22 -HTTP METHOD : GET
2019-04-08 09:30:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:30:22 -参数 : [userType]
2019-04-08 09:30:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:30:22 -==> Parameters: userType(String)
2019-04-08 09:30:22 -<==      Total: 2
2019-04-08 09:30:22 -耗时 : 3
2019-04-08 09:30:22 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:30:22 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:30:22 -HTTP METHOD : GET
2019-04-08 09:30:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:30:22 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:30:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:30:22 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:30:22 -<==      Total: 5
2019-04-08 09:30:22 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:30:22 -==> Parameters: 
2019-04-08 09:30:22 -<==      Total: 1
2019-04-08 09:30:22 -耗时 : 4
2019-04-08 09:30:22 -返回值 : com.bootdo.common.utils.PageUtils@4875daaa
2019-04-08 09:30:23 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:30:23 -HTTP METHOD : GET
2019-04-08 09:30:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:30:23 -参数 : []
2019-04-08 09:30:23 -耗时 : 0
2019-04-08 09:30:23 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:30:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:30:23 -HTTP METHOD : GET
2019-04-08 09:30:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:30:23 -参数 : [userType]
2019-04-08 09:30:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:30:23 -==> Parameters: userType(String)
2019-04-08 09:30:23 -<==      Total: 2
2019-04-08 09:30:23 -耗时 : 2
2019-04-08 09:30:23 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:30:23 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:30:23 -HTTP METHOD : GET
2019-04-08 09:30:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:30:23 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:30:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:30:23 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:30:23 -<==      Total: 5
2019-04-08 09:30:23 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:30:23 -==> Parameters: 
2019-04-08 09:30:23 -<==      Total: 1
2019-04-08 09:30:23 -耗时 : 3
2019-04-08 09:30:23 -返回值 : com.bootdo.common.utils.PageUtils@300a2c27
2019-04-08 09:30:23 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:30:23 -HTTP METHOD : GET
2019-04-08 09:30:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:30:23 -参数 : []
2019-04-08 09:30:23 -耗时 : 0
2019-04-08 09:30:23 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:30:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:30:24 -HTTP METHOD : GET
2019-04-08 09:30:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:30:24 -参数 : [userType]
2019-04-08 09:30:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:30:24 -==> Parameters: userType(String)
2019-04-08 09:30:24 -<==      Total: 2
2019-04-08 09:30:24 -耗时 : 2
2019-04-08 09:30:24 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:30:24 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:30:24 -HTTP METHOD : GET
2019-04-08 09:30:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:30:24 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:30:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:30:24 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:30:24 -<==      Total: 5
2019-04-08 09:30:24 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:30:24 -==> Parameters: 
2019-04-08 09:30:24 -<==      Total: 1
2019-04-08 09:30:24 -耗时 : 4
2019-04-08 09:30:24 -返回值 : com.bootdo.common.utils.PageUtils@28a71f8f
2019-04-08 09:30:24 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:30:24 -HTTP METHOD : GET
2019-04-08 09:30:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:30:24 -参数 : []
2019-04-08 09:30:24 -耗时 : 0
2019-04-08 09:30:24 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:30:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:30:24 -HTTP METHOD : GET
2019-04-08 09:30:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:30:24 -参数 : [userType]
2019-04-08 09:30:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:30:24 -==> Parameters: userType(String)
2019-04-08 09:30:24 -<==      Total: 2
2019-04-08 09:30:24 -耗时 : 3
2019-04-08 09:30:24 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:30:24 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:30:24 -HTTP METHOD : GET
2019-04-08 09:30:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:30:24 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:30:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:30:24 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:30:24 -<==      Total: 5
2019-04-08 09:30:24 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:30:24 -==> Parameters: 
2019-04-08 09:30:24 -<==      Total: 1
2019-04-08 09:30:24 -耗时 : 4
2019-04-08 09:30:24 -返回值 : com.bootdo.common.utils.PageUtils@47607002
2019-04-08 09:30:24 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:30:24 -HTTP METHOD : GET
2019-04-08 09:30:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:30:24 -参数 : []
2019-04-08 09:30:24 -耗时 : 0
2019-04-08 09:30:24 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:30:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:30:24 -HTTP METHOD : GET
2019-04-08 09:30:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:30:24 -参数 : [userType]
2019-04-08 09:30:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:30:24 -==> Parameters: userType(String)
2019-04-08 09:30:24 -<==      Total: 2
2019-04-08 09:30:24 -耗时 : 3
2019-04-08 09:30:24 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:30:24 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:30:24 -HTTP METHOD : GET
2019-04-08 09:30:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:30:24 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:30:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:30:24 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:30:24 -<==      Total: 5
2019-04-08 09:30:24 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:30:24 -==> Parameters: 
2019-04-08 09:30:24 -<==      Total: 1
2019-04-08 09:30:24 -耗时 : 5
2019-04-08 09:30:24 -返回值 : com.bootdo.common.utils.PageUtils@466ae480
2019-04-08 09:30:25 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:30:25 -HTTP METHOD : GET
2019-04-08 09:30:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:30:25 -参数 : []
2019-04-08 09:30:25 -耗时 : 0
2019-04-08 09:30:25 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:30:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:30:25 -HTTP METHOD : GET
2019-04-08 09:30:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:30:25 -参数 : [userType]
2019-04-08 09:30:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:30:25 -==> Parameters: userType(String)
2019-04-08 09:30:25 -<==      Total: 2
2019-04-08 09:30:25 -耗时 : 3
2019-04-08 09:30:25 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:30:25 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:30:25 -HTTP METHOD : GET
2019-04-08 09:30:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:30:25 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:30:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:30:25 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:30:25 -<==      Total: 5
2019-04-08 09:30:25 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:30:25 -==> Parameters: 
2019-04-08 09:30:25 -<==      Total: 1
2019-04-08 09:30:25 -耗时 : 3
2019-04-08 09:30:25 -返回值 : com.bootdo.common.utils.PageUtils@2c077302
2019-04-08 09:30:25 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:30:25 -HTTP METHOD : GET
2019-04-08 09:30:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:30:25 -参数 : []
2019-04-08 09:30:25 -耗时 : 0
2019-04-08 09:30:25 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:30:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:30:26 -HTTP METHOD : GET
2019-04-08 09:30:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:30:26 -参数 : [userType]
2019-04-08 09:30:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:30:26 -==> Parameters: userType(String)
2019-04-08 09:30:26 -<==      Total: 2
2019-04-08 09:30:26 -耗时 : 2
2019-04-08 09:30:26 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:30:26 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:30:26 -HTTP METHOD : GET
2019-04-08 09:30:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:30:26 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:30:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:30:26 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:30:26 -<==      Total: 5
2019-04-08 09:30:26 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:30:26 -==> Parameters: 
2019-04-08 09:30:26 -<==      Total: 1
2019-04-08 09:30:26 -耗时 : 3
2019-04-08 09:30:26 -返回值 : com.bootdo.common.utils.PageUtils@7e43575a
2019-04-08 09:30:26 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:30:26 -HTTP METHOD : GET
2019-04-08 09:30:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:30:26 -参数 : []
2019-04-08 09:30:26 -耗时 : 1
2019-04-08 09:30:26 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:30:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:30:26 -HTTP METHOD : GET
2019-04-08 09:30:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:30:26 -参数 : [userType]
2019-04-08 09:30:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:30:26 -==> Parameters: userType(String)
2019-04-08 09:30:26 -<==      Total: 2
2019-04-08 09:30:26 -耗时 : 2
2019-04-08 09:30:26 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:30:26 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:30:26 -HTTP METHOD : GET
2019-04-08 09:30:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:30:26 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:30:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:30:26 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:30:26 -<==      Total: 5
2019-04-08 09:30:26 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:30:26 -==> Parameters: 
2019-04-08 09:30:26 -<==      Total: 1
2019-04-08 09:30:26 -耗时 : 3
2019-04-08 09:30:26 -返回值 : com.bootdo.common.utils.PageUtils@32830bfe
2019-04-08 09:30:26 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:30:26 -HTTP METHOD : GET
2019-04-08 09:30:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:30:26 -参数 : []
2019-04-08 09:30:26 -耗时 : 0
2019-04-08 09:30:26 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:30:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:30:26 -HTTP METHOD : GET
2019-04-08 09:30:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:30:26 -参数 : [userType]
2019-04-08 09:30:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:30:26 -==> Parameters: userType(String)
2019-04-08 09:30:26 -<==      Total: 2
2019-04-08 09:30:26 -耗时 : 3
2019-04-08 09:30:26 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:30:26 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:30:26 -HTTP METHOD : GET
2019-04-08 09:30:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:30:26 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:30:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:30:26 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:30:26 -<==      Total: 5
2019-04-08 09:30:26 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:30:26 -==> Parameters: 
2019-04-08 09:30:26 -<==      Total: 1
2019-04-08 09:30:26 -耗时 : 4
2019-04-08 09:30:26 -返回值 : com.bootdo.common.utils.PageUtils@6f533cbf
2019-04-08 09:30:27 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:30:27 -HTTP METHOD : GET
2019-04-08 09:30:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:30:27 -参数 : []
2019-04-08 09:30:27 -耗时 : 1
2019-04-08 09:30:27 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:30:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:30:27 -HTTP METHOD : GET
2019-04-08 09:30:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:30:27 -参数 : [userType]
2019-04-08 09:30:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:30:27 -==> Parameters: userType(String)
2019-04-08 09:30:27 -<==      Total: 2
2019-04-08 09:30:27 -耗时 : 2
2019-04-08 09:30:27 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:30:27 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:30:27 -HTTP METHOD : GET
2019-04-08 09:30:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:30:27 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:30:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:30:27 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:30:27 -<==      Total: 5
2019-04-08 09:30:27 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:30:27 -==> Parameters: 
2019-04-08 09:30:27 -<==      Total: 1
2019-04-08 09:30:27 -耗时 : 3
2019-04-08 09:30:27 -返回值 : com.bootdo.common.utils.PageUtils@f487eaa
2019-04-08 09:31:17 -请求地址 : http://localhost:8081/index
2019-04-08 09:31:17 -HTTP METHOD : GET
2019-04-08 09:31:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 09:31:17 -参数 : [{}]
2019-04-08 09:31:17 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 09:31:17 -==> Parameters: 1(Long)
2019-04-08 09:31:17 -<==      Total: 46
2019-04-08 09:31:17 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 09:31:17 -==> Parameters: 138(Long)
2019-04-08 09:31:17 -<==      Total: 1
2019-04-08 09:31:17 -耗时 : 12
2019-04-08 09:31:17 -返回值 : index_v1
2019-04-08 09:31:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 09:31:17 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 13(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 09:31:17.023(Timestamp)
2019-04-08 09:31:17 -<==    Updates: 1
2019-04-08 09:31:17 -请求地址 : http://localhost:8081/main
2019-04-08 09:31:17 -HTTP METHOD : GET
2019-04-08 09:31:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 09:31:17 -参数 : []
2019-04-08 09:31:17 -耗时 : 0
2019-04-08 09:31:17 -返回值 : main
2019-04-08 09:31:17 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 09:31:17 -HTTP METHOD : GET
2019-04-08 09:31:17 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 09:31:17 -参数 : []
2019-04-08 09:31:17 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 09:31:17 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 09:31:17 -<==      Total: 0
2019-04-08 09:31:17 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 09:31:17 -==> Parameters: 1(Long), 0(String)
2019-04-08 09:31:17 -<==      Total: 1
2019-04-08 09:31:17 -耗时 : 6
2019-04-08 09:31:17 -返回值 : com.bootdo.common.utils.PageUtils@763c01f9
2019-04-08 09:31:17 -请求地址 : http://localhost:8081/main
2019-04-08 09:31:17 -HTTP METHOD : GET
2019-04-08 09:31:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 09:31:17 -参数 : []
2019-04-08 09:31:17 -耗时 : 1
2019-04-08 09:31:17 -返回值 : main
2019-04-08 09:31:19 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:31:19 -HTTP METHOD : GET
2019-04-08 09:31:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:31:19 -参数 : []
2019-04-08 09:31:19 -耗时 : 1
2019-04-08 09:31:19 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:31:19 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:31:19 -HTTP METHOD : GET
2019-04-08 09:31:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:31:19 -参数 : [userType]
2019-04-08 09:31:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:31:19 -==> Parameters: userType(String)
2019-04-08 09:31:19 -<==      Total: 2
2019-04-08 09:31:19 -耗时 : 2
2019-04-08 09:31:19 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:31:19 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:31:19 -HTTP METHOD : GET
2019-04-08 09:31:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:31:19 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:31:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:31:19 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:31:19 -<==      Total: 7
2019-04-08 09:31:19 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:31:19 -==> Parameters: 
2019-04-08 09:31:19 -<==      Total: 1
2019-04-08 09:31:19 -耗时 : 3
2019-04-08 09:31:19 -返回值 : com.bootdo.common.utils.PageUtils@4fb934a4
2019-04-08 09:31:20 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:31:20 -HTTP METHOD : GET
2019-04-08 09:31:20 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:31:20 -参数 : []
2019-04-08 09:31:20 -耗时 : 0
2019-04-08 09:31:20 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:31:20 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:31:20 -HTTP METHOD : GET
2019-04-08 09:31:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:31:20 -参数 : [userType]
2019-04-08 09:31:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:31:20 -==> Parameters: userType(String)
2019-04-08 09:31:20 -<==      Total: 2
2019-04-08 09:31:20 -耗时 : 2
2019-04-08 09:31:20 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:31:20 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:31:20 -HTTP METHOD : GET
2019-04-08 09:31:20 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:31:20 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:31:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:31:20 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:31:20 -<==      Total: 5
2019-04-08 09:31:20 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:31:20 -==> Parameters: 
2019-04-08 09:31:20 -<==      Total: 1
2019-04-08 09:31:20 -耗时 : 3
2019-04-08 09:31:20 -返回值 : com.bootdo.common.utils.PageUtils@5c0c0579
2019-04-08 09:31:21 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-08 09:31:21 -HTTP METHOD : GET
2019-04-08 09:31:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-08 09:31:21 -参数 : []
2019-04-08 09:31:21 -耗时 : 0
2019-04-08 09:31:21 -返回值 : /moneyLog/waterLog/waterLog
2019-04-08 09:31:21 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:31:21 -HTTP METHOD : GET
2019-04-08 09:31:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:31:21 -参数 : [userType]
2019-04-08 09:31:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:31:21 -==> Parameters: userType(String)
2019-04-08 09:31:21 -<==      Total: 2
2019-04-08 09:31:21 -耗时 : 2
2019-04-08 09:31:21 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:31:21 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 09:31:21 -HTTP METHOD : GET
2019-04-08 09:31:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 09:31:21 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 09:31:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 09:31:21 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:31:21 -<==      Total: 6
2019-04-08 09:31:21 -==>  Preparing: select count(*) from water_log 
2019-04-08 09:31:21 -==> Parameters: 
2019-04-08 09:31:21 -<==      Total: 1
2019-04-08 09:31:21 -耗时 : 4
2019-04-08 09:31:21 -返回值 : com.bootdo.common.utils.PageUtils@121ac8f9
2019-04-08 09:31:21 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:31:21 -HTTP METHOD : GET
2019-04-08 09:31:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:31:21 -参数 : []
2019-04-08 09:31:21 -耗时 : 0
2019-04-08 09:31:21 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:31:21 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:31:21 -HTTP METHOD : GET
2019-04-08 09:31:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:31:21 -参数 : [userType]
2019-04-08 09:31:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:31:21 -==> Parameters: userType(String)
2019-04-08 09:31:21 -<==      Total: 2
2019-04-08 09:31:21 -耗时 : 4
2019-04-08 09:31:21 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:31:21 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:31:21 -HTTP METHOD : GET
2019-04-08 09:31:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:31:21 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:31:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:31:21 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:31:21 -<==      Total: 5
2019-04-08 09:31:21 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:31:21 -==> Parameters: 
2019-04-08 09:31:21 -<==      Total: 1
2019-04-08 09:31:21 -耗时 : 4
2019-04-08 09:31:21 -返回值 : com.bootdo.common.utils.PageUtils@5c6eb1d7
2019-04-08 09:31:22 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:31:22 -HTTP METHOD : GET
2019-04-08 09:31:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:31:22 -参数 : []
2019-04-08 09:31:22 -耗时 : 2
2019-04-08 09:31:22 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:31:22 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:31:22 -HTTP METHOD : GET
2019-04-08 09:31:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:31:22 -参数 : [userType]
2019-04-08 09:31:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:31:22 -==> Parameters: userType(String)
2019-04-08 09:31:22 -<==      Total: 2
2019-04-08 09:31:22 -耗时 : 1
2019-04-08 09:31:22 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:31:22 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:31:22 -HTTP METHOD : GET
2019-04-08 09:31:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:31:22 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:31:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:31:22 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:31:22 -<==      Total: 7
2019-04-08 09:31:22 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:31:22 -==> Parameters: 
2019-04-08 09:31:22 -<==      Total: 1
2019-04-08 09:31:22 -耗时 : 4
2019-04-08 09:31:22 -返回值 : com.bootdo.common.utils.PageUtils@3fbd5115
2019-04-08 09:31:23 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:31:23 -HTTP METHOD : GET
2019-04-08 09:31:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:31:23 -参数 : []
2019-04-08 09:31:23 -耗时 : 0
2019-04-08 09:31:23 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:31:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:31:23 -HTTP METHOD : GET
2019-04-08 09:31:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:31:23 -参数 : [userType]
2019-04-08 09:31:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:31:23 -==> Parameters: userType(String)
2019-04-08 09:31:23 -<==      Total: 2
2019-04-08 09:31:23 -耗时 : 3
2019-04-08 09:31:23 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:31:23 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:31:23 -HTTP METHOD : GET
2019-04-08 09:31:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:31:23 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:31:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:31:23 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:31:23 -<==      Total: 5
2019-04-08 09:31:23 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:31:23 -==> Parameters: 
2019-04-08 09:31:23 -<==      Total: 1
2019-04-08 09:31:23 -耗时 : 4
2019-04-08 09:31:23 -返回值 : com.bootdo.common.utils.PageUtils@2507d1d
2019-04-08 09:31:23 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-08 09:31:23 -HTTP METHOD : GET
2019-04-08 09:31:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-08 09:31:23 -参数 : []
2019-04-08 09:31:23 -耗时 : 0
2019-04-08 09:31:23 -返回值 : /moneyLog/waterLog/waterLog
2019-04-08 09:31:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:31:23 -HTTP METHOD : GET
2019-04-08 09:31:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:31:23 -参数 : [userType]
2019-04-08 09:31:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:31:23 -==> Parameters: userType(String)
2019-04-08 09:31:23 -<==      Total: 2
2019-04-08 09:31:23 -耗时 : 1
2019-04-08 09:31:23 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:31:23 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 09:31:23 -HTTP METHOD : GET
2019-04-08 09:31:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 09:31:23 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 09:31:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 09:31:23 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:31:23 -<==      Total: 6
2019-04-08 09:31:23 -==>  Preparing: select count(*) from water_log 
2019-04-08 09:31:23 -==> Parameters: 
2019-04-08 09:31:23 -<==      Total: 1
2019-04-08 09:31:23 -耗时 : 3
2019-04-08 09:31:23 -返回值 : com.bootdo.common.utils.PageUtils@76c36b42
2019-04-08 09:31:24 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:31:24 -HTTP METHOD : GET
2019-04-08 09:31:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:31:24 -参数 : []
2019-04-08 09:31:24 -耗时 : 1
2019-04-08 09:31:24 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:31:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:31:24 -HTTP METHOD : GET
2019-04-08 09:31:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:31:24 -参数 : [userType]
2019-04-08 09:31:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:31:24 -==> Parameters: userType(String)
2019-04-08 09:31:24 -<==      Total: 2
2019-04-08 09:31:24 -耗时 : 4
2019-04-08 09:31:24 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:31:24 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:31:24 -HTTP METHOD : GET
2019-04-08 09:31:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:31:24 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:31:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:31:24 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:31:24 -<==      Total: 5
2019-04-08 09:31:24 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:31:24 -==> Parameters: 
2019-04-08 09:31:24 -<==      Total: 1
2019-04-08 09:31:24 -耗时 : 5
2019-04-08 09:31:24 -返回值 : com.bootdo.common.utils.PageUtils@845096f
2019-04-08 09:31:25 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-08 09:31:25 -HTTP METHOD : GET
2019-04-08 09:31:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-08 09:31:25 -参数 : []
2019-04-08 09:31:25 -耗时 : 1
2019-04-08 09:31:25 -返回值 : /moneyLog/waterLog/waterLog
2019-04-08 09:31:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:31:25 -HTTP METHOD : GET
2019-04-08 09:31:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:31:25 -参数 : [userType]
2019-04-08 09:31:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:31:25 -==> Parameters: userType(String)
2019-04-08 09:31:25 -<==      Total: 2
2019-04-08 09:31:25 -耗时 : 2
2019-04-08 09:31:25 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:31:25 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 09:31:25 -HTTP METHOD : GET
2019-04-08 09:31:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 09:31:25 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 09:31:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 09:31:25 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:31:25 -<==      Total: 6
2019-04-08 09:31:25 -==>  Preparing: select count(*) from water_log 
2019-04-08 09:31:25 -==> Parameters: 
2019-04-08 09:31:25 -<==      Total: 1
2019-04-08 09:31:25 -耗时 : 4
2019-04-08 09:31:25 -返回值 : com.bootdo.common.utils.PageUtils@2ee4c714
2019-04-08 09:31:26 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:31:26 -HTTP METHOD : GET
2019-04-08 09:31:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:31:26 -参数 : []
2019-04-08 09:31:26 -耗时 : 1
2019-04-08 09:31:26 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:31:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:31:26 -HTTP METHOD : GET
2019-04-08 09:31:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:31:26 -参数 : [userType]
2019-04-08 09:31:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:31:26 -==> Parameters: userType(String)
2019-04-08 09:31:26 -<==      Total: 2
2019-04-08 09:31:26 -耗时 : 2
2019-04-08 09:31:26 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:31:26 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:31:26 -HTTP METHOD : GET
2019-04-08 09:31:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:31:26 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:31:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:31:26 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:31:26 -<==      Total: 7
2019-04-08 09:31:26 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:31:26 -==> Parameters: 
2019-04-08 09:31:26 -<==      Total: 1
2019-04-08 09:31:26 -耗时 : 3
2019-04-08 09:31:26 -返回值 : com.bootdo.common.utils.PageUtils@297b84bf
2019-04-08 09:31:26 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:31:26 -HTTP METHOD : GET
2019-04-08 09:31:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:31:26 -参数 : []
2019-04-08 09:31:26 -耗时 : 0
2019-04-08 09:31:26 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:31:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:31:27 -HTTP METHOD : GET
2019-04-08 09:31:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:31:27 -参数 : [userType]
2019-04-08 09:31:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:31:27 -==> Parameters: userType(String)
2019-04-08 09:31:27 -<==      Total: 2
2019-04-08 09:31:27 -耗时 : 2
2019-04-08 09:31:27 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:31:27 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:31:27 -HTTP METHOD : GET
2019-04-08 09:31:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:31:27 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:31:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:31:27 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:31:27 -<==      Total: 5
2019-04-08 09:31:27 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:31:27 -==> Parameters: 
2019-04-08 09:31:27 -<==      Total: 1
2019-04-08 09:31:27 -耗时 : 3
2019-04-08 09:31:27 -返回值 : com.bootdo.common.utils.PageUtils@7e5c8039
2019-04-08 09:31:27 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-08 09:31:27 -HTTP METHOD : GET
2019-04-08 09:31:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-08 09:31:27 -参数 : []
2019-04-08 09:31:27 -耗时 : 0
2019-04-08 09:31:27 -返回值 : /moneyLog/waterLog/waterLog
2019-04-08 09:31:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:31:27 -HTTP METHOD : GET
2019-04-08 09:31:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:31:27 -参数 : [userType]
2019-04-08 09:31:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:31:27 -==> Parameters: userType(String)
2019-04-08 09:31:27 -<==      Total: 2
2019-04-08 09:31:27 -耗时 : 3
2019-04-08 09:31:27 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:31:27 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 09:31:27 -HTTP METHOD : GET
2019-04-08 09:31:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 09:31:27 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 09:31:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 09:31:27 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:31:27 -<==      Total: 6
2019-04-08 09:31:27 -==>  Preparing: select count(*) from water_log 
2019-04-08 09:31:27 -==> Parameters: 
2019-04-08 09:31:27 -<==      Total: 1
2019-04-08 09:31:27 -耗时 : 6
2019-04-08 09:31:27 -返回值 : com.bootdo.common.utils.PageUtils@392c48a
2019-04-08 09:31:28 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-08 09:31:28 -HTTP METHOD : GET
2019-04-08 09:31:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-08 09:31:28 -参数 : []
2019-04-08 09:31:28 -耗时 : 0
2019-04-08 09:31:28 -返回值 : /moneyLog/waterLog/waterLog
2019-04-08 09:31:28 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:31:28 -HTTP METHOD : GET
2019-04-08 09:31:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:31:28 -参数 : [userType]
2019-04-08 09:31:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:31:28 -==> Parameters: userType(String)
2019-04-08 09:31:28 -<==      Total: 2
2019-04-08 09:31:28 -耗时 : 2
2019-04-08 09:31:28 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:31:28 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 09:31:28 -HTTP METHOD : GET
2019-04-08 09:31:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 09:31:28 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 09:31:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 09:31:28 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:31:28 -<==      Total: 6
2019-04-08 09:31:28 -==>  Preparing: select count(*) from water_log 
2019-04-08 09:31:28 -==> Parameters: 
2019-04-08 09:31:28 -<==      Total: 1
2019-04-08 09:31:28 -耗时 : 5
2019-04-08 09:31:28 -返回值 : com.bootdo.common.utils.PageUtils@46be098b
2019-04-08 09:31:28 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:31:28 -HTTP METHOD : GET
2019-04-08 09:31:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:31:28 -参数 : []
2019-04-08 09:31:28 -耗时 : 0
2019-04-08 09:31:28 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:31:28 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:31:28 -HTTP METHOD : GET
2019-04-08 09:31:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:31:28 -参数 : [userType]
2019-04-08 09:31:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:31:28 -==> Parameters: userType(String)
2019-04-08 09:31:28 -<==      Total: 2
2019-04-08 09:31:28 -耗时 : 2
2019-04-08 09:31:28 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:31:28 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:31:28 -HTTP METHOD : GET
2019-04-08 09:31:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:31:28 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:31:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:31:28 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:31:28 -<==      Total: 5
2019-04-08 09:31:28 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:31:28 -==> Parameters: 
2019-04-08 09:31:28 -<==      Total: 1
2019-04-08 09:31:28 -耗时 : 4
2019-04-08 09:31:28 -返回值 : com.bootdo.common.utils.PageUtils@16df7934
2019-04-08 09:31:29 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:31:29 -HTTP METHOD : GET
2019-04-08 09:31:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:31:29 -参数 : []
2019-04-08 09:31:29 -耗时 : 1
2019-04-08 09:31:29 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:31:29 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:31:29 -HTTP METHOD : GET
2019-04-08 09:31:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:31:29 -参数 : [userType]
2019-04-08 09:31:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:31:29 -==> Parameters: userType(String)
2019-04-08 09:31:29 -<==      Total: 2
2019-04-08 09:31:29 -耗时 : 3
2019-04-08 09:31:29 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:31:29 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:31:29 -HTTP METHOD : GET
2019-04-08 09:31:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:31:29 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:31:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:31:29 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:31:29 -<==      Total: 7
2019-04-08 09:31:29 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:31:29 -==> Parameters: 
2019-04-08 09:31:29 -<==      Total: 1
2019-04-08 09:31:29 -耗时 : 6
2019-04-08 09:31:29 -返回值 : com.bootdo.common.utils.PageUtils@59397474
2019-04-08 09:31:30 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:31:30 -HTTP METHOD : GET
2019-04-08 09:31:30 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:31:30 -参数 : []
2019-04-08 09:31:30 -耗时 : 0
2019-04-08 09:31:30 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:31:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:31:30 -HTTP METHOD : GET
2019-04-08 09:31:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:31:30 -参数 : [userType]
2019-04-08 09:31:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:31:30 -==> Parameters: userType(String)
2019-04-08 09:31:30 -<==      Total: 2
2019-04-08 09:31:30 -耗时 : 2
2019-04-08 09:31:30 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:31:30 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:31:30 -HTTP METHOD : GET
2019-04-08 09:31:30 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:31:30 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:31:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:31:30 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:31:30 -<==      Total: 5
2019-04-08 09:31:30 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:31:30 -==> Parameters: 
2019-04-08 09:31:30 -<==      Total: 1
2019-04-08 09:31:30 -耗时 : 3
2019-04-08 09:31:30 -返回值 : com.bootdo.common.utils.PageUtils@5bdad650
2019-04-08 09:31:30 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-08 09:31:30 -HTTP METHOD : GET
2019-04-08 09:31:30 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-08 09:31:30 -参数 : []
2019-04-08 09:31:30 -耗时 : 0
2019-04-08 09:31:30 -返回值 : /moneyLog/waterLog/waterLog
2019-04-08 09:31:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:31:30 -HTTP METHOD : GET
2019-04-08 09:31:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:31:30 -参数 : [userType]
2019-04-08 09:31:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:31:30 -==> Parameters: userType(String)
2019-04-08 09:31:30 -<==      Total: 2
2019-04-08 09:31:30 -耗时 : 2
2019-04-08 09:31:30 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:31:30 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 09:31:30 -HTTP METHOD : GET
2019-04-08 09:31:30 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 09:31:30 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 09:31:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 09:31:30 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:31:30 -<==      Total: 6
2019-04-08 09:31:30 -==>  Preparing: select count(*) from water_log 
2019-04-08 09:31:30 -==> Parameters: 
2019-04-08 09:31:30 -<==      Total: 1
2019-04-08 09:31:30 -耗时 : 4
2019-04-08 09:31:30 -返回值 : com.bootdo.common.utils.PageUtils@9e3311d
2019-04-08 09:31:31 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:31:31 -HTTP METHOD : GET
2019-04-08 09:31:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:31:31 -参数 : []
2019-04-08 09:31:31 -耗时 : 1
2019-04-08 09:31:31 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:31:31 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:31:31 -HTTP METHOD : GET
2019-04-08 09:31:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:31:31 -参数 : [userType]
2019-04-08 09:31:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:31:31 -==> Parameters: userType(String)
2019-04-08 09:31:31 -<==      Total: 2
2019-04-08 09:31:31 -耗时 : 3
2019-04-08 09:31:31 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:31:31 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:31:31 -HTTP METHOD : GET
2019-04-08 09:31:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:31:31 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:31:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:31:31 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:31:31 -<==      Total: 5
2019-04-08 09:31:31 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:31:31 -==> Parameters: 
2019-04-08 09:31:31 -<==      Total: 1
2019-04-08 09:31:31 -耗时 : 5
2019-04-08 09:31:31 -返回值 : com.bootdo.common.utils.PageUtils@6406ac87
2019-04-08 09:31:33 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-08 09:31:33 -HTTP METHOD : GET
2019-04-08 09:31:33 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-08 09:31:33 -参数 : []
2019-04-08 09:31:33 -耗时 : 1
2019-04-08 09:31:33 -返回值 : /moneyLog/waterLog/waterLog
2019-04-08 09:31:33 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:31:33 -HTTP METHOD : GET
2019-04-08 09:31:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:31:33 -参数 : [userType]
2019-04-08 09:31:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:31:33 -==> Parameters: userType(String)
2019-04-08 09:31:33 -<==      Total: 2
2019-04-08 09:31:33 -耗时 : 3
2019-04-08 09:31:33 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:31:33 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 09:31:33 -HTTP METHOD : GET
2019-04-08 09:31:33 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 09:31:33 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 09:31:33 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 09:31:33 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:31:33 -<==      Total: 6
2019-04-08 09:31:33 -==>  Preparing: select count(*) from water_log 
2019-04-08 09:31:33 -==> Parameters: 
2019-04-08 09:31:33 -<==      Total: 1
2019-04-08 09:31:33 -耗时 : 4
2019-04-08 09:31:33 -返回值 : com.bootdo.common.utils.PageUtils@3a07b49d
2019-04-08 09:31:34 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:31:34 -HTTP METHOD : GET
2019-04-08 09:31:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:31:34 -参数 : []
2019-04-08 09:31:34 -耗时 : 0
2019-04-08 09:31:34 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:31:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:31:34 -HTTP METHOD : GET
2019-04-08 09:31:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:31:34 -参数 : [userType]
2019-04-08 09:31:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:31:34 -==> Parameters: userType(String)
2019-04-08 09:31:34 -<==      Total: 2
2019-04-08 09:31:34 -耗时 : 3
2019-04-08 09:31:34 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:31:34 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:31:34 -HTTP METHOD : GET
2019-04-08 09:31:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:31:34 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:31:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:31:34 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:31:34 -<==      Total: 5
2019-04-08 09:31:34 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:31:34 -==> Parameters: 
2019-04-08 09:31:34 -<==      Total: 1
2019-04-08 09:31:34 -耗时 : 4
2019-04-08 09:31:34 -返回值 : com.bootdo.common.utils.PageUtils@2221cb15
2019-04-08 09:31:35 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:31:35 -HTTP METHOD : GET
2019-04-08 09:31:35 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:31:35 -参数 : []
2019-04-08 09:31:35 -耗时 : 0
2019-04-08 09:31:35 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:31:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:31:35 -HTTP METHOD : GET
2019-04-08 09:31:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:31:35 -参数 : [userType]
2019-04-08 09:31:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:31:35 -==> Parameters: userType(String)
2019-04-08 09:31:35 -<==      Total: 2
2019-04-08 09:31:35 -耗时 : 3
2019-04-08 09:31:35 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:31:35 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:31:35 -HTTP METHOD : GET
2019-04-08 09:31:35 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:31:35 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:31:35 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:31:35 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:31:35 -<==      Total: 7
2019-04-08 09:31:35 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:31:35 -==> Parameters: 
2019-04-08 09:31:35 -<==      Total: 1
2019-04-08 09:31:35 -耗时 : 5
2019-04-08 09:31:35 -返回值 : com.bootdo.common.utils.PageUtils@6c6eb9d7
2019-04-08 09:31:35 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:31:35 -HTTP METHOD : GET
2019-04-08 09:31:35 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:31:35 -参数 : []
2019-04-08 09:31:35 -耗时 : 0
2019-04-08 09:31:35 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:31:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:31:36 -HTTP METHOD : GET
2019-04-08 09:31:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:31:36 -参数 : [userType]
2019-04-08 09:31:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:31:36 -==> Parameters: userType(String)
2019-04-08 09:31:36 -<==      Total: 2
2019-04-08 09:31:36 -耗时 : 2
2019-04-08 09:31:36 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:31:36 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:31:36 -HTTP METHOD : GET
2019-04-08 09:31:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:31:36 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:31:36 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:31:36 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:31:36 -<==      Total: 5
2019-04-08 09:31:36 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:31:36 -==> Parameters: 
2019-04-08 09:31:36 -<==      Total: 1
2019-04-08 09:31:36 -耗时 : 4
2019-04-08 09:31:36 -返回值 : com.bootdo.common.utils.PageUtils@78476f71
2019-04-08 09:31:37 -请求地址 : http://localhost:8081/moneyLog/heatLog/add
2019-04-08 09:31:37 -HTTP METHOD : GET
2019-04-08 09:31:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.add
2019-04-08 09:31:37 -参数 : []
2019-04-08 09:31:37 -耗时 : 0
2019-04-08 09:31:37 -返回值 : moneyLog/heatLog/add
2019-04-08 09:31:37 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:31:37 -HTTP METHOD : GET
2019-04-08 09:31:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:31:37 -参数 : [userType]
2019-04-08 09:31:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:31:37 -==> Parameters: userType(String)
2019-04-08 09:31:37 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-08 09:31:37 -HTTP METHOD : GET
2019-04-08 09:31:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:31:37 -参数 : [heatType]
2019-04-08 09:31:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:31:37 -==> Parameters: heatType(String)
2019-04-08 09:31:37 -<==      Total: 2
2019-04-08 09:31:37 -耗时 : 3
2019-04-08 09:31:37 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:31:37 -<==      Total: 3
2019-04-08 09:31:37 -耗时 : 3
2019-04-08 09:31:37 -返回值 : [DictDO{id=137, name='特殊暖费1', value='4', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='商业暖', value='0', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:31:48 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 09:31:48 -HTTP METHOD : GET
2019-04-08 09:31:48 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 09:31:48 -参数 : []
2019-04-08 09:31:48 -耗时 : 1
2019-04-08 09:31:48 -返回值 : system/dept/deptTree
2019-04-08 09:31:48 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 09:31:48 -HTTP METHOD : GET
2019-04-08 09:31:48 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 09:31:48 -参数 : []
2019-04-08 09:31:48 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 09:31:48 -==> Parameters: 
2019-04-08 09:31:48 -<==      Total: 3
2019-04-08 09:31:48 -耗时 : 2
2019-04-08 09:31:48 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 09:32:19 -请求地址 : http://localhost:8081/moneyLog/heatLog/save
2019-04-08 09:32:19 -HTTP METHOD : POST
2019-04-08 09:32:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.save
2019-04-08 09:32:19 -参数 : [com.bootdo.moneyLog.domain.HeatLogDO@583af6a9]
2019-04-08 09:32:19 -==>  Preparing: insert into heat_log ( `user_id`, `user_name`, `user_type`, `user_org`, `heat_type`, `heat_money`, `heat_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 09:32:19 -==> Parameters: 000000(String), 0000(String), A(String), 2(String), 4(String), 0(BigDecimal), 2019-04-08 09:32:19.771(Timestamp), 2019-04(String), 1(Long), 2019-04-08 09:32:19.771(Timestamp), 1(Long), 999(String)
2019-04-08 09:32:19 -<==    Updates: 1
2019-04-08 09:32:19 -耗时 : 98
2019-04-08 09:32:19 -返回值 : {msg=操作成功, code=0}
2019-04-08 09:32:19 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:32:19 -HTTP METHOD : GET
2019-04-08 09:32:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:32:19 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:32:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:32:19 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:32:19 -<==      Total: 6
2019-04-08 09:32:19 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:32:19 -==> Parameters: 
2019-04-08 09:32:19 -<==      Total: 1
2019-04-08 09:32:19 -耗时 : 32
2019-04-08 09:32:19 -返回值 : com.bootdo.common.utils.PageUtils@756c3644
2019-04-08 09:32:55 -请求地址 : http://localhost:8081/moneyLog/heatLog/add
2019-04-08 09:32:55 -HTTP METHOD : GET
2019-04-08 09:32:55 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.add
2019-04-08 09:32:55 -参数 : []
2019-04-08 09:32:55 -耗时 : 1
2019-04-08 09:32:55 -返回值 : moneyLog/heatLog/add
2019-04-08 09:32:56 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:32:56 -HTTP METHOD : GET
2019-04-08 09:32:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:32:56 -参数 : [userType]
2019-04-08 09:32:56 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-08 09:32:56 -HTTP METHOD : GET
2019-04-08 09:32:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:32:56 -参数 : [heatType]
2019-04-08 09:32:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:32:56 -==> Parameters: heatType(String)
2019-04-08 09:32:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:32:56 -==> Parameters: userType(String)
2019-04-08 09:32:56 -<==      Total: 3
2019-04-08 09:32:56 -<==      Total: 2
2019-04-08 09:32:56 -耗时 : 3
2019-04-08 09:32:56 -耗时 : 4
2019-04-08 09:32:56 -返回值 : [DictDO{id=137, name='特殊暖费1', value='4', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='商业暖', value='0', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:32:56 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:33:13 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 09:33:13 -HTTP METHOD : GET
2019-04-08 09:33:13 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 09:33:13 -参数 : []
2019-04-08 09:33:13 -耗时 : 0
2019-04-08 09:33:13 -返回值 : system/dept/deptTree
2019-04-08 09:33:14 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 09:33:14 -HTTP METHOD : GET
2019-04-08 09:33:14 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 09:33:14 -参数 : []
2019-04-08 09:33:14 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 09:33:14 -==> Parameters: 
2019-04-08 09:33:14 -<==      Total: 3
2019-04-08 09:33:14 -耗时 : 3
2019-04-08 09:33:14 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 09:33:15 -请求地址 : http://localhost:8081/moneyLog/heatLog/save
2019-04-08 09:33:15 -HTTP METHOD : POST
2019-04-08 09:33:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.save
2019-04-08 09:33:15 -参数 : [com.bootdo.moneyLog.domain.HeatLogDO@30c15971]
2019-04-08 09:33:15 -==>  Preparing: insert into heat_log ( `user_id`, `user_name`, `user_type`, `user_org`, `heat_type`, `heat_money`, `heat_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 09:33:15 -==> Parameters: 1(String), 1(String), A(String), 2(String), 4(String), 1(BigDecimal), 2019-04-08 09:33:15.689(Timestamp), 2019-04(String), 1(Long), 2019-04-08 09:33:15.689(Timestamp), 1(Long), (String)
2019-04-08 09:33:15 -<==    Updates: 1
2019-04-08 09:33:15 -耗时 : 120
2019-04-08 09:33:15 -返回值 : {msg=操作成功, code=0}
2019-04-08 09:33:15 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:33:15 -HTTP METHOD : GET
2019-04-08 09:33:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:33:15 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:33:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:33:15 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:33:15 -<==      Total: 7
2019-04-08 09:33:15 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:33:15 -==> Parameters: 
2019-04-08 09:33:15 -<==      Total: 1
2019-04-08 09:33:15 -耗时 : 17
2019-04-08 09:33:15 -返回值 : com.bootdo.common.utils.PageUtils@15e7b97c
2019-04-08 09:33:34 -请求地址 : http://localhost:8081/moneyLog/heatLog/edit/7
2019-04-08 09:33:34 -HTTP METHOD : GET
2019-04-08 09:33:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.edit
2019-04-08 09:33:34 -参数 : [7, {}]
2019-04-08 09:33:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log where id = ? 
2019-04-08 09:33:34 -==> Parameters: 7(Long)
2019-04-08 09:33:34 -<==      Total: 1
2019-04-08 09:33:34 -耗时 : 7
2019-04-08 09:33:34 -返回值 : moneyLog/heatLog/edit
2019-04-08 09:33:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:33:34 -HTTP METHOD : GET
2019-04-08 09:33:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:33:34 -参数 : [userType]
2019-04-08 09:33:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:33:34 -==> Parameters: userType(String)
2019-04-08 09:33:34 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-08 09:33:34 -HTTP METHOD : GET
2019-04-08 09:33:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:33:34 -参数 : [heatType]
2019-04-08 09:33:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:33:34 -==> Parameters: heatType(String)
2019-04-08 09:33:34 -<==      Total: 2
2019-04-08 09:33:34 -耗时 : 2
2019-04-08 09:33:34 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:33:34 -<==      Total: 3
2019-04-08 09:33:34 -耗时 : 2
2019-04-08 09:33:34 -返回值 : [DictDO{id=137, name='特殊暖费1', value='4', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='商业暖', value='0', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:33:36 -请求地址 : http://localhost:8081/moneyLog/heatLog/update
2019-04-08 09:33:36 -HTTP METHOD : POST
2019-04-08 09:33:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.update
2019-04-08 09:33:36 -参数 : [com.bootdo.moneyLog.domain.HeatLogDO@1598ef6a]
2019-04-08 09:33:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 09:33:36 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/heatLog/update(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String(String), null, 2019-04-08 09:33:36.219(Timestamp)
2019-04-08 09:33:36 -nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:295)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.update(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.update(HeatLogServiceImpl.java:37)
	at com.bootdo.moneyLog.controller.HeatLogController.update(HeatLogController.java:206)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$d04308b3.update(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:200)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
Caused by: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.apache.ibatis.ognl.OgnlOps.compareWithConversion(OgnlOps.java:93)
	at org.apache.ibatis.ognl.OgnlOps.isEqual(OgnlOps.java:143)
	at org.apache.ibatis.ognl.OgnlOps.equal(OgnlOps.java:802)
	at org.apache.ibatis.ognl.ASTNotEq.getValueBody(ASTNotEq.java:53)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.ASTAnd.getValueBody(ASTAnd.java:61)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:470)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:434)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.<init>(BaseStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.<init>(PreparedStatementHandler.java:40)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.<init>(RoutingStatementHandler.java:46)
	at org.apache.ibatis.session.Configuration.newStatementHandler(Configuration.java:545)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:48)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	... 108 common frames omitted
2019-04-08 09:33:36 -<==    Updates: 1
2019-04-08 09:34:19 -请求地址 : http://localhost:8081/moneyLog/heatLog/update
2019-04-08 09:34:19 -HTTP METHOD : POST
2019-04-08 09:34:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.update
2019-04-08 09:34:19 -参数 : [com.bootdo.moneyLog.domain.HeatLogDO@28abb54f]
2019-04-08 09:34:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 09:34:19 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyLog/heatLog/update(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String(String), null, 2019-04-08 09:34:19.202(Timestamp)
2019-04-08 09:34:19 -nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.update(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.update(SqlSessionTemplate.java:295)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.update(Unknown Source)
	at com.bootdo.moneyLog.service.impl.HeatLogServiceImpl.update(HeatLogServiceImpl.java:37)
	at com.bootdo.moneyLog.controller.HeatLogController.update(HeatLogController.java:206)
	at com.bootdo.moneyLog.controller.HeatLogController$$FastClassBySpringCGLIB$$930b0464.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.HeatLogController$$EnhancerBySpringCGLIB$$d04308b3.update(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error updating database.  Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
### Cause: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:200)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
Caused by: java.lang.IllegalArgumentException: invalid comparison: java.util.Date and java.lang.String
	at org.apache.ibatis.ognl.OgnlOps.compareWithConversion(OgnlOps.java:93)
	at org.apache.ibatis.ognl.OgnlOps.isEqual(OgnlOps.java:143)
	at org.apache.ibatis.ognl.OgnlOps.equal(OgnlOps.java:802)
	at org.apache.ibatis.ognl.ASTNotEq.getValueBody(ASTNotEq.java:53)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.ASTAnd.getValueBody(ASTAnd.java:61)
	at org.apache.ibatis.ognl.SimpleNode.evaluateGetValueBody(SimpleNode.java:212)
	at org.apache.ibatis.ognl.SimpleNode.getValue(SimpleNode.java:258)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:470)
	at org.apache.ibatis.ognl.Ognl.getValue(Ognl.java:434)
	at org.apache.ibatis.scripting.xmltags.OgnlCache.getValue(OgnlCache.java:44)
	at org.apache.ibatis.scripting.xmltags.ExpressionEvaluator.evaluateBoolean(ExpressionEvaluator.java:32)
	at org.apache.ibatis.scripting.xmltags.IfSqlNode.apply(IfSqlNode.java:34)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.TrimSqlNode.apply(TrimSqlNode.java:55)
	at org.apache.ibatis.scripting.xmltags.MixedSqlNode.apply(MixedSqlNode.java:33)
	at org.apache.ibatis.scripting.xmltags.DynamicSqlSource.getBoundSql(DynamicSqlSource.java:41)
	at org.apache.ibatis.mapping.MappedStatement.getBoundSql(MappedStatement.java:292)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.<init>(BaseStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.<init>(PreparedStatementHandler.java:40)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.<init>(RoutingStatementHandler.java:46)
	at org.apache.ibatis.session.Configuration.newStatementHandler(Configuration.java:545)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:48)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	... 108 common frames omitted
2019-04-08 09:34:19 -<==    Updates: 1
2019-04-08 09:37:36 -Validating all active sessions...
2019-04-08 09:37:36 -Finished session validation.  No sessions were stopped.
2019-04-08 09:37:48 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 12 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(11)-CONNECTED(11)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 132], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 22], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 859]
2019-04-08 09:41:16 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-08 09:41:16 -==> Parameters: 1(Long)
2019-04-08 09:41:16 -<==      Total: 90
2019-04-08 09:41:16 -请求地址 : http://localhost:8081/moneyLog/heatLog/add
2019-04-08 09:41:16 -HTTP METHOD : GET
2019-04-08 09:41:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.add
2019-04-08 09:41:16 -参数 : []
2019-04-08 09:41:16 -耗时 : 1
2019-04-08 09:41:16 -返回值 : moneyLog/heatLog/add
2019-04-08 09:41:16 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:41:16 -HTTP METHOD : GET
2019-04-08 09:41:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:41:16 -参数 : [userType]
2019-04-08 09:41:16 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-08 09:41:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:41:16 -HTTP METHOD : GET
2019-04-08 09:41:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:41:16 -==> Parameters: userType(String)
2019-04-08 09:41:16 -参数 : [heatType]
2019-04-08 09:41:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:41:16 -==> Parameters: heatType(String)
2019-04-08 09:41:16 -<==      Total: 2
2019-04-08 09:41:16 -耗时 : 3
2019-04-08 09:41:16 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:41:16 -<==      Total: 3
2019-04-08 09:41:16 -耗时 : 5
2019-04-08 09:41:16 -返回值 : [DictDO{id=137, name='特殊暖费1', value='4', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='商业暖', value='0', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:41:27 -请求地址 : http://localhost:8081/moneyLog/heatLog/edit/7
2019-04-08 09:41:27 -HTTP METHOD : GET
2019-04-08 09:41:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.edit
2019-04-08 09:41:27 -参数 : [7, {}]
2019-04-08 09:41:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log where id = ? 
2019-04-08 09:41:27 -==> Parameters: 7(Long)
2019-04-08 09:41:27 -<==      Total: 1
2019-04-08 09:41:27 -耗时 : 2
2019-04-08 09:41:27 -返回值 : moneyLog/heatLog/edit
2019-04-08 09:41:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:41:27 -HTTP METHOD : GET
2019-04-08 09:41:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:41:27 -参数 : [userType]
2019-04-08 09:41:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:41:27 -==> Parameters: userType(String)
2019-04-08 09:41:27 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-08 09:41:27 -HTTP METHOD : GET
2019-04-08 09:41:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:41:27 -参数 : [heatType]
2019-04-08 09:41:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:41:27 -==> Parameters: heatType(String)
2019-04-08 09:41:27 -<==      Total: 2
2019-04-08 09:41:27 -耗时 : 2
2019-04-08 09:41:27 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:41:27 -<==      Total: 3
2019-04-08 09:41:27 -耗时 : 3
2019-04-08 09:41:27 -返回值 : [DictDO{id=137, name='特殊暖费1', value='4', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='商业暖', value='0', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:42:00 -请求地址 : http://localhost:8081/moneyLog/heatLog/add
2019-04-08 09:42:00 -HTTP METHOD : GET
2019-04-08 09:42:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.add
2019-04-08 09:42:00 -参数 : []
2019-04-08 09:42:00 -耗时 : 0
2019-04-08 09:42:00 -返回值 : moneyLog/heatLog/add
2019-04-08 09:42:00 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:42:00 -HTTP METHOD : GET
2019-04-08 09:42:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:42:00 -参数 : [userType]
2019-04-08 09:42:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:42:00 -==> Parameters: userType(String)
2019-04-08 09:42:00 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-08 09:42:00 -HTTP METHOD : GET
2019-04-08 09:42:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:42:00 -参数 : [heatType]
2019-04-08 09:42:00 -<==      Total: 2
2019-04-08 09:42:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:42:00 -==> Parameters: heatType(String)
2019-04-08 09:42:00 -耗时 : 5
2019-04-08 09:42:00 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:42:00 -<==      Total: 3
2019-04-08 09:42:00 -耗时 : 5
2019-04-08 09:42:00 -返回值 : [DictDO{id=137, name='特殊暖费1', value='4', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='商业暖', value='0', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:52:55 -Starting BootdoApplication on ZJZL-20180906VX with PID 11520 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-08 09:52:55 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-08 09:52:55 -The following profiles are active: dev
2019-04-08 09:52:55 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 08 09:52:55 CST 2019]; root of context hierarchy
2019-04-08 09:53:01 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-08 09:53:03 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$daf57eb1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 09:53:03 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$cd4ead58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 09:53:05 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 09:53:05 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 09:53:05 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 09:53:05 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-08 09:53:05 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-08 09:53:05 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 09:53:06 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 09:53:06 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 09:53:06 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 09:53:07 -Tomcat initialized with port(s): 8081 (http)
2019-04-08 09:53:07 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-08 09:53:07 -Starting service [Tomcat]
2019-04-08 09:53:07 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-08 09:53:07 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-08 09:53:07 -Initializing Spring embedded WebApplicationContext
2019-04-08 09:53:07 -Root WebApplicationContext: initialization completed in 12608 ms
2019-04-08 09:53:08 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-08 09:53:08 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-08 09:53:08 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-08 09:53:08 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-08 09:53:08 -Filter xssFilter was not registered (disabled)
2019-04-08 09:53:08 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-08 09:53:08 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-08 09:53:08 -Servlet statViewServlet mapped to [/druid/*]
2019-04-08 09:53:08 -Servlet dispatcherServlet mapped to [/]
2019-04-08 09:53:12 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 08 09:52:55 CST 2019]; root of context hierarchy
2019-04-08 09:53:12 -Using default implementation for ThreadExecutor
2019-04-08 09:53:13 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-08 09:53:13 -Quartz Scheduler v.2.2.1 created.
2019-04-08 09:53:13 -RAMJobStore initialized.
2019-04-08 09:53:13 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-08 09:53:13 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-08 09:53:13 -Quartz scheduler version: 2.2.1
2019-04-08 09:53:13 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@5873f3f0
2019-04-08 09:53:13 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-08 09:53:13 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-08 09:53:16 -Mapped "{[/charts/countDD/tableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.tableDD()
2019-04-08 09:53:16 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-08 09:53:16 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-08 09:53:16 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 09:53:16 -Mapped "{[/charts/countMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 09:53:16 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-08 09:53:16 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-08 09:53:16 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-08 09:53:16 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-08 09:53:16 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public int com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-08 09:53:16 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 09:53:16 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-08 09:53:16 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-08 09:53:16 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public int com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-08 09:53:16 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 09:53:16 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-08 09:53:16 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-08 09:53:16 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-08 09:53:16 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-08 09:53:16 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 09:53:16 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-08 09:53:16 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-08 09:53:16 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-08 09:53:16 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 09:53:16 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-08 09:53:16 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-08 09:53:16 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-08 09:53:16 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-08 09:53:16 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-08 09:53:16 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-08 09:53:16 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 09:53:16 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-08 09:53:16 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-08 09:53:16 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 09:53:16 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-08 09:53:16 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-08 09:53:16 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 09:53:16 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-08 09:53:16 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-08 09:53:16 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-08 09:53:16 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-08 09:53:16 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-08 09:53:16 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-08 09:53:16 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-08 09:53:16 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-08 09:53:16 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-08 09:53:16 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 09:53:16 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-08 09:53:16 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-08 09:53:16 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 09:53:16 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-08 09:53:16 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-08 09:53:16 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-08 09:53:16 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-08 09:53:16 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 09:53:16 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-08 09:53:16 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-08 09:53:16 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-08 09:53:16 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-08 09:53:16 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-08 09:53:16 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-08 09:53:16 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-08 09:53:16 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-08 09:53:16 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-08 09:53:16 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-08 09:53:16 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-08 09:53:16 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 09:53:16 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-08 09:53:16 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-08 09:53:16 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-08 09:53:16 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-08 09:53:16 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-08 09:53:16 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-08 09:53:16 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-08 09:53:16 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-08 09:53:16 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-08 09:53:16 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 09:53:16 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-08 09:53:16 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 09:53:16 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-08 09:53:16 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-08 09:53:16 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-08 09:53:16 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-08 09:53:16 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-08 09:53:16 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-08 09:53:16 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-08 09:53:16 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 09:53:16 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-08 09:53:16 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-08 09:53:16 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-08 09:53:16 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-08 09:53:16 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-08 09:53:16 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-08 09:53:16 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-08 09:53:16 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-08 09:53:16 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-08 09:53:16 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-08 09:53:16 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 09:53:16 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-08 09:53:16 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 09:53:16 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-08 09:53:16 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-08 09:53:16 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-08 09:53:16 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-08 09:53:16 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-08 09:53:16 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-08 09:53:16 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-08 09:53:16 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-08 09:53:16 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-08 09:53:16 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-08 09:53:16 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-08 09:53:16 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-08 09:53:16 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-08 09:53:16 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 09:53:16 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-08 09:53:16 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 09:53:16 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-08 09:53:16 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 09:53:16 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-08 09:53:16 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-08 09:53:16 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-08 09:53:16 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-08 09:53:16 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 09:53:16 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-08 09:53:16 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 09:53:16 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-08 09:53:16 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 09:53:16 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-08 09:53:16 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-08 09:53:16 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-08 09:53:16 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-08 09:53:16 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 09:53:16 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-08 09:53:16 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 09:53:16 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-08 09:53:16 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 09:53:16 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-08 09:53:16 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-08 09:53:16 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-08 09:53:16 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-08 09:53:16 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-08 09:53:16 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 09:53:16 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-08 09:53:16 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-08 09:53:16 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 09:53:16 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-08 09:53:16 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 09:53:16 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-08 09:53:16 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-08 09:53:16 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-08 09:53:16 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-08 09:53:16 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-08 09:53:16 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 09:53:16 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-08 09:53:16 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 09:53:16 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 09:53:16 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 09:53:16 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-08 09:53:16 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-08 09:53:16 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-08 09:53:16 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-08 09:53:16 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-08 09:53:16 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-08 09:53:16 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-08 09:53:16 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-08 09:53:16 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 09:53:16 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-08 09:53:16 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-08 09:53:16 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-08 09:53:16 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-08 09:53:16 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-08 09:53:16 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-08 09:53:16 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-08 09:53:16 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-08 09:53:16 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-08 09:53:16 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-08 09:53:16 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-08 09:53:16 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-08 09:53:16 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 09:53:16 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-08 09:53:16 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-08 09:53:16 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-08 09:53:16 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-08 09:53:16 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-08 09:53:17 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-08 09:53:17 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-08 09:53:17 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-08 09:53:17 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-08 09:53:17 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-08 09:53:17 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-08 09:53:17 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 09:53:17 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-08 09:53:17 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-08 09:53:17 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-08 09:53:17 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-08 09:53:17 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-08 09:53:17 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 09:53:17 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-08 09:53:17 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-08 09:53:17 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-08 09:53:17 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 09:53:17 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-08 09:53:17 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-08 09:53:17 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-08 09:53:17 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-08 09:53:17 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-08 09:53:17 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-08 09:53:17 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-08 09:53:17 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-08 09:53:17 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-08 09:53:17 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-08 09:53:17 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-08 09:53:17 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-08 09:53:17 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-08 09:53:17 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-08 09:53:17 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-08 09:53:17 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-08 09:53:17 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-08 09:53:17 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 09:53:17 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-08 09:53:17 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 09:53:17 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-08 09:53:17 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-08 09:53:17 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-08 09:53:17 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-08 09:53:17 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-08 09:53:17 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-08 09:53:17 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-08 09:53:17 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-08 09:53:17 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 09:53:17 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-08 09:53:17 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 09:53:17 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-08 09:53:17 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-08 09:53:17 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-08 09:53:17 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-08 09:53:17 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-08 09:53:17 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-08 09:53:17 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-08 09:53:17 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-08 09:53:17 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-08 09:53:17 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-08 09:53:17 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-08 09:53:17 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-08 09:53:18 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-08 09:53:18 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 08 09:52:55 CST 2019]; root of context hierarchy
2019-04-08 09:53:18 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-08 09:53:18 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-08 09:53:18 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-08 09:53:18 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-08 09:53:19 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-08 09:53:21 -Registering beans for JMX exposure on startup
2019-04-08 09:53:21 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-08 09:53:21 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-08 09:53:21 -Starting beans in phase 2147483647
2019-04-08 09:53:21 -Context refreshed
2019-04-08 09:53:21 -Found 1 custom documentation plugin(s)
2019-04-08 09:53:21 -Scanning for api listing references
2019-04-08 09:53:21 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-08 09:53:21 -Generating unique operation named: getCountDUsingPOST_1
2019-04-08 09:53:21 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-08 09:53:21 -Generating unique operation named: getCountDUsingPOST_2
2019-04-08 09:53:21 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-08 09:53:21 -Generating unique operation named: getCountDUsingPOST_3
2019-04-08 09:53:22 -Generating unique operation named: removeUsingPOST_1
2019-04-08 09:53:22 -Generating unique operation named: addUsingGET_1
2019-04-08 09:53:22 -Generating unique operation named: editUsingGET_1
2019-04-08 09:53:22 -Generating unique operation named: listUsingGET_1
2019-04-08 09:53:22 -Generating unique operation named: removeUsingPOST_2
2019-04-08 09:53:22 -Generating unique operation named: removeUsingPOST_3
2019-04-08 09:53:22 -Generating unique operation named: saveUsingPOST_1
2019-04-08 09:53:22 -Generating unique operation named: updateUsingGET_1
2019-04-08 09:53:22 -Generating unique operation named: updateUsingHEAD_1
2019-04-08 09:53:22 -Generating unique operation named: updateUsingPOST_1
2019-04-08 09:53:22 -Generating unique operation named: updateUsingPUT_1
2019-04-08 09:53:22 -Generating unique operation named: updateUsingPATCH_1
2019-04-08 09:53:22 -Generating unique operation named: updateUsingDELETE_1
2019-04-08 09:53:22 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-08 09:53:22 -Generating unique operation named: updateUsingTRACE_1
2019-04-08 09:53:22 -Generating unique operation named: addUsingGET_2
2019-04-08 09:53:22 -Generating unique operation named: editUsingGET_2
2019-04-08 09:53:22 -Generating unique operation named: listUsingGET_2
2019-04-08 09:53:22 -Generating unique operation named: removeUsingPOST_4
2019-04-08 09:53:22 -Generating unique operation named: removeUsingPOST_5
2019-04-08 09:53:22 -Generating unique operation named: saveUsingPOST_2
2019-04-08 09:53:22 -Generating unique operation named: updateUsingPOST_2
2019-04-08 09:53:22 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-08 09:53:22 -Generating unique operation named: addUsingGET_3
2019-04-08 09:53:22 -Generating unique operation named: editUsingGET_3
2019-04-08 09:53:22 -Generating unique operation named: exprotElecLogUsingGET_4
2019-04-08 09:53:22 -Generating unique operation named: listUsingGET_3
2019-04-08 09:53:22 -Generating unique operation named: removeUsingPOST_6
2019-04-08 09:53:22 -Generating unique operation named: removeUsingPOST_7
2019-04-08 09:53:22 -Generating unique operation named: saveUsingPOST_3
2019-04-08 09:53:22 -Generating unique operation named: updateUsingGET_2
2019-04-08 09:53:22 -Generating unique operation named: updateUsingHEAD_2
2019-04-08 09:53:22 -Generating unique operation named: updateUsingPOST_3
2019-04-08 09:53:22 -Generating unique operation named: updateUsingPUT_2
2019-04-08 09:53:22 -Generating unique operation named: updateUsingPATCH_2
2019-04-08 09:53:22 -Generating unique operation named: updateUsingDELETE_2
2019-04-08 09:53:22 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-08 09:53:22 -Generating unique operation named: updateUsingTRACE_2
2019-04-08 09:53:22 -Generating unique operation named: addUsingGET_4
2019-04-08 09:53:22 -Generating unique operation named: editUsingGET_4
2019-04-08 09:53:22 -Generating unique operation named: listUsingGET_4
2019-04-08 09:53:22 -Generating unique operation named: removeUsingPOST_8
2019-04-08 09:53:22 -Generating unique operation named: removeUsingPOST_9
2019-04-08 09:53:22 -Generating unique operation named: saveUsingPOST_4
2019-04-08 09:53:22 -Generating unique operation named: updateUsingGET_3
2019-04-08 09:53:22 -Generating unique operation named: updateUsingHEAD_3
2019-04-08 09:53:22 -Generating unique operation named: updateUsingPOST_4
2019-04-08 09:53:22 -Generating unique operation named: updateUsingPUT_3
2019-04-08 09:53:22 -Generating unique operation named: updateUsingPATCH_3
2019-04-08 09:53:22 -Generating unique operation named: updateUsingDELETE_3
2019-04-08 09:53:22 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-08 09:53:22 -Generating unique operation named: updateUsingTRACE_3
2019-04-08 09:53:22 -Generating unique operation named: ElecUsingGET_1
2019-04-08 09:53:22 -Generating unique operation named: addUsingGET_5
2019-04-08 09:53:22 -Generating unique operation named: editUsingGET_5
2019-04-08 09:53:22 -Generating unique operation named: listUsingGET_5
2019-04-08 09:53:22 -Generating unique operation named: removeUsingPOST_10
2019-04-08 09:53:22 -Generating unique operation named: removeUsingPOST_11
2019-04-08 09:53:22 -Generating unique operation named: saveUsingPOST_5
2019-04-08 09:53:22 -Generating unique operation named: updateUsingGET_4
2019-04-08 09:53:22 -Generating unique operation named: updateUsingHEAD_4
2019-04-08 09:53:22 -Generating unique operation named: updateUsingPOST_5
2019-04-08 09:53:22 -Generating unique operation named: updateUsingPUT_4
2019-04-08 09:53:22 -Generating unique operation named: updateUsingPATCH_4
2019-04-08 09:53:22 -Generating unique operation named: updateUsingDELETE_4
2019-04-08 09:53:22 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-08 09:53:22 -Generating unique operation named: updateUsingTRACE_4
2019-04-08 09:53:22 -Generating unique operation named: editUsingGET_6
2019-04-08 09:53:23 -Generating unique operation named: listUsingGET_6
2019-04-08 09:53:23 -Generating unique operation named: updateUsingPOST_6
2019-04-08 09:53:23 -Generating unique operation named: addUsingGET_6
2019-04-08 09:53:23 -Generating unique operation named: editUsingGET_7
2019-04-08 09:53:23 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-08 09:53:23 -Generating unique operation named: listUsingGET_7
2019-04-08 09:53:23 -Generating unique operation named: removeUsingPOST_12
2019-04-08 09:53:23 -Generating unique operation named: removeUsingPOST_13
2019-04-08 09:53:23 -Generating unique operation named: saveUsingPOST_6
2019-04-08 09:53:23 -Generating unique operation named: updateUsingGET_5
2019-04-08 09:53:23 -Generating unique operation named: updateUsingHEAD_5
2019-04-08 09:53:23 -Generating unique operation named: updateUsingPOST_7
2019-04-08 09:53:23 -Generating unique operation named: updateUsingPUT_5
2019-04-08 09:53:23 -Generating unique operation named: updateUsingPATCH_5
2019-04-08 09:53:23 -Generating unique operation named: updateUsingDELETE_5
2019-04-08 09:53:23 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-08 09:53:23 -Generating unique operation named: updateUsingTRACE_5
2019-04-08 09:53:23 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-08 09:53:23 -Generating unique operation named: addUsingGET_7
2019-04-08 09:53:23 -Generating unique operation named: editUsingGET_8
2019-04-08 09:53:23 -Generating unique operation named: listUsingGET_8
2019-04-08 09:53:23 -Generating unique operation named: removeUsingPOST_14
2019-04-08 09:53:23 -Generating unique operation named: removeUsingPOST_15
2019-04-08 09:53:23 -Generating unique operation named: saveUsingPOST_7
2019-04-08 09:53:23 -Generating unique operation named: updateUsingGET_6
2019-04-08 09:53:23 -Generating unique operation named: updateUsingHEAD_6
2019-04-08 09:53:23 -Generating unique operation named: updateUsingPOST_8
2019-04-08 09:53:23 -Generating unique operation named: updateUsingPUT_6
2019-04-08 09:53:23 -Generating unique operation named: updateUsingPATCH_6
2019-04-08 09:53:23 -Generating unique operation named: updateUsingDELETE_6
2019-04-08 09:53:23 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-08 09:53:23 -Generating unique operation named: updateUsingTRACE_6
2019-04-08 09:53:23 -Generating unique operation named: addUsingGET_8
2019-04-08 09:53:23 -Generating unique operation named: editUsingGET_9
2019-04-08 09:53:23 -Generating unique operation named: listUsingGET_9
2019-04-08 09:53:23 -Generating unique operation named: removeUsingPOST_16
2019-04-08 09:53:23 -Generating unique operation named: removeUsingPOST_17
2019-04-08 09:53:23 -Generating unique operation named: saveUsingPOST_8
2019-04-08 09:53:23 -Generating unique operation named: updateUsingGET_7
2019-04-08 09:53:23 -Generating unique operation named: updateUsingHEAD_7
2019-04-08 09:53:23 -Generating unique operation named: updateUsingPOST_9
2019-04-08 09:53:23 -Generating unique operation named: updateUsingPUT_7
2019-04-08 09:53:23 -Generating unique operation named: updateUsingPATCH_7
2019-04-08 09:53:23 -Generating unique operation named: updateUsingDELETE_7
2019-04-08 09:53:23 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-08 09:53:23 -Generating unique operation named: updateUsingTRACE_7
2019-04-08 09:53:23 -Generating unique operation named: addUsingGET_9
2019-04-08 09:53:23 -Generating unique operation named: editUsingGET_10
2019-04-08 09:53:23 -Generating unique operation named: infoUsingGET_1
2019-04-08 09:53:23 -Generating unique operation named: infoUsingHEAD_1
2019-04-08 09:53:23 -Generating unique operation named: infoUsingPOST_1
2019-04-08 09:53:23 -Generating unique operation named: infoUsingPUT_1
2019-04-08 09:53:23 -Generating unique operation named: infoUsingPATCH_1
2019-04-08 09:53:23 -Generating unique operation named: infoUsingDELETE_1
2019-04-08 09:53:23 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-08 09:53:23 -Generating unique operation named: infoUsingTRACE_1
2019-04-08 09:53:23 -Generating unique operation named: listUsingGET_10
2019-04-08 09:53:23 -Generating unique operation named: removeUsingPOST_18
2019-04-08 09:53:23 -Generating unique operation named: removeUsingPOST_19
2019-04-08 09:53:23 -Generating unique operation named: saveUsingPOST_9
2019-04-08 09:53:23 -Generating unique operation named: updateUsingPOST_10
2019-04-08 09:53:23 -Generating unique operation named: listUsingGET_11
2019-04-08 09:53:23 -Generating unique operation named: removeUsingPOST_20
2019-04-08 09:53:23 -Generating unique operation named: welcomeUsingGET_1
2019-04-08 09:53:23 -Generating unique operation named: addUsingGET_10
2019-04-08 09:53:23 -Generating unique operation named: editUsingGET_11
2019-04-08 09:53:23 -Generating unique operation named: listUsingGET_12
2019-04-08 09:53:23 -Generating unique operation named: removeUsingPOST_21
2019-04-08 09:53:23 -Generating unique operation named: saveUsingPOST_10
2019-04-08 09:53:23 -Generating unique operation named: treeUsingGET_1
2019-04-08 09:53:23 -Generating unique operation named: treeUsingGET_2
2019-04-08 09:53:23 -Generating unique operation named: updateUsingPOST_11
2019-04-08 09:53:23 -Generating unique operation named: addUsingGET_11
2019-04-08 09:53:23 -Generating unique operation named: editUsingGET_12
2019-04-08 09:53:23 -Generating unique operation named: listUsingGET_13
2019-04-08 09:53:23 -Generating unique operation named: removeUsingPOST_22
2019-04-08 09:53:23 -Generating unique operation named: removeUsingPOST_23
2019-04-08 09:53:23 -Generating unique operation named: saveUsingPOST_11
2019-04-08 09:53:24 -Generating unique operation named: updateUsingGET_8
2019-04-08 09:53:24 -Generating unique operation named: updateUsingHEAD_8
2019-04-08 09:53:24 -Generating unique operation named: updateUsingPOST_12
2019-04-08 09:53:24 -Generating unique operation named: updateUsingPUT_8
2019-04-08 09:53:24 -Generating unique operation named: updateUsingPATCH_8
2019-04-08 09:53:24 -Generating unique operation named: updateUsingDELETE_8
2019-04-08 09:53:24 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-08 09:53:24 -Generating unique operation named: updateUsingTRACE_8
2019-04-08 09:53:24 -Generating unique operation named: addUsingGET_12
2019-04-08 09:53:24 -Generating unique operation named: editUsingGET_13
2019-04-08 09:53:24 -Generating unique operation named: listUsingGET_14
2019-04-08 09:53:24 -Generating unique operation named: removeUsingPOST_24
2019-04-08 09:53:24 -Generating unique operation named: removeUsingPOST_25
2019-04-08 09:53:24 -Generating unique operation named: saveUsingPOST_12
2019-04-08 09:53:24 -Generating unique operation named: updateUsingGET_9
2019-04-08 09:53:24 -Generating unique operation named: updateUsingHEAD_9
2019-04-08 09:53:24 -Generating unique operation named: updateUsingPOST_13
2019-04-08 09:53:24 -Generating unique operation named: updateUsingPUT_9
2019-04-08 09:53:24 -Generating unique operation named: updateUsingPATCH_9
2019-04-08 09:53:24 -Generating unique operation named: updateUsingDELETE_9
2019-04-08 09:53:24 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-08 09:53:24 -Generating unique operation named: updateUsingTRACE_9
2019-04-08 09:53:24 -Generating unique operation named: addUsingGET_13
2019-04-08 09:53:24 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-08 09:53:24 -Generating unique operation named: editUsingGET_14
2019-04-08 09:53:24 -Generating unique operation named: listUsingGET_15
2019-04-08 09:53:24 -Generating unique operation named: saveUsingPOST_13
2019-04-08 09:53:24 -Generating unique operation named: saveUsingPOST_14
2019-04-08 09:53:24 -Generating unique operation named: updateUsingPOST_14
2019-04-08 09:53:24 -Generating unique operation named: listUsingGET_16
2019-04-08 09:53:24 -Generating unique operation named: listUsingHEAD_1
2019-04-08 09:53:24 -Generating unique operation named: listUsingPOST_1
2019-04-08 09:53:24 -Generating unique operation named: listUsingPUT_1
2019-04-08 09:53:24 -Generating unique operation named: listUsingPATCH_1
2019-04-08 09:53:24 -Generating unique operation named: listUsingDELETE_1
2019-04-08 09:53:24 -Generating unique operation named: listUsingOPTIONS_1
2019-04-08 09:53:24 -Generating unique operation named: listUsingTRACE_1
2019-04-08 09:53:24 -Generating unique operation named: addUsingGET_14
2019-04-08 09:53:24 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-08 09:53:24 -Generating unique operation named: editUsingGET_15
2019-04-08 09:53:24 -Generating unique operation named: listUsingGET_17
2019-04-08 09:53:24 -Generating unique operation named: removeUsingPOST_26
2019-04-08 09:53:24 -Generating unique operation named: saveUsingPOST_15
2019-04-08 09:53:24 -Generating unique operation named: treeUsingGET_3
2019-04-08 09:53:24 -Generating unique operation named: treeViewUsingGET_1
2019-04-08 09:53:24 -Generating unique operation named: updateUsingPOST_15
2019-04-08 09:53:24 -Generating unique operation named: addUsingGET_15
2019-04-08 09:53:24 -Generating unique operation named: editUsingGET_16
2019-04-08 09:53:24 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-08 09:53:24 -Generating unique operation named: listUsingGET_18
2019-04-08 09:53:24 -Generating unique operation named: removeUsingPOST_27
2019-04-08 09:53:24 -Generating unique operation named: removeUsingPOST_28
2019-04-08 09:53:24 -Generating unique operation named: saveUsingPOST_16
2019-04-08 09:53:24 -Generating unique operation named: updateUsingGET_10
2019-04-08 09:53:24 -Generating unique operation named: updateUsingHEAD_10
2019-04-08 09:53:24 -Generating unique operation named: updateUsingPOST_16
2019-04-08 09:53:24 -Generating unique operation named: updateUsingPUT_10
2019-04-08 09:53:24 -Generating unique operation named: updateUsingPATCH_10
2019-04-08 09:53:24 -Generating unique operation named: updateUsingDELETE_10
2019-04-08 09:53:24 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-08 09:53:24 -Generating unique operation named: updateUsingTRACE_10
2019-04-08 09:53:24 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-08 09:53:24 -Generating unique operation named: addUsingGET_16
2019-04-08 09:53:24 -Generating unique operation named: editUsingGET_17
2019-04-08 09:53:24 -Generating unique operation named: listUsingGET_19
2019-04-08 09:53:24 -Generating unique operation named: removeUsingPOST_29
2019-04-08 09:53:24 -Generating unique operation named: removeUsingPOST_30
2019-04-08 09:53:24 -Generating unique operation named: saveUsingPOST_17
2019-04-08 09:53:24 -Generating unique operation named: updateUsingGET_11
2019-04-08 09:53:24 -Generating unique operation named: updateUsingHEAD_11
2019-04-08 09:53:24 -Generating unique operation named: updateUsingPOST_17
2019-04-08 09:53:24 -Generating unique operation named: updateUsingPUT_11
2019-04-08 09:53:24 -Generating unique operation named: updateUsingPATCH_11
2019-04-08 09:53:24 -Generating unique operation named: updateUsingDELETE_11
2019-04-08 09:53:24 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-08 09:53:24 -Generating unique operation named: updateUsingTRACE_11
2019-04-08 09:53:24 -Generating unique operation named: addUsingGET_17
2019-04-08 09:53:24 -Generating unique operation named: editUsingGET_18
2019-04-08 09:53:24 -Generating unique operation named: listUsingGET_20
2019-04-08 09:53:24 -Generating unique operation named: removeUsingPOST_31
2019-04-08 09:53:24 -Generating unique operation named: removeUsingPOST_32
2019-04-08 09:53:24 -Generating unique operation named: saveUsingPOST_18
2019-04-08 09:53:24 -Generating unique operation named: updateUsingGET_12
2019-04-08 09:53:24 -Generating unique operation named: updateUsingHEAD_12
2019-04-08 09:53:24 -Generating unique operation named: updateUsingPOST_18
2019-04-08 09:53:24 -Generating unique operation named: updateUsingPUT_12
2019-04-08 09:53:24 -Generating unique operation named: updateUsingPATCH_12
2019-04-08 09:53:24 -Generating unique operation named: updateUsingDELETE_12
2019-04-08 09:53:24 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-08 09:53:24 -Generating unique operation named: updateUsingTRACE_12
2019-04-08 09:53:24 -Starting Quartz Scheduler now
2019-04-08 09:53:24 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-08 09:53:24 -Starting...
2019-04-08 09:53:24 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-08 09:53:24 -Started.
2019-04-08 09:53:24 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-08 09:53:25 -Using a shared selector for servlet write/read
2019-04-08 09:53:25 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-08 09:53:25 -Started BootdoApplication in 31.458 seconds (JVM running for 32.389)
2019-04-08 09:53:25 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-08 09:53:25 -==> Parameters: 
2019-04-08 09:53:25 -<==      Total: 1
2019-04-08 09:54:04 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-08 09:54:04 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-08 09:54:04 -FrameworkServlet 'dispatcherServlet': initialization completed in 75 ms
2019-04-08 09:54:05 -Enabling session validation scheduler...
2019-04-08 09:54:05 -请求地址 : http://localhost:8081/login;JSESSIONID=2371bbb0-6e7c-4e0a-97c4-4975d72a6849
2019-04-08 09:54:05 -HTTP METHOD : GET
2019-04-08 09:54:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-08 09:54:05 -参数 : [{}]
2019-04-08 09:54:05 -耗时 : 6
2019-04-08 09:54:05 -返回值 : login
2019-04-08 09:54:06 -请求地址 : http://localhost:8081/getVerify
2019-04-08 09:54:06 -HTTP METHOD : GET
2019-04-08 09:54:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-08 09:54:06 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@57590af4, org.apache.shiro.web.servlet.ShiroHttpServletResponse@41f3251a]
2019-04-08 09:54:14 -8556
2019-04-08 09:54:15 -耗时 : 8415
2019-04-08 09:54:15 -返回值 : null
2019-04-08 09:54:17 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-04-08 09:54:30 -请求地址 : http://localhost:8081/login
2019-04-08 09:54:30 -HTTP METHOD : POST
2019-04-08 09:54:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-08 09:54:30 -参数 : [admin, 111111, 8556, org.apache.shiro.web.servlet.ShiroHttpServletRequest@602f409d]
2019-04-08 09:54:30 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-08 09:54:30 -==> Parameters: admin(String)
2019-04-08 09:54:30 -<==      Total: 1
2019-04-08 09:54:30 -耗时 : 398
2019-04-08 09:54:30 -返回值 : {msg=操作成功, code=0}
2019-04-08 09:54:30 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-08 09:54:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 09:54:30 -==> Parameters: 1(Long), admin(String), 登录(String), 398(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-08 09:54:30.555(Timestamp)
2019-04-08 09:54:30 -<==    Updates: 1
2019-04-08 09:54:30 -请求地址 : http://localhost:8081/index
2019-04-08 09:54:30 -HTTP METHOD : GET
2019-04-08 09:54:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 09:54:30 -参数 : [{}]
2019-04-08 09:54:30 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 09:54:31 -==> Parameters: 1(Long)
2019-04-08 09:54:31 -<==      Total: 46
2019-04-08 09:54:31 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 09:54:31 -==> Parameters: 138(Long)
2019-04-08 09:54:31 -<==      Total: 1
2019-04-08 09:54:31 -耗时 : 392
2019-04-08 09:54:31 -返回值 : index_v1
2019-04-08 09:54:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 09:54:31 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 392(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 09:54:31.189(Timestamp)
2019-04-08 09:54:31 -<==    Updates: 1
2019-04-08 09:54:31 -请求地址 : http://localhost:8081/main
2019-04-08 09:54:31 -HTTP METHOD : GET
2019-04-08 09:54:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 09:54:31 -参数 : []
2019-04-08 09:54:31 -耗时 : 1
2019-04-08 09:54:31 -返回值 : main
2019-04-08 09:54:31 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 09:54:31 -HTTP METHOD : GET
2019-04-08 09:54:31 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 09:54:31 -参数 : []
2019-04-08 09:54:31 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 09:54:31 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 09:54:31 -<==      Total: 0
2019-04-08 09:54:31 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 09:54:31 -==> Parameters: 1(Long), 0(String)
2019-04-08 09:54:31 -<==      Total: 1
2019-04-08 09:54:31 -耗时 : 157
2019-04-08 09:54:31 -返回值 : com.bootdo.common.utils.PageUtils@2af1547f
2019-04-08 09:54:31 -请求地址 : http://localhost:8081/main
2019-04-08 09:54:31 -HTTP METHOD : GET
2019-04-08 09:54:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 09:54:31 -参数 : []
2019-04-08 09:54:31 -耗时 : 2
2019-04-08 09:54:31 -返回值 : main
2019-04-08 09:54:38 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-08 09:54:38 -==> Parameters: 1(Long)
2019-04-08 09:54:38 -<==      Total: 90
2019-04-08 09:54:38 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:54:38 -HTTP METHOD : GET
2019-04-08 09:54:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:54:38 -参数 : []
2019-04-08 09:54:38 -耗时 : 1
2019-04-08 09:54:38 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:54:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:54:38 -HTTP METHOD : GET
2019-04-08 09:54:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:54:38 -参数 : [userType]
2019-04-08 09:54:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:54:38 -==> Parameters: userType(String)
2019-04-08 09:54:38 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:54:38 -HTTP METHOD : GET
2019-04-08 09:54:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:54:38 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:54:38 -<==      Total: 2
2019-04-08 09:54:38 -耗时 : 56
2019-04-08 09:54:38 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:54:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:54:38 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:54:38 -<==      Total: 7
2019-04-08 09:54:38 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:54:38 -==> Parameters: 
2019-04-08 09:54:38 -<==      Total: 1
2019-04-08 09:54:38 -耗时 : 101
2019-04-08 09:54:38 -返回值 : com.bootdo.common.utils.PageUtils@4057b7fb
2019-04-08 09:54:40 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:54:40 -HTTP METHOD : GET
2019-04-08 09:54:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:54:40 -参数 : []
2019-04-08 09:54:40 -耗时 : 3
2019-04-08 09:54:40 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:54:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:54:40 -HTTP METHOD : GET
2019-04-08 09:54:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:54:40 -参数 : [userType]
2019-04-08 09:54:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:54:40 -==> Parameters: userType(String)
2019-04-08 09:54:40 -<==      Total: 2
2019-04-08 09:54:40 -耗时 : 9
2019-04-08 09:54:40 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:54:40 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:54:40 -HTTP METHOD : GET
2019-04-08 09:54:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:54:40 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:54:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:54:40 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:54:40 -<==      Total: 7
2019-04-08 09:54:40 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:54:40 -==> Parameters: 
2019-04-08 09:54:40 -<==      Total: 1
2019-04-08 09:54:40 -耗时 : 37
2019-04-08 09:54:40 -返回值 : com.bootdo.common.utils.PageUtils@2da705ef
2019-04-08 09:54:51 -请求地址 : http://localhost:8081/moneyLog/heatLog/edit/7
2019-04-08 09:54:51 -HTTP METHOD : GET
2019-04-08 09:54:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.edit
2019-04-08 09:54:51 -参数 : [7, {}]
2019-04-08 09:54:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log where id = ? 
2019-04-08 09:54:51 -==> Parameters: 7(Long)
2019-04-08 09:54:51 -<==      Total: 1
2019-04-08 09:54:51 -耗时 : 15
2019-04-08 09:54:51 -返回值 : moneyLog/heatLog/edit
2019-04-08 09:54:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:54:52 -HTTP METHOD : GET
2019-04-08 09:54:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:54:52 -参数 : [userType]
2019-04-08 09:54:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:54:52 -==> Parameters: userType(String)
2019-04-08 09:54:52 -<==      Total: 2
2019-04-08 09:54:52 -耗时 : 5
2019-04-08 09:54:52 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:54:52 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-08 09:54:52 -HTTP METHOD : GET
2019-04-08 09:54:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:54:52 -参数 : [heatType]
2019-04-08 09:54:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:54:52 -==> Parameters: heatType(String)
2019-04-08 09:54:52 -<==      Total: 3
2019-04-08 09:54:52 -耗时 : 18
2019-04-08 09:54:52 -返回值 : [DictDO{id=137, name='特殊暖费1', value='4', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='商业暖', value='0', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:55:17 -请求地址 : http://localhost:8081/moneyLog/heatLog/update
2019-04-08 09:55:17 -HTTP METHOD : POST
2019-04-08 09:55:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.update
2019-04-08 09:55:17 -参数 : [{id=7, userId=1, userName=1, TuserType=A, userType=A, userOrg=2, userOrgName=五九, TheatType=4, heatType=4, heatMoney=1.00, createTime=2019-04, heatDate=2019-09-09 09:33:16, remark=}, com.bootdo.moneyLog.domain.HeatLogDO@69fc123a]
2019-04-08 09:55:17 -==>  Preparing: update heat_log SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `heat_type` = ?, `heat_money` = ?, `heat_date` = ?, `create_time` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-04-08 09:55:17 -==> Parameters: 1(String), 1(String), A(String), 2(String), 4(String), 1.00(BigDecimal), 2019-09-09 09:33:16.0(Timestamp), 2019-04(String), 2019-04-08 09:55:17.237(Timestamp), 1(Long), (String), 7(Long)
2019-04-08 09:55:17 -<==    Updates: 1
2019-04-08 09:55:17 -耗时 : 112
2019-04-08 09:55:17 -返回值 : {msg=操作成功, code=0}
2019-04-08 09:55:17 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:55:17 -HTTP METHOD : GET
2019-04-08 09:55:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:55:17 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:55:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:55:17 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:55:17 -<==      Total: 7
2019-04-08 09:55:17 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:55:17 -==> Parameters: 
2019-04-08 09:55:17 -<==      Total: 1
2019-04-08 09:55:17 -耗时 : 30
2019-04-08 09:55:17 -返回值 : com.bootdo.common.utils.PageUtils@1582c184
2019-04-08 09:55:32 -请求地址 : http://localhost:8081/moneyLog/heatLog/edit/7
2019-04-08 09:55:32 -HTTP METHOD : GET
2019-04-08 09:55:32 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.edit
2019-04-08 09:55:32 -参数 : [7, {}]
2019-04-08 09:55:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log where id = ? 
2019-04-08 09:55:32 -==> Parameters: 7(Long)
2019-04-08 09:55:32 -<==      Total: 1
2019-04-08 09:55:32 -耗时 : 11
2019-04-08 09:55:32 -返回值 : moneyLog/heatLog/edit
2019-04-08 09:55:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:55:32 -HTTP METHOD : GET
2019-04-08 09:55:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:55:32 -参数 : [userType]
2019-04-08 09:55:32 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-08 09:55:32 -HTTP METHOD : GET
2019-04-08 09:55:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:55:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:55:32 -参数 : [heatType]
2019-04-08 09:55:32 -==> Parameters: userType(String)
2019-04-08 09:55:32 -<==      Total: 2
2019-04-08 09:55:32 -耗时 : 4
2019-04-08 09:55:32 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:55:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:55:32 -==> Parameters: heatType(String)
2019-04-08 09:55:32 -<==      Total: 3
2019-04-08 09:55:32 -耗时 : 12
2019-04-08 09:55:32 -返回值 : [DictDO{id=137, name='特殊暖费1', value='4', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='商业暖', value='0', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:55:39 -请求地址 : http://localhost:8081/moneyLog/heatLog/update
2019-04-08 09:55:39 -HTTP METHOD : POST
2019-04-08 09:55:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.update
2019-04-08 09:55:39 -参数 : [{id=7, userId=999999, userName=9999999999, TuserType=A, userType=A, userOrg=2, userOrgName=五九, TheatType=4, heatType=4, heatMoney=1.00, createTime=2019-04, heatDate=2019-09-09 09:33:16, remark=}, com.bootdo.moneyLog.domain.HeatLogDO@1dc2ae81]
2019-04-08 09:55:39 -==>  Preparing: update heat_log SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `heat_type` = ?, `heat_money` = ?, `heat_date` = ?, `create_time` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-04-08 09:55:39 -==> Parameters: 999999(String), 9999999999(String), A(String), 2(String), 4(String), 1.00(BigDecimal), 2019-09-09 09:33:16.0(Timestamp), 2019-04(String), 2019-04-08 09:55:39.261(Timestamp), 1(Long), (String), 7(Long)
2019-04-08 09:55:39 -<==    Updates: 1
2019-04-08 09:55:39 -耗时 : 276
2019-04-08 09:55:39 -返回值 : {msg=操作成功, code=0}
2019-04-08 09:55:39 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:55:39 -HTTP METHOD : GET
2019-04-08 09:55:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:55:39 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:55:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:55:39 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:55:39 -<==      Total: 7
2019-04-08 09:55:39 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:55:39 -==> Parameters: 
2019-04-08 09:55:39 -<==      Total: 1
2019-04-08 09:55:39 -耗时 : 129
2019-04-08 09:55:39 -返回值 : com.bootdo.common.utils.PageUtils@4939e3e
2019-04-08 09:55:42 -请求地址 : http://localhost:8081/moneyLog/heatLog/edit/7
2019-04-08 09:55:42 -HTTP METHOD : GET
2019-04-08 09:55:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.edit
2019-04-08 09:55:42 -参数 : [7, {}]
2019-04-08 09:55:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log where id = ? 
2019-04-08 09:55:42 -==> Parameters: 7(Long)
2019-04-08 09:55:42 -<==      Total: 1
2019-04-08 09:55:42 -耗时 : 5
2019-04-08 09:55:42 -返回值 : moneyLog/heatLog/edit
2019-04-08 09:55:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:55:42 -HTTP METHOD : GET
2019-04-08 09:55:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:55:42 -参数 : [userType]
2019-04-08 09:55:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:55:42 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-08 09:55:42 -HTTP METHOD : GET
2019-04-08 09:55:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:55:42 -参数 : [heatType]
2019-04-08 09:55:42 -==> Parameters: userType(String)
2019-04-08 09:55:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:55:42 -==> Parameters: heatType(String)
2019-04-08 09:55:42 -<==      Total: 3
2019-04-08 09:55:42 -耗时 : 7
2019-04-08 09:55:42 -返回值 : [DictDO{id=137, name='特殊暖费1', value='4', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='商业暖', value='0', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:55:42 -<==      Total: 2
2019-04-08 09:55:42 -耗时 : 36
2019-04-08 09:55:42 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:55:49 -请求地址 : http://localhost:8081/moneyLog/heatLog/update
2019-04-08 09:55:49 -HTTP METHOD : POST
2019-04-08 09:55:49 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.update
2019-04-08 09:55:49 -参数 : [{id=7, userId=999999, userName=9999999999, TuserType=A, userType=A, userOrg=2, userOrgName=五九, TheatType=4, heatType=4, heatMoney=1.00, createTime=2019-04, heatDate=2019-09-09 09:33:16, remark=}, com.bootdo.moneyLog.domain.HeatLogDO@186c4d2a]
2019-04-08 09:55:49 -==>  Preparing: update heat_log SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `heat_type` = ?, `heat_money` = ?, `heat_date` = ?, `create_time` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-04-08 09:55:49 -==> Parameters: 999999(String), 9999999999(String), A(String), 2(String), 4(String), 1.00(BigDecimal), 2019-09-09 09:33:16.0(Timestamp), 2019-04(String), 2019-04-08 09:55:49.13(Timestamp), 1(Long), (String), 7(Long)
2019-04-08 09:55:49 -<==    Updates: 1
2019-04-08 09:55:49 -耗时 : 98
2019-04-08 09:55:49 -返回值 : {msg=操作成功, code=0}
2019-04-08 09:55:49 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:55:49 -HTTP METHOD : GET
2019-04-08 09:55:49 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:55:49 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:55:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:55:49 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:55:49 -<==      Total: 7
2019-04-08 09:55:49 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:55:49 -==> Parameters: 
2019-04-08 09:55:49 -<==      Total: 1
2019-04-08 09:55:49 -耗时 : 10
2019-04-08 09:55:49 -返回值 : com.bootdo.common.utils.PageUtils@72b7cf46
2019-04-08 09:55:54 -请求地址 : http://localhost:8081/moneyLog/heatLog/remove
2019-04-08 09:55:54 -HTTP METHOD : POST
2019-04-08 09:55:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.remove
2019-04-08 09:55:54 -参数 : [6]
2019-04-08 09:55:54 -==>  Preparing: delete from heat_log where id = ? 
2019-04-08 09:55:54 -==> Parameters: 6(Long)
2019-04-08 09:55:54 -<==    Updates: 1
2019-04-08 09:55:54 -耗时 : 76
2019-04-08 09:55:54 -返回值 : {msg=操作成功, code=0}
2019-04-08 09:55:54 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:55:54 -HTTP METHOD : GET
2019-04-08 09:55:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:55:54 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:55:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:55:54 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:55:54 -<==      Total: 6
2019-04-08 09:55:54 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:55:54 -==> Parameters: 
2019-04-08 09:55:54 -<==      Total: 1
2019-04-08 09:55:54 -耗时 : 12
2019-04-08 09:55:54 -返回值 : com.bootdo.common.utils.PageUtils@66559baf
2019-04-08 09:56:01 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-08 09:56:01 -HTTP METHOD : GET
2019-04-08 09:56:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-08 09:56:01 -参数 : []
2019-04-08 09:56:01 -耗时 : 0
2019-04-08 09:56:01 -返回值 : /moneyLog/waterLog/waterLog
2019-04-08 09:56:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:56:01 -HTTP METHOD : GET
2019-04-08 09:56:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:56:01 -参数 : [userType]
2019-04-08 09:56:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:56:01 -==> Parameters: userType(String)
2019-04-08 09:56:01 -<==      Total: 2
2019-04-08 09:56:01 -耗时 : 6
2019-04-08 09:56:01 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:56:01 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 09:56:01 -HTTP METHOD : GET
2019-04-08 09:56:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 09:56:01 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 09:56:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 09:56:01 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:56:01 -<==      Total: 6
2019-04-08 09:56:01 -==>  Preparing: select count(*) from water_log 
2019-04-08 09:56:01 -==> Parameters: 
2019-04-08 09:56:01 -<==      Total: 1
2019-04-08 09:56:01 -耗时 : 70
2019-04-08 09:56:01 -返回值 : com.bootdo.common.utils.PageUtils@4e8127ef
2019-04-08 09:56:02 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:56:02 -HTTP METHOD : GET
2019-04-08 09:56:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:56:02 -参数 : []
2019-04-08 09:56:02 -耗时 : 0
2019-04-08 09:56:02 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:56:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:56:02 -HTTP METHOD : GET
2019-04-08 09:56:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:56:02 -参数 : [userType]
2019-04-08 09:56:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:56:02 -==> Parameters: userType(String)
2019-04-08 09:56:02 -<==      Total: 2
2019-04-08 09:56:02 -耗时 : 4
2019-04-08 09:56:02 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:56:02 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:56:02 -HTTP METHOD : GET
2019-04-08 09:56:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:56:02 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:56:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:56:02 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:56:02 -<==      Total: 6
2019-04-08 09:56:02 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:56:02 -==> Parameters: 
2019-04-08 09:56:02 -<==      Total: 1
2019-04-08 09:56:02 -耗时 : 12
2019-04-08 09:56:02 -返回值 : com.bootdo.common.utils.PageUtils@6dc9dfc7
2019-04-08 09:56:02 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:56:02 -HTTP METHOD : GET
2019-04-08 09:56:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:56:02 -参数 : []
2019-04-08 09:56:02 -耗时 : 1
2019-04-08 09:56:02 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:56:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:56:02 -HTTP METHOD : GET
2019-04-08 09:56:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:56:02 -参数 : [userType]
2019-04-08 09:56:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:56:02 -==> Parameters: userType(String)
2019-04-08 09:56:02 -<==      Total: 2
2019-04-08 09:56:03 -耗时 : 5
2019-04-08 09:56:03 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:56:03 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:56:03 -HTTP METHOD : GET
2019-04-08 09:56:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:56:03 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:56:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:56:03 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:56:03 -<==      Total: 7
2019-04-08 09:56:03 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:56:03 -==> Parameters: 
2019-04-08 09:56:03 -<==      Total: 1
2019-04-08 09:56:03 -耗时 : 43
2019-04-08 09:56:03 -返回值 : com.bootdo.common.utils.PageUtils@60676f54
2019-04-08 09:56:03 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:56:03 -HTTP METHOD : GET
2019-04-08 09:56:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:56:03 -参数 : []
2019-04-08 09:56:03 -耗时 : 0
2019-04-08 09:56:03 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:56:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:56:03 -HTTP METHOD : GET
2019-04-08 09:56:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:56:03 -参数 : [userType]
2019-04-08 09:56:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:56:03 -==> Parameters: userType(String)
2019-04-08 09:56:03 -<==      Total: 2
2019-04-08 09:56:03 -耗时 : 3
2019-04-08 09:56:03 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:56:03 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:56:03 -HTTP METHOD : GET
2019-04-08 09:56:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:56:03 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:56:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:56:03 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:56:03 -<==      Total: 6
2019-04-08 09:56:03 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:56:03 -==> Parameters: 
2019-04-08 09:56:03 -<==      Total: 1
2019-04-08 09:56:03 -耗时 : 10
2019-04-08 09:56:03 -返回值 : com.bootdo.common.utils.PageUtils@1d5a5b73
2019-04-08 09:56:03 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-08 09:56:03 -HTTP METHOD : GET
2019-04-08 09:56:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-08 09:56:03 -参数 : []
2019-04-08 09:56:03 -耗时 : 1
2019-04-08 09:56:03 -返回值 : /moneyLog/waterLog/waterLog
2019-04-08 09:56:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:56:03 -HTTP METHOD : GET
2019-04-08 09:56:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:56:03 -参数 : [userType]
2019-04-08 09:56:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:56:03 -==> Parameters: userType(String)
2019-04-08 09:56:03 -<==      Total: 2
2019-04-08 09:56:03 -耗时 : 4
2019-04-08 09:56:03 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:56:04 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 09:56:04 -HTTP METHOD : GET
2019-04-08 09:56:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 09:56:04 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 09:56:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 09:56:04 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:56:04 -<==      Total: 6
2019-04-08 09:56:04 -==>  Preparing: select count(*) from water_log 
2019-04-08 09:56:04 -==> Parameters: 
2019-04-08 09:56:04 -<==      Total: 1
2019-04-08 09:56:04 -耗时 : 10
2019-04-08 09:56:04 -返回值 : com.bootdo.common.utils.PageUtils@6a988fda
2019-04-08 09:56:04 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:56:04 -HTTP METHOD : GET
2019-04-08 09:56:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:56:04 -参数 : []
2019-04-08 09:56:04 -耗时 : 1
2019-04-08 09:56:04 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:56:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:56:04 -HTTP METHOD : GET
2019-04-08 09:56:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:56:04 -参数 : [userType]
2019-04-08 09:56:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:56:04 -==> Parameters: userType(String)
2019-04-08 09:56:04 -<==      Total: 2
2019-04-08 09:56:04 -耗时 : 4
2019-04-08 09:56:04 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:56:04 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:56:04 -HTTP METHOD : GET
2019-04-08 09:56:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:56:04 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:56:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:56:04 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:56:04 -<==      Total: 6
2019-04-08 09:56:04 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:56:04 -==> Parameters: 
2019-04-08 09:56:04 -<==      Total: 1
2019-04-08 09:56:04 -耗时 : 9
2019-04-08 09:56:04 -返回值 : com.bootdo.common.utils.PageUtils@2055ce57
2019-04-08 09:56:05 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:56:05 -HTTP METHOD : GET
2019-04-08 09:56:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:56:05 -参数 : []
2019-04-08 09:56:05 -耗时 : 0
2019-04-08 09:56:05 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:56:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:56:05 -HTTP METHOD : GET
2019-04-08 09:56:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:56:05 -参数 : [userType]
2019-04-08 09:56:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:56:05 -==> Parameters: userType(String)
2019-04-08 09:56:05 -<==      Total: 2
2019-04-08 09:56:05 -耗时 : 5
2019-04-08 09:56:05 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:56:05 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:56:05 -HTTP METHOD : GET
2019-04-08 09:56:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:56:05 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:56:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:56:05 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:56:05 -<==      Total: 7
2019-04-08 09:56:05 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:56:05 -==> Parameters: 
2019-04-08 09:56:05 -<==      Total: 1
2019-04-08 09:56:05 -耗时 : 17
2019-04-08 09:56:05 -返回值 : com.bootdo.common.utils.PageUtils@5cb2b63a
2019-04-08 09:56:05 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:56:05 -HTTP METHOD : GET
2019-04-08 09:56:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:56:05 -参数 : []
2019-04-08 09:56:05 -耗时 : 0
2019-04-08 09:56:05 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:56:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:56:05 -HTTP METHOD : GET
2019-04-08 09:56:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:56:05 -参数 : [userType]
2019-04-08 09:56:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:56:05 -==> Parameters: userType(String)
2019-04-08 09:56:05 -<==      Total: 2
2019-04-08 09:56:05 -耗时 : 5
2019-04-08 09:56:05 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:56:05 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:56:05 -HTTP METHOD : GET
2019-04-08 09:56:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:56:05 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:56:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:56:05 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:56:05 -<==      Total: 6
2019-04-08 09:56:05 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:56:05 -==> Parameters: 
2019-04-08 09:56:06 -<==      Total: 1
2019-04-08 09:56:06 -耗时 : 7
2019-04-08 09:56:06 -返回值 : com.bootdo.common.utils.PageUtils@31393835
2019-04-08 09:56:06 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-08 09:56:06 -HTTP METHOD : GET
2019-04-08 09:56:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-08 09:56:06 -参数 : []
2019-04-08 09:56:06 -耗时 : 0
2019-04-08 09:56:06 -返回值 : /moneyLog/waterLog/waterLog
2019-04-08 09:56:06 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:56:06 -HTTP METHOD : GET
2019-04-08 09:56:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:56:06 -参数 : [userType]
2019-04-08 09:56:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:56:06 -==> Parameters: userType(String)
2019-04-08 09:56:06 -<==      Total: 2
2019-04-08 09:56:06 -耗时 : 3
2019-04-08 09:56:06 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:56:06 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 09:56:06 -HTTP METHOD : GET
2019-04-08 09:56:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 09:56:06 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 09:56:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 09:56:06 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:56:06 -<==      Total: 6
2019-04-08 09:56:06 -==>  Preparing: select count(*) from water_log 
2019-04-08 09:56:06 -==> Parameters: 
2019-04-08 09:56:06 -<==      Total: 1
2019-04-08 09:56:06 -耗时 : 16
2019-04-08 09:56:06 -返回值 : com.bootdo.common.utils.PageUtils@1a926daf
2019-04-08 09:56:07 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:56:07 -HTTP METHOD : GET
2019-04-08 09:56:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:56:07 -参数 : []
2019-04-08 09:56:07 -耗时 : 0
2019-04-08 09:56:07 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:56:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:56:07 -HTTP METHOD : GET
2019-04-08 09:56:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:56:07 -参数 : [userType]
2019-04-08 09:56:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:56:07 -==> Parameters: userType(String)
2019-04-08 09:56:07 -<==      Total: 2
2019-04-08 09:56:07 -耗时 : 4
2019-04-08 09:56:07 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:56:07 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:56:07 -HTTP METHOD : GET
2019-04-08 09:56:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:56:07 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:56:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:56:07 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:56:07 -<==      Total: 6
2019-04-08 09:56:07 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:56:07 -==> Parameters: 
2019-04-08 09:56:07 -<==      Total: 1
2019-04-08 09:56:07 -耗时 : 13
2019-04-08 09:56:07 -返回值 : com.bootdo.common.utils.PageUtils@35396118
2019-04-08 09:56:07 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:56:07 -HTTP METHOD : GET
2019-04-08 09:56:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:56:07 -参数 : []
2019-04-08 09:56:07 -耗时 : 0
2019-04-08 09:56:07 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:56:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:56:07 -HTTP METHOD : GET
2019-04-08 09:56:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:56:07 -参数 : [userType]
2019-04-08 09:56:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:56:07 -==> Parameters: userType(String)
2019-04-08 09:56:07 -<==      Total: 2
2019-04-08 09:56:07 -耗时 : 6
2019-04-08 09:56:07 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:56:07 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:56:07 -HTTP METHOD : GET
2019-04-08 09:56:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:56:07 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:56:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:56:07 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:56:07 -<==      Total: 7
2019-04-08 09:56:07 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:56:07 -==> Parameters: 
2019-04-08 09:56:07 -<==      Total: 1
2019-04-08 09:56:07 -耗时 : 6
2019-04-08 09:56:07 -返回值 : com.bootdo.common.utils.PageUtils@316a6b27
2019-04-08 09:56:08 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:56:08 -HTTP METHOD : GET
2019-04-08 09:56:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:56:08 -参数 : []
2019-04-08 09:56:08 -耗时 : 0
2019-04-08 09:56:08 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:56:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:56:08 -HTTP METHOD : GET
2019-04-08 09:56:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:56:08 -参数 : [userType]
2019-04-08 09:56:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:56:08 -==> Parameters: userType(String)
2019-04-08 09:56:08 -<==      Total: 2
2019-04-08 09:56:08 -耗时 : 3
2019-04-08 09:56:08 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:56:08 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:56:08 -HTTP METHOD : GET
2019-04-08 09:56:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:56:08 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:56:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:56:08 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:56:08 -<==      Total: 6
2019-04-08 09:56:08 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:56:08 -==> Parameters: 
2019-04-08 09:56:08 -<==      Total: 1
2019-04-08 09:56:08 -耗时 : 8
2019-04-08 09:56:08 -返回值 : com.bootdo.common.utils.PageUtils@7e2d7a9f
2019-04-08 09:56:08 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-08 09:56:08 -HTTP METHOD : GET
2019-04-08 09:56:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-08 09:56:08 -参数 : []
2019-04-08 09:56:08 -耗时 : 1
2019-04-08 09:56:08 -返回值 : /moneyLog/waterLog/waterLog
2019-04-08 09:56:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:56:08 -HTTP METHOD : GET
2019-04-08 09:56:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:56:08 -参数 : [userType]
2019-04-08 09:56:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:56:08 -==> Parameters: userType(String)
2019-04-08 09:56:08 -<==      Total: 2
2019-04-08 09:56:08 -耗时 : 3
2019-04-08 09:56:08 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:56:08 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 09:56:08 -HTTP METHOD : GET
2019-04-08 09:56:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 09:56:08 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 09:56:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 09:56:08 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:56:08 -<==      Total: 6
2019-04-08 09:56:08 -==>  Preparing: select count(*) from water_log 
2019-04-08 09:56:08 -==> Parameters: 
2019-04-08 09:56:08 -<==      Total: 1
2019-04-08 09:56:08 -耗时 : 7
2019-04-08 09:56:08 -返回值 : com.bootdo.common.utils.PageUtils@6d7d43b5
2019-04-08 09:56:09 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:56:09 -HTTP METHOD : GET
2019-04-08 09:56:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:56:09 -参数 : []
2019-04-08 09:56:09 -耗时 : 1
2019-04-08 09:56:09 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:56:09 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:56:09 -HTTP METHOD : GET
2019-04-08 09:56:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:56:09 -参数 : [userType]
2019-04-08 09:56:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:56:09 -==> Parameters: userType(String)
2019-04-08 09:56:09 -<==      Total: 2
2019-04-08 09:56:09 -耗时 : 4
2019-04-08 09:56:09 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:56:09 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:56:09 -HTTP METHOD : GET
2019-04-08 09:56:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:56:09 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:56:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:56:09 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:56:09 -<==      Total: 6
2019-04-08 09:56:09 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:56:09 -==> Parameters: 
2019-04-08 09:56:09 -<==      Total: 1
2019-04-08 09:56:09 -耗时 : 8
2019-04-08 09:56:09 -返回值 : com.bootdo.common.utils.PageUtils@6d84af08
2019-04-08 09:56:10 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:56:10 -HTTP METHOD : GET
2019-04-08 09:56:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:56:10 -参数 : []
2019-04-08 09:56:10 -耗时 : 1
2019-04-08 09:56:10 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:56:10 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:56:10 -HTTP METHOD : GET
2019-04-08 09:56:10 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:56:10 -参数 : [userType]
2019-04-08 09:56:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:56:10 -==> Parameters: userType(String)
2019-04-08 09:56:10 -<==      Total: 2
2019-04-08 09:56:10 -耗时 : 4
2019-04-08 09:56:10 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:56:10 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:56:10 -HTTP METHOD : GET
2019-04-08 09:56:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:56:10 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:56:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:56:10 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:56:10 -<==      Total: 7
2019-04-08 09:56:10 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:56:10 -==> Parameters: 
2019-04-08 09:56:10 -<==      Total: 1
2019-04-08 09:56:10 -耗时 : 5
2019-04-08 09:56:10 -返回值 : com.bootdo.common.utils.PageUtils@1bdb78c0
2019-04-08 09:56:10 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:56:10 -HTTP METHOD : GET
2019-04-08 09:56:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:56:10 -参数 : []
2019-04-08 09:56:10 -耗时 : 0
2019-04-08 09:56:10 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:56:10 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:56:10 -HTTP METHOD : GET
2019-04-08 09:56:10 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:56:10 -参数 : [userType]
2019-04-08 09:56:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:56:10 -==> Parameters: userType(String)
2019-04-08 09:56:10 -<==      Total: 2
2019-04-08 09:56:10 -耗时 : 5
2019-04-08 09:56:10 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:56:10 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:56:10 -HTTP METHOD : GET
2019-04-08 09:56:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:56:10 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:56:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:56:10 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:56:10 -<==      Total: 6
2019-04-08 09:56:10 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:56:10 -==> Parameters: 
2019-04-08 09:56:10 -<==      Total: 1
2019-04-08 09:56:10 -耗时 : 6
2019-04-08 09:56:10 -返回值 : com.bootdo.common.utils.PageUtils@6a8f03f
2019-04-08 09:56:10 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-08 09:56:10 -HTTP METHOD : GET
2019-04-08 09:56:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-08 09:56:10 -参数 : []
2019-04-08 09:56:10 -耗时 : 1
2019-04-08 09:56:10 -返回值 : /moneyLog/waterLog/waterLog
2019-04-08 09:56:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:56:11 -HTTP METHOD : GET
2019-04-08 09:56:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:56:11 -参数 : [userType]
2019-04-08 09:56:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:56:11 -==> Parameters: userType(String)
2019-04-08 09:56:11 -<==      Total: 2
2019-04-08 09:56:11 -耗时 : 4
2019-04-08 09:56:11 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:56:11 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 09:56:11 -HTTP METHOD : GET
2019-04-08 09:56:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 09:56:11 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 09:56:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 09:56:11 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:56:11 -<==      Total: 6
2019-04-08 09:56:11 -==>  Preparing: select count(*) from water_log 
2019-04-08 09:56:11 -==> Parameters: 
2019-04-08 09:56:11 -<==      Total: 1
2019-04-08 09:56:11 -耗时 : 5
2019-04-08 09:56:11 -返回值 : com.bootdo.common.utils.PageUtils@59e952a6
2019-04-08 09:56:14 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:56:14 -HTTP METHOD : GET
2019-04-08 09:56:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:56:14 -参数 : []
2019-04-08 09:56:14 -耗时 : 0
2019-04-08 09:56:14 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:56:14 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:56:14 -HTTP METHOD : GET
2019-04-08 09:56:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:56:14 -参数 : [userType]
2019-04-08 09:56:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:56:14 -==> Parameters: userType(String)
2019-04-08 09:56:14 -<==      Total: 2
2019-04-08 09:56:14 -耗时 : 4
2019-04-08 09:56:14 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:56:15 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:56:15 -HTTP METHOD : GET
2019-04-08 09:56:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:56:15 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:56:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:56:15 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:56:15 -<==      Total: 6
2019-04-08 09:56:15 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:56:15 -==> Parameters: 
2019-04-08 09:56:15 -<==      Total: 1
2019-04-08 09:56:15 -耗时 : 6
2019-04-08 09:56:15 -返回值 : com.bootdo.common.utils.PageUtils@20192dea
2019-04-08 09:56:28 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:56:28 -HTTP METHOD : GET
2019-04-08 09:56:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:56:28 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, heatDate=2019-03-08, type=A}]
2019-04-08 09:56:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE user_type = ? and `heat_date` >= ? and `heat_date` <= ? order by id asc limit ?, ? 
2019-04-08 09:56:28 -==> Parameters: A(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-04-08 09:56:28 -<==      Total: 2
2019-04-08 09:56:28 -==>  Preparing: select count(*) from heat_log WHERE user_type = ? and `heat_date` >= ? and `heat_date` <= ? 
2019-04-08 09:56:28 -==> Parameters: A(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String)
2019-04-08 09:56:28 -<==      Total: 1
2019-04-08 09:56:28 -耗时 : 21
2019-04-08 09:56:28 -返回值 : com.bootdo.common.utils.PageUtils@f8ff3f8
2019-04-08 09:56:29 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 09:56:29 -HTTP METHOD : GET
2019-04-08 09:56:29 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 09:56:29 -参数 : []
2019-04-08 09:56:29 -耗时 : 1
2019-04-08 09:56:29 -返回值 : system/dept/deptTree
2019-04-08 09:56:29 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 09:56:29 -HTTP METHOD : GET
2019-04-08 09:56:29 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 09:56:29 -参数 : []
2019-04-08 09:56:29 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 09:56:29 -==> Parameters: 
2019-04-08 09:56:29 -<==      Total: 3
2019-04-08 09:56:29 -耗时 : 20
2019-04-08 09:56:29 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 09:58:30 -请求地址 : http://localhost:8081/index
2019-04-08 09:58:30 -HTTP METHOD : GET
2019-04-08 09:58:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 09:58:30 -参数 : [{}]
2019-04-08 09:58:30 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 09:58:30 -==> Parameters: 1(Long)
2019-04-08 09:58:30 -<==      Total: 46
2019-04-08 09:58:30 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 09:58:30 -==> Parameters: 138(Long)
2019-04-08 09:58:30 -<==      Total: 1
2019-04-08 09:58:30 -耗时 : 79
2019-04-08 09:58:30 -返回值 : index_v1
2019-04-08 09:58:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 09:58:30 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 79(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 09:58:30.31(Timestamp)
2019-04-08 09:58:30 -<==    Updates: 1
2019-04-08 09:58:30 -请求地址 : http://localhost:8081/main
2019-04-08 09:58:30 -HTTP METHOD : GET
2019-04-08 09:58:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 09:58:30 -参数 : []
2019-04-08 09:58:30 -耗时 : 0
2019-04-08 09:58:30 -返回值 : main
2019-04-08 09:58:30 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 09:58:30 -HTTP METHOD : GET
2019-04-08 09:58:30 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 09:58:30 -参数 : []
2019-04-08 09:58:30 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 09:58:30 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 09:58:30 -<==      Total: 0
2019-04-08 09:58:30 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 09:58:30 -==> Parameters: 1(Long), 0(String)
2019-04-08 09:58:30 -<==      Total: 1
2019-04-08 09:58:30 -耗时 : 26
2019-04-08 09:58:30 -返回值 : com.bootdo.common.utils.PageUtils@4ad280ba
2019-04-08 09:58:30 -请求地址 : http://localhost:8081/main
2019-04-08 09:58:30 -HTTP METHOD : GET
2019-04-08 09:58:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 09:58:30 -参数 : []
2019-04-08 09:58:30 -耗时 : 0
2019-04-08 09:58:30 -返回值 : main
2019-04-08 09:58:32 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 09:58:32 -HTTP METHOD : GET
2019-04-08 09:58:32 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 09:58:32 -参数 : []
2019-04-08 09:58:32 -耗时 : 1
2019-04-08 09:58:32 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 09:58:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:58:32 -HTTP METHOD : GET
2019-04-08 09:58:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:58:32 -参数 : [userType]
2019-04-08 09:58:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:58:32 -==> Parameters: userType(String)
2019-04-08 09:58:32 -<==      Total: 2
2019-04-08 09:58:32 -耗时 : 4
2019-04-08 09:58:32 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:58:32 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 09:58:32 -HTTP METHOD : GET
2019-04-08 09:58:32 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 09:58:32 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 09:58:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 09:58:32 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:58:32 -<==      Total: 7
2019-04-08 09:58:32 -==>  Preparing: select count(*) from elec_log 
2019-04-08 09:58:32 -==> Parameters: 
2019-04-08 09:58:32 -<==      Total: 1
2019-04-08 09:58:32 -耗时 : 10
2019-04-08 09:58:32 -返回值 : com.bootdo.common.utils.PageUtils@3d19acdb
2019-04-08 09:58:33 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 09:58:33 -HTTP METHOD : GET
2019-04-08 09:58:33 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 09:58:33 -参数 : []
2019-04-08 09:58:33 -耗时 : 0
2019-04-08 09:58:33 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 09:58:33 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 09:58:33 -HTTP METHOD : GET
2019-04-08 09:58:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 09:58:33 -参数 : [userType]
2019-04-08 09:58:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 09:58:33 -==> Parameters: userType(String)
2019-04-08 09:58:33 -<==      Total: 2
2019-04-08 09:58:33 -耗时 : 3
2019-04-08 09:58:33 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 09:58:33 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 09:58:33 -HTTP METHOD : GET
2019-04-08 09:58:33 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 09:58:33 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 09:58:33 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 09:58:33 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 09:58:33 -<==      Total: 6
2019-04-08 09:58:33 -==>  Preparing: select count(*) from heat_log 
2019-04-08 09:58:33 -==> Parameters: 
2019-04-08 09:58:33 -<==      Total: 1
2019-04-08 09:58:33 -耗时 : 8
2019-04-08 09:58:33 -返回值 : com.bootdo.common.utils.PageUtils@76299aec
2019-04-08 10:00:13 -请求地址 : http://localhost:8081/index
2019-04-08 10:00:13 -HTTP METHOD : GET
2019-04-08 10:00:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 10:00:13 -参数 : [{}]
2019-04-08 10:00:13 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 10:00:13 -==> Parameters: 1(Long)
2019-04-08 10:00:13 -<==      Total: 46
2019-04-08 10:00:13 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 10:00:13 -==> Parameters: 138(Long)
2019-04-08 10:00:13 -<==      Total: 1
2019-04-08 10:00:13 -耗时 : 27
2019-04-08 10:00:13 -返回值 : index_v1
2019-04-08 10:00:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 10:00:13 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 10:00:13.918(Timestamp)
2019-04-08 10:00:14 -<==    Updates: 1
2019-04-08 10:00:14 -请求地址 : http://localhost:8081/main
2019-04-08 10:00:14 -HTTP METHOD : GET
2019-04-08 10:00:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 10:00:14 -参数 : []
2019-04-08 10:00:14 -耗时 : 0
2019-04-08 10:00:14 -返回值 : main
2019-04-08 10:00:14 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 10:00:14 -HTTP METHOD : GET
2019-04-08 10:00:14 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 10:00:14 -参数 : []
2019-04-08 10:00:14 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 10:00:14 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 10:00:14 -<==      Total: 0
2019-04-08 10:00:14 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 10:00:14 -==> Parameters: 1(Long), 0(String)
2019-04-08 10:00:14 -<==      Total: 1
2019-04-08 10:00:14 -耗时 : 35
2019-04-08 10:00:14 -返回值 : com.bootdo.common.utils.PageUtils@1e5c274b
2019-04-08 10:00:14 -请求地址 : http://localhost:8081/main
2019-04-08 10:00:14 -HTTP METHOD : GET
2019-04-08 10:00:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 10:00:14 -参数 : []
2019-04-08 10:00:14 -耗时 : 0
2019-04-08 10:00:14 -返回值 : main
2019-04-08 10:00:15 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 10:00:15 -HTTP METHOD : GET
2019-04-08 10:00:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 10:00:15 -参数 : []
2019-04-08 10:00:15 -耗时 : 0
2019-04-08 10:00:15 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 10:00:16 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:00:16 -HTTP METHOD : GET
2019-04-08 10:00:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:00:16 -参数 : [userType]
2019-04-08 10:00:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:00:16 -==> Parameters: userType(String)
2019-04-08 10:00:16 -<==      Total: 2
2019-04-08 10:00:16 -耗时 : 5
2019-04-08 10:00:16 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:00:16 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 10:00:16 -HTTP METHOD : GET
2019-04-08 10:00:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 10:00:16 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 10:00:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 10:00:16 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:00:16 -<==      Total: 7
2019-04-08 10:00:16 -==>  Preparing: select count(*) from elec_log 
2019-04-08 10:00:16 -==> Parameters: 
2019-04-08 10:00:16 -<==      Total: 1
2019-04-08 10:00:16 -耗时 : 6
2019-04-08 10:00:16 -返回值 : com.bootdo.common.utils.PageUtils@31091ff9
2019-04-08 10:00:16 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 10:00:16 -HTTP METHOD : GET
2019-04-08 10:00:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 10:00:16 -参数 : []
2019-04-08 10:00:16 -耗时 : 0
2019-04-08 10:00:16 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 10:00:16 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:00:16 -HTTP METHOD : GET
2019-04-08 10:00:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:00:16 -参数 : [userType]
2019-04-08 10:00:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:00:16 -==> Parameters: userType(String)
2019-04-08 10:00:16 -<==      Total: 2
2019-04-08 10:00:16 -耗时 : 3
2019-04-08 10:00:16 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:00:16 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 10:00:16 -HTTP METHOD : GET
2019-04-08 10:00:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 10:00:16 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 10:00:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 10:00:16 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:00:16 -<==      Total: 6
2019-04-08 10:00:16 -==>  Preparing: select count(*) from heat_log 
2019-04-08 10:00:16 -==> Parameters: 
2019-04-08 10:00:16 -<==      Total: 1
2019-04-08 10:00:16 -耗时 : 8
2019-04-08 10:00:16 -返回值 : com.bootdo.common.utils.PageUtils@3c62c936
2019-04-08 10:00:18 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-08 10:00:18 -HTTP METHOD : GET
2019-04-08 10:00:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-08 10:00:18 -参数 : []
2019-04-08 10:00:18 -耗时 : 0
2019-04-08 10:00:18 -返回值 : /moneyLog/waterLog/waterLog
2019-04-08 10:00:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:00:18 -HTTP METHOD : GET
2019-04-08 10:00:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:00:18 -参数 : [userType]
2019-04-08 10:00:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:00:18 -==> Parameters: userType(String)
2019-04-08 10:00:18 -<==      Total: 2
2019-04-08 10:00:18 -耗时 : 2
2019-04-08 10:00:18 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:00:18 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 10:00:18 -HTTP METHOD : GET
2019-04-08 10:00:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 10:00:18 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 10:00:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 10:00:18 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:00:18 -<==      Total: 6
2019-04-08 10:00:18 -==>  Preparing: select count(*) from water_log 
2019-04-08 10:00:18 -==> Parameters: 
2019-04-08 10:00:18 -<==      Total: 1
2019-04-08 10:00:18 -耗时 : 7
2019-04-08 10:00:18 -返回值 : com.bootdo.common.utils.PageUtils@253ea97b
2019-04-08 10:00:18 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 10:00:18 -HTTP METHOD : GET
2019-04-08 10:00:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 10:00:18 -参数 : []
2019-04-08 10:00:18 -耗时 : 0
2019-04-08 10:00:18 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 10:00:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:00:18 -HTTP METHOD : GET
2019-04-08 10:00:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:00:18 -参数 : [userType]
2019-04-08 10:00:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:00:18 -==> Parameters: userType(String)
2019-04-08 10:00:18 -<==      Total: 2
2019-04-08 10:00:18 -耗时 : 5
2019-04-08 10:00:18 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:00:18 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 10:00:18 -HTTP METHOD : GET
2019-04-08 10:00:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 10:00:18 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 10:00:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 10:00:18 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:00:18 -<==      Total: 6
2019-04-08 10:00:18 -==>  Preparing: select count(*) from heat_log 
2019-04-08 10:00:18 -==> Parameters: 
2019-04-08 10:00:18 -<==      Total: 1
2019-04-08 10:00:18 -耗时 : 8
2019-04-08 10:00:18 -返回值 : com.bootdo.common.utils.PageUtils@38360c08
2019-04-08 10:00:19 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 10:00:19 -HTTP METHOD : GET
2019-04-08 10:00:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 10:00:19 -参数 : []
2019-04-08 10:00:19 -耗时 : 1
2019-04-08 10:00:19 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 10:00:19 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:00:19 -HTTP METHOD : GET
2019-04-08 10:00:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:00:19 -参数 : [userType]
2019-04-08 10:00:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:00:19 -==> Parameters: userType(String)
2019-04-08 10:00:19 -<==      Total: 2
2019-04-08 10:00:19 -耗时 : 3
2019-04-08 10:00:19 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:00:19 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 10:00:19 -HTTP METHOD : GET
2019-04-08 10:00:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 10:00:19 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 10:00:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 10:00:19 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:00:19 -<==      Total: 7
2019-04-08 10:00:19 -==>  Preparing: select count(*) from elec_log 
2019-04-08 10:00:19 -==> Parameters: 
2019-04-08 10:00:19 -<==      Total: 1
2019-04-08 10:00:19 -耗时 : 6
2019-04-08 10:00:19 -返回值 : com.bootdo.common.utils.PageUtils@22d9d8a2
2019-04-08 10:00:19 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 10:00:19 -HTTP METHOD : GET
2019-04-08 10:00:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 10:00:19 -参数 : []
2019-04-08 10:00:19 -耗时 : 1
2019-04-08 10:00:19 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 10:00:19 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:00:19 -HTTP METHOD : GET
2019-04-08 10:00:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:00:19 -参数 : [userType]
2019-04-08 10:00:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:00:19 -==> Parameters: userType(String)
2019-04-08 10:00:19 -<==      Total: 2
2019-04-08 10:00:19 -耗时 : 3
2019-04-08 10:00:19 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:00:19 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 10:00:19 -HTTP METHOD : GET
2019-04-08 10:00:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 10:00:19 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 10:00:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 10:00:19 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:00:19 -<==      Total: 6
2019-04-08 10:00:19 -==>  Preparing: select count(*) from heat_log 
2019-04-08 10:00:19 -==> Parameters: 
2019-04-08 10:00:19 -<==      Total: 1
2019-04-08 10:00:19 -耗时 : 6
2019-04-08 10:00:19 -返回值 : com.bootdo.common.utils.PageUtils@5b9d8700
2019-04-08 10:00:20 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-08 10:00:20 -HTTP METHOD : GET
2019-04-08 10:00:20 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-08 10:00:20 -参数 : []
2019-04-08 10:00:20 -耗时 : 0
2019-04-08 10:00:20 -返回值 : /moneyLog/waterLog/waterLog
2019-04-08 10:00:20 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:00:20 -HTTP METHOD : GET
2019-04-08 10:00:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:00:20 -参数 : [userType]
2019-04-08 10:00:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:00:20 -==> Parameters: userType(String)
2019-04-08 10:00:20 -<==      Total: 2
2019-04-08 10:00:20 -耗时 : 6
2019-04-08 10:00:20 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:00:20 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 10:00:20 -HTTP METHOD : GET
2019-04-08 10:00:20 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 10:00:20 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 10:00:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 10:00:20 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:00:20 -<==      Total: 6
2019-04-08 10:00:20 -==>  Preparing: select count(*) from water_log 
2019-04-08 10:00:20 -==> Parameters: 
2019-04-08 10:00:20 -<==      Total: 1
2019-04-08 10:00:20 -耗时 : 7
2019-04-08 10:00:20 -返回值 : com.bootdo.common.utils.PageUtils@6a068ee1
2019-04-08 10:00:21 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 10:00:21 -HTTP METHOD : GET
2019-04-08 10:00:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 10:00:21 -参数 : []
2019-04-08 10:00:21 -耗时 : 1
2019-04-08 10:00:21 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 10:00:21 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:00:21 -HTTP METHOD : GET
2019-04-08 10:00:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:00:21 -参数 : [userType]
2019-04-08 10:00:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:00:21 -==> Parameters: userType(String)
2019-04-08 10:00:21 -<==      Total: 2
2019-04-08 10:00:21 -耗时 : 5
2019-04-08 10:00:21 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:00:21 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 10:00:21 -HTTP METHOD : GET
2019-04-08 10:00:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 10:00:21 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 10:00:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 10:00:21 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:00:21 -<==      Total: 6
2019-04-08 10:00:21 -==>  Preparing: select count(*) from heat_log 
2019-04-08 10:00:21 -==> Parameters: 
2019-04-08 10:00:21 -<==      Total: 1
2019-04-08 10:00:21 -耗时 : 7
2019-04-08 10:00:21 -返回值 : com.bootdo.common.utils.PageUtils@3b601d17
2019-04-08 10:00:21 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 10:00:21 -HTTP METHOD : GET
2019-04-08 10:00:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 10:00:21 -参数 : []
2019-04-08 10:00:21 -耗时 : 1
2019-04-08 10:00:21 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 10:00:21 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:00:21 -HTTP METHOD : GET
2019-04-08 10:00:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:00:21 -参数 : [userType]
2019-04-08 10:00:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:00:21 -==> Parameters: userType(String)
2019-04-08 10:00:21 -<==      Total: 2
2019-04-08 10:00:21 -耗时 : 4
2019-04-08 10:00:21 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:00:21 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 10:00:21 -HTTP METHOD : GET
2019-04-08 10:00:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 10:00:21 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 10:00:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 10:00:21 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:00:21 -<==      Total: 7
2019-04-08 10:00:21 -==>  Preparing: select count(*) from elec_log 
2019-04-08 10:00:21 -==> Parameters: 
2019-04-08 10:00:21 -<==      Total: 1
2019-04-08 10:00:21 -耗时 : 7
2019-04-08 10:00:21 -返回值 : com.bootdo.common.utils.PageUtils@3b47e4d7
2019-04-08 10:00:22 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 10:00:22 -HTTP METHOD : GET
2019-04-08 10:00:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 10:00:22 -参数 : []
2019-04-08 10:00:22 -耗时 : 0
2019-04-08 10:00:22 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 10:00:22 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:00:22 -HTTP METHOD : GET
2019-04-08 10:00:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:00:22 -参数 : [userType]
2019-04-08 10:00:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:00:22 -==> Parameters: userType(String)
2019-04-08 10:00:22 -<==      Total: 2
2019-04-08 10:00:22 -耗时 : 3
2019-04-08 10:00:22 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:00:22 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 10:00:22 -HTTP METHOD : GET
2019-04-08 10:00:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 10:00:22 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 10:00:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 10:00:22 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:00:22 -<==      Total: 6
2019-04-08 10:00:22 -==>  Preparing: select count(*) from heat_log 
2019-04-08 10:00:22 -==> Parameters: 
2019-04-08 10:00:22 -<==      Total: 1
2019-04-08 10:00:22 -耗时 : 4
2019-04-08 10:00:22 -返回值 : com.bootdo.common.utils.PageUtils@4eee58a2
2019-04-08 10:01:48 -Starting BootdoApplication on ZJZL-20180906VX with PID 12116 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-08 10:01:48 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-08 10:01:48 -The following profiles are active: dev
2019-04-08 10:01:48 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 08 10:01:48 CST 2019]; root of context hierarchy
2019-04-08 10:01:51 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-08 10:01:54 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$140ab030] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 10:01:54 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$663ded7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 10:01:55 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 10:01:56 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 10:01:56 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 10:01:56 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-08 10:01:56 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-08 10:01:56 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 10:01:56 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 10:01:56 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 10:01:56 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 10:01:57 -Tomcat initialized with port(s): 8081 (http)
2019-04-08 10:01:57 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-08 10:01:57 -Starting service [Tomcat]
2019-04-08 10:01:57 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-08 10:01:57 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-08 10:01:57 -Initializing Spring embedded WebApplicationContext
2019-04-08 10:01:57 -Root WebApplicationContext: initialization completed in 9514 ms
2019-04-08 10:01:59 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-08 10:01:59 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-08 10:01:59 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-08 10:01:59 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-08 10:01:59 -Filter xssFilter was not registered (disabled)
2019-04-08 10:01:59 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-08 10:01:59 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-08 10:01:59 -Servlet statViewServlet mapped to [/druid/*]
2019-04-08 10:01:59 -Servlet dispatcherServlet mapped to [/]
2019-04-08 10:02:03 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 08 10:01:48 CST 2019]; root of context hierarchy
2019-04-08 10:02:03 -Using default implementation for ThreadExecutor
2019-04-08 10:02:03 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-08 10:02:03 -Quartz Scheduler v.2.2.1 created.
2019-04-08 10:02:03 -RAMJobStore initialized.
2019-04-08 10:02:03 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-08 10:02:03 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-08 10:02:03 -Quartz scheduler version: 2.2.1
2019-04-08 10:02:03 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@5c53c235
2019-04-08 10:02:04 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-08 10:02:04 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-08 10:02:06 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 10:02:06 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-08 10:02:06 -Mapped "{[/charts/countDD/tableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.tableDD()
2019-04-08 10:02:06 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-08 10:02:06 -Mapped "{[/charts/countMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 10:02:06 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-08 10:02:06 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-08 10:02:06 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-08 10:02:06 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-08 10:02:06 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 10:02:06 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-08 10:02:06 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public int com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-08 10:02:06 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 10:02:06 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-08 10:02:06 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public int com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-08 10:02:06 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-08 10:02:06 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-08 10:02:06 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-08 10:02:06 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-08 10:02:06 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:02:06 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-08 10:02:06 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-08 10:02:06 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-08 10:02:06 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:02:06 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-08 10:02:06 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-08 10:02:06 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-08 10:02:06 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-08 10:02:06 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-08 10:02:06 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-08 10:02:06 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:02:06 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-08 10:02:06 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-08 10:02:06 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:02:06 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-08 10:02:06 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-08 10:02:06 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:02:06 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-08 10:02:06 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-08 10:02:06 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-08 10:02:06 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-08 10:02:06 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-08 10:02:06 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-08 10:02:06 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-08 10:02:06 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-08 10:02:06 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-08 10:02:06 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:02:06 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-08 10:02:06 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-08 10:02:06 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:02:06 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-08 10:02:06 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-08 10:02:06 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-08 10:02:06 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-08 10:02:06 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:02:06 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-08 10:02:06 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-08 10:02:06 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-08 10:02:06 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-08 10:02:06 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-08 10:02:06 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-08 10:02:06 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-08 10:02:06 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-08 10:02:06 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-08 10:02:06 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-08 10:02:06 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-08 10:02:06 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:02:06 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-08 10:02:06 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-08 10:02:06 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-08 10:02:06 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-08 10:02:06 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-08 10:02:06 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-08 10:02:06 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-08 10:02:06 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-08 10:02:06 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-08 10:02:06 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:02:06 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-08 10:02:06 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:02:06 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-08 10:02:06 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-08 10:02:06 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-08 10:02:06 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-08 10:02:06 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-08 10:02:06 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-08 10:02:06 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-08 10:02:06 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:02:06 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-08 10:02:06 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-08 10:02:06 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-08 10:02:06 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-08 10:02:06 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-08 10:02:06 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-08 10:02:06 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-08 10:02:06 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-08 10:02:06 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-08 10:02:06 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-08 10:02:06 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:02:06 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-08 10:02:06 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:02:06 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-08 10:02:06 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-08 10:02:06 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-08 10:02:06 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-08 10:02:06 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-08 10:02:06 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-08 10:02:06 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-08 10:02:06 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-08 10:02:06 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-08 10:02:06 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-08 10:02:06 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-08 10:02:06 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-08 10:02:06 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-08 10:02:06 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:02:06 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-08 10:02:06 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-08 10:02:06 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 10:02:06 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:02:06 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-08 10:02:06 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-08 10:02:06 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-08 10:02:06 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-08 10:02:06 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:02:06 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-08 10:02:06 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 10:02:06 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-08 10:02:06 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:02:06 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-08 10:02:06 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-08 10:02:06 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-08 10:02:06 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-08 10:02:06 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:02:06 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-08 10:02:06 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 10:02:06 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-08 10:02:06 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:02:06 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-08 10:02:06 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-08 10:02:06 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-08 10:02:06 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-08 10:02:06 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:02:06 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:02:06 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-08 10:02:06 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-08 10:02:06 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-08 10:02:06 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:02:06 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-08 10:02:06 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:02:06 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-08 10:02:06 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-08 10:02:06 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-08 10:02:06 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-08 10:02:06 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:02:06 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-08 10:02:06 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-08 10:02:06 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:02:06 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 10:02:06 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:02:06 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:02:06 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-08 10:02:06 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-08 10:02:06 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-08 10:02:06 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-08 10:02:06 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-08 10:02:06 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-08 10:02:06 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-08 10:02:06 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-08 10:02:06 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:02:06 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-08 10:02:06 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-08 10:02:06 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-08 10:02:06 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-08 10:02:06 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-08 10:02:06 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-08 10:02:06 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-08 10:02:06 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-08 10:02:06 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-08 10:02:06 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-08 10:02:06 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:02:06 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-08 10:02:06 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-08 10:02:06 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-08 10:02:06 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-08 10:02:06 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-08 10:02:06 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-08 10:02:06 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-08 10:02:06 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-08 10:02:06 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-08 10:02:06 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-08 10:02:06 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-08 10:02:06 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-08 10:02:06 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:02:06 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-08 10:02:06 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-08 10:02:06 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-08 10:02:06 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-08 10:02:06 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:02:06 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-08 10:02:06 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-08 10:02:06 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-08 10:02:06 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:02:06 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-08 10:02:06 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-08 10:02:06 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-08 10:02:06 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-08 10:02:06 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-08 10:02:06 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-08 10:02:06 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-08 10:02:06 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:02:06 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-08 10:02:06 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-08 10:02:06 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-08 10:02:06 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-08 10:02:06 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-08 10:02:06 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-08 10:02:06 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-08 10:02:06 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-08 10:02:06 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-08 10:02:06 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:02:06 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-08 10:02:06 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-08 10:02:06 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:02:06 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-08 10:02:06 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-08 10:02:06 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-08 10:02:06 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-08 10:02:06 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-08 10:02:06 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-08 10:02:06 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-08 10:02:06 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:02:06 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-08 10:02:06 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-08 10:02:06 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:02:06 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-08 10:02:06 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-08 10:02:06 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-08 10:02:06 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-08 10:02:06 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-08 10:02:06 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-08 10:02:06 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-08 10:02:06 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-08 10:02:07 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-08 10:02:07 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-08 10:02:07 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-08 10:02:07 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-08 10:02:08 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 08 10:01:48 CST 2019]; root of context hierarchy
2019-04-08 10:02:08 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-08 10:02:08 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-08 10:02:08 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-08 10:02:08 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-08 10:02:08 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-08 10:02:10 -Registering beans for JMX exposure on startup
2019-04-08 10:02:10 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-08 10:02:10 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-08 10:02:10 -Starting beans in phase 2147483647
2019-04-08 10:02:10 -Context refreshed
2019-04-08 10:02:10 -Found 1 custom documentation plugin(s)
2019-04-08 10:02:10 -Scanning for api listing references
2019-04-08 10:02:11 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-08 10:02:11 -Generating unique operation named: getCountDUsingPOST_1
2019-04-08 10:02:11 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-08 10:02:11 -Generating unique operation named: getCountDUsingPOST_2
2019-04-08 10:02:11 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-08 10:02:11 -Generating unique operation named: getCountDUsingPOST_3
2019-04-08 10:02:11 -Generating unique operation named: removeUsingPOST_1
2019-04-08 10:02:11 -Generating unique operation named: addUsingGET_1
2019-04-08 10:02:11 -Generating unique operation named: editUsingGET_1
2019-04-08 10:02:11 -Generating unique operation named: listUsingGET_1
2019-04-08 10:02:11 -Generating unique operation named: removeUsingPOST_2
2019-04-08 10:02:11 -Generating unique operation named: removeUsingPOST_3
2019-04-08 10:02:11 -Generating unique operation named: saveUsingPOST_1
2019-04-08 10:02:11 -Generating unique operation named: updateUsingGET_1
2019-04-08 10:02:11 -Generating unique operation named: updateUsingHEAD_1
2019-04-08 10:02:11 -Generating unique operation named: updateUsingPOST_1
2019-04-08 10:02:11 -Generating unique operation named: updateUsingPUT_1
2019-04-08 10:02:11 -Generating unique operation named: updateUsingPATCH_1
2019-04-08 10:02:11 -Generating unique operation named: updateUsingDELETE_1
2019-04-08 10:02:11 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-08 10:02:11 -Generating unique operation named: updateUsingTRACE_1
2019-04-08 10:02:11 -Generating unique operation named: addUsingGET_2
2019-04-08 10:02:11 -Generating unique operation named: editUsingGET_2
2019-04-08 10:02:11 -Generating unique operation named: listUsingGET_2
2019-04-08 10:02:11 -Generating unique operation named: removeUsingPOST_4
2019-04-08 10:02:11 -Generating unique operation named: removeUsingPOST_5
2019-04-08 10:02:11 -Generating unique operation named: saveUsingPOST_2
2019-04-08 10:02:11 -Generating unique operation named: updateUsingPOST_2
2019-04-08 10:02:11 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-08 10:02:11 -Generating unique operation named: addUsingGET_3
2019-04-08 10:02:11 -Generating unique operation named: editUsingGET_3
2019-04-08 10:02:12 -Generating unique operation named: exprotElecLogUsingGET_4
2019-04-08 10:02:12 -Generating unique operation named: listUsingGET_3
2019-04-08 10:02:12 -Generating unique operation named: removeUsingPOST_6
2019-04-08 10:02:12 -Generating unique operation named: removeUsingPOST_7
2019-04-08 10:02:12 -Generating unique operation named: saveUsingPOST_3
2019-04-08 10:02:12 -Generating unique operation named: updateUsingGET_2
2019-04-08 10:02:12 -Generating unique operation named: updateUsingHEAD_2
2019-04-08 10:02:12 -Generating unique operation named: updateUsingPOST_3
2019-04-08 10:02:12 -Generating unique operation named: updateUsingPUT_2
2019-04-08 10:02:12 -Generating unique operation named: updateUsingPATCH_2
2019-04-08 10:02:12 -Generating unique operation named: updateUsingDELETE_2
2019-04-08 10:02:12 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-08 10:02:12 -Generating unique operation named: updateUsingTRACE_2
2019-04-08 10:02:12 -Generating unique operation named: addUsingGET_4
2019-04-08 10:02:12 -Generating unique operation named: editUsingGET_4
2019-04-08 10:02:12 -Generating unique operation named: listUsingGET_4
2019-04-08 10:02:12 -Generating unique operation named: removeUsingPOST_8
2019-04-08 10:02:12 -Generating unique operation named: removeUsingPOST_9
2019-04-08 10:02:12 -Generating unique operation named: saveUsingPOST_4
2019-04-08 10:02:12 -Generating unique operation named: updateUsingGET_3
2019-04-08 10:02:12 -Generating unique operation named: updateUsingHEAD_3
2019-04-08 10:02:12 -Generating unique operation named: updateUsingPOST_4
2019-04-08 10:02:12 -Generating unique operation named: updateUsingPUT_3
2019-04-08 10:02:12 -Generating unique operation named: updateUsingPATCH_3
2019-04-08 10:02:12 -Generating unique operation named: updateUsingDELETE_3
2019-04-08 10:02:12 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-08 10:02:12 -Generating unique operation named: updateUsingTRACE_3
2019-04-08 10:02:12 -Generating unique operation named: ElecUsingGET_1
2019-04-08 10:02:12 -Generating unique operation named: addUsingGET_5
2019-04-08 10:02:12 -Generating unique operation named: editUsingGET_5
2019-04-08 10:02:12 -Generating unique operation named: listUsingGET_5
2019-04-08 10:02:12 -Generating unique operation named: removeUsingPOST_10
2019-04-08 10:02:12 -Generating unique operation named: removeUsingPOST_11
2019-04-08 10:02:12 -Generating unique operation named: saveUsingPOST_5
2019-04-08 10:02:12 -Generating unique operation named: updateUsingGET_4
2019-04-08 10:02:12 -Generating unique operation named: updateUsingHEAD_4
2019-04-08 10:02:12 -Generating unique operation named: updateUsingPOST_5
2019-04-08 10:02:12 -Generating unique operation named: updateUsingPUT_4
2019-04-08 10:02:12 -Generating unique operation named: updateUsingPATCH_4
2019-04-08 10:02:12 -Generating unique operation named: updateUsingDELETE_4
2019-04-08 10:02:12 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-08 10:02:12 -Generating unique operation named: updateUsingTRACE_4
2019-04-08 10:02:12 -Generating unique operation named: editUsingGET_6
2019-04-08 10:02:12 -Generating unique operation named: listUsingGET_6
2019-04-08 10:02:12 -Generating unique operation named: updateUsingPOST_6
2019-04-08 10:02:12 -Generating unique operation named: addUsingGET_6
2019-04-08 10:02:12 -Generating unique operation named: editUsingGET_7
2019-04-08 10:02:12 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-08 10:02:12 -Generating unique operation named: listUsingGET_7
2019-04-08 10:02:12 -Generating unique operation named: removeUsingPOST_12
2019-04-08 10:02:12 -Generating unique operation named: removeUsingPOST_13
2019-04-08 10:02:12 -Generating unique operation named: saveUsingPOST_6
2019-04-08 10:02:12 -Generating unique operation named: updateUsingGET_5
2019-04-08 10:02:12 -Generating unique operation named: updateUsingHEAD_5
2019-04-08 10:02:12 -Generating unique operation named: updateUsingPOST_7
2019-04-08 10:02:12 -Generating unique operation named: updateUsingPUT_5
2019-04-08 10:02:12 -Generating unique operation named: updateUsingPATCH_5
2019-04-08 10:02:12 -Generating unique operation named: updateUsingDELETE_5
2019-04-08 10:02:12 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-08 10:02:12 -Generating unique operation named: updateUsingTRACE_5
2019-04-08 10:02:12 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-08 10:02:12 -Generating unique operation named: addUsingGET_7
2019-04-08 10:02:12 -Generating unique operation named: editUsingGET_8
2019-04-08 10:02:12 -Generating unique operation named: listUsingGET_8
2019-04-08 10:02:12 -Generating unique operation named: removeUsingPOST_14
2019-04-08 10:02:12 -Generating unique operation named: removeUsingPOST_15
2019-04-08 10:02:12 -Generating unique operation named: saveUsingPOST_7
2019-04-08 10:02:12 -Generating unique operation named: updateUsingGET_6
2019-04-08 10:02:12 -Generating unique operation named: updateUsingHEAD_6
2019-04-08 10:02:12 -Generating unique operation named: updateUsingPOST_8
2019-04-08 10:02:12 -Generating unique operation named: updateUsingPUT_6
2019-04-08 10:02:12 -Generating unique operation named: updateUsingPATCH_6
2019-04-08 10:02:12 -Generating unique operation named: updateUsingDELETE_6
2019-04-08 10:02:12 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-08 10:02:12 -Generating unique operation named: updateUsingTRACE_6
2019-04-08 10:02:12 -Generating unique operation named: addUsingGET_8
2019-04-08 10:02:12 -Generating unique operation named: editUsingGET_9
2019-04-08 10:02:12 -Generating unique operation named: listUsingGET_9
2019-04-08 10:02:12 -Generating unique operation named: removeUsingPOST_16
2019-04-08 10:02:12 -Generating unique operation named: removeUsingPOST_17
2019-04-08 10:02:12 -Generating unique operation named: saveUsingPOST_8
2019-04-08 10:02:12 -Generating unique operation named: updateUsingGET_7
2019-04-08 10:02:12 -Generating unique operation named: updateUsingHEAD_7
2019-04-08 10:02:12 -Generating unique operation named: updateUsingPOST_9
2019-04-08 10:02:12 -Generating unique operation named: updateUsingPUT_7
2019-04-08 10:02:12 -Generating unique operation named: updateUsingPATCH_7
2019-04-08 10:02:12 -Generating unique operation named: updateUsingDELETE_7
2019-04-08 10:02:12 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-08 10:02:12 -Generating unique operation named: updateUsingTRACE_7
2019-04-08 10:02:12 -Generating unique operation named: addUsingGET_9
2019-04-08 10:02:12 -Generating unique operation named: editUsingGET_10
2019-04-08 10:02:12 -Generating unique operation named: infoUsingGET_1
2019-04-08 10:02:12 -Generating unique operation named: infoUsingHEAD_1
2019-04-08 10:02:12 -Generating unique operation named: infoUsingPOST_1
2019-04-08 10:02:12 -Generating unique operation named: infoUsingPUT_1
2019-04-08 10:02:12 -Generating unique operation named: infoUsingPATCH_1
2019-04-08 10:02:12 -Generating unique operation named: infoUsingDELETE_1
2019-04-08 10:02:12 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-08 10:02:12 -Generating unique operation named: infoUsingTRACE_1
2019-04-08 10:02:12 -Generating unique operation named: listUsingGET_10
2019-04-08 10:02:12 -Generating unique operation named: removeUsingPOST_18
2019-04-08 10:02:12 -Generating unique operation named: removeUsingPOST_19
2019-04-08 10:02:12 -Generating unique operation named: saveUsingPOST_9
2019-04-08 10:02:12 -Generating unique operation named: updateUsingPOST_10
2019-04-08 10:02:12 -Generating unique operation named: listUsingGET_11
2019-04-08 10:02:12 -Generating unique operation named: removeUsingPOST_20
2019-04-08 10:02:12 -Generating unique operation named: welcomeUsingGET_1
2019-04-08 10:02:12 -Generating unique operation named: addUsingGET_10
2019-04-08 10:02:12 -Generating unique operation named: editUsingGET_11
2019-04-08 10:02:12 -Generating unique operation named: listUsingGET_12
2019-04-08 10:02:12 -Generating unique operation named: removeUsingPOST_21
2019-04-08 10:02:13 -Generating unique operation named: saveUsingPOST_10
2019-04-08 10:02:13 -Generating unique operation named: treeUsingGET_1
2019-04-08 10:02:13 -Generating unique operation named: treeUsingGET_2
2019-04-08 10:02:13 -Generating unique operation named: updateUsingPOST_11
2019-04-08 10:02:13 -Generating unique operation named: addUsingGET_11
2019-04-08 10:02:13 -Generating unique operation named: editUsingGET_12
2019-04-08 10:02:13 -Generating unique operation named: listUsingGET_13
2019-04-08 10:02:13 -Generating unique operation named: removeUsingPOST_22
2019-04-08 10:02:13 -Generating unique operation named: removeUsingPOST_23
2019-04-08 10:02:13 -Generating unique operation named: saveUsingPOST_11
2019-04-08 10:02:13 -Generating unique operation named: updateUsingGET_8
2019-04-08 10:02:13 -Generating unique operation named: updateUsingHEAD_8
2019-04-08 10:02:13 -Generating unique operation named: updateUsingPOST_12
2019-04-08 10:02:13 -Generating unique operation named: updateUsingPUT_8
2019-04-08 10:02:13 -Generating unique operation named: updateUsingPATCH_8
2019-04-08 10:02:13 -Generating unique operation named: updateUsingDELETE_8
2019-04-08 10:02:13 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-08 10:02:13 -Generating unique operation named: updateUsingTRACE_8
2019-04-08 10:02:13 -Generating unique operation named: addUsingGET_12
2019-04-08 10:02:13 -Generating unique operation named: editUsingGET_13
2019-04-08 10:02:13 -Generating unique operation named: listUsingGET_14
2019-04-08 10:02:13 -Generating unique operation named: removeUsingPOST_24
2019-04-08 10:02:13 -Generating unique operation named: removeUsingPOST_25
2019-04-08 10:02:13 -Generating unique operation named: saveUsingPOST_12
2019-04-08 10:02:13 -Generating unique operation named: updateUsingGET_9
2019-04-08 10:02:13 -Generating unique operation named: updateUsingHEAD_9
2019-04-08 10:02:13 -Generating unique operation named: updateUsingPOST_13
2019-04-08 10:02:13 -Generating unique operation named: updateUsingPUT_9
2019-04-08 10:02:13 -Generating unique operation named: updateUsingPATCH_9
2019-04-08 10:02:13 -Generating unique operation named: updateUsingDELETE_9
2019-04-08 10:02:13 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-08 10:02:13 -Generating unique operation named: updateUsingTRACE_9
2019-04-08 10:02:13 -Generating unique operation named: addUsingGET_13
2019-04-08 10:02:13 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-08 10:02:13 -Generating unique operation named: editUsingGET_14
2019-04-08 10:02:13 -Generating unique operation named: listUsingGET_15
2019-04-08 10:02:13 -Generating unique operation named: saveUsingPOST_13
2019-04-08 10:02:13 -Generating unique operation named: saveUsingPOST_14
2019-04-08 10:02:13 -Generating unique operation named: updateUsingPOST_14
2019-04-08 10:02:13 -Generating unique operation named: listUsingGET_16
2019-04-08 10:02:13 -Generating unique operation named: listUsingHEAD_1
2019-04-08 10:02:13 -Generating unique operation named: listUsingPOST_1
2019-04-08 10:02:13 -Generating unique operation named: listUsingPUT_1
2019-04-08 10:02:13 -Generating unique operation named: listUsingPATCH_1
2019-04-08 10:02:13 -Generating unique operation named: listUsingDELETE_1
2019-04-08 10:02:13 -Generating unique operation named: listUsingOPTIONS_1
2019-04-08 10:02:13 -Generating unique operation named: listUsingTRACE_1
2019-04-08 10:02:13 -Generating unique operation named: addUsingGET_14
2019-04-08 10:02:13 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-08 10:02:13 -Generating unique operation named: editUsingGET_15
2019-04-08 10:02:13 -Generating unique operation named: listUsingGET_17
2019-04-08 10:02:13 -Generating unique operation named: removeUsingPOST_26
2019-04-08 10:02:13 -Generating unique operation named: saveUsingPOST_15
2019-04-08 10:02:13 -Generating unique operation named: treeUsingGET_3
2019-04-08 10:02:13 -Generating unique operation named: treeViewUsingGET_1
2019-04-08 10:02:13 -Generating unique operation named: updateUsingPOST_15
2019-04-08 10:02:13 -Generating unique operation named: addUsingGET_15
2019-04-08 10:02:13 -Generating unique operation named: editUsingGET_16
2019-04-08 10:02:13 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-08 10:02:13 -Generating unique operation named: listUsingGET_18
2019-04-08 10:02:13 -Generating unique operation named: removeUsingPOST_27
2019-04-08 10:02:13 -Generating unique operation named: removeUsingPOST_28
2019-04-08 10:02:13 -Generating unique operation named: saveUsingPOST_16
2019-04-08 10:02:13 -Generating unique operation named: updateUsingGET_10
2019-04-08 10:02:13 -Generating unique operation named: updateUsingHEAD_10
2019-04-08 10:02:13 -Generating unique operation named: updateUsingPOST_16
2019-04-08 10:02:13 -Generating unique operation named: updateUsingPUT_10
2019-04-08 10:02:13 -Generating unique operation named: updateUsingPATCH_10
2019-04-08 10:02:13 -Generating unique operation named: updateUsingDELETE_10
2019-04-08 10:02:13 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-08 10:02:13 -Generating unique operation named: updateUsingTRACE_10
2019-04-08 10:02:13 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-08 10:02:13 -Generating unique operation named: addUsingGET_16
2019-04-08 10:02:13 -Generating unique operation named: editUsingGET_17
2019-04-08 10:02:13 -Generating unique operation named: listUsingGET_19
2019-04-08 10:02:13 -Generating unique operation named: removeUsingPOST_29
2019-04-08 10:02:13 -Generating unique operation named: removeUsingPOST_30
2019-04-08 10:02:13 -Generating unique operation named: saveUsingPOST_17
2019-04-08 10:02:13 -Generating unique operation named: updateUsingGET_11
2019-04-08 10:02:13 -Generating unique operation named: updateUsingHEAD_11
2019-04-08 10:02:13 -Generating unique operation named: updateUsingPOST_17
2019-04-08 10:02:13 -Generating unique operation named: updateUsingPUT_11
2019-04-08 10:02:13 -Generating unique operation named: updateUsingPATCH_11
2019-04-08 10:02:13 -Generating unique operation named: updateUsingDELETE_11
2019-04-08 10:02:13 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-08 10:02:13 -Generating unique operation named: updateUsingTRACE_11
2019-04-08 10:02:13 -Generating unique operation named: addUsingGET_17
2019-04-08 10:02:13 -Generating unique operation named: editUsingGET_18
2019-04-08 10:02:13 -Generating unique operation named: listUsingGET_20
2019-04-08 10:02:13 -Generating unique operation named: removeUsingPOST_31
2019-04-08 10:02:13 -Generating unique operation named: removeUsingPOST_32
2019-04-08 10:02:13 -Generating unique operation named: saveUsingPOST_18
2019-04-08 10:02:13 -Generating unique operation named: updateUsingGET_12
2019-04-08 10:02:13 -Generating unique operation named: updateUsingHEAD_12
2019-04-08 10:02:13 -Generating unique operation named: updateUsingPOST_18
2019-04-08 10:02:13 -Generating unique operation named: updateUsingPUT_12
2019-04-08 10:02:13 -Generating unique operation named: updateUsingPATCH_12
2019-04-08 10:02:13 -Generating unique operation named: updateUsingDELETE_12
2019-04-08 10:02:13 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-08 10:02:13 -Generating unique operation named: updateUsingTRACE_12
2019-04-08 10:02:13 -Starting Quartz Scheduler now
2019-04-08 10:02:13 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-08 10:02:13 -Starting...
2019-04-08 10:02:13 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-08 10:02:13 -Started.
2019-04-08 10:02:13 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-08 10:02:13 -Using a shared selector for servlet write/read
2019-04-08 10:02:13 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-08 10:02:13 -Started BootdoApplication in 26.747 seconds (JVM running for 27.714)
2019-04-08 10:02:13 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-08 10:02:14 -==> Parameters: 
2019-04-08 10:02:14 -<==      Total: 1
2019-04-08 10:02:55 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-08 10:02:55 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-08 10:02:55 -FrameworkServlet 'dispatcherServlet': initialization completed in 102 ms
2019-04-08 10:02:55 -Enabling session validation scheduler...
2019-04-08 10:02:55 -请求地址 : http://localhost:8081/login;JSESSIONID=9822a946-e4a7-479f-b2a4-0cc38441a6db
2019-04-08 10:02:55 -HTTP METHOD : GET
2019-04-08 10:02:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-08 10:02:55 -参数 : [{}]
2019-04-08 10:02:55 -耗时 : 3
2019-04-08 10:02:55 -返回值 : login
2019-04-08 10:02:56 -请求地址 : http://localhost:8081/getVerify
2019-04-08 10:02:56 -HTTP METHOD : GET
2019-04-08 10:02:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-08 10:02:56 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@2298f9e5, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6a551811]
2019-04-08 10:02:57 -9349
2019-04-08 10:02:57 -耗时 : 633
2019-04-08 10:02:57 -返回值 : null
2019-04-08 10:02:57 -请求地址 : http://localhost:8081/login
2019-04-08 10:02:57 -HTTP METHOD : GET
2019-04-08 10:02:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-08 10:02:57 -参数 : [{}]
2019-04-08 10:02:57 -耗时 : 0
2019-04-08 10:02:57 -返回值 : login
2019-04-08 10:03:07 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-04-08 10:03:31 -请求地址 : http://localhost:8081/login
2019-04-08 10:03:31 -HTTP METHOD : POST
2019-04-08 10:03:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-08 10:03:31 -参数 : [admin, 111111, 9349, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6871f1f5]
2019-04-08 10:03:32 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-08 10:03:32 -==> Parameters: admin(String)
2019-04-08 10:03:32 -<==      Total: 1
2019-04-08 10:03:32 -耗时 : 112
2019-04-08 10:03:32 -返回值 : {msg=操作成功, code=0}
2019-04-08 10:03:32 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-08 10:03:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 10:03:32 -==> Parameters: 1(Long), admin(String), 登录(String), 113(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-08 10:03:32.192(Timestamp)
2019-04-08 10:03:32 -请求地址 : http://localhost:8081/index
2019-04-08 10:03:32 -HTTP METHOD : GET
2019-04-08 10:03:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 10:03:32 -参数 : [{}]
2019-04-08 10:03:32 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 10:03:32 -==> Parameters: 1(Long)
2019-04-08 10:03:32 -<==      Total: 46
2019-04-08 10:03:32 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 10:03:32 -==> Parameters: 138(Long)
2019-04-08 10:03:32 -<==    Updates: 1
2019-04-08 10:03:32 -<==      Total: 1
2019-04-08 10:03:32 -耗时 : 441
2019-04-08 10:03:32 -返回值 : index_v1
2019-04-08 10:03:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 10:03:32 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 441(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 10:03:32.796(Timestamp)
2019-04-08 10:03:32 -<==    Updates: 1
2019-04-08 10:03:32 -请求地址 : http://localhost:8081/main
2019-04-08 10:03:32 -HTTP METHOD : GET
2019-04-08 10:03:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 10:03:32 -参数 : []
2019-04-08 10:03:32 -耗时 : 1
2019-04-08 10:03:32 -返回值 : main
2019-04-08 10:03:33 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 10:03:33 -HTTP METHOD : GET
2019-04-08 10:03:33 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 10:03:33 -参数 : []
2019-04-08 10:03:33 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 10:03:33 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 10:03:33 -请求地址 : http://localhost:8081/main
2019-04-08 10:03:33 -HTTP METHOD : GET
2019-04-08 10:03:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 10:03:33 -参数 : []
2019-04-08 10:03:33 -耗时 : 0
2019-04-08 10:03:33 -返回值 : main
2019-04-08 10:03:33 -<==      Total: 0
2019-04-08 10:03:33 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 10:03:33 -==> Parameters: 1(Long), 0(String)
2019-04-08 10:03:33 -<==      Total: 1
2019-04-08 10:03:33 -耗时 : 177
2019-04-08 10:03:33 -返回值 : com.bootdo.common.utils.PageUtils@3fac5a90
2019-04-08 10:03:42 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-08 10:03:42 -==> Parameters: 1(Long)
2019-04-08 10:03:42 -<==      Total: 90
2019-04-08 10:03:42 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 10:03:42 -HTTP METHOD : GET
2019-04-08 10:03:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 10:03:42 -参数 : []
2019-04-08 10:03:42 -耗时 : 1
2019-04-08 10:03:42 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 10:03:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:03:43 -HTTP METHOD : GET
2019-04-08 10:03:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:03:43 -参数 : [userType]
2019-04-08 10:03:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:03:44 -==> Parameters: userType(String)
2019-04-08 10:03:44 -<==      Total: 2
2019-04-08 10:03:44 -耗时 : 69
2019-04-08 10:03:44 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:03:44 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 10:03:44 -HTTP METHOD : GET
2019-04-08 10:03:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 10:03:44 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 10:03:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 10:03:44 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:03:44 -<==      Total: 7
2019-04-08 10:03:44 -==>  Preparing: select count(*) from elec_log 
2019-04-08 10:03:44 -==> Parameters: 
2019-04-08 10:03:44 -<==      Total: 1
2019-04-08 10:03:44 -耗时 : 38
2019-04-08 10:03:44 -返回值 : com.bootdo.common.utils.PageUtils@7f2bbcf3
2019-04-08 10:03:45 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 10:03:45 -HTTP METHOD : GET
2019-04-08 10:03:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 10:03:45 -参数 : []
2019-04-08 10:03:45 -耗时 : 0
2019-04-08 10:03:45 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 10:03:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:03:45 -HTTP METHOD : GET
2019-04-08 10:03:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:03:45 -参数 : [userType]
2019-04-08 10:03:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:03:45 -==> Parameters: userType(String)
2019-04-08 10:03:45 -<==      Total: 2
2019-04-08 10:03:45 -耗时 : 7
2019-04-08 10:03:45 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:03:45 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 10:03:45 -HTTP METHOD : GET
2019-04-08 10:03:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 10:03:45 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 10:03:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 10:03:45 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:03:45 -<==      Total: 6
2019-04-08 10:03:45 -==>  Preparing: select count(*) from heat_log 
2019-04-08 10:03:45 -==> Parameters: 
2019-04-08 10:03:45 -<==      Total: 1
2019-04-08 10:03:45 -耗时 : 41
2019-04-08 10:03:45 -返回值 : com.bootdo.common.utils.PageUtils@4a643637
2019-04-08 10:04:03 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 10:04:03 -HTTP METHOD : GET
2019-04-08 10:04:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 10:04:03 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, heatDate=2019-03-08, type=A}]
2019-04-08 10:04:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE user_type = ? and `heat_date` >= ? and `heat_date` <= ? order by id asc limit ?, ? 
2019-04-08 10:04:03 -==> Parameters: A(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-04-08 10:04:03 -<==      Total: 2
2019-04-08 10:04:03 -==>  Preparing: select count(*) from heat_log WHERE user_type = ? and `heat_date` >= ? and `heat_date` <= ? 
2019-04-08 10:04:03 -==> Parameters: A(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String)
2019-04-08 10:04:03 -<==      Total: 1
2019-04-08 10:04:03 -耗时 : 33
2019-04-08 10:04:03 -返回值 : com.bootdo.common.utils.PageUtils@240a0a1d
2019-04-08 10:04:06 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 10:04:06 -HTTP METHOD : GET
2019-04-08 10:04:06 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 10:04:06 -参数 : []
2019-04-08 10:04:06 -耗时 : 1
2019-04-08 10:04:06 -返回值 : system/dept/deptTree
2019-04-08 10:04:06 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 10:04:06 -HTTP METHOD : GET
2019-04-08 10:04:06 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 10:04:06 -参数 : []
2019-04-08 10:04:06 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 10:04:06 -==> Parameters: 
2019-04-08 10:04:06 -<==      Total: 3
2019-04-08 10:04:07 -耗时 : 26
2019-04-08 10:04:07 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 10:04:16 -请求地址 : http://localhost:8081/moneyLog/heatLog/exprotHeatLog
2019-04-08 10:04:16 -HTTP METHOD : GET
2019-04-08 10:04:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog
2019-04-08 10:04:16 -参数 : [com.bootdo.moneyLog.vo.HeatLogVo@261a5b38, org.apache.shiro.web.servlet.ShiroHttpServletResponse@173ceb6b, org.apache.shiro.web.servlet.ShiroHttpServletRequest@52f2707d]
2019-04-08 10:04:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log WHERE user_type = ? and user_org = ? and `heat_date` >= ? and `heat_date` <= ? 
2019-04-08 10:04:16 -==> Parameters: A(String), 2(String), 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String)
2019-04-08 10:04:16 -<==      Total: 2
2019-04-08 10:04:17 -耗时 : 909
2019-04-08 10:04:17 -返回值 : null
2019-04-08 10:05:28 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 10:05:28 -HTTP METHOD : GET
2019-04-08 10:05:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 10:05:28 -参数 : []
2019-04-08 10:05:28 -耗时 : 1
2019-04-08 10:05:28 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 10:05:28 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:05:28 -HTTP METHOD : GET
2019-04-08 10:05:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:05:28 -参数 : [userType]
2019-04-08 10:05:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:05:28 -==> Parameters: userType(String)
2019-04-08 10:05:28 -<==      Total: 2
2019-04-08 10:05:28 -耗时 : 6
2019-04-08 10:05:28 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:05:29 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 10:05:29 -HTTP METHOD : GET
2019-04-08 10:05:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 10:05:29 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 10:05:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 10:05:29 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:05:29 -<==      Total: 7
2019-04-08 10:05:29 -==>  Preparing: select count(*) from elec_log 
2019-04-08 10:05:29 -==> Parameters: 
2019-04-08 10:05:29 -<==      Total: 1
2019-04-08 10:05:29 -耗时 : 11
2019-04-08 10:05:29 -返回值 : com.bootdo.common.utils.PageUtils@34e590ef
2019-04-08 10:05:33 -请求地址 : http://localhost:8081/moneyLog/elecLog/add
2019-04-08 10:05:33 -HTTP METHOD : GET
2019-04-08 10:05:33 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.add
2019-04-08 10:05:33 -参数 : []
2019-04-08 10:05:33 -耗时 : 0
2019-04-08 10:05:33 -返回值 : moneyLog/elecLog/add
2019-04-08 10:05:33 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:05:33 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-08 10:05:33 -HTTP METHOD : GET
2019-04-08 10:05:33 -HTTP METHOD : GET
2019-04-08 10:05:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:05:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:05:33 -参数 : [userType]
2019-04-08 10:05:33 -参数 : [elecType]
2019-04-08 10:05:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:05:33 -==> Parameters: userType(String)
2019-04-08 10:05:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:05:33 -==> Parameters: elecType(String)
2019-04-08 10:05:33 -<==      Total: 2
2019-04-08 10:05:33 -耗时 : 6
2019-04-08 10:05:33 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:05:33 -<==      Total: 4
2019-04-08 10:05:33 -耗时 : 9
2019-04-08 10:05:33 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='工业非盈利', value='3', type='elecType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=135, name='工业盈利', value='2', type='elecType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:06:02 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 10:06:02 -HTTP METHOD : GET
2019-04-08 10:06:02 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 10:06:02 -参数 : []
2019-04-08 10:06:02 -耗时 : 0
2019-04-08 10:06:02 -返回值 : system/dept/deptTree
2019-04-08 10:06:02 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 10:06:02 -HTTP METHOD : GET
2019-04-08 10:06:02 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 10:06:02 -参数 : []
2019-04-08 10:06:02 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 10:06:02 -==> Parameters: 
2019-04-08 10:06:02 -<==      Total: 3
2019-04-08 10:06:02 -耗时 : 4
2019-04-08 10:06:02 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 10:06:15 -请求地址 : http://localhost:8081/moneyLog/elecLog/save
2019-04-08 10:06:15 -HTTP METHOD : POST
2019-04-08 10:06:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.save
2019-04-08 10:06:15 -参数 : [com.bootdo.moneyLog.domain.ElecLogDO@d4b1e79]
2019-04-08 10:06:15 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 10:06:15 -==> Parameters: 111111(String), 1111111111(String), A(String), 2(String), 1(String), 1111111(BigDecimal), 2019-04-08 10:06:15.017(Timestamp), 2019-04(String), 1(Long), 2019-04-08 10:06:15.017(Timestamp), 1(Long), 1(String)
2019-04-08 10:06:15 -<==    Updates: 1
2019-04-08 10:06:15 -耗时 : 118
2019-04-08 10:06:15 -返回值 : {msg=操作成功, code=0}
2019-04-08 10:06:15 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 10:06:15 -HTTP METHOD : GET
2019-04-08 10:06:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 10:06:15 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 10:06:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 10:06:15 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:06:15 -<==      Total: 8
2019-04-08 10:06:15 -==>  Preparing: select count(*) from elec_log 
2019-04-08 10:06:15 -==> Parameters: 
2019-04-08 10:06:15 -<==      Total: 1
2019-04-08 10:06:15 -耗时 : 14
2019-04-08 10:06:15 -返回值 : com.bootdo.common.utils.PageUtils@678f1e38
2019-04-08 10:08:40 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/8
2019-04-08 10:08:40 -HTTP METHOD : GET
2019-04-08 10:08:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-04-08 10:08:40 -参数 : [8, {}]
2019-04-08 10:08:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-04-08 10:08:40 -==> Parameters: 8(Long)
2019-04-08 10:08:40 -<==      Total: 1
2019-04-08 10:08:40 -耗时 : 8
2019-04-08 10:08:40 -返回值 : moneyLog/elecLog/edit
2019-04-08 10:08:41 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-08 10:08:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:08:41 -HTTP METHOD : GET
2019-04-08 10:08:41 -HTTP METHOD : GET
2019-04-08 10:08:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:08:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:08:41 -参数 : [elecType]
2019-04-08 10:08:41 -参数 : [userType]
2019-04-08 10:08:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:08:41 -==> Parameters: elecType(String)
2019-04-08 10:08:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:08:41 -==> Parameters: userType(String)
2019-04-08 10:08:41 -<==      Total: 2
2019-04-08 10:08:41 -<==      Total: 4
2019-04-08 10:08:41 -耗时 : 7
2019-04-08 10:08:41 -耗时 : 7
2019-04-08 10:08:41 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:08:41 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='工业非盈利', value='3', type='elecType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=135, name='工业盈利', value='2', type='elecType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:09:04 -请求地址 : http://localhost:8081/moneyLog/elecLog/update
2019-04-08 10:09:04 -HTTP METHOD : POST
2019-04-08 10:09:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.update
2019-04-08 10:09:04 -参数 : [com.bootdo.moneyLog.domain.ElecLogDO@3190b256]
2019-04-08 10:09:04 -==>  Preparing: update elec_log SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `elec_type` = ?, `elec_money` = ?, `elec_date` = ?, `create_time` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-04-08 10:09:04 -==> Parameters: 111111(String), 1111111111(String), A(String), 2(String), 1(String), 111111(BigDecimal), 2019-09-09 10:06:15.0(Timestamp), 2019-04(String), 1(Long), 2019-04-08 10:09:04.493(Timestamp), 1(Long), (String), 8(Long)
2019-04-08 10:09:04 -<==    Updates: 1
2019-04-08 10:09:04 -耗时 : 84
2019-04-08 10:09:04 -返回值 : {msg=操作成功, code=0}
2019-04-08 10:09:04 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 10:09:04 -HTTP METHOD : GET
2019-04-08 10:09:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 10:09:04 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 10:09:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 10:09:04 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:09:04 -<==      Total: 8
2019-04-08 10:09:04 -==>  Preparing: select count(*) from elec_log 
2019-04-08 10:09:04 -==> Parameters: 
2019-04-08 10:09:04 -<==      Total: 1
2019-04-08 10:09:04 -耗时 : 34
2019-04-08 10:09:04 -返回值 : com.bootdo.common.utils.PageUtils@2a6c83b1
2019-04-08 10:09:12 -请求地址 : http://localhost:8081/moneyLog/elecLog/add
2019-04-08 10:09:12 -HTTP METHOD : GET
2019-04-08 10:09:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.add
2019-04-08 10:09:12 -参数 : []
2019-04-08 10:09:12 -耗时 : 1
2019-04-08 10:09:12 -返回值 : moneyLog/elecLog/add
2019-04-08 10:09:12 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:09:12 -HTTP METHOD : GET
2019-04-08 10:09:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:09:12 -参数 : [userType]
2019-04-08 10:09:12 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-08 10:09:12 -HTTP METHOD : GET
2019-04-08 10:09:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:09:12 -参数 : [elecType]
2019-04-08 10:09:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:09:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:09:12 -==> Parameters: elecType(String)
2019-04-08 10:09:12 -==> Parameters: userType(String)
2019-04-08 10:09:12 -<==      Total: 2
2019-04-08 10:09:12 -耗时 : 7
2019-04-08 10:09:12 -<==      Total: 4
2019-04-08 10:09:12 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:09:12 -耗时 : 7
2019-04-08 10:09:12 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='工业非盈利', value='3', type='elecType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=135, name='工业盈利', value='2', type='elecType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:09:22 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/8
2019-04-08 10:09:22 -HTTP METHOD : GET
2019-04-08 10:09:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-04-08 10:09:22 -参数 : [8, {}]
2019-04-08 10:09:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-04-08 10:09:22 -==> Parameters: 8(Long)
2019-04-08 10:09:22 -<==      Total: 1
2019-04-08 10:09:22 -耗时 : 7
2019-04-08 10:09:22 -返回值 : moneyLog/elecLog/edit
2019-04-08 10:09:22 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:09:22 -HTTP METHOD : GET
2019-04-08 10:09:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:09:22 -参数 : [userType]
2019-04-08 10:09:22 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-08 10:09:22 -HTTP METHOD : GET
2019-04-08 10:09:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:09:22 -参数 : [elecType]
2019-04-08 10:09:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:09:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:09:22 -==> Parameters: userType(String)
2019-04-08 10:09:22 -==> Parameters: elecType(String)
2019-04-08 10:09:22 -<==      Total: 2
2019-04-08 10:09:22 -<==      Total: 4
2019-04-08 10:09:22 -耗时 : 6
2019-04-08 10:09:22 -耗时 : 5
2019-04-08 10:09:22 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:09:22 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='工业非盈利', value='3', type='elecType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=135, name='工业盈利', value='2', type='elecType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:09:44 -请求地址 : http://localhost:8081/moneyLog/elecLog/update
2019-04-08 10:09:44 -HTTP METHOD : POST
2019-04-08 10:09:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.update
2019-04-08 10:09:44 -参数 : [com.bootdo.moneyLog.domain.ElecLogDO@48d111cf]
2019-04-08 10:09:44 -==>  Preparing: update elec_log SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `elec_type` = ?, `elec_money` = ?, `elec_date` = ?, `create_time` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-04-08 10:09:44 -==> Parameters: 111111(String), 1111111111(String), A(String), 2(String), 1(String), 1111111(BigDecimal), 2019-09-09 10:06:15.0(Timestamp), 2019-04(String), 1(Long), 2019-04-08 10:09:44.52(Timestamp), 1(Long), (String), 8(Long)
2019-04-08 10:09:44 -<==    Updates: 1
2019-04-08 10:09:44 -耗时 : 132
2019-04-08 10:09:44 -返回值 : {msg=操作成功, code=0}
2019-04-08 10:09:44 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 10:09:44 -HTTP METHOD : GET
2019-04-08 10:09:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 10:09:44 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 10:09:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 10:09:44 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:09:44 -<==      Total: 8
2019-04-08 10:09:44 -==>  Preparing: select count(*) from elec_log 
2019-04-08 10:09:44 -==> Parameters: 
2019-04-08 10:09:44 -<==      Total: 1
2019-04-08 10:09:44 -耗时 : 10
2019-04-08 10:09:44 -返回值 : com.bootdo.common.utils.PageUtils@26e9e858
2019-04-08 10:09:46 -请求地址 : http://localhost:8081/moneyLog/elecLog/add
2019-04-08 10:09:46 -HTTP METHOD : GET
2019-04-08 10:09:46 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.add
2019-04-08 10:09:46 -参数 : []
2019-04-08 10:09:46 -耗时 : 0
2019-04-08 10:09:46 -返回值 : moneyLog/elecLog/add
2019-04-08 10:09:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:09:46 -HTTP METHOD : GET
2019-04-08 10:09:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:09:46 -参数 : [userType]
2019-04-08 10:09:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:09:46 -==> Parameters: userType(String)
2019-04-08 10:09:46 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-04-08 10:09:46 -HTTP METHOD : GET
2019-04-08 10:09:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:09:46 -参数 : [elecType]
2019-04-08 10:09:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:09:46 -==> Parameters: elecType(String)
2019-04-08 10:09:46 -<==      Total: 2
2019-04-08 10:09:46 -耗时 : 5
2019-04-08 10:09:46 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:09:46 -<==      Total: 4
2019-04-08 10:09:46 -耗时 : 7
2019-04-08 10:09:46 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=136, name='工业非盈利', value='3', type='elecType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=135, name='工业盈利', value='2', type='elecType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:10:19 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 10:10:19 -HTTP METHOD : GET
2019-04-08 10:10:19 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 10:10:19 -参数 : []
2019-04-08 10:10:19 -耗时 : 0
2019-04-08 10:10:19 -返回值 : system/dept/deptTree
2019-04-08 10:10:19 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 10:10:19 -HTTP METHOD : GET
2019-04-08 10:10:19 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 10:10:19 -参数 : []
2019-04-08 10:10:19 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 10:10:19 -==> Parameters: 
2019-04-08 10:10:19 -<==      Total: 3
2019-04-08 10:10:19 -耗时 : 6
2019-04-08 10:10:19 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 10:10:28 -请求地址 : http://localhost:8081/moneyLog/elecLog/save
2019-04-08 10:10:28 -HTTP METHOD : POST
2019-04-08 10:10:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.save
2019-04-08 10:10:28 -参数 : [com.bootdo.moneyLog.domain.ElecLogDO@1949aa7]
2019-04-08 10:10:28 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 10:10:28 -==> Parameters: 222222(String), 2222222222(String), B(String), 2(String), 0(String), 1111111(BigDecimal), 2019-04-08 10:10:28.347(Timestamp), 2019-04(String), 1(Long), 2019-04-08 10:10:28.347(Timestamp), 1(Long), (String)
2019-04-08 10:10:28 -<==    Updates: 1
2019-04-08 10:10:28 -耗时 : 75
2019-04-08 10:10:28 -返回值 : {msg=操作成功, code=0}
2019-04-08 10:10:28 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 10:10:28 -HTTP METHOD : GET
2019-04-08 10:10:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 10:10:28 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 10:10:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 10:10:28 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:10:28 -<==      Total: 9
2019-04-08 10:10:28 -==>  Preparing: select count(*) from elec_log 
2019-04-08 10:10:28 -==> Parameters: 
2019-04-08 10:10:28 -<==      Total: 1
2019-04-08 10:10:28 -耗时 : 11
2019-04-08 10:10:28 -返回值 : com.bootdo.common.utils.PageUtils@6a79bab9
2019-04-08 10:11:00 -请求地址 : http://localhost:8081/moneyLog/elecLog/remove
2019-04-08 10:11:00 -HTTP METHOD : POST
2019-04-08 10:11:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.remove
2019-04-08 10:11:00 -参数 : [9]
2019-04-08 10:11:00 -==>  Preparing: delete from elec_log where id = ? 
2019-04-08 10:11:00 -==> Parameters: 9(Long)
2019-04-08 10:11:00 -<==    Updates: 1
2019-04-08 10:11:00 -耗时 : 166
2019-04-08 10:11:00 -返回值 : {msg=操作成功, code=0}
2019-04-08 10:11:00 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 10:11:00 -HTTP METHOD : GET
2019-04-08 10:11:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 10:11:00 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 10:11:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 10:11:00 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:11:00 -<==      Total: 8
2019-04-08 10:11:00 -==>  Preparing: select count(*) from elec_log 
2019-04-08 10:11:00 -==> Parameters: 
2019-04-08 10:11:00 -<==      Total: 1
2019-04-08 10:11:00 -耗时 : 18
2019-04-08 10:11:00 -返回值 : com.bootdo.common.utils.PageUtils@57fe05a6
2019-04-08 10:11:17 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 10:11:17 -HTTP METHOD : GET
2019-04-08 10:11:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 10:11:17 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, elecDate=2019-03-19, type=A}]
2019-04-08 10:11:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-04-08 10:11:17 -==> Parameters: A(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-04-08 10:11:17 -<==      Total: 3
2019-04-08 10:11:17 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and `elec_date` >= ? and `elec_date` <= ? 
2019-04-08 10:11:17 -==> Parameters: A(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-04-08 10:11:17 -<==      Total: 1
2019-04-08 10:11:17 -耗时 : 22
2019-04-08 10:11:17 -返回值 : com.bootdo.common.utils.PageUtils@76bad9d1
2019-04-08 10:11:20 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 10:11:20 -HTTP METHOD : GET
2019-04-08 10:11:20 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 10:11:20 -参数 : []
2019-04-08 10:11:20 -耗时 : 1
2019-04-08 10:11:20 -返回值 : system/dept/deptTree
2019-04-08 10:11:20 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 10:11:20 -HTTP METHOD : GET
2019-04-08 10:11:20 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 10:11:20 -参数 : []
2019-04-08 10:11:20 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 10:11:20 -==> Parameters: 
2019-04-08 10:11:20 -<==      Total: 3
2019-04-08 10:11:20 -耗时 : 4
2019-04-08 10:11:20 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 10:11:22 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 10:11:22 -HTTP METHOD : GET
2019-04-08 10:11:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 10:11:22 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, elecDate=2019-03-19}]
2019-04-08 10:11:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-04-08 10:11:22 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-04-08 10:11:22 -<==      Total: 3
2019-04-08 10:11:22 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? 
2019-04-08 10:11:22 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-04-08 10:11:22 -<==      Total: 1
2019-04-08 10:11:22 -耗时 : 12
2019-04-08 10:11:22 -返回值 : com.bootdo.common.utils.PageUtils@6ca73c94
2019-04-08 10:11:23 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 10:11:23 -HTTP METHOD : GET
2019-04-08 10:11:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 10:11:23 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, elecDate=2019-03-19}]
2019-04-08 10:11:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-04-08 10:11:23 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-04-08 10:11:23 -<==      Total: 3
2019-04-08 10:11:23 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? 
2019-04-08 10:11:23 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-04-08 10:11:23 -<==      Total: 1
2019-04-08 10:11:23 -耗时 : 9
2019-04-08 10:11:23 -返回值 : com.bootdo.common.utils.PageUtils@74538322
2019-04-08 10:11:24 -请求地址 : http://localhost:8081/moneyLog/elecLog/exprotElecLog
2019-04-08 10:11:24 -HTTP METHOD : GET
2019-04-08 10:11:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog
2019-04-08 10:11:24 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@14be186b, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4d1b44d7, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1145482e]
2019-04-08 10:11:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? 
2019-04-08 10:11:24 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String)
2019-04-08 10:11:24 -<==      Total: 3
2019-04-08 10:11:24 -耗时 : 15
2019-04-08 10:11:24 -返回值 : null
2019-04-08 10:11:49 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 10:11:49 -HTTP METHOD : GET
2019-04-08 10:11:49 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 10:11:49 -参数 : []
2019-04-08 10:11:49 -耗时 : 0
2019-04-08 10:11:49 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 10:11:49 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:11:49 -HTTP METHOD : GET
2019-04-08 10:11:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:11:49 -参数 : [userType]
2019-04-08 10:11:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:11:49 -==> Parameters: userType(String)
2019-04-08 10:11:49 -<==      Total: 2
2019-04-08 10:11:49 -耗时 : 5
2019-04-08 10:11:49 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:11:49 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 10:11:49 -HTTP METHOD : GET
2019-04-08 10:11:49 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 10:11:49 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 10:11:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 10:11:49 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:11:49 -<==      Total: 6
2019-04-08 10:11:49 -==>  Preparing: select count(*) from heat_log 
2019-04-08 10:11:49 -==> Parameters: 
2019-04-08 10:11:49 -<==      Total: 1
2019-04-08 10:11:49 -耗时 : 20
2019-04-08 10:11:49 -返回值 : com.bootdo.common.utils.PageUtils@5ed0a7dd
2019-04-08 10:11:50 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-08 10:11:50 -HTTP METHOD : GET
2019-04-08 10:11:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-08 10:11:50 -参数 : []
2019-04-08 10:11:50 -耗时 : 0
2019-04-08 10:11:50 -返回值 : /moneyLog/waterLog/waterLog
2019-04-08 10:11:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:11:50 -HTTP METHOD : GET
2019-04-08 10:11:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:11:50 -参数 : [userType]
2019-04-08 10:11:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:11:50 -==> Parameters: userType(String)
2019-04-08 10:11:50 -<==      Total: 2
2019-04-08 10:11:50 -耗时 : 6
2019-04-08 10:11:50 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:11:50 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 10:11:50 -HTTP METHOD : GET
2019-04-08 10:11:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 10:11:50 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 10:11:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 10:11:50 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:11:50 -<==      Total: 6
2019-04-08 10:11:50 -==>  Preparing: select count(*) from water_log 
2019-04-08 10:11:50 -==> Parameters: 
2019-04-08 10:11:50 -<==      Total: 1
2019-04-08 10:11:50 -耗时 : 133
2019-04-08 10:11:50 -返回值 : com.bootdo.common.utils.PageUtils@2ebc717a
2019-04-08 10:11:51 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 10:11:51 -HTTP METHOD : GET
2019-04-08 10:11:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 10:11:51 -参数 : []
2019-04-08 10:11:51 -耗时 : 0
2019-04-08 10:11:51 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 10:11:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:11:51 -HTTP METHOD : GET
2019-04-08 10:11:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:11:51 -参数 : [userType]
2019-04-08 10:11:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:11:51 -==> Parameters: userType(String)
2019-04-08 10:11:51 -<==      Total: 2
2019-04-08 10:11:51 -耗时 : 3
2019-04-08 10:11:51 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:11:51 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 10:11:51 -HTTP METHOD : GET
2019-04-08 10:11:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 10:11:51 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 10:11:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 10:11:51 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:11:51 -<==      Total: 6
2019-04-08 10:11:51 -==>  Preparing: select count(*) from heat_log 
2019-04-08 10:11:51 -==> Parameters: 
2019-04-08 10:11:51 -<==      Total: 1
2019-04-08 10:11:51 -耗时 : 7
2019-04-08 10:11:51 -返回值 : com.bootdo.common.utils.PageUtils@3da7f948
2019-04-08 10:11:51 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 10:11:51 -HTTP METHOD : GET
2019-04-08 10:11:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 10:11:51 -参数 : []
2019-04-08 10:11:51 -耗时 : 1
2019-04-08 10:11:51 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 10:11:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:11:51 -HTTP METHOD : GET
2019-04-08 10:11:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:11:51 -参数 : [userType]
2019-04-08 10:11:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:11:51 -==> Parameters: userType(String)
2019-04-08 10:11:51 -<==      Total: 2
2019-04-08 10:11:51 -耗时 : 3
2019-04-08 10:11:51 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:11:51 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 10:11:51 -HTTP METHOD : GET
2019-04-08 10:11:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 10:11:51 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 10:11:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 10:11:51 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:11:51 -<==      Total: 8
2019-04-08 10:11:51 -==>  Preparing: select count(*) from elec_log 
2019-04-08 10:11:51 -==> Parameters: 
2019-04-08 10:11:51 -<==      Total: 1
2019-04-08 10:11:51 -耗时 : 10
2019-04-08 10:11:51 -返回值 : com.bootdo.common.utils.PageUtils@3c6ff9
2019-04-08 10:11:55 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 10:11:55 -HTTP METHOD : GET
2019-04-08 10:11:55 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 10:11:55 -参数 : []
2019-04-08 10:11:55 -耗时 : 0
2019-04-08 10:11:55 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 10:11:55 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:11:55 -HTTP METHOD : GET
2019-04-08 10:11:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:11:55 -参数 : [userType]
2019-04-08 10:11:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:11:55 -==> Parameters: userType(String)
2019-04-08 10:11:55 -<==      Total: 2
2019-04-08 10:11:55 -耗时 : 4
2019-04-08 10:11:55 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:11:55 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 10:11:55 -HTTP METHOD : GET
2019-04-08 10:11:55 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 10:11:55 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 10:11:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 10:11:55 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:11:55 -<==      Total: 6
2019-04-08 10:11:55 -==>  Preparing: select count(*) from heat_log 
2019-04-08 10:11:55 -==> Parameters: 
2019-04-08 10:11:55 -<==      Total: 1
2019-04-08 10:11:55 -耗时 : 10
2019-04-08 10:11:55 -返回值 : com.bootdo.common.utils.PageUtils@29d21fc2
2019-04-08 10:11:56 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-08 10:11:56 -HTTP METHOD : GET
2019-04-08 10:11:56 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-08 10:11:56 -参数 : []
2019-04-08 10:11:56 -耗时 : 0
2019-04-08 10:11:56 -返回值 : /moneyLog/waterLog/waterLog
2019-04-08 10:11:56 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:11:56 -HTTP METHOD : GET
2019-04-08 10:11:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:11:56 -参数 : [userType]
2019-04-08 10:11:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:11:56 -==> Parameters: userType(String)
2019-04-08 10:11:56 -<==      Total: 2
2019-04-08 10:11:56 -耗时 : 3
2019-04-08 10:11:56 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:11:56 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 10:11:56 -HTTP METHOD : GET
2019-04-08 10:11:56 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 10:11:56 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 10:11:56 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 10:11:56 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:11:56 -<==      Total: 6
2019-04-08 10:11:56 -==>  Preparing: select count(*) from water_log 
2019-04-08 10:11:56 -==> Parameters: 
2019-04-08 10:11:56 -<==      Total: 1
2019-04-08 10:11:56 -耗时 : 7
2019-04-08 10:11:56 -返回值 : com.bootdo.common.utils.PageUtils@3726b081
2019-04-08 10:11:56 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 10:11:56 -HTTP METHOD : GET
2019-04-08 10:11:56 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 10:11:56 -参数 : []
2019-04-08 10:11:56 -耗时 : 0
2019-04-08 10:11:56 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 10:11:56 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:11:56 -HTTP METHOD : GET
2019-04-08 10:11:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:11:56 -参数 : [userType]
2019-04-08 10:11:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:11:56 -==> Parameters: userType(String)
2019-04-08 10:11:56 -<==      Total: 2
2019-04-08 10:11:56 -耗时 : 4
2019-04-08 10:11:56 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:11:56 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 10:11:56 -HTTP METHOD : GET
2019-04-08 10:11:56 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 10:11:56 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 10:11:56 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 10:11:56 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:11:56 -<==      Total: 6
2019-04-08 10:11:56 -==>  Preparing: select count(*) from heat_log 
2019-04-08 10:11:56 -==> Parameters: 
2019-04-08 10:11:56 -<==      Total: 1
2019-04-08 10:11:56 -耗时 : 7
2019-04-08 10:11:56 -返回值 : com.bootdo.common.utils.PageUtils@60a81db8
2019-04-08 10:11:57 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 10:11:57 -HTTP METHOD : GET
2019-04-08 10:11:57 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 10:11:57 -参数 : []
2019-04-08 10:11:57 -耗时 : 1
2019-04-08 10:11:57 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 10:11:57 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:11:57 -HTTP METHOD : GET
2019-04-08 10:11:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:11:57 -参数 : [userType]
2019-04-08 10:11:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:11:57 -==> Parameters: userType(String)
2019-04-08 10:11:57 -<==      Total: 2
2019-04-08 10:11:57 -耗时 : 5
2019-04-08 10:11:57 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:11:57 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 10:11:57 -HTTP METHOD : GET
2019-04-08 10:11:57 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 10:11:57 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 10:11:57 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 10:11:57 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:11:57 -<==      Total: 8
2019-04-08 10:11:57 -==>  Preparing: select count(*) from elec_log 
2019-04-08 10:11:57 -==> Parameters: 
2019-04-08 10:11:57 -<==      Total: 1
2019-04-08 10:11:57 -耗时 : 9
2019-04-08 10:11:57 -返回值 : com.bootdo.common.utils.PageUtils@1d3ff6d3
2019-04-08 10:11:57 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 10:11:57 -HTTP METHOD : GET
2019-04-08 10:11:57 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 10:11:57 -参数 : []
2019-04-08 10:11:57 -耗时 : 0
2019-04-08 10:11:57 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 10:11:57 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:11:57 -HTTP METHOD : GET
2019-04-08 10:11:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:11:57 -参数 : [userType]
2019-04-08 10:11:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:11:57 -==> Parameters: userType(String)
2019-04-08 10:11:57 -<==      Total: 2
2019-04-08 10:11:57 -耗时 : 4
2019-04-08 10:11:57 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:11:58 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 10:11:58 -HTTP METHOD : GET
2019-04-08 10:11:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 10:11:58 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 10:11:58 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 10:11:58 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:11:58 -<==      Total: 6
2019-04-08 10:11:58 -==>  Preparing: select count(*) from heat_log 
2019-04-08 10:11:58 -==> Parameters: 
2019-04-08 10:11:58 -<==      Total: 1
2019-04-08 10:11:58 -耗时 : 8
2019-04-08 10:11:58 -返回值 : com.bootdo.common.utils.PageUtils@11e6b005
2019-04-08 10:11:58 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-08 10:11:58 -HTTP METHOD : GET
2019-04-08 10:11:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-08 10:11:58 -参数 : []
2019-04-08 10:11:58 -耗时 : 0
2019-04-08 10:11:58 -返回值 : /moneyLog/waterLog/waterLog
2019-04-08 10:11:58 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:11:58 -HTTP METHOD : GET
2019-04-08 10:11:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:11:58 -参数 : [userType]
2019-04-08 10:11:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:11:58 -==> Parameters: userType(String)
2019-04-08 10:11:58 -<==      Total: 2
2019-04-08 10:11:58 -耗时 : 3
2019-04-08 10:11:58 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:11:58 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 10:11:58 -HTTP METHOD : GET
2019-04-08 10:11:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 10:11:58 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 10:11:58 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 10:11:58 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:11:58 -<==      Total: 6
2019-04-08 10:11:58 -==>  Preparing: select count(*) from water_log 
2019-04-08 10:11:58 -==> Parameters: 
2019-04-08 10:11:58 -<==      Total: 1
2019-04-08 10:11:58 -耗时 : 14
2019-04-08 10:11:58 -返回值 : com.bootdo.common.utils.PageUtils@15281f87
2019-04-08 10:11:59 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 10:11:59 -HTTP METHOD : GET
2019-04-08 10:11:59 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 10:11:59 -参数 : []
2019-04-08 10:11:59 -耗时 : 2
2019-04-08 10:11:59 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 10:11:59 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:11:59 -HTTP METHOD : GET
2019-04-08 10:11:59 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:11:59 -参数 : [userType]
2019-04-08 10:11:59 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:11:59 -==> Parameters: userType(String)
2019-04-08 10:11:59 -<==      Total: 2
2019-04-08 10:11:59 -耗时 : 3
2019-04-08 10:11:59 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:11:59 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 10:11:59 -HTTP METHOD : GET
2019-04-08 10:11:59 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 10:11:59 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 10:11:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 10:11:59 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:11:59 -<==      Total: 6
2019-04-08 10:11:59 -==>  Preparing: select count(*) from heat_log 
2019-04-08 10:11:59 -==> Parameters: 
2019-04-08 10:11:59 -<==      Total: 1
2019-04-08 10:11:59 -耗时 : 9
2019-04-08 10:11:59 -返回值 : com.bootdo.common.utils.PageUtils@410e715e
2019-04-08 10:11:59 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 10:11:59 -HTTP METHOD : GET
2019-04-08 10:11:59 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 10:11:59 -参数 : []
2019-04-08 10:11:59 -耗时 : 0
2019-04-08 10:11:59 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 10:11:59 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:11:59 -HTTP METHOD : GET
2019-04-08 10:11:59 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:11:59 -参数 : [userType]
2019-04-08 10:11:59 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:11:59 -==> Parameters: userType(String)
2019-04-08 10:11:59 -<==      Total: 2
2019-04-08 10:11:59 -耗时 : 4
2019-04-08 10:11:59 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:11:59 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 10:11:59 -HTTP METHOD : GET
2019-04-08 10:11:59 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 10:11:59 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 10:11:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 10:11:59 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:11:59 -<==      Total: 8
2019-04-08 10:11:59 -==>  Preparing: select count(*) from elec_log 
2019-04-08 10:11:59 -==> Parameters: 
2019-04-08 10:11:59 -<==      Total: 1
2019-04-08 10:11:59 -耗时 : 9
2019-04-08 10:11:59 -返回值 : com.bootdo.common.utils.PageUtils@251baa69
2019-04-08 10:11:59 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 10:11:59 -HTTP METHOD : GET
2019-04-08 10:11:59 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 10:11:59 -参数 : []
2019-04-08 10:11:59 -耗时 : 1
2019-04-08 10:11:59 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 10:12:00 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:12:00 -HTTP METHOD : GET
2019-04-08 10:12:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:12:00 -参数 : [userType]
2019-04-08 10:12:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:12:00 -==> Parameters: userType(String)
2019-04-08 10:12:00 -<==      Total: 2
2019-04-08 10:12:00 -耗时 : 4
2019-04-08 10:12:00 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:12:00 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 10:12:00 -HTTP METHOD : GET
2019-04-08 10:12:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 10:12:00 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 10:12:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 10:12:00 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:12:00 -<==      Total: 6
2019-04-08 10:12:00 -==>  Preparing: select count(*) from heat_log 
2019-04-08 10:12:00 -==> Parameters: 
2019-04-08 10:12:00 -<==      Total: 1
2019-04-08 10:12:00 -耗时 : 9
2019-04-08 10:12:00 -返回值 : com.bootdo.common.utils.PageUtils@40d490bb
2019-04-08 10:12:00 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-08 10:12:00 -HTTP METHOD : GET
2019-04-08 10:12:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-08 10:12:00 -参数 : []
2019-04-08 10:12:00 -耗时 : 1
2019-04-08 10:12:00 -返回值 : /moneyLog/waterLog/waterLog
2019-04-08 10:12:00 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:12:00 -HTTP METHOD : GET
2019-04-08 10:12:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:12:00 -参数 : [userType]
2019-04-08 10:12:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:12:00 -==> Parameters: userType(String)
2019-04-08 10:12:00 -<==      Total: 2
2019-04-08 10:12:00 -耗时 : 6
2019-04-08 10:12:00 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:12:00 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 10:12:00 -HTTP METHOD : GET
2019-04-08 10:12:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 10:12:00 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 10:12:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 10:12:00 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:12:00 -<==      Total: 6
2019-04-08 10:12:00 -==>  Preparing: select count(*) from water_log 
2019-04-08 10:12:00 -==> Parameters: 
2019-04-08 10:12:00 -<==      Total: 1
2019-04-08 10:12:00 -耗时 : 8
2019-04-08 10:12:00 -返回值 : com.bootdo.common.utils.PageUtils@252e55c0
2019-04-08 10:12:01 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 10:12:01 -HTTP METHOD : GET
2019-04-08 10:12:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 10:12:01 -参数 : []
2019-04-08 10:12:01 -耗时 : 1
2019-04-08 10:12:01 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 10:12:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:12:01 -HTTP METHOD : GET
2019-04-08 10:12:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:12:01 -参数 : [userType]
2019-04-08 10:12:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:12:01 -==> Parameters: userType(String)
2019-04-08 10:12:01 -<==      Total: 2
2019-04-08 10:12:01 -耗时 : 3
2019-04-08 10:12:01 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:12:01 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 10:12:01 -HTTP METHOD : GET
2019-04-08 10:12:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 10:12:01 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 10:12:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 10:12:01 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:12:01 -<==      Total: 6
2019-04-08 10:12:01 -==>  Preparing: select count(*) from heat_log 
2019-04-08 10:12:01 -==> Parameters: 
2019-04-08 10:12:01 -<==      Total: 1
2019-04-08 10:12:01 -耗时 : 7
2019-04-08 10:12:01 -返回值 : com.bootdo.common.utils.PageUtils@4393035d
2019-04-08 10:12:01 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 10:12:01 -HTTP METHOD : GET
2019-04-08 10:12:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 10:12:01 -参数 : []
2019-04-08 10:12:01 -耗时 : 1
2019-04-08 10:12:01 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 10:12:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:12:01 -HTTP METHOD : GET
2019-04-08 10:12:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:12:01 -参数 : [userType]
2019-04-08 10:12:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:12:01 -==> Parameters: userType(String)
2019-04-08 10:12:01 -<==      Total: 2
2019-04-08 10:12:01 -耗时 : 4
2019-04-08 10:12:01 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:12:01 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 10:12:01 -HTTP METHOD : GET
2019-04-08 10:12:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 10:12:01 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 10:12:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 10:12:01 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:12:01 -<==      Total: 8
2019-04-08 10:12:01 -==>  Preparing: select count(*) from elec_log 
2019-04-08 10:12:01 -==> Parameters: 
2019-04-08 10:12:01 -<==      Total: 1
2019-04-08 10:12:01 -耗时 : 7
2019-04-08 10:12:01 -返回值 : com.bootdo.common.utils.PageUtils@35c177ba
2019-04-08 10:12:02 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 10:12:02 -HTTP METHOD : GET
2019-04-08 10:12:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 10:12:02 -参数 : []
2019-04-08 10:12:02 -耗时 : 1
2019-04-08 10:12:02 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 10:12:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:12:02 -HTTP METHOD : GET
2019-04-08 10:12:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:12:02 -参数 : [userType]
2019-04-08 10:12:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:12:02 -==> Parameters: userType(String)
2019-04-08 10:12:02 -<==      Total: 2
2019-04-08 10:12:02 -耗时 : 3
2019-04-08 10:12:02 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:12:02 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 10:12:02 -HTTP METHOD : GET
2019-04-08 10:12:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 10:12:02 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 10:12:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 10:12:02 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:12:02 -<==      Total: 6
2019-04-08 10:12:02 -==>  Preparing: select count(*) from heat_log 
2019-04-08 10:12:02 -==> Parameters: 
2019-04-08 10:12:02 -<==      Total: 1
2019-04-08 10:12:02 -耗时 : 6
2019-04-08 10:12:02 -返回值 : com.bootdo.common.utils.PageUtils@61de1190
2019-04-08 10:12:02 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-08 10:12:02 -HTTP METHOD : GET
2019-04-08 10:12:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-08 10:12:02 -参数 : []
2019-04-08 10:12:02 -耗时 : 0
2019-04-08 10:12:02 -返回值 : /moneyLog/waterLog/waterLog
2019-04-08 10:12:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:12:02 -HTTP METHOD : GET
2019-04-08 10:12:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:12:02 -参数 : [userType]
2019-04-08 10:12:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:12:02 -==> Parameters: userType(String)
2019-04-08 10:12:02 -<==      Total: 2
2019-04-08 10:12:02 -耗时 : 4
2019-04-08 10:12:02 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:12:02 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 10:12:02 -HTTP METHOD : GET
2019-04-08 10:12:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 10:12:02 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 10:12:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 10:12:02 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:12:02 -<==      Total: 6
2019-04-08 10:12:02 -==>  Preparing: select count(*) from water_log 
2019-04-08 10:12:02 -==> Parameters: 
2019-04-08 10:12:02 -<==      Total: 1
2019-04-08 10:12:02 -耗时 : 6
2019-04-08 10:12:02 -返回值 : com.bootdo.common.utils.PageUtils@512cd3a3
2019-04-08 10:12:03 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 10:12:03 -HTTP METHOD : GET
2019-04-08 10:12:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 10:12:03 -参数 : []
2019-04-08 10:12:03 -耗时 : 1
2019-04-08 10:12:03 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 10:12:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:12:03 -HTTP METHOD : GET
2019-04-08 10:12:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:12:03 -参数 : [userType]
2019-04-08 10:12:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:12:03 -==> Parameters: userType(String)
2019-04-08 10:12:03 -<==      Total: 2
2019-04-08 10:12:03 -耗时 : 4
2019-04-08 10:12:03 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:12:03 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 10:12:03 -HTTP METHOD : GET
2019-04-08 10:12:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 10:12:03 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 10:12:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 10:12:03 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:12:03 -<==      Total: 6
2019-04-08 10:12:03 -==>  Preparing: select count(*) from heat_log 
2019-04-08 10:12:03 -==> Parameters: 
2019-04-08 10:12:03 -<==      Total: 1
2019-04-08 10:12:03 -耗时 : 8
2019-04-08 10:12:03 -返回值 : com.bootdo.common.utils.PageUtils@3f4c568d
2019-04-08 10:12:03 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 10:12:03 -HTTP METHOD : GET
2019-04-08 10:12:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 10:12:03 -参数 : []
2019-04-08 10:12:03 -耗时 : 1
2019-04-08 10:12:03 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 10:12:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:12:03 -HTTP METHOD : GET
2019-04-08 10:12:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:12:03 -参数 : [userType]
2019-04-08 10:12:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:12:03 -==> Parameters: userType(String)
2019-04-08 10:12:03 -<==      Total: 2
2019-04-08 10:12:03 -耗时 : 4
2019-04-08 10:12:03 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:12:03 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 10:12:03 -HTTP METHOD : GET
2019-04-08 10:12:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 10:12:03 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 10:12:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 10:12:03 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:12:03 -<==      Total: 8
2019-04-08 10:12:03 -==>  Preparing: select count(*) from elec_log 
2019-04-08 10:12:03 -==> Parameters: 
2019-04-08 10:12:03 -<==      Total: 1
2019-04-08 10:12:03 -耗时 : 7
2019-04-08 10:12:03 -返回值 : com.bootdo.common.utils.PageUtils@11088db
2019-04-08 10:12:03 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 10:12:03 -HTTP METHOD : GET
2019-04-08 10:12:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 10:12:03 -参数 : []
2019-04-08 10:12:03 -耗时 : 1
2019-04-08 10:12:03 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 10:12:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:12:04 -HTTP METHOD : GET
2019-04-08 10:12:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:12:04 -参数 : [userType]
2019-04-08 10:12:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:12:04 -==> Parameters: userType(String)
2019-04-08 10:12:04 -<==      Total: 2
2019-04-08 10:12:04 -耗时 : 3
2019-04-08 10:12:04 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:12:04 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 10:12:04 -HTTP METHOD : GET
2019-04-08 10:12:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 10:12:04 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 10:12:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 10:12:04 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:12:04 -<==      Total: 6
2019-04-08 10:12:04 -==>  Preparing: select count(*) from heat_log 
2019-04-08 10:12:04 -==> Parameters: 
2019-04-08 10:12:04 -<==      Total: 1
2019-04-08 10:12:04 -耗时 : 8
2019-04-08 10:12:04 -返回值 : com.bootdo.common.utils.PageUtils@6f17fb44
2019-04-08 10:12:04 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-08 10:12:04 -HTTP METHOD : GET
2019-04-08 10:12:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-08 10:12:04 -参数 : []
2019-04-08 10:12:04 -耗时 : 0
2019-04-08 10:12:04 -返回值 : /moneyLog/waterLog/waterLog
2019-04-08 10:12:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:12:04 -HTTP METHOD : GET
2019-04-08 10:12:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:12:04 -参数 : [userType]
2019-04-08 10:12:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:12:04 -==> Parameters: userType(String)
2019-04-08 10:12:04 -<==      Total: 2
2019-04-08 10:12:04 -耗时 : 4
2019-04-08 10:12:04 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:12:04 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 10:12:04 -HTTP METHOD : GET
2019-04-08 10:12:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 10:12:04 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 10:12:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 10:12:04 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:12:04 -<==      Total: 6
2019-04-08 10:12:04 -==>  Preparing: select count(*) from water_log 
2019-04-08 10:12:04 -==> Parameters: 
2019-04-08 10:12:04 -<==      Total: 1
2019-04-08 10:12:04 -耗时 : 6
2019-04-08 10:12:04 -返回值 : com.bootdo.common.utils.PageUtils@187004b1
2019-04-08 10:12:05 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 10:12:05 -HTTP METHOD : GET
2019-04-08 10:12:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 10:12:05 -参数 : []
2019-04-08 10:12:05 -耗时 : 0
2019-04-08 10:12:05 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 10:12:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:12:05 -HTTP METHOD : GET
2019-04-08 10:12:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:12:05 -参数 : [userType]
2019-04-08 10:12:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:12:05 -==> Parameters: userType(String)
2019-04-08 10:12:05 -<==      Total: 2
2019-04-08 10:12:05 -耗时 : 3
2019-04-08 10:12:05 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:12:05 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 10:12:05 -HTTP METHOD : GET
2019-04-08 10:12:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 10:12:05 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 10:12:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 10:12:05 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:12:05 -<==      Total: 6
2019-04-08 10:12:05 -==>  Preparing: select count(*) from heat_log 
2019-04-08 10:12:05 -==> Parameters: 
2019-04-08 10:12:05 -<==      Total: 1
2019-04-08 10:12:05 -耗时 : 8
2019-04-08 10:12:05 -返回值 : com.bootdo.common.utils.PageUtils@20a28ed6
2019-04-08 10:12:05 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 10:12:05 -HTTP METHOD : GET
2019-04-08 10:12:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 10:12:05 -参数 : []
2019-04-08 10:12:05 -耗时 : 0
2019-04-08 10:12:05 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 10:12:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:12:05 -HTTP METHOD : GET
2019-04-08 10:12:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:12:05 -参数 : [userType]
2019-04-08 10:12:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:12:05 -==> Parameters: userType(String)
2019-04-08 10:12:05 -<==      Total: 2
2019-04-08 10:12:05 -耗时 : 4
2019-04-08 10:12:05 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:12:05 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 10:12:05 -HTTP METHOD : GET
2019-04-08 10:12:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 10:12:05 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 10:12:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 10:12:05 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:12:05 -<==      Total: 8
2019-04-08 10:12:05 -==>  Preparing: select count(*) from elec_log 
2019-04-08 10:12:05 -==> Parameters: 
2019-04-08 10:12:05 -<==      Total: 1
2019-04-08 10:12:05 -耗时 : 9
2019-04-08 10:12:05 -返回值 : com.bootdo.common.utils.PageUtils@1197b15b
2019-04-08 10:12:06 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 10:12:06 -HTTP METHOD : GET
2019-04-08 10:12:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 10:12:06 -参数 : []
2019-04-08 10:12:06 -耗时 : 1
2019-04-08 10:12:06 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 10:12:06 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:12:06 -HTTP METHOD : GET
2019-04-08 10:12:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:12:06 -参数 : [userType]
2019-04-08 10:12:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:12:06 -==> Parameters: userType(String)
2019-04-08 10:12:06 -<==      Total: 2
2019-04-08 10:12:06 -耗时 : 5
2019-04-08 10:12:06 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:12:06 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 10:12:06 -HTTP METHOD : GET
2019-04-08 10:12:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 10:12:06 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 10:12:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 10:12:06 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:12:06 -<==      Total: 6
2019-04-08 10:12:06 -==>  Preparing: select count(*) from heat_log 
2019-04-08 10:12:06 -==> Parameters: 
2019-04-08 10:12:06 -<==      Total: 1
2019-04-08 10:12:06 -耗时 : 7
2019-04-08 10:12:06 -返回值 : com.bootdo.common.utils.PageUtils@b63304a
2019-04-08 10:12:06 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-08 10:12:06 -HTTP METHOD : GET
2019-04-08 10:12:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-08 10:12:06 -参数 : []
2019-04-08 10:12:06 -耗时 : 1
2019-04-08 10:12:06 -返回值 : /moneyLog/waterLog/waterLog
2019-04-08 10:12:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:12:07 -HTTP METHOD : GET
2019-04-08 10:12:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:12:07 -参数 : [userType]
2019-04-08 10:12:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:12:07 -==> Parameters: userType(String)
2019-04-08 10:12:07 -<==      Total: 2
2019-04-08 10:12:07 -耗时 : 4
2019-04-08 10:12:07 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:12:07 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 10:12:07 -HTTP METHOD : GET
2019-04-08 10:12:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 10:12:07 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 10:12:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 10:12:07 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:12:07 -<==      Total: 6
2019-04-08 10:12:07 -==>  Preparing: select count(*) from water_log 
2019-04-08 10:12:07 -==> Parameters: 
2019-04-08 10:12:07 -<==      Total: 1
2019-04-08 10:12:07 -耗时 : 8
2019-04-08 10:12:07 -返回值 : com.bootdo.common.utils.PageUtils@4795d081
2019-04-08 10:12:07 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 10:12:07 -HTTP METHOD : GET
2019-04-08 10:12:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 10:12:07 -参数 : []
2019-04-08 10:12:07 -耗时 : 1
2019-04-08 10:12:07 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 10:12:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:12:07 -HTTP METHOD : GET
2019-04-08 10:12:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:12:07 -参数 : [userType]
2019-04-08 10:12:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:12:07 -==> Parameters: userType(String)
2019-04-08 10:12:07 -<==      Total: 2
2019-04-08 10:12:07 -耗时 : 4
2019-04-08 10:12:07 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:12:07 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 10:12:07 -HTTP METHOD : GET
2019-04-08 10:12:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 10:12:07 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 10:12:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 10:12:07 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:12:07 -<==      Total: 6
2019-04-08 10:12:07 -==>  Preparing: select count(*) from heat_log 
2019-04-08 10:12:07 -==> Parameters: 
2019-04-08 10:12:07 -<==      Total: 1
2019-04-08 10:12:07 -耗时 : 8
2019-04-08 10:12:07 -返回值 : com.bootdo.common.utils.PageUtils@dbd113e
2019-04-08 10:12:07 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 10:12:07 -HTTP METHOD : GET
2019-04-08 10:12:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 10:12:07 -参数 : []
2019-04-08 10:12:07 -耗时 : 1
2019-04-08 10:12:07 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 10:12:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:12:08 -HTTP METHOD : GET
2019-04-08 10:12:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:12:08 -参数 : [userType]
2019-04-08 10:12:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:12:08 -==> Parameters: userType(String)
2019-04-08 10:12:08 -<==      Total: 2
2019-04-08 10:12:08 -耗时 : 3
2019-04-08 10:12:08 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:12:08 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 10:12:08 -HTTP METHOD : GET
2019-04-08 10:12:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 10:12:08 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 10:12:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 10:12:08 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:12:08 -<==      Total: 8
2019-04-08 10:12:08 -==>  Preparing: select count(*) from elec_log 
2019-04-08 10:12:08 -==> Parameters: 
2019-04-08 10:12:08 -<==      Total: 1
2019-04-08 10:12:08 -耗时 : 7
2019-04-08 10:12:08 -返回值 : com.bootdo.common.utils.PageUtils@19d06344
2019-04-08 10:12:08 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 10:12:08 -HTTP METHOD : GET
2019-04-08 10:12:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 10:12:08 -参数 : []
2019-04-08 10:12:08 -耗时 : 1
2019-04-08 10:12:08 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 10:12:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:12:08 -HTTP METHOD : GET
2019-04-08 10:12:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:12:08 -参数 : [userType]
2019-04-08 10:12:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:12:08 -==> Parameters: userType(String)
2019-04-08 10:12:08 -<==      Total: 2
2019-04-08 10:12:08 -耗时 : 4
2019-04-08 10:12:08 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:12:08 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 10:12:08 -HTTP METHOD : GET
2019-04-08 10:12:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 10:12:08 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 10:12:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 10:12:08 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:12:08 -<==      Total: 6
2019-04-08 10:12:08 -==>  Preparing: select count(*) from heat_log 
2019-04-08 10:12:08 -==> Parameters: 
2019-04-08 10:12:08 -<==      Total: 1
2019-04-08 10:12:08 -耗时 : 7
2019-04-08 10:12:08 -返回值 : com.bootdo.common.utils.PageUtils@156b244c
2019-04-08 10:12:09 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-08 10:12:09 -HTTP METHOD : GET
2019-04-08 10:12:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-08 10:12:09 -参数 : []
2019-04-08 10:12:09 -耗时 : 0
2019-04-08 10:12:09 -返回值 : /moneyLog/waterLog/waterLog
2019-04-08 10:12:09 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:12:09 -HTTP METHOD : GET
2019-04-08 10:12:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:12:09 -参数 : [userType]
2019-04-08 10:12:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:12:09 -==> Parameters: userType(String)
2019-04-08 10:12:09 -<==      Total: 2
2019-04-08 10:12:09 -耗时 : 3
2019-04-08 10:12:09 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:12:09 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 10:12:09 -HTTP METHOD : GET
2019-04-08 10:12:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 10:12:09 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 10:12:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 10:12:09 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:12:09 -<==      Total: 6
2019-04-08 10:12:09 -==>  Preparing: select count(*) from water_log 
2019-04-08 10:12:09 -==> Parameters: 
2019-04-08 10:12:09 -<==      Total: 1
2019-04-08 10:12:09 -耗时 : 6
2019-04-08 10:12:09 -返回值 : com.bootdo.common.utils.PageUtils@4d46e13b
2019-04-08 10:14:00 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-08 10:14:00 -==> Parameters: 1(Long)
2019-04-08 10:14:00 -<==      Total: 90
2019-04-08 10:14:00 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 10:14:00 -HTTP METHOD : GET
2019-04-08 10:14:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 10:14:00 -参数 : []
2019-04-08 10:14:00 -耗时 : 0
2019-04-08 10:14:00 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 10:14:00 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:14:00 -HTTP METHOD : GET
2019-04-08 10:14:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:14:00 -参数 : [userType]
2019-04-08 10:14:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:14:00 -==> Parameters: userType(String)
2019-04-08 10:14:00 -<==      Total: 2
2019-04-08 10:14:00 -耗时 : 4
2019-04-08 10:14:00 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:14:00 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 10:14:00 -HTTP METHOD : GET
2019-04-08 10:14:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 10:14:00 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 10:14:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 10:14:00 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:14:00 -<==      Total: 6
2019-04-08 10:14:00 -==>  Preparing: select count(*) from heat_log 
2019-04-08 10:14:00 -==> Parameters: 
2019-04-08 10:14:00 -<==      Total: 1
2019-04-08 10:14:00 -耗时 : 9
2019-04-08 10:14:00 -返回值 : com.bootdo.common.utils.PageUtils@6ad90994
2019-04-08 10:14:00 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 10:14:00 -HTTP METHOD : GET
2019-04-08 10:14:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 10:14:00 -参数 : []
2019-04-08 10:14:00 -耗时 : 0
2019-04-08 10:14:00 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 10:14:00 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:14:00 -HTTP METHOD : GET
2019-04-08 10:14:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:14:00 -参数 : [userType]
2019-04-08 10:14:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:14:00 -==> Parameters: userType(String)
2019-04-08 10:14:00 -<==      Total: 2
2019-04-08 10:14:00 -耗时 : 3
2019-04-08 10:14:00 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:14:01 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 10:14:01 -HTTP METHOD : GET
2019-04-08 10:14:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 10:14:01 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 10:14:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 10:14:01 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:14:01 -<==      Total: 8
2019-04-08 10:14:01 -==>  Preparing: select count(*) from elec_log 
2019-04-08 10:14:01 -==> Parameters: 
2019-04-08 10:14:01 -<==      Total: 1
2019-04-08 10:14:01 -耗时 : 7
2019-04-08 10:14:01 -返回值 : com.bootdo.common.utils.PageUtils@541609d8
2019-04-08 10:14:01 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-08 10:14:01 -HTTP METHOD : GET
2019-04-08 10:14:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-08 10:14:01 -参数 : []
2019-04-08 10:14:01 -耗时 : 0
2019-04-08 10:14:01 -返回值 : /moneyLog/waterLog/waterLog
2019-04-08 10:14:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:14:02 -HTTP METHOD : GET
2019-04-08 10:14:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:14:02 -参数 : [userType]
2019-04-08 10:14:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:14:02 -==> Parameters: userType(String)
2019-04-08 10:14:02 -<==      Total: 2
2019-04-08 10:14:02 -耗时 : 4
2019-04-08 10:14:02 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:14:02 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 10:14:02 -HTTP METHOD : GET
2019-04-08 10:14:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 10:14:02 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 10:14:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 10:14:02 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:14:02 -<==      Total: 6
2019-04-08 10:14:02 -==>  Preparing: select count(*) from water_log 
2019-04-08 10:14:02 -==> Parameters: 
2019-04-08 10:14:02 -<==      Total: 1
2019-04-08 10:14:02 -耗时 : 5
2019-04-08 10:14:02 -返回值 : com.bootdo.common.utils.PageUtils@1a4ced9b
2019-04-08 10:14:02 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 10:14:02 -HTTP METHOD : GET
2019-04-08 10:14:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 10:14:02 -参数 : []
2019-04-08 10:14:02 -耗时 : 0
2019-04-08 10:14:02 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 10:14:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:14:02 -HTTP METHOD : GET
2019-04-08 10:14:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:14:02 -参数 : [userType]
2019-04-08 10:14:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:14:02 -==> Parameters: userType(String)
2019-04-08 10:14:02 -<==      Total: 2
2019-04-08 10:14:02 -耗时 : 3
2019-04-08 10:14:02 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:14:02 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 10:14:02 -HTTP METHOD : GET
2019-04-08 10:14:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 10:14:02 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 10:14:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 10:14:02 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:14:02 -<==      Total: 6
2019-04-08 10:14:02 -==>  Preparing: select count(*) from heat_log 
2019-04-08 10:14:02 -==> Parameters: 
2019-04-08 10:14:02 -<==      Total: 1
2019-04-08 10:14:02 -耗时 : 6
2019-04-08 10:14:02 -返回值 : com.bootdo.common.utils.PageUtils@11d41d0f
2019-04-08 10:14:02 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 10:14:02 -HTTP METHOD : GET
2019-04-08 10:14:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 10:14:02 -参数 : []
2019-04-08 10:14:02 -耗时 : 1
2019-04-08 10:14:02 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 10:14:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:14:03 -HTTP METHOD : GET
2019-04-08 10:14:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:14:03 -参数 : [userType]
2019-04-08 10:14:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:14:03 -==> Parameters: userType(String)
2019-04-08 10:14:03 -<==      Total: 2
2019-04-08 10:14:03 -耗时 : 4
2019-04-08 10:14:03 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:14:03 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 10:14:03 -HTTP METHOD : GET
2019-04-08 10:14:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 10:14:03 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 10:14:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 10:14:03 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:14:03 -<==      Total: 8
2019-04-08 10:14:03 -==>  Preparing: select count(*) from elec_log 
2019-04-08 10:14:03 -==> Parameters: 
2019-04-08 10:14:03 -<==      Total: 1
2019-04-08 10:14:03 -耗时 : 6
2019-04-08 10:14:03 -返回值 : com.bootdo.common.utils.PageUtils@48143734
2019-04-08 10:14:03 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-08 10:14:03 -HTTP METHOD : GET
2019-04-08 10:14:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-08 10:14:03 -参数 : []
2019-04-08 10:14:03 -耗时 : 0
2019-04-08 10:14:03 -返回值 : /moneyLog/waterLog/waterLog
2019-04-08 10:14:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:14:03 -HTTP METHOD : GET
2019-04-08 10:14:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:14:03 -参数 : [userType]
2019-04-08 10:14:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:14:03 -==> Parameters: userType(String)
2019-04-08 10:14:03 -<==      Total: 2
2019-04-08 10:14:03 -耗时 : 2
2019-04-08 10:14:03 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:14:03 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 10:14:03 -HTTP METHOD : GET
2019-04-08 10:14:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 10:14:03 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 10:14:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 10:14:03 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:14:03 -<==      Total: 6
2019-04-08 10:14:03 -==>  Preparing: select count(*) from water_log 
2019-04-08 10:14:03 -==> Parameters: 
2019-04-08 10:14:03 -<==      Total: 1
2019-04-08 10:14:03 -耗时 : 5
2019-04-08 10:14:03 -返回值 : com.bootdo.common.utils.PageUtils@20f56531
2019-04-08 10:14:04 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 10:14:04 -HTTP METHOD : GET
2019-04-08 10:14:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 10:14:04 -参数 : []
2019-04-08 10:14:04 -耗时 : 1
2019-04-08 10:14:04 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 10:14:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:14:04 -HTTP METHOD : GET
2019-04-08 10:14:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:14:04 -参数 : [userType]
2019-04-08 10:14:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:14:04 -==> Parameters: userType(String)
2019-04-08 10:14:04 -<==      Total: 2
2019-04-08 10:14:04 -耗时 : 5
2019-04-08 10:14:04 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:14:04 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 10:14:04 -HTTP METHOD : GET
2019-04-08 10:14:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 10:14:04 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 10:14:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 10:14:04 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:14:04 -<==      Total: 8
2019-04-08 10:14:04 -==>  Preparing: select count(*) from elec_log 
2019-04-08 10:14:04 -==> Parameters: 
2019-04-08 10:14:04 -<==      Total: 1
2019-04-08 10:14:04 -耗时 : 6
2019-04-08 10:14:04 -返回值 : com.bootdo.common.utils.PageUtils@7b7e9507
2019-04-08 10:14:05 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 10:14:05 -HTTP METHOD : GET
2019-04-08 10:14:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 10:14:05 -参数 : []
2019-04-08 10:14:05 -耗时 : 1
2019-04-08 10:14:05 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 10:14:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:14:05 -HTTP METHOD : GET
2019-04-08 10:14:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:14:05 -参数 : [userType]
2019-04-08 10:14:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:14:05 -==> Parameters: userType(String)
2019-04-08 10:14:05 -<==      Total: 2
2019-04-08 10:14:05 -耗时 : 3
2019-04-08 10:14:05 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:14:05 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 10:14:05 -HTTP METHOD : GET
2019-04-08 10:14:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 10:14:05 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 10:14:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 10:14:05 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:14:05 -<==      Total: 6
2019-04-08 10:14:05 -==>  Preparing: select count(*) from heat_log 
2019-04-08 10:14:05 -==> Parameters: 
2019-04-08 10:14:05 -<==      Total: 1
2019-04-08 10:14:05 -耗时 : 5
2019-04-08 10:14:05 -返回值 : com.bootdo.common.utils.PageUtils@427d497d
2019-04-08 10:14:05 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-08 10:14:05 -HTTP METHOD : GET
2019-04-08 10:14:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-08 10:14:05 -参数 : []
2019-04-08 10:14:05 -耗时 : 1
2019-04-08 10:14:05 -返回值 : /moneyLog/waterLog/waterLog
2019-04-08 10:14:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:14:05 -HTTP METHOD : GET
2019-04-08 10:14:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:14:05 -参数 : [userType]
2019-04-08 10:14:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:14:05 -==> Parameters: userType(String)
2019-04-08 10:14:05 -<==      Total: 2
2019-04-08 10:14:05 -耗时 : 3
2019-04-08 10:14:05 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:14:05 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 10:14:05 -HTTP METHOD : GET
2019-04-08 10:14:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 10:14:05 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 10:14:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 10:14:05 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:14:05 -<==      Total: 6
2019-04-08 10:14:05 -==>  Preparing: select count(*) from water_log 
2019-04-08 10:14:05 -==> Parameters: 
2019-04-08 10:14:05 -<==      Total: 1
2019-04-08 10:14:05 -耗时 : 7
2019-04-08 10:14:05 -返回值 : com.bootdo.common.utils.PageUtils@31ca5115
2019-04-08 10:14:05 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 10:14:05 -HTTP METHOD : GET
2019-04-08 10:14:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 10:14:05 -参数 : []
2019-04-08 10:14:05 -耗时 : 1
2019-04-08 10:14:05 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 10:14:06 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:14:06 -HTTP METHOD : GET
2019-04-08 10:14:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:14:06 -参数 : [userType]
2019-04-08 10:14:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:14:06 -==> Parameters: userType(String)
2019-04-08 10:14:06 -<==      Total: 2
2019-04-08 10:14:06 -耗时 : 5
2019-04-08 10:14:06 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:14:06 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 10:14:06 -HTTP METHOD : GET
2019-04-08 10:14:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 10:14:06 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 10:14:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 10:14:06 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:14:06 -<==      Total: 6
2019-04-08 10:14:06 -==>  Preparing: select count(*) from heat_log 
2019-04-08 10:14:06 -==> Parameters: 
2019-04-08 10:14:06 -<==      Total: 1
2019-04-08 10:14:06 -耗时 : 6
2019-04-08 10:14:06 -返回值 : com.bootdo.common.utils.PageUtils@6aa6a0bb
2019-04-08 10:14:06 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 10:14:06 -HTTP METHOD : GET
2019-04-08 10:14:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 10:14:06 -参数 : []
2019-04-08 10:14:06 -耗时 : 1
2019-04-08 10:14:06 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 10:14:06 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:14:06 -HTTP METHOD : GET
2019-04-08 10:14:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:14:06 -参数 : [userType]
2019-04-08 10:14:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:14:06 -==> Parameters: userType(String)
2019-04-08 10:14:06 -<==      Total: 2
2019-04-08 10:14:06 -耗时 : 3
2019-04-08 10:14:06 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:14:06 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 10:14:06 -HTTP METHOD : GET
2019-04-08 10:14:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 10:14:06 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 10:14:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 10:14:06 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:14:06 -<==      Total: 8
2019-04-08 10:14:06 -==>  Preparing: select count(*) from elec_log 
2019-04-08 10:14:06 -==> Parameters: 
2019-04-08 10:14:06 -<==      Total: 1
2019-04-08 10:14:06 -耗时 : 6
2019-04-08 10:14:06 -返回值 : com.bootdo.common.utils.PageUtils@244a9647
2019-04-08 10:14:07 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 10:14:07 -HTTP METHOD : GET
2019-04-08 10:14:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 10:14:07 -参数 : []
2019-04-08 10:14:07 -耗时 : 0
2019-04-08 10:14:07 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 10:14:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:14:07 -HTTP METHOD : GET
2019-04-08 10:14:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:14:07 -参数 : [userType]
2019-04-08 10:14:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:14:07 -==> Parameters: userType(String)
2019-04-08 10:14:07 -<==      Total: 2
2019-04-08 10:14:07 -耗时 : 4
2019-04-08 10:14:07 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:14:07 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 10:14:07 -HTTP METHOD : GET
2019-04-08 10:14:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 10:14:07 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 10:14:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 10:14:07 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:14:07 -<==      Total: 6
2019-04-08 10:14:07 -==>  Preparing: select count(*) from heat_log 
2019-04-08 10:14:07 -==> Parameters: 
2019-04-08 10:14:07 -<==      Total: 1
2019-04-08 10:14:07 -耗时 : 6
2019-04-08 10:14:07 -返回值 : com.bootdo.common.utils.PageUtils@579de763
2019-04-08 10:14:07 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-04-08 10:14:07 -HTTP METHOD : GET
2019-04-08 10:14:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-04-08 10:14:07 -参数 : []
2019-04-08 10:14:07 -耗时 : 2
2019-04-08 10:14:07 -返回值 : /moneyLog/waterLog/waterLog
2019-04-08 10:14:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:14:07 -HTTP METHOD : GET
2019-04-08 10:14:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:14:07 -参数 : [userType]
2019-04-08 10:14:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:14:07 -==> Parameters: userType(String)
2019-04-08 10:14:07 -<==      Total: 2
2019-04-08 10:14:07 -耗时 : 4
2019-04-08 10:14:07 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:14:07 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-04-08 10:14:07 -HTTP METHOD : GET
2019-04-08 10:14:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-04-08 10:14:07 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-04-08 10:14:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`water_type`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-04-08 10:14:07 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:14:07 -<==      Total: 6
2019-04-08 10:14:07 -==>  Preparing: select count(*) from water_log 
2019-04-08 10:14:07 -==> Parameters: 
2019-04-08 10:14:07 -<==      Total: 1
2019-04-08 10:14:07 -耗时 : 6
2019-04-08 10:14:07 -返回值 : com.bootdo.common.utils.PageUtils@60707127
2019-04-08 10:14:08 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-04-08 10:14:08 -HTTP METHOD : GET
2019-04-08 10:14:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-04-08 10:14:08 -参数 : []
2019-04-08 10:14:08 -耗时 : 0
2019-04-08 10:14:08 -返回值 : /moneyLog/heatLog/heatLog
2019-04-08 10:14:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:14:08 -HTTP METHOD : GET
2019-04-08 10:14:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:14:08 -参数 : [userType]
2019-04-08 10:14:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:14:08 -==> Parameters: userType(String)
2019-04-08 10:14:08 -<==      Total: 2
2019-04-08 10:14:08 -耗时 : 4
2019-04-08 10:14:08 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:14:08 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-04-08 10:14:08 -HTTP METHOD : GET
2019-04-08 10:14:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-04-08 10:14:08 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-04-08 10:14:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,`heat_type`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-04-08 10:14:08 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:14:08 -<==      Total: 6
2019-04-08 10:14:08 -==>  Preparing: select count(*) from heat_log 
2019-04-08 10:14:08 -==> Parameters: 
2019-04-08 10:14:08 -<==      Total: 1
2019-04-08 10:14:08 -耗时 : 8
2019-04-08 10:14:08 -返回值 : com.bootdo.common.utils.PageUtils@182bf597
2019-04-08 10:14:08 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 10:14:08 -HTTP METHOD : GET
2019-04-08 10:14:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 10:14:08 -参数 : []
2019-04-08 10:14:08 -耗时 : 1
2019-04-08 10:14:08 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 10:14:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 10:14:08 -HTTP METHOD : GET
2019-04-08 10:14:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 10:14:08 -参数 : [userType]
2019-04-08 10:14:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 10:14:08 -==> Parameters: userType(String)
2019-04-08 10:14:08 -<==      Total: 2
2019-04-08 10:14:08 -耗时 : 4
2019-04-08 10:14:08 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 10:14:08 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 10:14:08 -HTTP METHOD : GET
2019-04-08 10:14:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 10:14:08 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 10:14:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 10:14:08 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 10:14:08 -<==      Total: 8
2019-04-08 10:14:08 -==>  Preparing: select count(*) from elec_log 
2019-04-08 10:14:08 -==> Parameters: 
2019-04-08 10:14:08 -<==      Total: 1
2019-04-08 10:14:08 -耗时 : 5
2019-04-08 10:14:08 -返回值 : com.bootdo.common.utils.PageUtils@11803c85
2019-04-08 10:14:13 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 10:14:13 -HTTP METHOD : GET
2019-04-08 10:14:13 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 10:14:13 -参数 : []
2019-04-08 10:14:13 -耗时 : 1
2019-04-08 10:14:13 -返回值 : /moneyList/moneyList
2019-04-08 10:33:07 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 426]
2019-04-08 10:46:08 -Starting BootdoApplication on ZJZL-20180906VX with PID 1504 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-08 10:46:08 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-08 10:46:08 -The following profiles are active: dev
2019-04-08 10:46:08 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 08 10:46:08 CST 2019]; root of context hierarchy
2019-04-08 10:46:11 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-08 10:46:14 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6c68c88e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 10:46:14 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$5ec1f735] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 10:46:16 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 10:46:16 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 10:46:16 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 10:46:16 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-08 10:46:16 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-08 10:46:16 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 10:46:16 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 10:46:16 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 10:46:17 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 10:46:18 -Tomcat initialized with port(s): 8081 (http)
2019-04-08 10:46:18 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-08 10:46:18 -Starting service [Tomcat]
2019-04-08 10:46:18 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-08 10:46:18 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-08 10:46:18 -Initializing Spring embedded WebApplicationContext
2019-04-08 10:46:18 -Root WebApplicationContext: initialization completed in 9826 ms
2019-04-08 10:46:19 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-08 10:46:19 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-08 10:46:19 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-08 10:46:19 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-08 10:46:19 -Filter xssFilter was not registered (disabled)
2019-04-08 10:46:19 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-08 10:46:19 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-08 10:46:19 -Servlet statViewServlet mapped to [/druid/*]
2019-04-08 10:46:19 -Servlet dispatcherServlet mapped to [/]
2019-04-08 10:46:22 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 08 10:46:08 CST 2019]; root of context hierarchy
2019-04-08 10:46:22 -Using default implementation for ThreadExecutor
2019-04-08 10:46:22 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-08 10:46:22 -Quartz Scheduler v.2.2.1 created.
2019-04-08 10:46:22 -RAMJobStore initialized.
2019-04-08 10:46:22 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-08 10:46:22 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-08 10:46:22 -Quartz scheduler version: 2.2.1
2019-04-08 10:46:22 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@2dcd0e41
2019-04-08 10:46:23 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-08 10:46:23 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-08 10:46:26 -Mapped "{[/charts/countDD/tableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.tableDD()
2019-04-08 10:46:26 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-08 10:46:26 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-08 10:46:26 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 10:46:26 -Mapped "{[/charts/countMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 10:46:26 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-08 10:46:26 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-08 10:46:26 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-08 10:46:26 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-08 10:46:26 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public int com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-08 10:46:26 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 10:46:26 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-08 10:46:26 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public int com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-08 10:46:26 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 10:46:26 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-08 10:46:26 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-08 10:46:26 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-08 10:46:26 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-08 10:46:26 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-08 10:46:26 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:46:26 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-08 10:46:26 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-08 10:46:26 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-08 10:46:26 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:46:26 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-08 10:46:26 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-08 10:46:26 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-08 10:46:26 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-08 10:46:26 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-08 10:46:26 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-08 10:46:26 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:46:26 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-08 10:46:26 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-08 10:46:26 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:46:26 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-08 10:46:26 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-08 10:46:26 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:46:26 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-08 10:46:26 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-08 10:46:26 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-08 10:46:26 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-08 10:46:26 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-08 10:46:26 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-08 10:46:26 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-08 10:46:26 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-08 10:46:26 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-08 10:46:26 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:46:26 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-08 10:46:26 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-08 10:46:26 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:46:26 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-08 10:46:26 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-08 10:46:26 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-08 10:46:26 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-08 10:46:26 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:46:26 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-08 10:46:26 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-08 10:46:26 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-08 10:46:26 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-08 10:46:26 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-08 10:46:26 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-08 10:46:26 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-08 10:46:26 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-08 10:46:26 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-08 10:46:26 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-08 10:46:26 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-08 10:46:26 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:46:26 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-08 10:46:26 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-08 10:46:26 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-08 10:46:26 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-08 10:46:26 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-08 10:46:26 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-08 10:46:26 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-08 10:46:26 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-08 10:46:26 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-08 10:46:26 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:46:26 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-08 10:46:26 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-08 10:46:26 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:46:26 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-08 10:46:26 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-08 10:46:26 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-08 10:46:26 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-08 10:46:26 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-08 10:46:26 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-08 10:46:26 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:46:26 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-08 10:46:26 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-08 10:46:26 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-08 10:46:26 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-08 10:46:26 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-08 10:46:26 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-08 10:46:26 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-08 10:46:26 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-08 10:46:26 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-08 10:46:26 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-08 10:46:26 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:46:26 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-08 10:46:26 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-08 10:46:26 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:46:26 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-08 10:46:26 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-08 10:46:26 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-08 10:46:26 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-08 10:46:26 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-08 10:46:26 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-08 10:46:26 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-08 10:46:26 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-08 10:46:26 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-08 10:46:26 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-08 10:46:26 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-08 10:46:26 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-08 10:46:26 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:46:26 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-08 10:46:26 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-08 10:46:26 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 10:46:26 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:46:26 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-08 10:46:26 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-08 10:46:26 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-08 10:46:26 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-08 10:46:26 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:46:26 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-08 10:46:26 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 10:46:26 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-08 10:46:26 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:46:26 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-08 10:46:26 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-08 10:46:26 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-08 10:46:26 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-08 10:46:26 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:46:26 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-08 10:46:26 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-08 10:46:26 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 10:46:26 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:46:26 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-08 10:46:26 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-08 10:46:26 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-08 10:46:26 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-08 10:46:26 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:46:26 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:46:26 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-08 10:46:26 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-08 10:46:26 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:46:26 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-08 10:46:26 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-08 10:46:26 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:46:26 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-08 10:46:26 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-08 10:46:26 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-08 10:46:26 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-08 10:46:26 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:46:26 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-08 10:46:26 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-08 10:46:26 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 10:46:26 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:46:26 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:46:26 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:46:26 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-08 10:46:26 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-08 10:46:26 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-08 10:46:26 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-08 10:46:26 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-08 10:46:26 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-08 10:46:26 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-08 10:46:26 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-08 10:46:26 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:46:26 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-08 10:46:26 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-08 10:46:26 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-08 10:46:26 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-08 10:46:26 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-08 10:46:26 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-08 10:46:26 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-08 10:46:26 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-08 10:46:26 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-08 10:46:26 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-08 10:46:26 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:46:26 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-08 10:46:26 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-08 10:46:26 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-08 10:46:26 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-08 10:46:26 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-08 10:46:26 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-08 10:46:26 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-08 10:46:26 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-08 10:46:26 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-08 10:46:26 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-08 10:46:26 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-08 10:46:26 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-08 10:46:26 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:46:26 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-08 10:46:26 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-08 10:46:26 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-08 10:46:26 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-08 10:46:26 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:46:26 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-08 10:46:26 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-08 10:46:26 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-08 10:46:26 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:46:26 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-08 10:46:26 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-08 10:46:26 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-08 10:46:26 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-08 10:46:26 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-08 10:46:26 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-08 10:46:26 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-08 10:46:26 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-08 10:46:26 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-08 10:46:26 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:46:26 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-08 10:46:26 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-08 10:46:26 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-08 10:46:26 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-08 10:46:26 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-08 10:46:26 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-08 10:46:26 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-08 10:46:26 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:46:26 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-08 10:46:26 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-08 10:46:26 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:46:26 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-08 10:46:26 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-08 10:46:26 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-08 10:46:26 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-08 10:46:26 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-08 10:46:26 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-08 10:46:26 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-08 10:46:26 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:46:26 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-08 10:46:26 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-08 10:46:26 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:46:26 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-08 10:46:26 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-08 10:46:26 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-08 10:46:26 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-08 10:46:26 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-08 10:46:26 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-08 10:46:26 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-08 10:46:26 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-08 10:46:26 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-08 10:46:26 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-08 10:46:26 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-08 10:46:27 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-08 10:46:27 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 08 10:46:08 CST 2019]; root of context hierarchy
2019-04-08 10:46:27 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-08 10:46:27 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-08 10:46:27 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-08 10:46:27 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-08 10:46:27 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-08 10:46:29 -Registering beans for JMX exposure on startup
2019-04-08 10:46:29 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-08 10:46:29 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-08 10:46:29 -Starting beans in phase 2147483647
2019-04-08 10:46:29 -Context refreshed
2019-04-08 10:46:29 -Found 1 custom documentation plugin(s)
2019-04-08 10:46:29 -Scanning for api listing references
2019-04-08 10:46:30 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-08 10:46:30 -Generating unique operation named: getCountDUsingPOST_1
2019-04-08 10:46:30 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-08 10:46:30 -Generating unique operation named: getCountDUsingPOST_2
2019-04-08 10:46:30 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-08 10:46:30 -Generating unique operation named: getCountDUsingPOST_3
2019-04-08 10:46:30 -Generating unique operation named: removeUsingPOST_1
2019-04-08 10:46:30 -Generating unique operation named: addUsingGET_1
2019-04-08 10:46:30 -Generating unique operation named: editUsingGET_1
2019-04-08 10:46:30 -Generating unique operation named: listUsingGET_1
2019-04-08 10:46:30 -Generating unique operation named: removeUsingPOST_2
2019-04-08 10:46:30 -Generating unique operation named: removeUsingPOST_3
2019-04-08 10:46:30 -Generating unique operation named: saveUsingPOST_1
2019-04-08 10:46:30 -Generating unique operation named: updateUsingGET_1
2019-04-08 10:46:30 -Generating unique operation named: updateUsingHEAD_1
2019-04-08 10:46:30 -Generating unique operation named: updateUsingPOST_1
2019-04-08 10:46:30 -Generating unique operation named: updateUsingPUT_1
2019-04-08 10:46:30 -Generating unique operation named: updateUsingPATCH_1
2019-04-08 10:46:30 -Generating unique operation named: updateUsingDELETE_1
2019-04-08 10:46:30 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-08 10:46:30 -Generating unique operation named: updateUsingTRACE_1
2019-04-08 10:46:30 -Generating unique operation named: addUsingGET_2
2019-04-08 10:46:30 -Generating unique operation named: editUsingGET_2
2019-04-08 10:46:30 -Generating unique operation named: listUsingGET_2
2019-04-08 10:46:30 -Generating unique operation named: removeUsingPOST_4
2019-04-08 10:46:30 -Generating unique operation named: removeUsingPOST_5
2019-04-08 10:46:30 -Generating unique operation named: saveUsingPOST_2
2019-04-08 10:46:30 -Generating unique operation named: updateUsingPOST_2
2019-04-08 10:46:30 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-08 10:46:30 -Generating unique operation named: addUsingGET_3
2019-04-08 10:46:30 -Generating unique operation named: editUsingGET_3
2019-04-08 10:46:30 -Generating unique operation named: exprotElecLogUsingGET_4
2019-04-08 10:46:30 -Generating unique operation named: listUsingGET_3
2019-04-08 10:46:30 -Generating unique operation named: removeUsingPOST_6
2019-04-08 10:46:30 -Generating unique operation named: removeUsingPOST_7
2019-04-08 10:46:30 -Generating unique operation named: saveUsingPOST_3
2019-04-08 10:46:30 -Generating unique operation named: updateUsingGET_2
2019-04-08 10:46:30 -Generating unique operation named: updateUsingHEAD_2
2019-04-08 10:46:30 -Generating unique operation named: updateUsingPOST_3
2019-04-08 10:46:30 -Generating unique operation named: updateUsingPUT_2
2019-04-08 10:46:30 -Generating unique operation named: updateUsingPATCH_2
2019-04-08 10:46:30 -Generating unique operation named: updateUsingDELETE_2
2019-04-08 10:46:30 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-08 10:46:30 -Generating unique operation named: updateUsingTRACE_2
2019-04-08 10:46:30 -Generating unique operation named: addUsingGET_4
2019-04-08 10:46:30 -Generating unique operation named: editUsingGET_4
2019-04-08 10:46:30 -Generating unique operation named: listUsingGET_4
2019-04-08 10:46:30 -Generating unique operation named: removeUsingPOST_8
2019-04-08 10:46:30 -Generating unique operation named: removeUsingPOST_9
2019-04-08 10:46:30 -Generating unique operation named: saveUsingPOST_4
2019-04-08 10:46:30 -Generating unique operation named: updateUsingGET_3
2019-04-08 10:46:30 -Generating unique operation named: updateUsingHEAD_3
2019-04-08 10:46:30 -Generating unique operation named: updateUsingPOST_4
2019-04-08 10:46:30 -Generating unique operation named: updateUsingPUT_3
2019-04-08 10:46:30 -Generating unique operation named: updateUsingPATCH_3
2019-04-08 10:46:30 -Generating unique operation named: updateUsingDELETE_3
2019-04-08 10:46:30 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-08 10:46:30 -Generating unique operation named: updateUsingTRACE_3
2019-04-08 10:46:30 -Generating unique operation named: ElecUsingGET_1
2019-04-08 10:46:30 -Generating unique operation named: addUsingGET_5
2019-04-08 10:46:30 -Generating unique operation named: editUsingGET_5
2019-04-08 10:46:30 -Generating unique operation named: listUsingGET_5
2019-04-08 10:46:30 -Generating unique operation named: removeUsingPOST_10
2019-04-08 10:46:30 -Generating unique operation named: removeUsingPOST_11
2019-04-08 10:46:30 -Generating unique operation named: saveUsingPOST_5
2019-04-08 10:46:30 -Generating unique operation named: updateUsingGET_4
2019-04-08 10:46:30 -Generating unique operation named: updateUsingHEAD_4
2019-04-08 10:46:30 -Generating unique operation named: updateUsingPOST_5
2019-04-08 10:46:30 -Generating unique operation named: updateUsingPUT_4
2019-04-08 10:46:30 -Generating unique operation named: updateUsingPATCH_4
2019-04-08 10:46:30 -Generating unique operation named: updateUsingDELETE_4
2019-04-08 10:46:30 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-08 10:46:30 -Generating unique operation named: updateUsingTRACE_4
2019-04-08 10:46:30 -Generating unique operation named: editUsingGET_6
2019-04-08 10:46:30 -Generating unique operation named: listUsingGET_6
2019-04-08 10:46:30 -Generating unique operation named: updateUsingPOST_6
2019-04-08 10:46:30 -Generating unique operation named: addUsingGET_6
2019-04-08 10:46:30 -Generating unique operation named: editUsingGET_7
2019-04-08 10:46:30 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-08 10:46:30 -Generating unique operation named: listUsingGET_7
2019-04-08 10:46:30 -Generating unique operation named: removeUsingPOST_12
2019-04-08 10:46:30 -Generating unique operation named: removeUsingPOST_13
2019-04-08 10:46:30 -Generating unique operation named: saveUsingPOST_6
2019-04-08 10:46:30 -Generating unique operation named: updateUsingGET_5
2019-04-08 10:46:30 -Generating unique operation named: updateUsingHEAD_5
2019-04-08 10:46:31 -Generating unique operation named: updateUsingPOST_7
2019-04-08 10:46:31 -Generating unique operation named: updateUsingPUT_5
2019-04-08 10:46:31 -Generating unique operation named: updateUsingPATCH_5
2019-04-08 10:46:31 -Generating unique operation named: updateUsingDELETE_5
2019-04-08 10:46:31 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-08 10:46:31 -Generating unique operation named: updateUsingTRACE_5
2019-04-08 10:46:31 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-08 10:46:31 -Generating unique operation named: addUsingGET_7
2019-04-08 10:46:31 -Generating unique operation named: editUsingGET_8
2019-04-08 10:46:31 -Generating unique operation named: listUsingGET_8
2019-04-08 10:46:31 -Generating unique operation named: removeUsingPOST_14
2019-04-08 10:46:31 -Generating unique operation named: removeUsingPOST_15
2019-04-08 10:46:31 -Generating unique operation named: saveUsingPOST_7
2019-04-08 10:46:31 -Generating unique operation named: updateUsingGET_6
2019-04-08 10:46:31 -Generating unique operation named: updateUsingHEAD_6
2019-04-08 10:46:31 -Generating unique operation named: updateUsingPOST_8
2019-04-08 10:46:31 -Generating unique operation named: updateUsingPUT_6
2019-04-08 10:46:31 -Generating unique operation named: updateUsingPATCH_6
2019-04-08 10:46:31 -Generating unique operation named: updateUsingDELETE_6
2019-04-08 10:46:31 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-08 10:46:31 -Generating unique operation named: updateUsingTRACE_6
2019-04-08 10:46:31 -Generating unique operation named: addUsingGET_8
2019-04-08 10:46:31 -Generating unique operation named: editUsingGET_9
2019-04-08 10:46:31 -Generating unique operation named: listUsingGET_9
2019-04-08 10:46:31 -Generating unique operation named: removeUsingPOST_16
2019-04-08 10:46:31 -Generating unique operation named: removeUsingPOST_17
2019-04-08 10:46:31 -Generating unique operation named: saveUsingPOST_8
2019-04-08 10:46:31 -Generating unique operation named: updateUsingGET_7
2019-04-08 10:46:31 -Generating unique operation named: updateUsingHEAD_7
2019-04-08 10:46:31 -Generating unique operation named: updateUsingPOST_9
2019-04-08 10:46:31 -Generating unique operation named: updateUsingPUT_7
2019-04-08 10:46:31 -Generating unique operation named: updateUsingPATCH_7
2019-04-08 10:46:31 -Generating unique operation named: updateUsingDELETE_7
2019-04-08 10:46:31 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-08 10:46:31 -Generating unique operation named: updateUsingTRACE_7
2019-04-08 10:46:31 -Generating unique operation named: addUsingGET_9
2019-04-08 10:46:31 -Generating unique operation named: editUsingGET_10
2019-04-08 10:46:31 -Generating unique operation named: infoUsingGET_1
2019-04-08 10:46:31 -Generating unique operation named: infoUsingHEAD_1
2019-04-08 10:46:31 -Generating unique operation named: infoUsingPOST_1
2019-04-08 10:46:31 -Generating unique operation named: infoUsingPUT_1
2019-04-08 10:46:31 -Generating unique operation named: infoUsingPATCH_1
2019-04-08 10:46:31 -Generating unique operation named: infoUsingDELETE_1
2019-04-08 10:46:31 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-08 10:46:31 -Generating unique operation named: infoUsingTRACE_1
2019-04-08 10:46:31 -Generating unique operation named: listUsingGET_10
2019-04-08 10:46:31 -Generating unique operation named: removeUsingPOST_18
2019-04-08 10:46:31 -Generating unique operation named: removeUsingPOST_19
2019-04-08 10:46:31 -Generating unique operation named: saveUsingPOST_9
2019-04-08 10:46:31 -Generating unique operation named: updateUsingPOST_10
2019-04-08 10:46:31 -Generating unique operation named: listUsingGET_11
2019-04-08 10:46:31 -Generating unique operation named: removeUsingPOST_20
2019-04-08 10:46:31 -Generating unique operation named: welcomeUsingGET_1
2019-04-08 10:46:31 -Generating unique operation named: addUsingGET_10
2019-04-08 10:46:31 -Generating unique operation named: editUsingGET_11
2019-04-08 10:46:31 -Generating unique operation named: listUsingGET_12
2019-04-08 10:46:31 -Generating unique operation named: removeUsingPOST_21
2019-04-08 10:46:31 -Generating unique operation named: saveUsingPOST_10
2019-04-08 10:46:31 -Generating unique operation named: treeUsingGET_1
2019-04-08 10:46:31 -Generating unique operation named: treeUsingGET_2
2019-04-08 10:46:31 -Generating unique operation named: updateUsingPOST_11
2019-04-08 10:46:31 -Generating unique operation named: addUsingGET_11
2019-04-08 10:46:31 -Generating unique operation named: editUsingGET_12
2019-04-08 10:46:31 -Generating unique operation named: listUsingGET_13
2019-04-08 10:46:31 -Generating unique operation named: removeUsingPOST_22
2019-04-08 10:46:31 -Generating unique operation named: removeUsingPOST_23
2019-04-08 10:46:31 -Generating unique operation named: saveUsingPOST_11
2019-04-08 10:46:31 -Generating unique operation named: updateUsingGET_8
2019-04-08 10:46:31 -Generating unique operation named: updateUsingHEAD_8
2019-04-08 10:46:31 -Generating unique operation named: updateUsingPOST_12
2019-04-08 10:46:31 -Generating unique operation named: updateUsingPUT_8
2019-04-08 10:46:31 -Generating unique operation named: updateUsingPATCH_8
2019-04-08 10:46:31 -Generating unique operation named: updateUsingDELETE_8
2019-04-08 10:46:31 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-08 10:46:31 -Generating unique operation named: updateUsingTRACE_8
2019-04-08 10:46:31 -Generating unique operation named: addUsingGET_12
2019-04-08 10:46:31 -Generating unique operation named: editUsingGET_13
2019-04-08 10:46:31 -Generating unique operation named: listUsingGET_14
2019-04-08 10:46:31 -Generating unique operation named: removeUsingPOST_24
2019-04-08 10:46:31 -Generating unique operation named: removeUsingPOST_25
2019-04-08 10:46:31 -Generating unique operation named: saveUsingPOST_12
2019-04-08 10:46:31 -Generating unique operation named: updateUsingGET_9
2019-04-08 10:46:31 -Generating unique operation named: updateUsingHEAD_9
2019-04-08 10:46:31 -Generating unique operation named: updateUsingPOST_13
2019-04-08 10:46:31 -Generating unique operation named: updateUsingPUT_9
2019-04-08 10:46:31 -Generating unique operation named: updateUsingPATCH_9
2019-04-08 10:46:31 -Generating unique operation named: updateUsingDELETE_9
2019-04-08 10:46:31 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-08 10:46:31 -Generating unique operation named: updateUsingTRACE_9
2019-04-08 10:46:31 -Generating unique operation named: addUsingGET_13
2019-04-08 10:46:31 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-08 10:46:31 -Generating unique operation named: editUsingGET_14
2019-04-08 10:46:31 -Generating unique operation named: listUsingGET_15
2019-04-08 10:46:31 -Generating unique operation named: saveUsingPOST_13
2019-04-08 10:46:31 -Generating unique operation named: saveUsingPOST_14
2019-04-08 10:46:31 -Generating unique operation named: updateUsingPOST_14
2019-04-08 10:46:31 -Generating unique operation named: listUsingGET_16
2019-04-08 10:46:31 -Generating unique operation named: listUsingHEAD_1
2019-04-08 10:46:31 -Generating unique operation named: listUsingPOST_1
2019-04-08 10:46:31 -Generating unique operation named: listUsingPUT_1
2019-04-08 10:46:31 -Generating unique operation named: listUsingPATCH_1
2019-04-08 10:46:31 -Generating unique operation named: listUsingDELETE_1
2019-04-08 10:46:31 -Generating unique operation named: listUsingOPTIONS_1
2019-04-08 10:46:31 -Generating unique operation named: listUsingTRACE_1
2019-04-08 10:46:31 -Generating unique operation named: addUsingGET_14
2019-04-08 10:46:31 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-08 10:46:31 -Generating unique operation named: editUsingGET_15
2019-04-08 10:46:31 -Generating unique operation named: listUsingGET_17
2019-04-08 10:46:31 -Generating unique operation named: removeUsingPOST_26
2019-04-08 10:46:31 -Generating unique operation named: saveUsingPOST_15
2019-04-08 10:46:31 -Generating unique operation named: treeUsingGET_3
2019-04-08 10:46:31 -Generating unique operation named: treeViewUsingGET_1
2019-04-08 10:46:31 -Generating unique operation named: updateUsingPOST_15
2019-04-08 10:46:31 -Generating unique operation named: addUsingGET_15
2019-04-08 10:46:31 -Generating unique operation named: editUsingGET_16
2019-04-08 10:46:31 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-08 10:46:31 -Generating unique operation named: listUsingGET_18
2019-04-08 10:46:31 -Generating unique operation named: removeUsingPOST_27
2019-04-08 10:46:31 -Generating unique operation named: removeUsingPOST_28
2019-04-08 10:46:31 -Generating unique operation named: saveUsingPOST_16
2019-04-08 10:46:31 -Generating unique operation named: updateUsingGET_10
2019-04-08 10:46:31 -Generating unique operation named: updateUsingHEAD_10
2019-04-08 10:46:31 -Generating unique operation named: updateUsingPOST_16
2019-04-08 10:46:31 -Generating unique operation named: updateUsingPUT_10
2019-04-08 10:46:31 -Generating unique operation named: updateUsingPATCH_10
2019-04-08 10:46:31 -Generating unique operation named: updateUsingDELETE_10
2019-04-08 10:46:31 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-08 10:46:31 -Generating unique operation named: updateUsingTRACE_10
2019-04-08 10:46:31 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-08 10:46:31 -Generating unique operation named: addUsingGET_16
2019-04-08 10:46:31 -Generating unique operation named: editUsingGET_17
2019-04-08 10:46:31 -Generating unique operation named: listUsingGET_19
2019-04-08 10:46:31 -Generating unique operation named: removeUsingPOST_29
2019-04-08 10:46:31 -Generating unique operation named: removeUsingPOST_30
2019-04-08 10:46:31 -Generating unique operation named: saveUsingPOST_17
2019-04-08 10:46:31 -Generating unique operation named: updateUsingGET_11
2019-04-08 10:46:31 -Generating unique operation named: updateUsingHEAD_11
2019-04-08 10:46:31 -Generating unique operation named: updateUsingPOST_17
2019-04-08 10:46:31 -Generating unique operation named: updateUsingPUT_11
2019-04-08 10:46:31 -Generating unique operation named: updateUsingPATCH_11
2019-04-08 10:46:31 -Generating unique operation named: updateUsingDELETE_11
2019-04-08 10:46:31 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-08 10:46:31 -Generating unique operation named: updateUsingTRACE_11
2019-04-08 10:46:32 -Generating unique operation named: addUsingGET_17
2019-04-08 10:46:32 -Generating unique operation named: editUsingGET_18
2019-04-08 10:46:32 -Generating unique operation named: listUsingGET_20
2019-04-08 10:46:32 -Generating unique operation named: removeUsingPOST_31
2019-04-08 10:46:32 -Generating unique operation named: removeUsingPOST_32
2019-04-08 10:46:32 -Generating unique operation named: saveUsingPOST_18
2019-04-08 10:46:32 -Generating unique operation named: updateUsingGET_12
2019-04-08 10:46:32 -Generating unique operation named: updateUsingHEAD_12
2019-04-08 10:46:32 -Generating unique operation named: updateUsingPOST_18
2019-04-08 10:46:32 -Generating unique operation named: updateUsingPUT_12
2019-04-08 10:46:32 -Generating unique operation named: updateUsingPATCH_12
2019-04-08 10:46:32 -Generating unique operation named: updateUsingDELETE_12
2019-04-08 10:46:32 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-08 10:46:32 -Generating unique operation named: updateUsingTRACE_12
2019-04-08 10:46:32 -Starting Quartz Scheduler now
2019-04-08 10:46:32 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-08 10:46:32 -Starting...
2019-04-08 10:46:32 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-08 10:46:32 -Started.
2019-04-08 10:46:32 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-08 10:46:34 -Using a shared selector for servlet write/read
2019-04-08 10:46:34 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-08 10:46:34 -Started BootdoApplication in 26.715 seconds (JVM running for 27.634)
2019-04-08 10:47:26 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-04-08 10:55:03 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-08 10:55:03 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-08 10:55:03 -FrameworkServlet 'dispatcherServlet': initialization completed in 97 ms
2019-04-08 10:55:03 -Enabling session validation scheduler...
2019-04-08 10:55:03 -请求地址 : http://localhost:8081/login;JSESSIONID=f374bb4a-276a-4289-a9cb-4173d1953ca8
2019-04-08 10:55:03 -HTTP METHOD : GET
2019-04-08 10:55:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-08 10:55:03 -参数 : [{}]
2019-04-08 10:55:03 -耗时 : 2
2019-04-08 10:55:03 -返回值 : login
2019-04-08 10:55:05 -请求地址 : http://localhost:8081/getVerify
2019-04-08 10:55:05 -HTTP METHOD : GET
2019-04-08 10:55:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-08 10:55:05 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@56c3c8d7, org.apache.shiro.web.servlet.ShiroHttpServletResponse@13c14c6b]
2019-04-08 10:55:09 -6283
2019-04-08 10:55:09 -耗时 : 3549
2019-04-08 10:55:09 -返回值 : null
2019-04-08 10:56:54 -Starting BootdoApplication on ZJZL-20180906VX with PID 872 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-08 10:56:54 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-08 10:56:54 -The following profiles are active: dev
2019-04-08 10:56:54 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 08 10:56:54 CST 2019]; root of context hierarchy
2019-04-08 10:56:57 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-08 10:56:59 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d6c6ee3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 10:56:59 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$ffc59d8a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 10:57:00 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 10:57:00 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 10:57:00 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 10:57:00 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-08 10:57:00 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-08 10:57:00 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 10:57:00 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 10:57:00 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 10:57:00 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 10:57:01 -Tomcat initialized with port(s): 8081 (http)
2019-04-08 10:57:01 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-08 10:57:01 -Starting service [Tomcat]
2019-04-08 10:57:01 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-08 10:57:01 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-08 10:57:01 -Initializing Spring embedded WebApplicationContext
2019-04-08 10:57:01 -Root WebApplicationContext: initialization completed in 7085 ms
2019-04-08 10:57:02 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-08 10:57:02 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-08 10:57:02 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-08 10:57:02 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-08 10:57:02 -Filter xssFilter was not registered (disabled)
2019-04-08 10:57:02 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-08 10:57:02 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-08 10:57:02 -Servlet statViewServlet mapped to [/druid/*]
2019-04-08 10:57:02 -Servlet dispatcherServlet mapped to [/]
2019-04-08 10:57:04 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 08 10:56:54 CST 2019]; root of context hierarchy
2019-04-08 10:57:05 -Using default implementation for ThreadExecutor
2019-04-08 10:57:05 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-08 10:57:05 -Quartz Scheduler v.2.2.1 created.
2019-04-08 10:57:05 -RAMJobStore initialized.
2019-04-08 10:57:05 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-08 10:57:05 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-08 10:57:05 -Quartz scheduler version: 2.2.1
2019-04-08 10:57:05 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@61911947
2019-04-08 10:57:05 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-08 10:57:05 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-08 10:57:08 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-08 10:57:08 -Mapped "{[/charts/countDD/tableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.tableDD()
2019-04-08 10:57:08 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-08 10:57:08 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 10:57:08 -Mapped "{[/charts/countMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 10:57:08 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-08 10:57:08 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-08 10:57:08 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-08 10:57:08 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-08 10:57:08 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public int com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-08 10:57:08 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 10:57:08 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-08 10:57:08 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public int com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-08 10:57:08 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 10:57:08 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-08 10:57:08 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-08 10:57:08 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-08 10:57:08 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-08 10:57:08 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-08 10:57:08 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:57:08 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-08 10:57:08 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-08 10:57:08 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-08 10:57:08 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:57:08 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-08 10:57:08 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-08 10:57:08 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-08 10:57:08 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-08 10:57:08 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-08 10:57:08 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-08 10:57:08 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:57:08 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-08 10:57:08 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-08 10:57:08 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-08 10:57:08 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-08 10:57:08 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:57:08 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:57:08 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-08 10:57:08 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-08 10:57:08 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-08 10:57:08 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-08 10:57:08 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-08 10:57:08 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-08 10:57:08 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-08 10:57:08 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-08 10:57:08 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-08 10:57:08 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:57:08 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-08 10:57:08 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-08 10:57:08 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:57:08 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-08 10:57:08 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-08 10:57:08 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-08 10:57:08 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-08 10:57:08 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:57:08 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-08 10:57:08 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-08 10:57:08 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-08 10:57:08 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-08 10:57:08 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-08 10:57:08 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-08 10:57:08 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-08 10:57:08 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-08 10:57:08 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-08 10:57:08 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-08 10:57:08 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-08 10:57:08 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:57:08 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-08 10:57:08 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-08 10:57:08 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-08 10:57:08 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-08 10:57:08 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-08 10:57:08 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-08 10:57:08 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-08 10:57:08 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-08 10:57:08 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-08 10:57:08 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:57:08 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-08 10:57:08 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-08 10:57:08 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:57:08 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-08 10:57:08 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-08 10:57:08 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-08 10:57:08 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-08 10:57:08 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-08 10:57:08 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-08 10:57:08 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:57:08 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-08 10:57:08 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-08 10:57:08 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-08 10:57:08 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-08 10:57:08 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-08 10:57:08 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-08 10:57:08 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-08 10:57:08 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-08 10:57:08 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-08 10:57:08 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-08 10:57:08 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:57:08 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-08 10:57:08 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-08 10:57:08 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:57:08 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-08 10:57:08 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-08 10:57:08 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-08 10:57:08 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-08 10:57:08 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-08 10:57:08 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-08 10:57:08 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-08 10:57:08 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-08 10:57:08 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-08 10:57:08 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-08 10:57:08 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-08 10:57:08 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-08 10:57:08 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:57:08 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-08 10:57:08 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 10:57:08 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-08 10:57:08 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:57:08 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-08 10:57:08 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-08 10:57:08 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-08 10:57:08 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-08 10:57:08 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:57:08 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-08 10:57:08 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 10:57:08 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-08 10:57:08 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:57:08 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-08 10:57:08 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-08 10:57:08 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-08 10:57:08 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-08 10:57:08 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:57:08 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-08 10:57:08 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 10:57:08 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-08 10:57:08 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:57:08 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-08 10:57:08 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-08 10:57:08 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-08 10:57:08 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-08 10:57:08 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:57:08 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:57:08 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-08 10:57:08 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-08 10:57:08 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-08 10:57:08 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:57:08 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-08 10:57:08 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:57:08 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-08 10:57:08 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-08 10:57:08 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-08 10:57:08 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-08 10:57:08 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:57:08 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-08 10:57:08 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-08 10:57:08 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 10:57:08 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:57:08 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:57:08 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:57:08 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-08 10:57:08 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-08 10:57:08 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-08 10:57:08 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-08 10:57:08 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-08 10:57:08 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-08 10:57:08 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-08 10:57:08 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-08 10:57:08 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:57:08 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-08 10:57:08 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-08 10:57:08 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-08 10:57:08 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-08 10:57:08 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-08 10:57:08 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-08 10:57:08 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-08 10:57:08 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-08 10:57:08 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-08 10:57:08 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-08 10:57:08 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:57:08 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-08 10:57:08 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-08 10:57:08 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-08 10:57:08 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-08 10:57:08 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-08 10:57:08 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-08 10:57:08 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-08 10:57:08 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-08 10:57:08 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-08 10:57:08 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-08 10:57:08 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-08 10:57:08 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-08 10:57:08 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:57:08 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-08 10:57:08 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-08 10:57:08 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-08 10:57:08 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-08 10:57:08 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:57:08 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-08 10:57:08 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-08 10:57:08 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-08 10:57:08 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:57:08 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-08 10:57:08 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-08 10:57:08 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-08 10:57:08 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-08 10:57:08 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-08 10:57:08 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-08 10:57:08 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-08 10:57:08 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-08 10:57:08 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:57:08 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-08 10:57:08 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-08 10:57:08 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-08 10:57:08 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-08 10:57:08 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-08 10:57:08 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-08 10:57:08 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-08 10:57:08 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-08 10:57:08 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:57:08 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-08 10:57:08 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-08 10:57:08 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:57:08 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-08 10:57:08 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-08 10:57:08 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-08 10:57:08 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-08 10:57:08 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-08 10:57:08 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-08 10:57:08 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-08 10:57:08 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 10:57:08 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-08 10:57:08 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-08 10:57:08 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 10:57:08 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-08 10:57:08 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-08 10:57:08 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-08 10:57:08 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-08 10:57:08 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-08 10:57:08 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-08 10:57:08 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-08 10:57:08 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-08 10:57:08 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-08 10:57:08 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-08 10:57:08 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-08 10:57:09 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-08 10:57:09 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 08 10:56:54 CST 2019]; root of context hierarchy
2019-04-08 10:57:09 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-08 10:57:09 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-08 10:57:09 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-08 10:57:09 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-08 10:57:09 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-08 10:57:11 -Registering beans for JMX exposure on startup
2019-04-08 10:57:11 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-08 10:57:11 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-08 10:57:11 -Starting beans in phase 2147483647
2019-04-08 10:57:11 -Context refreshed
2019-04-08 10:57:11 -Found 1 custom documentation plugin(s)
2019-04-08 10:57:11 -Scanning for api listing references
2019-04-08 10:57:11 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-08 10:57:11 -Generating unique operation named: getCountDUsingPOST_1
2019-04-08 10:57:11 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-08 10:57:11 -Generating unique operation named: getCountDUsingPOST_2
2019-04-08 10:57:11 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-08 10:57:11 -Generating unique operation named: getCountDUsingPOST_3
2019-04-08 10:57:11 -Generating unique operation named: removeUsingPOST_1
2019-04-08 10:57:12 -Generating unique operation named: addUsingGET_1
2019-04-08 10:57:12 -Generating unique operation named: editUsingGET_1
2019-04-08 10:57:12 -Generating unique operation named: listUsingGET_1
2019-04-08 10:57:12 -Generating unique operation named: removeUsingPOST_2
2019-04-08 10:57:12 -Generating unique operation named: removeUsingPOST_3
2019-04-08 10:57:12 -Generating unique operation named: saveUsingPOST_1
2019-04-08 10:57:12 -Generating unique operation named: updateUsingGET_1
2019-04-08 10:57:12 -Generating unique operation named: updateUsingHEAD_1
2019-04-08 10:57:12 -Generating unique operation named: updateUsingPOST_1
2019-04-08 10:57:12 -Generating unique operation named: updateUsingPUT_1
2019-04-08 10:57:12 -Generating unique operation named: updateUsingPATCH_1
2019-04-08 10:57:12 -Generating unique operation named: updateUsingDELETE_1
2019-04-08 10:57:12 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-08 10:57:12 -Generating unique operation named: updateUsingTRACE_1
2019-04-08 10:57:12 -Generating unique operation named: addUsingGET_2
2019-04-08 10:57:12 -Generating unique operation named: editUsingGET_2
2019-04-08 10:57:12 -Generating unique operation named: listUsingGET_2
2019-04-08 10:57:12 -Generating unique operation named: removeUsingPOST_4
2019-04-08 10:57:12 -Generating unique operation named: removeUsingPOST_5
2019-04-08 10:57:12 -Generating unique operation named: saveUsingPOST_2
2019-04-08 10:57:12 -Generating unique operation named: updateUsingPOST_2
2019-04-08 10:57:12 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-08 10:57:12 -Generating unique operation named: addUsingGET_3
2019-04-08 10:57:12 -Generating unique operation named: editUsingGET_3
2019-04-08 10:57:12 -Generating unique operation named: exprotElecLogUsingGET_4
2019-04-08 10:57:12 -Generating unique operation named: listUsingGET_3
2019-04-08 10:57:12 -Generating unique operation named: removeUsingPOST_6
2019-04-08 10:57:12 -Generating unique operation named: removeUsingPOST_7
2019-04-08 10:57:12 -Generating unique operation named: saveUsingPOST_3
2019-04-08 10:57:12 -Generating unique operation named: updateUsingGET_2
2019-04-08 10:57:12 -Generating unique operation named: updateUsingHEAD_2
2019-04-08 10:57:12 -Generating unique operation named: updateUsingPOST_3
2019-04-08 10:57:12 -Generating unique operation named: updateUsingPUT_2
2019-04-08 10:57:12 -Generating unique operation named: updateUsingPATCH_2
2019-04-08 10:57:12 -Generating unique operation named: updateUsingDELETE_2
2019-04-08 10:57:12 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-08 10:57:12 -Generating unique operation named: updateUsingTRACE_2
2019-04-08 10:57:12 -Generating unique operation named: addUsingGET_4
2019-04-08 10:57:12 -Generating unique operation named: editUsingGET_4
2019-04-08 10:57:12 -Generating unique operation named: listUsingGET_4
2019-04-08 10:57:12 -Generating unique operation named: removeUsingPOST_8
2019-04-08 10:57:12 -Generating unique operation named: removeUsingPOST_9
2019-04-08 10:57:12 -Generating unique operation named: saveUsingPOST_4
2019-04-08 10:57:12 -Generating unique operation named: updateUsingGET_3
2019-04-08 10:57:12 -Generating unique operation named: updateUsingHEAD_3
2019-04-08 10:57:12 -Generating unique operation named: updateUsingPOST_4
2019-04-08 10:57:12 -Generating unique operation named: updateUsingPUT_3
2019-04-08 10:57:12 -Generating unique operation named: updateUsingPATCH_3
2019-04-08 10:57:12 -Generating unique operation named: updateUsingDELETE_3
2019-04-08 10:57:12 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-08 10:57:12 -Generating unique operation named: updateUsingTRACE_3
2019-04-08 10:57:12 -Generating unique operation named: ElecUsingGET_1
2019-04-08 10:57:12 -Generating unique operation named: addUsingGET_5
2019-04-08 10:57:12 -Generating unique operation named: editUsingGET_5
2019-04-08 10:57:12 -Generating unique operation named: listUsingGET_5
2019-04-08 10:57:12 -Generating unique operation named: removeUsingPOST_10
2019-04-08 10:57:12 -Generating unique operation named: removeUsingPOST_11
2019-04-08 10:57:12 -Generating unique operation named: saveUsingPOST_5
2019-04-08 10:57:12 -Generating unique operation named: updateUsingGET_4
2019-04-08 10:57:12 -Generating unique operation named: updateUsingHEAD_4
2019-04-08 10:57:12 -Generating unique operation named: updateUsingPOST_5
2019-04-08 10:57:12 -Generating unique operation named: updateUsingPUT_4
2019-04-08 10:57:12 -Generating unique operation named: updateUsingPATCH_4
2019-04-08 10:57:12 -Generating unique operation named: updateUsingDELETE_4
2019-04-08 10:57:12 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-08 10:57:12 -Generating unique operation named: updateUsingTRACE_4
2019-04-08 10:57:12 -Generating unique operation named: editUsingGET_6
2019-04-08 10:57:12 -Generating unique operation named: listUsingGET_6
2019-04-08 10:57:12 -Generating unique operation named: updateUsingPOST_6
2019-04-08 10:57:12 -Generating unique operation named: addUsingGET_6
2019-04-08 10:57:12 -Generating unique operation named: editUsingGET_7
2019-04-08 10:57:12 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-08 10:57:12 -Generating unique operation named: listUsingGET_7
2019-04-08 10:57:12 -Generating unique operation named: removeUsingPOST_12
2019-04-08 10:57:12 -Generating unique operation named: removeUsingPOST_13
2019-04-08 10:57:12 -Generating unique operation named: saveUsingPOST_6
2019-04-08 10:57:12 -Generating unique operation named: updateUsingGET_5
2019-04-08 10:57:12 -Generating unique operation named: updateUsingHEAD_5
2019-04-08 10:57:12 -Generating unique operation named: updateUsingPOST_7
2019-04-08 10:57:12 -Generating unique operation named: updateUsingPUT_5
2019-04-08 10:57:12 -Generating unique operation named: updateUsingPATCH_5
2019-04-08 10:57:12 -Generating unique operation named: updateUsingDELETE_5
2019-04-08 10:57:12 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-08 10:57:12 -Generating unique operation named: updateUsingTRACE_5
2019-04-08 10:57:12 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-08 10:57:12 -Generating unique operation named: addUsingGET_7
2019-04-08 10:57:12 -Generating unique operation named: editUsingGET_8
2019-04-08 10:57:12 -Generating unique operation named: listUsingGET_8
2019-04-08 10:57:12 -Generating unique operation named: removeUsingPOST_14
2019-04-08 10:57:12 -Generating unique operation named: removeUsingPOST_15
2019-04-08 10:57:12 -Generating unique operation named: saveUsingPOST_7
2019-04-08 10:57:12 -Generating unique operation named: updateUsingGET_6
2019-04-08 10:57:12 -Generating unique operation named: updateUsingHEAD_6
2019-04-08 10:57:12 -Generating unique operation named: updateUsingPOST_8
2019-04-08 10:57:12 -Generating unique operation named: updateUsingPUT_6
2019-04-08 10:57:12 -Generating unique operation named: updateUsingPATCH_6
2019-04-08 10:57:12 -Generating unique operation named: updateUsingDELETE_6
2019-04-08 10:57:12 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-08 10:57:12 -Generating unique operation named: updateUsingTRACE_6
2019-04-08 10:57:12 -Generating unique operation named: addUsingGET_8
2019-04-08 10:57:12 -Generating unique operation named: editUsingGET_9
2019-04-08 10:57:12 -Generating unique operation named: listUsingGET_9
2019-04-08 10:57:12 -Generating unique operation named: removeUsingPOST_16
2019-04-08 10:57:12 -Generating unique operation named: removeUsingPOST_17
2019-04-08 10:57:12 -Generating unique operation named: saveUsingPOST_8
2019-04-08 10:57:12 -Generating unique operation named: updateUsingGET_7
2019-04-08 10:57:12 -Generating unique operation named: updateUsingHEAD_7
2019-04-08 10:57:12 -Generating unique operation named: updateUsingPOST_9
2019-04-08 10:57:12 -Generating unique operation named: updateUsingPUT_7
2019-04-08 10:57:12 -Generating unique operation named: updateUsingPATCH_7
2019-04-08 10:57:12 -Generating unique operation named: updateUsingDELETE_7
2019-04-08 10:57:12 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-08 10:57:12 -Generating unique operation named: updateUsingTRACE_7
2019-04-08 10:57:12 -Generating unique operation named: addUsingGET_9
2019-04-08 10:57:12 -Generating unique operation named: editUsingGET_10
2019-04-08 10:57:12 -Generating unique operation named: infoUsingGET_1
2019-04-08 10:57:12 -Generating unique operation named: infoUsingHEAD_1
2019-04-08 10:57:12 -Generating unique operation named: infoUsingPOST_1
2019-04-08 10:57:12 -Generating unique operation named: infoUsingPUT_1
2019-04-08 10:57:12 -Generating unique operation named: infoUsingPATCH_1
2019-04-08 10:57:12 -Generating unique operation named: infoUsingDELETE_1
2019-04-08 10:57:12 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-08 10:57:12 -Generating unique operation named: infoUsingTRACE_1
2019-04-08 10:57:12 -Generating unique operation named: listUsingGET_10
2019-04-08 10:57:12 -Generating unique operation named: removeUsingPOST_18
2019-04-08 10:57:12 -Generating unique operation named: removeUsingPOST_19
2019-04-08 10:57:12 -Generating unique operation named: saveUsingPOST_9
2019-04-08 10:57:12 -Generating unique operation named: updateUsingPOST_10
2019-04-08 10:57:12 -Generating unique operation named: listUsingGET_11
2019-04-08 10:57:12 -Generating unique operation named: removeUsingPOST_20
2019-04-08 10:57:12 -Generating unique operation named: welcomeUsingGET_1
2019-04-08 10:57:13 -Generating unique operation named: addUsingGET_10
2019-04-08 10:57:13 -Generating unique operation named: editUsingGET_11
2019-04-08 10:57:13 -Generating unique operation named: listUsingGET_12
2019-04-08 10:57:13 -Generating unique operation named: removeUsingPOST_21
2019-04-08 10:57:13 -Generating unique operation named: saveUsingPOST_10
2019-04-08 10:57:13 -Generating unique operation named: treeUsingGET_1
2019-04-08 10:57:13 -Generating unique operation named: treeUsingGET_2
2019-04-08 10:57:13 -Generating unique operation named: updateUsingPOST_11
2019-04-08 10:57:13 -Generating unique operation named: addUsingGET_11
2019-04-08 10:57:13 -Generating unique operation named: editUsingGET_12
2019-04-08 10:57:13 -Generating unique operation named: listUsingGET_13
2019-04-08 10:57:13 -Generating unique operation named: removeUsingPOST_22
2019-04-08 10:57:13 -Generating unique operation named: removeUsingPOST_23
2019-04-08 10:57:13 -Generating unique operation named: saveUsingPOST_11
2019-04-08 10:57:13 -Generating unique operation named: updateUsingGET_8
2019-04-08 10:57:13 -Generating unique operation named: updateUsingHEAD_8
2019-04-08 10:57:13 -Generating unique operation named: updateUsingPOST_12
2019-04-08 10:57:13 -Generating unique operation named: updateUsingPUT_8
2019-04-08 10:57:13 -Generating unique operation named: updateUsingPATCH_8
2019-04-08 10:57:13 -Generating unique operation named: updateUsingDELETE_8
2019-04-08 10:57:13 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-08 10:57:13 -Generating unique operation named: updateUsingTRACE_8
2019-04-08 10:57:13 -Generating unique operation named: addUsingGET_12
2019-04-08 10:57:13 -Generating unique operation named: editUsingGET_13
2019-04-08 10:57:13 -Generating unique operation named: listUsingGET_14
2019-04-08 10:57:13 -Generating unique operation named: removeUsingPOST_24
2019-04-08 10:57:13 -Generating unique operation named: removeUsingPOST_25
2019-04-08 10:57:13 -Generating unique operation named: saveUsingPOST_12
2019-04-08 10:57:13 -Generating unique operation named: updateUsingGET_9
2019-04-08 10:57:13 -Generating unique operation named: updateUsingHEAD_9
2019-04-08 10:57:13 -Generating unique operation named: updateUsingPOST_13
2019-04-08 10:57:13 -Generating unique operation named: updateUsingPUT_9
2019-04-08 10:57:13 -Generating unique operation named: updateUsingPATCH_9
2019-04-08 10:57:13 -Generating unique operation named: updateUsingDELETE_9
2019-04-08 10:57:13 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-08 10:57:13 -Generating unique operation named: updateUsingTRACE_9
2019-04-08 10:57:13 -Generating unique operation named: addUsingGET_13
2019-04-08 10:57:13 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-08 10:57:13 -Generating unique operation named: editUsingGET_14
2019-04-08 10:57:13 -Generating unique operation named: listUsingGET_15
2019-04-08 10:57:13 -Generating unique operation named: saveUsingPOST_13
2019-04-08 10:57:13 -Generating unique operation named: saveUsingPOST_14
2019-04-08 10:57:13 -Generating unique operation named: updateUsingPOST_14
2019-04-08 10:57:13 -Generating unique operation named: listUsingGET_16
2019-04-08 10:57:13 -Generating unique operation named: listUsingHEAD_1
2019-04-08 10:57:13 -Generating unique operation named: listUsingPOST_1
2019-04-08 10:57:13 -Generating unique operation named: listUsingPUT_1
2019-04-08 10:57:13 -Generating unique operation named: listUsingPATCH_1
2019-04-08 10:57:13 -Generating unique operation named: listUsingDELETE_1
2019-04-08 10:57:13 -Generating unique operation named: listUsingOPTIONS_1
2019-04-08 10:57:13 -Generating unique operation named: listUsingTRACE_1
2019-04-08 10:57:13 -Generating unique operation named: addUsingGET_14
2019-04-08 10:57:13 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-08 10:57:13 -Generating unique operation named: editUsingGET_15
2019-04-08 10:57:13 -Generating unique operation named: listUsingGET_17
2019-04-08 10:57:13 -Generating unique operation named: removeUsingPOST_26
2019-04-08 10:57:13 -Generating unique operation named: saveUsingPOST_15
2019-04-08 10:57:13 -Generating unique operation named: treeUsingGET_3
2019-04-08 10:57:13 -Generating unique operation named: treeViewUsingGET_1
2019-04-08 10:57:13 -Generating unique operation named: updateUsingPOST_15
2019-04-08 10:57:13 -Generating unique operation named: addUsingGET_15
2019-04-08 10:57:13 -Generating unique operation named: editUsingGET_16
2019-04-08 10:57:13 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-08 10:57:13 -Generating unique operation named: listUsingGET_18
2019-04-08 10:57:13 -Generating unique operation named: removeUsingPOST_27
2019-04-08 10:57:13 -Generating unique operation named: removeUsingPOST_28
2019-04-08 10:57:13 -Generating unique operation named: saveUsingPOST_16
2019-04-08 10:57:13 -Generating unique operation named: updateUsingGET_10
2019-04-08 10:57:13 -Generating unique operation named: updateUsingHEAD_10
2019-04-08 10:57:13 -Generating unique operation named: updateUsingPOST_16
2019-04-08 10:57:13 -Generating unique operation named: updateUsingPUT_10
2019-04-08 10:57:13 -Generating unique operation named: updateUsingPATCH_10
2019-04-08 10:57:13 -Generating unique operation named: updateUsingDELETE_10
2019-04-08 10:57:13 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-08 10:57:13 -Generating unique operation named: updateUsingTRACE_10
2019-04-08 10:57:13 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-08 10:57:13 -Generating unique operation named: addUsingGET_16
2019-04-08 10:57:13 -Generating unique operation named: editUsingGET_17
2019-04-08 10:57:13 -Generating unique operation named: listUsingGET_19
2019-04-08 10:57:13 -Generating unique operation named: removeUsingPOST_29
2019-04-08 10:57:13 -Generating unique operation named: removeUsingPOST_30
2019-04-08 10:57:13 -Generating unique operation named: saveUsingPOST_17
2019-04-08 10:57:13 -Generating unique operation named: updateUsingGET_11
2019-04-08 10:57:13 -Generating unique operation named: updateUsingHEAD_11
2019-04-08 10:57:13 -Generating unique operation named: updateUsingPOST_17
2019-04-08 10:57:13 -Generating unique operation named: updateUsingPUT_11
2019-04-08 10:57:13 -Generating unique operation named: updateUsingPATCH_11
2019-04-08 10:57:13 -Generating unique operation named: updateUsingDELETE_11
2019-04-08 10:57:13 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-08 10:57:13 -Generating unique operation named: updateUsingTRACE_11
2019-04-08 10:57:13 -Generating unique operation named: addUsingGET_17
2019-04-08 10:57:13 -Generating unique operation named: editUsingGET_18
2019-04-08 10:57:13 -Generating unique operation named: listUsingGET_20
2019-04-08 10:57:13 -Generating unique operation named: removeUsingPOST_31
2019-04-08 10:57:13 -Generating unique operation named: removeUsingPOST_32
2019-04-08 10:57:13 -Generating unique operation named: saveUsingPOST_18
2019-04-08 10:57:13 -Generating unique operation named: updateUsingGET_12
2019-04-08 10:57:13 -Generating unique operation named: updateUsingHEAD_12
2019-04-08 10:57:13 -Generating unique operation named: updateUsingPOST_18
2019-04-08 10:57:13 -Generating unique operation named: updateUsingPUT_12
2019-04-08 10:57:13 -Generating unique operation named: updateUsingPATCH_12
2019-04-08 10:57:13 -Generating unique operation named: updateUsingDELETE_12
2019-04-08 10:57:13 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-08 10:57:13 -Generating unique operation named: updateUsingTRACE_12
2019-04-08 10:57:13 -Starting Quartz Scheduler now
2019-04-08 10:57:13 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-08 10:57:13 -Starting...
2019-04-08 10:57:13 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-08 10:57:13 -Started.
2019-04-08 10:57:13 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-08 10:57:13 -Using a shared selector for servlet write/read
2019-04-08 10:57:13 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-08 10:57:13 -Started BootdoApplication in 20.251 seconds (JVM running for 21.027)
2019-04-08 10:57:13 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-08 10:57:14 -==> Parameters: 
2019-04-08 10:57:14 -<==      Total: 1
2019-04-08 10:57:23 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-08 10:57:23 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-08 10:57:23 -FrameworkServlet 'dispatcherServlet': initialization completed in 67 ms
2019-04-08 10:57:23 -Enabling session validation scheduler...
2019-04-08 10:57:23 -请求地址 : http://localhost:8081/login;JSESSIONID=f374bb4a-276a-4289-a9cb-4173d1953ca8
2019-04-08 10:57:23 -HTTP METHOD : GET
2019-04-08 10:57:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-08 10:57:23 -参数 : [{}]
2019-04-08 10:57:23 -耗时 : 4
2019-04-08 10:57:23 -返回值 : login
2019-04-08 10:57:25 -请求地址 : http://localhost:8081/getVerify
2019-04-08 10:57:25 -HTTP METHOD : GET
2019-04-08 10:57:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-08 10:57:25 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@545ddb39, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5062456a]
2019-04-08 10:57:25 -2243
2019-04-08 10:57:25 -耗时 : 792
2019-04-08 10:57:25 -返回值 : null
2019-04-08 10:57:26 -请求地址 : http://localhost:8081/login
2019-04-08 10:57:26 -HTTP METHOD : GET
2019-04-08 10:57:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-08 10:57:26 -参数 : [{}]
2019-04-08 10:57:26 -耗时 : 0
2019-04-08 10:57:26 -返回值 : login
2019-04-08 10:57:29 -请求地址 : http://localhost:8081/login
2019-04-08 10:57:29 -HTTP METHOD : POST
2019-04-08 10:57:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-08 10:57:29 -参数 : [admin, 111111, 2243, org.apache.shiro.web.servlet.ShiroHttpServletRequest@7f80461a]
2019-04-08 10:57:29 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-08 10:57:29 -==> Parameters: admin(String)
2019-04-08 10:57:30 -<==      Total: 1
2019-04-08 10:57:30 -耗时 : 562
2019-04-08 10:57:30 -返回值 : {msg=操作成功, code=0}
2019-04-08 10:57:30 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-08 10:57:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 10:57:30 -==> Parameters: 1(Long), admin(String), 登录(String), 562(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-08 10:57:30.225(Timestamp)
2019-04-08 10:57:30 -请求地址 : http://localhost:8081/index
2019-04-08 10:57:30 -HTTP METHOD : GET
2019-04-08 10:57:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 10:57:30 -参数 : [{}]
2019-04-08 10:57:30 -<==    Updates: 1
2019-04-08 10:57:30 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 10:57:31 -==> Parameters: 1(Long)
2019-04-08 10:57:31 -<==      Total: 46
2019-04-08 10:57:31 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 10:57:31 -==> Parameters: 138(Long)
2019-04-08 10:57:31 -<==      Total: 1
2019-04-08 10:57:31 -耗时 : 822
2019-04-08 10:57:31 -返回值 : index_v1
2019-04-08 10:57:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 10:57:31 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 822(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 10:57:31.57(Timestamp)
2019-04-08 10:57:32 -请求地址 : http://localhost:8081/main
2019-04-08 10:57:32 -HTTP METHOD : GET
2019-04-08 10:57:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 10:57:32 -参数 : []
2019-04-08 10:57:32 -耗时 : 1
2019-04-08 10:57:32 -返回值 : main
2019-04-08 10:57:32 -<==    Updates: 1
2019-04-08 10:57:32 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 10:57:32 -HTTP METHOD : GET
2019-04-08 10:57:32 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 10:57:32 -参数 : []
2019-04-08 10:57:32 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 10:57:32 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 10:57:32 -<==      Total: 0
2019-04-08 10:57:32 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 10:57:32 -==> Parameters: 1(Long), 0(String)
2019-04-08 10:57:32 -<==      Total: 1
2019-04-08 10:57:32 -耗时 : 54
2019-04-08 10:57:32 -返回值 : com.bootdo.common.utils.PageUtils@4cf66b56
2019-04-08 10:57:33 -请求地址 : http://localhost:8081/main
2019-04-08 10:57:33 -HTTP METHOD : GET
2019-04-08 10:57:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 10:57:33 -参数 : []
2019-04-08 10:57:33 -耗时 : 0
2019-04-08 10:57:33 -返回值 : main
2019-04-08 10:57:36 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-08 10:57:36 -==> Parameters: 1(Long)
2019-04-08 10:57:36 -<==      Total: 90
2019-04-08 10:57:36 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 10:57:36 -HTTP METHOD : GET
2019-04-08 10:57:36 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 10:57:36 -参数 : []
2019-04-08 10:57:36 -耗时 : 0
2019-04-08 10:57:36 -返回值 : /moneyList/moneyList
2019-04-08 10:58:08 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 9]
2019-04-08 10:58:45 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 10:58:45 -HTTP METHOD : GET
2019-04-08 10:58:45 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 10:58:45 -参数 : []
2019-04-08 10:58:45 -耗时 : 1
2019-04-08 10:58:45 -返回值 : system/dept/deptTree
2019-04-08 10:58:45 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 10:58:45 -HTTP METHOD : GET
2019-04-08 10:58:45 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 10:58:45 -参数 : []
2019-04-08 10:58:45 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 10:58:45 -==> Parameters: 
2019-04-08 10:58:45 -<==      Total: 3
2019-04-08 10:58:45 -耗时 : 44
2019-04-08 10:58:45 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 10:59:02 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 10:59:02 -HTTP METHOD : POST
2019-04-08 10:59:02 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 10:59:02 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@27675c3]
2019-04-08 10:59:02 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 10:59:02 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 10:59:02 -<==      Total: 3
2019-04-08 10:59:02 -耗时 : 384
2019-04-08 10:59:02 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@7f6ff98b, com.bootdo.moneyList.damain.MoneyListDO@37130a09, com.bootdo.moneyList.damain.MoneyListDO@3901eb1]
2019-04-08 11:00:16 -请求地址 : http://localhost:8081/heat/heat
2019-04-08 11:00:16 -HTTP METHOD : GET
2019-04-08 11:00:16 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.Heat
2019-04-08 11:00:16 -参数 : []
2019-04-08 11:00:16 -耗时 : 1
2019-04-08 11:00:16 -返回值 : heat/heat/heat
2019-04-08 11:00:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 11:00:17 -HTTP METHOD : GET
2019-04-08 11:00:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 11:00:17 -参数 : [userType]
2019-04-08 11:00:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 11:00:17 -==> Parameters: userType(String)
2019-04-08 11:00:17 -<==      Total: 2
2019-04-08 11:00:17 -耗时 : 66
2019-04-08 11:00:17 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 11:00:17 -请求地址 : http://localhost:8081/heat/heat/list
2019-04-08 11:00:17 -HTTP METHOD : GET
2019-04-08 11:00:17 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-04-08 11:00:17 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}]
2019-04-08 11:00:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat order by id asc limit ?, ? 
2019-04-08 11:00:17 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 11:00:17 -<==      Total: 10
2019-04-08 11:00:17 -==>  Preparing: select count(*) from heat 
2019-04-08 11:00:17 -==> Parameters: 
2019-04-08 11:00:17 -<==      Total: 1
2019-04-08 11:00:17 -耗时 : 81
2019-04-08 11:00:17 -返回值 : com.bootdo.common.utils.PageUtils@399fdef6
2019-04-08 11:00:20 -请求地址 : http://localhost:8081/heat/heat/add
2019-04-08 11:00:20 -HTTP METHOD : GET
2019-04-08 11:00:20 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.add
2019-04-08 11:00:20 -参数 : []
2019-04-08 11:00:20 -耗时 : 1
2019-04-08 11:00:20 -返回值 : heat/heat/add
2019-04-08 11:00:21 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 11:00:21 -HTTP METHOD : GET
2019-04-08 11:00:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 11:00:21 -参数 : [userType]
2019-04-08 11:00:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 11:00:21 -==> Parameters: userType(String)
2019-04-08 11:00:21 -<==      Total: 2
2019-04-08 11:00:21 -耗时 : 16
2019-04-08 11:00:21 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 11:00:21 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-08 11:00:21 -HTTP METHOD : GET
2019-04-08 11:00:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 11:00:21 -参数 : [heatType]
2019-04-08 11:00:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 11:00:21 -==> Parameters: heatType(String)
2019-04-08 11:00:21 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-04-08 11:00:21 -HTTP METHOD : GET
2019-04-08 11:00:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 11:00:21 -参数 : [userState]
2019-04-08 11:00:21 -<==      Total: 3
2019-04-08 11:00:21 -耗时 : 11
2019-04-08 11:00:21 -返回值 : [DictDO{id=137, name='特殊暖费1', value='4', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='商业暖', value='0', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 11:00:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 11:00:21 -==> Parameters: userState(String)
2019-04-08 11:00:21 -<==      Total: 2
2019-04-08 11:00:21 -耗时 : 16
2019-04-08 11:00:21 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 11:00:35 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 11:00:35 -HTTP METHOD : GET
2019-04-08 11:00:35 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 11:00:35 -参数 : []
2019-04-08 11:00:35 -耗时 : 1
2019-04-08 11:00:35 -返回值 : system/dept/deptTree
2019-04-08 11:00:35 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 11:00:35 -HTTP METHOD : GET
2019-04-08 11:00:35 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 11:00:35 -参数 : []
2019-04-08 11:00:35 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 11:00:35 -==> Parameters: 
2019-04-08 11:00:35 -<==      Total: 3
2019-04-08 11:00:35 -耗时 : 10
2019-04-08 11:00:35 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 11:00:55 -请求地址 : http://localhost:8081/heat/heat/save
2019-04-08 11:00:55 -HTTP METHOD : POST
2019-04-08 11:00:55 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.save
2019-04-08 11:00:55 -参数 : [com.bootdo.heat.domain.HeatDO@70239d04]
2019-04-08 11:00:55 -==>  Preparing: insert into heat ( `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 11:00:55 -==> Parameters: 1-001(String), 李文英(String), A(String), 2(String), (String), 1(String), (String), 1(String), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 1(BigDecimal), 2019-02(String), 1(Long), 2019-04-08 11:00:55.37(Timestamp), 1(Long), (String)
2019-04-08 11:00:55 -<==    Updates: 1
2019-04-08 11:00:55 -耗时 : 172
2019-04-08 11:00:55 -返回值 : {msg=操作成功, code=0}
2019-04-08 11:00:55 -请求地址 : http://localhost:8081/heat/heat/list
2019-04-08 11:00:55 -HTTP METHOD : GET
2019-04-08 11:00:55 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-04-08 11:00:55 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=2}]
2019-04-08 11:00:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE `heat_sum` < 0 order by id asc limit ?, ? 
2019-04-08 11:00:55 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 11:00:55 -<==      Total: 10
2019-04-08 11:00:55 -==>  Preparing: select count(*) from heat WHERE `heat_sum` < 0 
2019-04-08 11:00:55 -==> Parameters: 
2019-04-08 11:00:55 -<==      Total: 1
2019-04-08 11:00:55 -耗时 : 34
2019-04-08 11:00:55 -返回值 : com.bootdo.common.utils.PageUtils@3fcd12d1
2019-04-08 11:00:59 -请求地址 : http://localhost:8081/index
2019-04-08 11:00:59 -HTTP METHOD : GET
2019-04-08 11:00:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 11:00:59 -参数 : [{}]
2019-04-08 11:00:59 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 11:00:59 -==> Parameters: 1(Long)
2019-04-08 11:00:59 -<==      Total: 46
2019-04-08 11:00:59 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 11:00:59 -==> Parameters: 138(Long)
2019-04-08 11:00:59 -<==      Total: 1
2019-04-08 11:00:59 -耗时 : 28
2019-04-08 11:00:59 -返回值 : index_v1
2019-04-08 11:00:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 11:00:59 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 28(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 11:00:59.385(Timestamp)
2019-04-08 11:00:59 -<==    Updates: 1
2019-04-08 11:00:59 -请求地址 : http://localhost:8081/main
2019-04-08 11:00:59 -HTTP METHOD : GET
2019-04-08 11:00:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 11:00:59 -参数 : []
2019-04-08 11:00:59 -耗时 : 1
2019-04-08 11:00:59 -返回值 : main
2019-04-08 11:00:59 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 11:00:59 -HTTP METHOD : GET
2019-04-08 11:00:59 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 11:00:59 -参数 : []
2019-04-08 11:00:59 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 11:00:59 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 11:00:59 -<==      Total: 0
2019-04-08 11:00:59 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 11:00:59 -==> Parameters: 1(Long), 0(String)
2019-04-08 11:00:59 -<==      Total: 1
2019-04-08 11:00:59 -耗时 : 9
2019-04-08 11:00:59 -返回值 : com.bootdo.common.utils.PageUtils@43fab0d
2019-04-08 11:00:59 -请求地址 : http://localhost:8081/main
2019-04-08 11:00:59 -HTTP METHOD : GET
2019-04-08 11:00:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 11:00:59 -参数 : []
2019-04-08 11:00:59 -耗时 : 1
2019-04-08 11:00:59 -返回值 : main
2019-04-08 11:01:01 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 11:01:01 -HTTP METHOD : GET
2019-04-08 11:01:01 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 11:01:01 -参数 : []
2019-04-08 11:01:01 -耗时 : 22
2019-04-08 11:01:01 -返回值 : /moneyList/moneyList
2019-04-08 11:01:04 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 11:01:04 -HTTP METHOD : GET
2019-04-08 11:01:04 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 11:01:04 -参数 : []
2019-04-08 11:01:04 -耗时 : 1
2019-04-08 11:01:04 -返回值 : system/dept/deptTree
2019-04-08 11:01:04 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 11:01:04 -HTTP METHOD : GET
2019-04-08 11:01:04 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 11:01:04 -参数 : []
2019-04-08 11:01:04 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 11:01:04 -==> Parameters: 
2019-04-08 11:01:04 -<==      Total: 3
2019-04-08 11:01:04 -耗时 : 6
2019-04-08 11:01:04 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 11:01:12 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 11:01:12 -HTTP METHOD : POST
2019-04-08 11:01:12 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 11:01:12 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@37319b6c]
2019-04-08 11:01:12 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 11:01:12 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 11:01:12 -<==      Total: 3
2019-04-08 11:01:12 -耗时 : 6
2019-04-08 11:01:12 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@ad57ffd, com.bootdo.moneyList.damain.MoneyListDO@26669fd, com.bootdo.moneyList.damain.MoneyListDO@70c6252f]
2019-04-08 11:01:50 -请求地址 : http://localhost:8081/heat/heat
2019-04-08 11:01:50 -HTTP METHOD : GET
2019-04-08 11:01:50 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.Heat
2019-04-08 11:01:50 -参数 : []
2019-04-08 11:01:50 -耗时 : 0
2019-04-08 11:01:50 -返回值 : heat/heat/heat
2019-04-08 11:01:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 11:01:51 -HTTP METHOD : GET
2019-04-08 11:01:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 11:01:51 -参数 : [userType]
2019-04-08 11:01:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 11:01:51 -==> Parameters: userType(String)
2019-04-08 11:01:51 -<==      Total: 2
2019-04-08 11:01:51 -耗时 : 6
2019-04-08 11:01:51 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 11:01:51 -请求地址 : http://localhost:8081/heat/heat/list
2019-04-08 11:01:51 -HTTP METHOD : GET
2019-04-08 11:01:51 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-04-08 11:01:51 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}]
2019-04-08 11:01:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat order by id asc limit ?, ? 
2019-04-08 11:01:51 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 11:01:51 -<==      Total: 10
2019-04-08 11:01:51 -==>  Preparing: select count(*) from heat 
2019-04-08 11:01:51 -==> Parameters: 
2019-04-08 11:01:51 -<==      Total: 1
2019-04-08 11:01:51 -耗时 : 12
2019-04-08 11:01:51 -返回值 : com.bootdo.common.utils.PageUtils@45ca4ca3
2019-04-08 11:02:02 -请求地址 : http://localhost:8081/heat/heat/list
2019-04-08 11:02:02 -HTTP METHOD : GET
2019-04-08 11:02:02 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-04-08 11:02:02 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=1-001, createTime=, queryType=1}]
2019-04-08 11:02:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE user_id = ? order by id asc limit ?, ? 
2019-04-08 11:02:02 -==> Parameters: 1-001(String), 0(Integer), 10(Integer)
2019-04-08 11:02:02 -<==      Total: 1
2019-04-08 11:02:02 -==>  Preparing: select count(*) from heat WHERE user_id = ? 
2019-04-08 11:02:02 -==> Parameters: 1-001(String)
2019-04-08 11:02:02 -<==      Total: 1
2019-04-08 11:02:02 -耗时 : 13
2019-04-08 11:02:02 -返回值 : com.bootdo.common.utils.PageUtils@74c76a94
2019-04-08 11:02:06 -请求地址 : http://localhost:8081/heat/heat/edit/28
2019-04-08 11:02:06 -HTTP METHOD : GET
2019-04-08 11:02:06 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.edit
2019-04-08 11:02:06 -参数 : [28, {}]
2019-04-08 11:02:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat where id = ? 
2019-04-08 11:02:06 -==> Parameters: 28(Integer)
2019-04-08 11:02:06 -<==      Total: 1
2019-04-08 11:02:06 -耗时 : 11
2019-04-08 11:02:06 -返回值 : heat/heat/edit
2019-04-08 11:02:06 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 11:02:06 -HTTP METHOD : GET
2019-04-08 11:02:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 11:02:06 -参数 : [userType]
2019-04-08 11:02:06 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-04-08 11:02:06 -HTTP METHOD : GET
2019-04-08 11:02:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 11:02:06 -参数 : [userState]
2019-04-08 11:02:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 11:02:06 -==> Parameters: userType(String)
2019-04-08 11:02:06 -<==      Total: 2
2019-04-08 11:02:06 -耗时 : 10
2019-04-08 11:02:06 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 11:02:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 11:02:06 -==> Parameters: userState(String)
2019-04-08 11:02:06 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-04-08 11:02:06 -HTTP METHOD : GET
2019-04-08 11:02:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 11:02:06 -参数 : [heatType]
2019-04-08 11:02:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 11:02:06 -==> Parameters: heatType(String)
2019-04-08 11:02:06 -<==      Total: 3
2019-04-08 11:02:06 -耗时 : 8
2019-04-08 11:02:06 -返回值 : [DictDO{id=137, name='特殊暖费1', value='4', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=134, name='民用暖', value='1', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=133, name='商业暖', value='0', type='heatType', description='暖气类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 11:02:06 -<==      Total: 2
2019-04-08 11:02:06 -耗时 : 111
2019-04-08 11:02:06 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 11:02:10 -请求地址 : http://localhost:8081/heat/heat/update
2019-04-08 11:02:10 -HTTP METHOD : POST
2019-04-08 11:02:10 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.update
2019-04-08 11:02:10 -参数 : [com.bootdo.heat.domain.HeatDO@32c3470f]
2019-04-08 11:02:10 -==>  Preparing: update heat SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `user_tell` = ?, `user_state` = ?, `wages_id` = ?, `heat_type` = ?, `heat_price` = ?, `heat_area` = ?, `heat_cost` = ?, `heat_sum` = ?, `create_time` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-04-08 11:02:10 -==> Parameters: 1-0001(String), 李文英(String), A(String), 2(String), (String), 1(String), (String), 1(String), 1.00(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), 2019-02(String), 1(Long), 2019-04-08 11:02:10.018(Timestamp), 1(Long), (String), 28(Integer)
2019-04-08 11:02:10 -<==    Updates: 1
2019-04-08 11:02:10 -耗时 : 183
2019-04-08 11:02:10 -返回值 : {msg=操作成功, code=0}
2019-04-08 11:02:10 -请求地址 : http://localhost:8081/heat/heat/list
2019-04-08 11:02:10 -HTTP METHOD : GET
2019-04-08 11:02:10 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-04-08 11:02:10 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=1-001, createTime=, queryType=2}]
2019-04-08 11:02:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE `heat_sum` < 0 and user_id = ? order by id asc limit ?, ? 
2019-04-08 11:02:10 -==> Parameters: 1-001(String), 0(Integer), 10(Integer)
2019-04-08 11:02:10 -<==      Total: 0
2019-04-08 11:02:10 -==>  Preparing: select count(*) from heat WHERE `heat_sum` < 0 and user_id = ? 
2019-04-08 11:02:10 -==> Parameters: 1-001(String)
2019-04-08 11:02:10 -<==      Total: 1
2019-04-08 11:02:10 -耗时 : 18
2019-04-08 11:02:10 -返回值 : com.bootdo.common.utils.PageUtils@486cef46
2019-04-08 11:02:19 -请求地址 : http://localhost:8081/heat/heat/list
2019-04-08 11:02:19 -HTTP METHOD : GET
2019-04-08 11:02:19 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-04-08 11:02:19 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=1-001, createTime=, queryType=1}]
2019-04-08 11:02:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE user_id = ? order by id asc limit ?, ? 
2019-04-08 11:02:19 -==> Parameters: 1-001(String), 0(Integer), 10(Integer)
2019-04-08 11:02:19 -<==      Total: 0
2019-04-08 11:02:19 -==>  Preparing: select count(*) from heat WHERE user_id = ? 
2019-04-08 11:02:19 -==> Parameters: 1-001(String)
2019-04-08 11:02:19 -<==      Total: 1
2019-04-08 11:02:19 -耗时 : 8
2019-04-08 11:02:19 -返回值 : com.bootdo.common.utils.PageUtils@1de896bc
2019-04-08 11:02:25 -请求地址 : http://localhost:8081/index
2019-04-08 11:02:25 -HTTP METHOD : GET
2019-04-08 11:02:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 11:02:25 -参数 : [{}]
2019-04-08 11:02:25 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 11:02:25 -==> Parameters: 1(Long)
2019-04-08 11:02:25 -<==      Total: 46
2019-04-08 11:02:25 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 11:02:25 -==> Parameters: 138(Long)
2019-04-08 11:02:25 -<==      Total: 1
2019-04-08 11:02:25 -耗时 : 38
2019-04-08 11:02:25 -返回值 : index_v1
2019-04-08 11:02:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 11:02:25 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 38(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 11:02:25.615(Timestamp)
2019-04-08 11:02:25 -请求地址 : http://localhost:8081/main
2019-04-08 11:02:25 -HTTP METHOD : GET
2019-04-08 11:02:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 11:02:25 -参数 : []
2019-04-08 11:02:25 -耗时 : 0
2019-04-08 11:02:25 -返回值 : main
2019-04-08 11:02:25 -<==    Updates: 1
2019-04-08 11:02:25 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 11:02:25 -HTTP METHOD : GET
2019-04-08 11:02:25 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 11:02:25 -参数 : []
2019-04-08 11:02:25 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 11:02:25 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 11:02:25 -<==      Total: 0
2019-04-08 11:02:25 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 11:02:25 -==> Parameters: 1(Long), 0(String)
2019-04-08 11:02:25 -<==      Total: 1
2019-04-08 11:02:25 -耗时 : 32
2019-04-08 11:02:25 -返回值 : com.bootdo.common.utils.PageUtils@3dd11a8d
2019-04-08 11:02:25 -请求地址 : http://localhost:8081/main
2019-04-08 11:02:25 -HTTP METHOD : GET
2019-04-08 11:02:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 11:02:25 -参数 : []
2019-04-08 11:02:25 -耗时 : 1
2019-04-08 11:02:25 -返回值 : main
2019-04-08 11:02:27 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 11:02:27 -HTTP METHOD : GET
2019-04-08 11:02:27 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 11:02:27 -参数 : []
2019-04-08 11:02:27 -耗时 : 0
2019-04-08 11:02:27 -返回值 : /moneyList/moneyList
2019-04-08 11:02:33 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 11:02:33 -HTTP METHOD : GET
2019-04-08 11:02:33 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 11:02:33 -参数 : []
2019-04-08 11:02:33 -耗时 : 0
2019-04-08 11:02:33 -返回值 : system/dept/deptTree
2019-04-08 11:02:33 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 11:02:33 -HTTP METHOD : GET
2019-04-08 11:02:33 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 11:02:33 -参数 : []
2019-04-08 11:02:33 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 11:02:33 -==> Parameters: 
2019-04-08 11:02:33 -<==      Total: 3
2019-04-08 11:02:33 -耗时 : 4
2019-04-08 11:02:33 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 11:02:36 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 11:02:36 -HTTP METHOD : POST
2019-04-08 11:02:36 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 11:02:36 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@ed0ec43]
2019-04-08 11:02:36 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 11:02:36 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 11:02:36 -<==      Total: 3
2019-04-08 11:02:36 -耗时 : 44
2019-04-08 11:02:36 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@7c4366ce, com.bootdo.moneyList.damain.MoneyListDO@4c2cd7cb, com.bootdo.moneyList.damain.MoneyListDO@459788f9]
2019-04-08 11:02:47 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 11:02:47 -HTTP METHOD : POST
2019-04-08 11:02:47 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 11:02:47 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@5a619ba5]
2019-04-08 11:02:47 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water 
2019-04-08 11:02:47 -==> Parameters: 
2019-04-08 11:02:47 -<==      Total: 3
2019-04-08 11:02:47 -耗时 : 7
2019-04-08 11:02:47 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@5a711c65, com.bootdo.moneyList.damain.MoneyListDO@3aec2186, com.bootdo.moneyList.damain.MoneyListDO@6c0629cd]
2019-04-08 11:03:03 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 11:03:03 -HTTP METHOD : POST
2019-04-08 11:03:03 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 11:03:03 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@7a435efe]
2019-04-08 11:03:03 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water 
2019-04-08 11:03:03 -==> Parameters: 
2019-04-08 11:03:03 -<==      Total: 3
2019-04-08 11:03:03 -耗时 : 5
2019-04-08 11:03:03 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@cb7f550, com.bootdo.moneyList.damain.MoneyListDO@39879339, com.bootdo.moneyList.damain.MoneyListDO@59539e59]
2019-04-08 11:04:15 -请求地址 : http://localhost:8081/index
2019-04-08 11:04:15 -HTTP METHOD : GET
2019-04-08 11:04:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 11:04:15 -参数 : [{}]
2019-04-08 11:04:15 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 11:04:15 -==> Parameters: 1(Long)
2019-04-08 11:04:15 -<==      Total: 46
2019-04-08 11:04:15 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 11:04:15 -==> Parameters: 138(Long)
2019-04-08 11:04:15 -<==      Total: 1
2019-04-08 11:04:15 -耗时 : 34
2019-04-08 11:04:15 -返回值 : index_v1
2019-04-08 11:04:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 11:04:15 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 35(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 11:04:15.864(Timestamp)
2019-04-08 11:04:15 -<==    Updates: 1
2019-04-08 11:04:16 -请求地址 : http://localhost:8081/main
2019-04-08 11:04:16 -HTTP METHOD : GET
2019-04-08 11:04:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 11:04:16 -参数 : []
2019-04-08 11:04:16 -耗时 : 0
2019-04-08 11:04:16 -返回值 : main
2019-04-08 11:04:16 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 11:04:16 -HTTP METHOD : GET
2019-04-08 11:04:16 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 11:04:16 -参数 : []
2019-04-08 11:04:16 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 11:04:16 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 11:04:16 -<==      Total: 0
2019-04-08 11:04:16 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 11:04:16 -==> Parameters: 1(Long), 0(String)
2019-04-08 11:04:16 -<==      Total: 1
2019-04-08 11:04:16 -耗时 : 7
2019-04-08 11:04:16 -返回值 : com.bootdo.common.utils.PageUtils@343af822
2019-04-08 11:04:16 -请求地址 : http://localhost:8081/main
2019-04-08 11:04:16 -HTTP METHOD : GET
2019-04-08 11:04:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 11:04:16 -参数 : []
2019-04-08 11:04:16 -耗时 : 1
2019-04-08 11:04:16 -返回值 : main
2019-04-08 11:04:19 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 11:04:19 -HTTP METHOD : GET
2019-04-08 11:04:19 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 11:04:19 -参数 : []
2019-04-08 11:04:19 -耗时 : 0
2019-04-08 11:04:19 -返回值 : /moneyList/moneyList
2019-04-08 11:04:33 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 11:04:33 -HTTP METHOD : GET
2019-04-08 11:04:33 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 11:04:33 -参数 : []
2019-04-08 11:04:33 -耗时 : 1
2019-04-08 11:04:33 -返回值 : system/dept/deptTree
2019-04-08 11:04:33 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 11:04:33 -HTTP METHOD : GET
2019-04-08 11:04:33 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 11:04:33 -参数 : []
2019-04-08 11:04:33 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 11:04:33 -==> Parameters: 
2019-04-08 11:04:33 -<==      Total: 3
2019-04-08 11:04:33 -耗时 : 4
2019-04-08 11:04:33 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 11:04:35 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-04-08 11:04:35 -HTTP METHOD : POST
2019-04-08 11:04:35 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-04-08 11:04:35 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@1be7d9ff]
2019-04-08 11:04:35 -==>  Preparing: select DISTINCT user_name from( select user_name from elec WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from heat WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from water WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) )username 
2019-04-08 11:04:35 -==> Parameters: 2019-02(String), 李(String), 2019-02(String), 李(String), 2019-02(String), 李(String)
2019-04-08 11:04:35 -<==      Total: 1
2019-04-08 11:04:35 -耗时 : 179
2019-04-08 11:04:35 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@6ed4d4f]
2019-04-08 11:04:37 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-04-08 11:04:37 -HTTP METHOD : POST
2019-04-08 11:04:37 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-04-08 11:04:37 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@470225fc]
2019-04-08 11:04:37 -==>  Preparing: select DISTINCT user_name from( select user_name from elec WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from heat WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from water WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) )username 
2019-04-08 11:04:37 -==> Parameters: 2019-02(String), 李(String), 2019-02(String), 李(String), 2019-02(String), 李(String)
2019-04-08 11:04:37 -<==      Total: 1
2019-04-08 11:04:37 -耗时 : 6
2019-04-08 11:04:37 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@5d25a9fa]
2019-04-08 11:04:40 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 11:04:40 -HTTP METHOD : POST
2019-04-08 11:04:40 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 11:04:40 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@19b83ce8]
2019-04-08 11:04:40 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_name = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_name = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_name = ? 
2019-04-08 11:04:40 -==> Parameters: 2019-02(String), 李文英(String), 2019-02(String), 李文英(String), 2019-02(String), 李文英(String)
2019-04-08 11:04:40 -<==      Total: 3
2019-04-08 11:04:40 -耗时 : 10
2019-04-08 11:04:40 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@2777c762, com.bootdo.moneyList.damain.MoneyListDO@7ff0f018, com.bootdo.moneyList.damain.MoneyListDO@596327ee]
2019-04-08 11:05:09 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 11:05:09 -HTTP METHOD : POST
2019-04-08 11:05:09 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 11:05:09 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@479d9eb6]
2019-04-08 11:05:09 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water 
2019-04-08 11:05:09 -==> Parameters: 
2019-04-08 11:05:09 -<==      Total: 3
2019-04-08 11:05:09 -耗时 : 4
2019-04-08 11:05:09 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@2d7279da, com.bootdo.moneyList.damain.MoneyListDO@6312aec, com.bootdo.moneyList.damain.MoneyListDO@35e95f05]
2019-04-08 11:11:09 -请求地址 : http://localhost:8081/index
2019-04-08 11:11:09 -HTTP METHOD : GET
2019-04-08 11:11:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 11:11:09 -参数 : [{}]
2019-04-08 11:11:09 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 11:11:09 -==> Parameters: 1(Long)
2019-04-08 11:11:09 -<==      Total: 46
2019-04-08 11:11:09 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 11:11:09 -==> Parameters: 138(Long)
2019-04-08 11:11:09 -<==      Total: 1
2019-04-08 11:11:09 -耗时 : 26
2019-04-08 11:11:09 -返回值 : index_v1
2019-04-08 11:11:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 11:11:09 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 11:11:09.446(Timestamp)
2019-04-08 11:11:09 -请求地址 : http://localhost:8081/main
2019-04-08 11:11:09 -HTTP METHOD : GET
2019-04-08 11:11:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 11:11:09 -参数 : []
2019-04-08 11:11:09 -耗时 : 1
2019-04-08 11:11:09 -返回值 : main
2019-04-08 11:11:10 -<==    Updates: 1
2019-04-08 11:11:10 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 11:11:10 -HTTP METHOD : GET
2019-04-08 11:11:10 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 11:11:10 -参数 : []
2019-04-08 11:11:10 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 11:11:10 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 11:11:10 -请求地址 : http://localhost:8081/main
2019-04-08 11:11:10 -HTTP METHOD : GET
2019-04-08 11:11:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 11:11:10 -参数 : []
2019-04-08 11:11:10 -耗时 : 0
2019-04-08 11:11:10 -返回值 : main
2019-04-08 11:11:10 -<==      Total: 0
2019-04-08 11:11:10 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 11:11:10 -==> Parameters: 1(Long), 0(String)
2019-04-08 11:11:10 -<==      Total: 1
2019-04-08 11:11:10 -耗时 : 26
2019-04-08 11:11:10 -返回值 : com.bootdo.common.utils.PageUtils@7d5474ca
2019-04-08 11:11:11 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-08 11:11:11 -==> Parameters: 1(Long)
2019-04-08 11:11:11 -<==      Total: 90
2019-04-08 11:11:11 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 11:11:11 -HTTP METHOD : GET
2019-04-08 11:11:11 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 11:11:11 -参数 : []
2019-04-08 11:11:11 -耗时 : 0
2019-04-08 11:11:11 -返回值 : /moneyList/moneyList
2019-04-08 11:11:21 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 11:11:21 -HTTP METHOD : GET
2019-04-08 11:11:21 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 11:11:21 -参数 : []
2019-04-08 11:11:21 -耗时 : 0
2019-04-08 11:11:21 -返回值 : system/dept/deptTree
2019-04-08 11:11:21 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 11:11:21 -HTTP METHOD : GET
2019-04-08 11:11:21 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 11:11:21 -参数 : []
2019-04-08 11:11:21 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 11:11:21 -==> Parameters: 
2019-04-08 11:11:21 -<==      Total: 3
2019-04-08 11:11:21 -耗时 : 7
2019-04-08 11:11:21 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 11:11:24 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 11:11:24 -HTTP METHOD : POST
2019-04-08 11:11:24 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 11:11:24 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@1b084c9]
2019-04-08 11:11:24 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 11:11:24 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 11:11:24 -<==      Total: 3
2019-04-08 11:11:24 -耗时 : 9
2019-04-08 11:11:24 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@15ea2006, com.bootdo.moneyList.damain.MoneyListDO@6853d360, com.bootdo.moneyList.damain.MoneyListDO@3221245c]
2019-04-08 11:11:37 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 11:11:37 -HTTP METHOD : POST
2019-04-08 11:11:37 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 11:11:37 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@774377a5]
2019-04-08 11:11:37 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water 
2019-04-08 11:11:37 -==> Parameters: 
2019-04-08 11:11:37 -<==      Total: 3
2019-04-08 11:11:37 -耗时 : 3
2019-04-08 11:11:37 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@2cf0518b, com.bootdo.moneyList.damain.MoneyListDO@7ffc9bfc, com.bootdo.moneyList.damain.MoneyListDO@13ee25f9]
2019-04-08 11:12:13 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 11:12:13 -HTTP METHOD : POST
2019-04-08 11:12:13 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 11:12:13 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@190f6a78]
2019-04-08 11:12:13 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water 
2019-04-08 11:12:13 -==> Parameters: 
2019-04-08 11:12:13 -<==      Total: 3
2019-04-08 11:12:13 -耗时 : 3
2019-04-08 11:12:13 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@28ec003b, com.bootdo.moneyList.damain.MoneyListDO@7640c3c8, com.bootdo.moneyList.damain.MoneyListDO@147e2bd2]
2019-04-08 11:13:41 -请求地址 : http://localhost:8081/login;JSESSIONID=0f650c3c-66f8-4ba5-9b92-5c8853557b22
2019-04-08 11:13:41 -HTTP METHOD : GET
2019-04-08 11:13:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-08 11:13:41 -参数 : [{}]
2019-04-08 11:13:41 -耗时 : 2
2019-04-08 11:13:41 -返回值 : login
2019-04-08 11:13:41 -请求地址 : http://localhost:8081/getVerify
2019-04-08 11:13:41 -HTTP METHOD : GET
2019-04-08 11:13:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-08 11:13:41 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@c99ece2, org.apache.shiro.web.servlet.ShiroHttpServletResponse@20146e9]
2019-04-08 11:13:41 -0289
2019-04-08 11:13:41 -耗时 : 16
2019-04-08 11:13:41 -返回值 : null
2019-04-08 11:13:42 -请求地址 : http://localhost:8081/login
2019-04-08 11:13:42 -HTTP METHOD : GET
2019-04-08 11:13:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-08 11:13:42 -参数 : [{}]
2019-04-08 11:13:42 -耗时 : 1
2019-04-08 11:13:42 -返回值 : login
2019-04-08 11:13:46 -请求地址 : http://localhost:8081/login
2019-04-08 11:13:46 -HTTP METHOD : POST
2019-04-08 11:13:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-08 11:13:46 -参数 : [admin, 111111, 0289, org.apache.shiro.web.servlet.ShiroHttpServletRequest@d33e8a]
2019-04-08 11:13:46 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-08 11:13:46 -==> Parameters: admin(String)
2019-04-08 11:13:47 -<==      Total: 1
2019-04-08 11:13:47 -耗时 : 493
2019-04-08 11:13:47 -返回值 : {msg=操作成功, code=0}
2019-04-08 11:13:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 11:13:47 -==> Parameters: 1(Long), admin(String), 登录(String), 493(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-08 11:13:47.251(Timestamp)
2019-04-08 11:13:47 -请求地址 : http://localhost:8081/index
2019-04-08 11:13:47 -HTTP METHOD : GET
2019-04-08 11:13:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 11:13:47 -参数 : [{}]
2019-04-08 11:13:47 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 11:13:47 -==> Parameters: 1(Long)
2019-04-08 11:13:47 -<==      Total: 46
2019-04-08 11:13:47 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 11:13:47 -==> Parameters: 138(Long)
2019-04-08 11:13:47 -<==      Total: 1
2019-04-08 11:13:47 -耗时 : 22
2019-04-08 11:13:47 -返回值 : index_v1
2019-04-08 11:13:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 11:13:47 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 11:13:47.319(Timestamp)
2019-04-08 11:13:47 -<==    Updates: 1
2019-04-08 11:13:47 -请求地址 : http://localhost:8081/main
2019-04-08 11:13:47 -HTTP METHOD : GET
2019-04-08 11:13:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 11:13:47 -参数 : []
2019-04-08 11:13:47 -耗时 : 1
2019-04-08 11:13:47 -返回值 : main
2019-04-08 11:13:47 -<==    Updates: 1
2019-04-08 11:13:48 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 11:13:48 -HTTP METHOD : GET
2019-04-08 11:13:48 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 11:13:48 -参数 : []
2019-04-08 11:13:48 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 11:13:48 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 11:13:48 -<==      Total: 0
2019-04-08 11:13:48 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 11:13:48 -==> Parameters: 1(Long), 0(String)
2019-04-08 11:13:48 -<==      Total: 1
2019-04-08 11:13:48 -耗时 : 10
2019-04-08 11:13:48 -返回值 : com.bootdo.common.utils.PageUtils@137df3a9
2019-04-08 11:13:48 -请求地址 : http://localhost:8081/main
2019-04-08 11:13:48 -HTTP METHOD : GET
2019-04-08 11:13:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 11:13:48 -参数 : []
2019-04-08 11:13:48 -耗时 : 1
2019-04-08 11:13:48 -返回值 : main
2019-04-08 11:13:50 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-08 11:13:50 -==> Parameters: 1(Long)
2019-04-08 11:13:50 -<==      Total: 90
2019-04-08 11:13:50 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 11:13:50 -HTTP METHOD : GET
2019-04-08 11:13:50 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 11:13:50 -参数 : []
2019-04-08 11:13:50 -耗时 : 1
2019-04-08 11:13:50 -返回值 : /moneyList/moneyList
2019-04-08 11:13:55 -请求地址 : http://localhost:8081/sys/user/personal
2019-04-08 11:13:55 -HTTP METHOD : GET
2019-04-08 11:13:55 -CLASS_METHOD : com.bootdo.system.controller.UserController.personal
2019-04-08 11:13:55 -参数 : [{}]
2019-04-08 11:13:55 -==>  Preparing: select role_id from sys_user_role where user_id=? 
2019-04-08 11:13:55 -==> Parameters: 1(Long)
2019-04-08 11:13:55 -<==      Total: 1
2019-04-08 11:13:55 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2019-04-08 11:13:55 -==> Parameters: 1(Long)
2019-04-08 11:13:55 -<==      Total: 1
2019-04-08 11:13:55 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept where dept_id = ? 
2019-04-08 11:13:55 -==> Parameters: 1(Long)
2019-04-08 11:13:55 -<==      Total: 1
2019-04-08 11:13:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 11:13:55 -==> Parameters: hobby(String)
2019-04-08 11:13:55 -<==      Total: 2
2019-04-08 11:13:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 11:13:55 -==> Parameters: sex(String)
2019-04-08 11:13:55 -<==      Total: 2
2019-04-08 11:13:55 -耗时 : 223
2019-04-08 11:13:55 -返回值 : system/user/personal
2019-04-08 11:14:02 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 11:14:02 -HTTP METHOD : GET
2019-04-08 11:14:02 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 11:14:02 -参数 : []
2019-04-08 11:14:02 -耗时 : 1
2019-04-08 11:14:02 -返回值 : system/dept/deptTree
2019-04-08 11:14:03 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 11:14:03 -HTTP METHOD : GET
2019-04-08 11:14:03 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 11:14:03 -参数 : []
2019-04-08 11:14:03 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 11:14:03 -==> Parameters: 
2019-04-08 11:14:03 -<==      Total: 3
2019-04-08 11:14:03 -耗时 : 3
2019-04-08 11:14:03 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 11:14:08 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 11:14:08 -HTTP METHOD : POST
2019-04-08 11:14:08 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 11:14:08 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@3ddc3d6f]
2019-04-08 11:14:08 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 11:14:08 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 11:14:08 -<==      Total: 3
2019-04-08 11:14:08 -耗时 : 5
2019-04-08 11:14:08 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@5bd9411, com.bootdo.moneyList.damain.MoneyListDO@2af0c421, com.bootdo.moneyList.damain.MoneyListDO@769ba355]
2019-04-08 11:14:19 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 11:14:19 -HTTP METHOD : POST
2019-04-08 11:14:19 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 11:14:19 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@46db1647]
2019-04-08 11:14:19 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 11:14:19 -==> Parameters: 100(String), 2019-02(String), 1-0001(String)
2019-04-08 11:14:19 -<==    Updates: 1
2019-04-08 11:14:19 -耗时 : 257
2019-04-08 11:14:19 -返回值 : 0
2019-04-08 11:14:21 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 11:14:21 -HTTP METHOD : POST
2019-04-08 11:14:21 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 11:14:21 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@5367de1]
2019-04-08 11:14:21 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 11:14:21 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 11:14:21 -<==      Total: 3
2019-04-08 11:14:21 -耗时 : 3
2019-04-08 11:14:21 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@34690b5c, com.bootdo.moneyList.damain.MoneyListDO@33fc3c1, com.bootdo.moneyList.damain.MoneyListDO@35506f32]
2019-04-08 11:14:34 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 11:14:34 -HTTP METHOD : POST
2019-04-08 11:14:34 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 11:14:34 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@49c35db5]
2019-04-08 11:14:34 -==>  Preparing: update heat set heat_sum = heat_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 11:14:34 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 11:14:34 -<==    Updates: 1
2019-04-08 11:14:34 -耗时 : 130
2019-04-08 11:14:34 -返回值 : 1
2019-04-08 11:14:35 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 11:14:35 -HTTP METHOD : POST
2019-04-08 11:14:35 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 11:14:35 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@4bfb7f1e]
2019-04-08 11:14:35 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 11:14:35 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 11:14:35 -<==      Total: 3
2019-04-08 11:14:35 -耗时 : 4
2019-04-08 11:14:35 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@ef27ec0, com.bootdo.moneyList.damain.MoneyListDO@2558e540, com.bootdo.moneyList.damain.MoneyListDO@35cb7d7a]
2019-04-08 11:14:41 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 11:14:41 -HTTP METHOD : POST
2019-04-08 11:14:41 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 11:14:41 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@2410e337]
2019-04-08 11:14:41 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 11:14:41 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 11:14:41 -<==    Updates: 1
2019-04-08 11:14:41 -耗时 : 212
2019-04-08 11:14:41 -返回值 : 0
2019-04-08 11:14:44 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 11:14:44 -HTTP METHOD : POST
2019-04-08 11:14:44 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 11:14:44 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@77836b8c]
2019-04-08 11:14:44 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 11:14:44 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 11:14:44 -<==      Total: 3
2019-04-08 11:14:44 -耗时 : 9
2019-04-08 11:14:44 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@275d483f, com.bootdo.moneyList.damain.MoneyListDO@15f5c2ce, com.bootdo.moneyList.damain.MoneyListDO@79c604f7]
2019-04-08 11:14:49 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 11:14:49 -HTTP METHOD : POST
2019-04-08 11:14:49 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 11:14:49 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@1872b03c]
2019-04-08 11:14:49 -==>  Preparing: update heat set heat_sum = heat_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 11:14:49 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 11:14:49 -<==    Updates: 1
2019-04-08 11:14:49 -耗时 : 163
2019-04-08 11:14:49 -返回值 : 1
2019-04-08 11:14:50 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 11:14:50 -HTTP METHOD : POST
2019-04-08 11:14:50 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 11:14:50 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@6abc5423]
2019-04-08 11:14:50 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 11:14:50 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 11:14:50 -<==      Total: 3
2019-04-08 11:14:50 -耗时 : 4
2019-04-08 11:14:50 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@2986f4df, com.bootdo.moneyList.damain.MoneyListDO@309f368c, com.bootdo.moneyList.damain.MoneyListDO@388a61f0]
2019-04-08 11:15:20 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 11:15:20 -HTTP METHOD : POST
2019-04-08 11:15:20 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 11:15:20 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@39e06da3]
2019-04-08 11:15:20 -==>  Preparing: update water set water_sum = water_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 11:15:20 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 11:15:20 -<==    Updates: 0
2019-04-08 11:15:20 -耗时 : 5
2019-04-08 11:15:20 -返回值 : 2
2019-04-08 11:15:21 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 11:15:21 -HTTP METHOD : POST
2019-04-08 11:15:21 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 11:15:21 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@7cda7b3a]
2019-04-08 11:15:21 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 11:15:21 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 11:15:21 -<==      Total: 3
2019-04-08 11:15:21 -耗时 : 4
2019-04-08 11:15:21 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@5c5a2fb, com.bootdo.moneyList.damain.MoneyListDO@75298056, com.bootdo.moneyList.damain.MoneyListDO@5a853662]
2019-04-08 11:17:20 -请求地址 : http://localhost:8081/index
2019-04-08 11:17:20 -HTTP METHOD : GET
2019-04-08 11:17:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 11:17:20 -参数 : [{}]
2019-04-08 11:17:20 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 11:17:20 -==> Parameters: 1(Long)
2019-04-08 11:17:20 -<==      Total: 46
2019-04-08 11:17:20 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 11:17:20 -==> Parameters: 138(Long)
2019-04-08 11:17:20 -<==      Total: 1
2019-04-08 11:17:20 -耗时 : 25
2019-04-08 11:17:20 -返回值 : index_v1
2019-04-08 11:17:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 11:17:20 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 26(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 11:17:20.919(Timestamp)
2019-04-08 11:17:21 -<==    Updates: 1
2019-04-08 11:17:21 -请求地址 : http://localhost:8081/main
2019-04-08 11:17:21 -HTTP METHOD : GET
2019-04-08 11:17:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 11:17:21 -参数 : []
2019-04-08 11:17:21 -耗时 : 0
2019-04-08 11:17:21 -返回值 : main
2019-04-08 11:17:21 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 11:17:21 -HTTP METHOD : GET
2019-04-08 11:17:21 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 11:17:21 -参数 : []
2019-04-08 11:17:21 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 11:17:21 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 11:17:21 -<==      Total: 0
2019-04-08 11:17:21 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 11:17:21 -==> Parameters: 1(Long), 0(String)
2019-04-08 11:17:21 -<==      Total: 1
2019-04-08 11:17:21 -耗时 : 9
2019-04-08 11:17:21 -返回值 : com.bootdo.common.utils.PageUtils@28f3d53e
2019-04-08 11:17:21 -请求地址 : http://localhost:8081/main
2019-04-08 11:17:21 -HTTP METHOD : GET
2019-04-08 11:17:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 11:17:21 -参数 : []
2019-04-08 11:17:21 -耗时 : 0
2019-04-08 11:17:21 -返回值 : main
2019-04-08 11:17:23 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 11:17:23 -HTTP METHOD : GET
2019-04-08 11:17:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 11:17:23 -参数 : []
2019-04-08 11:17:23 -耗时 : 1
2019-04-08 11:17:23 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 11:17:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 11:17:23 -HTTP METHOD : GET
2019-04-08 11:17:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 11:17:23 -参数 : [userType]
2019-04-08 11:17:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 11:17:23 -==> Parameters: userType(String)
2019-04-08 11:17:23 -<==      Total: 2
2019-04-08 11:17:23 -耗时 : 3
2019-04-08 11:17:23 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 11:17:23 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 11:17:23 -HTTP METHOD : GET
2019-04-08 11:17:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 11:17:23 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 11:17:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 11:17:23 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 11:17:23 -<==      Total: 8
2019-04-08 11:17:23 -==>  Preparing: select count(*) from elec_log 
2019-04-08 11:17:23 -==> Parameters: 
2019-04-08 11:17:23 -<==      Total: 1
2019-04-08 11:17:23 -耗时 : 61
2019-04-08 11:17:23 -返回值 : com.bootdo.common.utils.PageUtils@55cbd18a
2019-04-08 11:17:24 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 11:17:24 -HTTP METHOD : GET
2019-04-08 11:17:24 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 11:17:24 -参数 : []
2019-04-08 11:17:24 -耗时 : 0
2019-04-08 11:17:24 -返回值 : /moneyList/moneyList
2019-04-08 11:17:43 -请求地址 : http://localhost:8081/index
2019-04-08 11:17:43 -HTTP METHOD : GET
2019-04-08 11:17:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 11:17:43 -参数 : [{}]
2019-04-08 11:17:43 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 11:17:43 -==> Parameters: 1(Long)
2019-04-08 11:17:43 -<==      Total: 46
2019-04-08 11:17:43 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 11:17:43 -==> Parameters: 138(Long)
2019-04-08 11:17:43 -<==      Total: 1
2019-04-08 11:17:43 -耗时 : 24
2019-04-08 11:17:43 -返回值 : index_v1
2019-04-08 11:17:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 11:17:43 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 11:17:43.818(Timestamp)
2019-04-08 11:17:43 -请求地址 : http://localhost:8081/main
2019-04-08 11:17:43 -HTTP METHOD : GET
2019-04-08 11:17:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 11:17:43 -参数 : []
2019-04-08 11:17:43 -耗时 : 2
2019-04-08 11:17:43 -返回值 : main
2019-04-08 11:17:43 -<==    Updates: 1
2019-04-08 11:17:44 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 11:17:44 -HTTP METHOD : GET
2019-04-08 11:17:44 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 11:17:44 -参数 : []
2019-04-08 11:17:44 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 11:17:44 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 11:17:44 -<==      Total: 0
2019-04-08 11:17:44 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 11:17:44 -==> Parameters: 1(Long), 0(String)
2019-04-08 11:17:44 -<==      Total: 1
2019-04-08 11:17:44 -耗时 : 6
2019-04-08 11:17:44 -返回值 : com.bootdo.common.utils.PageUtils@6428c55c
2019-04-08 11:17:44 -请求地址 : http://localhost:8081/main
2019-04-08 11:17:44 -HTTP METHOD : GET
2019-04-08 11:17:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 11:17:44 -参数 : []
2019-04-08 11:17:44 -耗时 : 0
2019-04-08 11:17:44 -返回值 : main
2019-04-08 11:17:46 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 11:17:46 -HTTP METHOD : GET
2019-04-08 11:17:46 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 11:17:46 -参数 : []
2019-04-08 11:17:46 -耗时 : 0
2019-04-08 11:17:46 -返回值 : /moneyList/moneyList
2019-04-08 11:18:33 -请求地址 : http://localhost:8081/index
2019-04-08 11:18:33 -HTTP METHOD : GET
2019-04-08 11:18:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 11:18:33 -参数 : [{}]
2019-04-08 11:18:33 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 11:18:33 -==> Parameters: 1(Long)
2019-04-08 11:18:33 -<==      Total: 46
2019-04-08 11:18:33 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 11:18:33 -==> Parameters: 138(Long)
2019-04-08 11:18:33 -<==      Total: 1
2019-04-08 11:18:33 -耗时 : 27
2019-04-08 11:18:33 -返回值 : index_v1
2019-04-08 11:18:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 11:18:33 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 11:18:33.777(Timestamp)
2019-04-08 11:18:33 -<==    Updates: 1
2019-04-08 11:18:34 -请求地址 : http://localhost:8081/main
2019-04-08 11:18:34 -HTTP METHOD : GET
2019-04-08 11:18:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 11:18:34 -参数 : []
2019-04-08 11:18:34 -耗时 : 0
2019-04-08 11:18:34 -返回值 : main
2019-04-08 11:18:34 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 11:18:34 -HTTP METHOD : GET
2019-04-08 11:18:34 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 11:18:34 -参数 : []
2019-04-08 11:18:34 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 11:18:34 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 11:18:34 -<==      Total: 0
2019-04-08 11:18:34 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 11:18:34 -==> Parameters: 1(Long), 0(String)
2019-04-08 11:18:34 -<==      Total: 1
2019-04-08 11:18:34 -耗时 : 7
2019-04-08 11:18:34 -返回值 : com.bootdo.common.utils.PageUtils@73beec1d
2019-04-08 11:18:34 -请求地址 : http://localhost:8081/main
2019-04-08 11:18:34 -HTTP METHOD : GET
2019-04-08 11:18:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 11:18:34 -参数 : []
2019-04-08 11:18:34 -耗时 : 0
2019-04-08 11:18:34 -返回值 : main
2019-04-08 11:18:36 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 11:18:36 -HTTP METHOD : GET
2019-04-08 11:18:36 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 11:18:36 -参数 : []
2019-04-08 11:18:36 -耗时 : 1
2019-04-08 11:18:36 -返回值 : /moneyList/moneyList
2019-04-08 11:18:37 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 11:18:37 -HTTP METHOD : GET
2019-04-08 11:18:37 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 11:18:37 -参数 : []
2019-04-08 11:18:37 -耗时 : 1
2019-04-08 11:18:37 -返回值 : system/dept/deptTree
2019-04-08 11:18:37 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 11:18:37 -HTTP METHOD : GET
2019-04-08 11:18:37 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 11:18:37 -参数 : []
2019-04-08 11:18:37 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 11:18:37 -==> Parameters: 
2019-04-08 11:18:37 -<==      Total: 3
2019-04-08 11:18:37 -耗时 : 4
2019-04-08 11:18:37 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 11:18:43 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 11:18:43 -HTTP METHOD : GET
2019-04-08 11:18:43 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 11:18:43 -参数 : []
2019-04-08 11:18:43 -耗时 : 0
2019-04-08 11:18:43 -返回值 : system/dept/deptTree
2019-04-08 11:18:44 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 11:18:44 -HTTP METHOD : GET
2019-04-08 11:18:44 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 11:18:44 -参数 : []
2019-04-08 11:18:44 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 11:18:44 -==> Parameters: 
2019-04-08 11:18:44 -<==      Total: 3
2019-04-08 11:18:44 -耗时 : 8
2019-04-08 11:18:44 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 11:18:53 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 11:18:53 -HTTP METHOD : POST
2019-04-08 11:18:53 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 11:18:53 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@5cefe918]
2019-04-08 11:18:53 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 11:18:53 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 11:18:53 -<==      Total: 3
2019-04-08 11:18:53 -耗时 : 5
2019-04-08 11:18:53 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@731610c5, com.bootdo.moneyList.damain.MoneyListDO@8343395, com.bootdo.moneyList.damain.MoneyListDO@2b30aca2]
2019-04-08 11:19:08 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 11:19:08 -HTTP METHOD : POST
2019-04-08 11:19:08 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 11:19:08 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@3de2efda]
2019-04-08 11:19:08 -==>  Preparing: update heat set heat_sum = heat_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 11:19:08 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 11:19:08 -<==    Updates: 1
2019-04-08 11:19:08 -耗时 : 142
2019-04-08 11:19:08 -返回值 : 1
2019-04-08 11:19:10 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 11:19:10 -HTTP METHOD : POST
2019-04-08 11:19:10 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 11:19:10 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@2911c911]
2019-04-08 11:19:10 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 11:19:10 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 11:19:10 -<==      Total: 3
2019-04-08 11:19:10 -耗时 : 6
2019-04-08 11:19:10 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@51c4f5ce, com.bootdo.moneyList.damain.MoneyListDO@4f808ff9, com.bootdo.moneyList.damain.MoneyListDO@68fe9e59]
2019-04-08 11:19:59 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 11:19:59 -HTTP METHOD : POST
2019-04-08 11:19:59 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 11:19:59 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@7a8ffd28]
2019-04-08 11:19:59 -==>  Preparing: update heat set heat_sum = heat_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 11:19:59 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 11:19:59 -<==    Updates: 1
2019-04-08 11:19:59 -耗时 : 94
2019-04-08 11:19:59 -返回值 : 1
2019-04-08 11:20:01 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 11:20:01 -HTTP METHOD : POST
2019-04-08 11:20:01 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 11:20:01 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@39ba2436]
2019-04-08 11:20:01 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 11:20:01 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 11:20:01 -<==      Total: 3
2019-04-08 11:20:01 -耗时 : 6
2019-04-08 11:20:01 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@2e4ab61b, com.bootdo.moneyList.damain.MoneyListDO@3eb5c59f, com.bootdo.moneyList.damain.MoneyListDO@56c6ddeb]
2019-04-08 11:20:32 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 11:20:32 -HTTP METHOD : POST
2019-04-08 11:20:32 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 11:20:32 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@24d68ea2]
2019-04-08 11:20:32 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 11:20:32 -==> Parameters: 0000000000(String), 2019-02(String), 1-0001(String)
2019-04-08 11:20:32 -<==    Updates: 1
2019-04-08 11:20:32 -耗时 : 4
2019-04-08 11:20:32 -返回值 : 0
2019-04-08 11:20:34 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 11:20:34 -HTTP METHOD : POST
2019-04-08 11:20:34 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 11:20:34 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@ba0987c]
2019-04-08 11:20:34 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 11:20:34 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 11:20:34 -<==      Total: 3
2019-04-08 11:20:34 -耗时 : 4
2019-04-08 11:20:34 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@61f20bf5, com.bootdo.moneyList.damain.MoneyListDO@4f09eed5, com.bootdo.moneyList.damain.MoneyListDO@4065ec30]
2019-04-08 11:20:56 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 11:20:56 -HTTP METHOD : POST
2019-04-08 11:20:56 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 11:20:56 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@60ef8712]
2019-04-08 11:20:56 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 11:20:56 -==> Parameters: 111.77(String), 2019-02(String), 1-0001(String)
2019-04-08 11:20:56 -<==    Updates: 1
2019-04-08 11:20:56 -耗时 : 74
2019-04-08 11:20:56 -返回值 : 0
2019-04-08 11:20:57 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 11:20:57 -HTTP METHOD : POST
2019-04-08 11:20:57 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 11:20:57 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@6c11d3a7]
2019-04-08 11:20:57 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 11:20:57 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 11:20:57 -<==      Total: 3
2019-04-08 11:20:57 -耗时 : 7
2019-04-08 11:20:57 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@51399a81, com.bootdo.moneyList.damain.MoneyListDO@4da9daa9, com.bootdo.moneyList.damain.MoneyListDO@2fc7b450]
2019-04-08 11:21:38 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 11:21:38 -HTTP METHOD : POST
2019-04-08 11:21:38 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 11:21:38 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@3231a1f7]
2019-04-08 11:21:38 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 11:21:38 -==> Parameters: 0000000000(String), 2019-02(String), 1-0001(String)
2019-04-08 11:21:38 -<==    Updates: 1
2019-04-08 11:21:38 -耗时 : 6
2019-04-08 11:21:38 -返回值 : 0
2019-04-08 11:21:40 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 11:21:40 -HTTP METHOD : POST
2019-04-08 11:21:40 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 11:21:40 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@150cfe52]
2019-04-08 11:21:40 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 11:21:40 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 11:21:40 -<==      Total: 3
2019-04-08 11:21:40 -耗时 : 4
2019-04-08 11:21:40 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@7e04c1f5, com.bootdo.moneyList.damain.MoneyListDO@1e4d725b, com.bootdo.moneyList.damain.MoneyListDO@6c41f1ae]
2019-04-08 11:28:08 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 9 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(9)-CONNECTED(9)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 105], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 17], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 436]
2019-04-08 11:30:22 -请求地址 : http://localhost:8081/index
2019-04-08 11:30:22 -HTTP METHOD : GET
2019-04-08 11:30:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 11:30:22 -参数 : [{}]
2019-04-08 11:30:22 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 11:30:22 -==> Parameters: 1(Long)
2019-04-08 11:30:22 -<==      Total: 46
2019-04-08 11:30:22 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 11:30:22 -==> Parameters: 138(Long)
2019-04-08 11:30:22 -<==      Total: 1
2019-04-08 11:30:22 -耗时 : 32
2019-04-08 11:30:22 -返回值 : index_v1
2019-04-08 11:30:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 11:30:22 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 33(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 11:30:22.642(Timestamp)
2019-04-08 11:30:22 -请求地址 : http://localhost:8081/main
2019-04-08 11:30:22 -HTTP METHOD : GET
2019-04-08 11:30:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 11:30:22 -参数 : []
2019-04-08 11:30:22 -耗时 : 1
2019-04-08 11:30:22 -返回值 : main
2019-04-08 11:30:22 -<==    Updates: 1
2019-04-08 11:30:23 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 11:30:23 -HTTP METHOD : GET
2019-04-08 11:30:23 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 11:30:23 -参数 : []
2019-04-08 11:30:23 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 11:30:23 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 11:30:23 -<==      Total: 0
2019-04-08 11:30:23 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 11:30:23 -==> Parameters: 1(Long), 0(String)
2019-04-08 11:30:23 -<==      Total: 1
2019-04-08 11:30:23 -耗时 : 8
2019-04-08 11:30:23 -返回值 : com.bootdo.common.utils.PageUtils@213f6f90
2019-04-08 11:30:23 -请求地址 : http://localhost:8081/main
2019-04-08 11:30:23 -HTTP METHOD : GET
2019-04-08 11:30:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 11:30:23 -参数 : []
2019-04-08 11:30:23 -耗时 : 0
2019-04-08 11:30:23 -返回值 : main
2019-04-08 11:30:24 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-08 11:30:24 -==> Parameters: 1(Long)
2019-04-08 11:30:24 -<==      Total: 90
2019-04-08 11:30:24 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 11:30:24 -HTTP METHOD : GET
2019-04-08 11:30:24 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 11:30:24 -参数 : []
2019-04-08 11:30:24 -耗时 : 0
2019-04-08 11:30:24 -返回值 : /moneyList/moneyList
2019-04-08 11:30:30 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 11:30:30 -HTTP METHOD : GET
2019-04-08 11:30:30 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 11:30:30 -参数 : []
2019-04-08 11:30:30 -耗时 : 1
2019-04-08 11:30:30 -返回值 : system/dept/deptTree
2019-04-08 11:30:30 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 11:30:30 -HTTP METHOD : GET
2019-04-08 11:30:30 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 11:30:30 -参数 : []
2019-04-08 11:30:30 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 11:30:30 -==> Parameters: 
2019-04-08 11:30:30 -<==      Total: 3
2019-04-08 11:30:30 -耗时 : 5
2019-04-08 11:30:30 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 11:30:35 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 11:30:35 -HTTP METHOD : POST
2019-04-08 11:30:35 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 11:30:35 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@7e04185d]
2019-04-08 11:30:35 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 11:30:35 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 11:30:35 -<==      Total: 3
2019-04-08 11:30:35 -耗时 : 19
2019-04-08 11:30:35 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@3bfc6457, com.bootdo.moneyList.damain.MoneyListDO@6686b79f, com.bootdo.moneyList.damain.MoneyListDO@381e8de2]
2019-04-08 11:30:40 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 11:30:40 -HTTP METHOD : POST
2019-04-08 11:30:40 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 11:30:40 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@3ca4695a]
2019-04-08 11:30:40 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 11:30:40 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 11:30:40 -<==    Updates: 1
2019-04-08 11:30:40 -耗时 : 187
2019-04-08 11:30:40 -返回值 : 0
2019-04-08 11:30:41 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 11:30:41 -HTTP METHOD : POST
2019-04-08 11:30:41 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 11:30:41 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@1113692b]
2019-04-08 11:30:41 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 11:30:41 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 11:30:41 -<==      Total: 3
2019-04-08 11:30:41 -耗时 : 5
2019-04-08 11:30:41 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@462e503, com.bootdo.moneyList.damain.MoneyListDO@367a8b36, com.bootdo.moneyList.damain.MoneyListDO@3c2af6e3]
2019-04-08 11:32:39 -请求地址 : http://localhost:8081/index
2019-04-08 11:32:39 -HTTP METHOD : GET
2019-04-08 11:32:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 11:32:39 -参数 : [{}]
2019-04-08 11:32:39 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 11:32:39 -==> Parameters: 1(Long)
2019-04-08 11:32:39 -<==      Total: 46
2019-04-08 11:32:39 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 11:32:39 -==> Parameters: 138(Long)
2019-04-08 11:32:39 -<==      Total: 1
2019-04-08 11:32:39 -耗时 : 27
2019-04-08 11:32:39 -返回值 : index_v1
2019-04-08 11:32:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 11:32:39 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 11:32:39.204(Timestamp)
2019-04-08 11:32:39 -请求地址 : http://localhost:8081/main
2019-04-08 11:32:39 -HTTP METHOD : GET
2019-04-08 11:32:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 11:32:39 -参数 : []
2019-04-08 11:32:39 -耗时 : 1
2019-04-08 11:32:39 -返回值 : main
2019-04-08 11:32:39 -<==    Updates: 1
2019-04-08 11:32:39 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 11:32:39 -HTTP METHOD : GET
2019-04-08 11:32:39 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 11:32:39 -参数 : []
2019-04-08 11:32:39 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 11:32:39 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 11:32:39 -<==      Total: 0
2019-04-08 11:32:39 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 11:32:39 -==> Parameters: 1(Long), 0(String)
2019-04-08 11:32:39 -<==      Total: 1
2019-04-08 11:32:39 -耗时 : 8
2019-04-08 11:32:39 -返回值 : com.bootdo.common.utils.PageUtils@5eb1f880
2019-04-08 11:32:39 -请求地址 : http://localhost:8081/main
2019-04-08 11:32:39 -HTTP METHOD : GET
2019-04-08 11:32:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 11:32:39 -参数 : []
2019-04-08 11:32:39 -耗时 : 0
2019-04-08 11:32:39 -返回值 : main
2019-04-08 11:32:41 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 11:32:41 -HTTP METHOD : GET
2019-04-08 11:32:41 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 11:32:41 -参数 : []
2019-04-08 11:32:41 -耗时 : 1
2019-04-08 11:32:41 -返回值 : /moneyList/moneyList
2019-04-08 11:32:46 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 11:32:46 -HTTP METHOD : GET
2019-04-08 11:32:46 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 11:32:46 -参数 : []
2019-04-08 11:32:46 -耗时 : 1
2019-04-08 11:32:46 -返回值 : system/dept/deptTree
2019-04-08 11:32:46 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 11:32:46 -HTTP METHOD : GET
2019-04-08 11:32:46 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 11:32:46 -参数 : []
2019-04-08 11:32:46 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 11:32:46 -==> Parameters: 
2019-04-08 11:32:46 -<==      Total: 3
2019-04-08 11:32:46 -耗时 : 5
2019-04-08 11:32:46 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 11:32:52 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 11:32:52 -HTTP METHOD : POST
2019-04-08 11:32:52 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 11:32:52 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@fe035bc]
2019-04-08 11:32:52 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 11:32:52 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 11:32:52 -<==      Total: 3
2019-04-08 11:32:52 -耗时 : 6
2019-04-08 11:32:52 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@16afa4f0, com.bootdo.moneyList.damain.MoneyListDO@7326dbaa, com.bootdo.moneyList.damain.MoneyListDO@7d654da7]
2019-04-08 11:32:56 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 11:32:56 -HTTP METHOD : POST
2019-04-08 11:32:56 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 11:32:56 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@c6085b6]
2019-04-08 11:32:56 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 11:32:56 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 11:32:56 -<==    Updates: 1
2019-04-08 11:32:56 -耗时 : 45
2019-04-08 11:32:56 -返回值 : 0
2019-04-08 11:32:57 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 11:32:57 -HTTP METHOD : POST
2019-04-08 11:32:57 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 11:32:57 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@6d318cb4]
2019-04-08 11:32:57 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 11:32:57 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 11:32:57 -<==      Total: 3
2019-04-08 11:32:57 -耗时 : 4
2019-04-08 11:32:57 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@533283ba, com.bootdo.moneyList.damain.MoneyListDO@58636ea6, com.bootdo.moneyList.damain.MoneyListDO@39d61d32]
2019-04-08 11:33:07 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 11:33:07 -HTTP METHOD : POST
2019-04-08 11:33:07 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 11:33:07 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@714ad8c0]
2019-04-08 11:33:07 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 11:33:07 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 11:33:08 -<==    Updates: 1
2019-04-08 11:33:08 -耗时 : 145
2019-04-08 11:33:08 -返回值 : 0
2019-04-08 11:33:09 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 11:33:09 -HTTP METHOD : POST
2019-04-08 11:33:09 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 11:33:09 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@42ca394d]
2019-04-08 11:33:09 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 11:33:09 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 11:33:09 -<==      Total: 3
2019-04-08 11:33:09 -耗时 : 5
2019-04-08 11:33:09 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@731fc0e4, com.bootdo.moneyList.damain.MoneyListDO@2972bc7e, com.bootdo.moneyList.damain.MoneyListDO@3a61e84c]
2019-04-08 11:33:52 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 11:33:52 -HTTP METHOD : POST
2019-04-08 11:33:52 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 11:33:52 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@387c7772]
2019-04-08 11:33:52 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 11:33:52 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 11:33:52 -<==    Updates: 1
2019-04-08 11:33:52 -耗时 : 50
2019-04-08 11:33:52 -返回值 : 0
2019-04-08 11:33:53 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 11:33:53 -HTTP METHOD : POST
2019-04-08 11:33:53 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 11:33:53 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@4a56dd25]
2019-04-08 11:33:53 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 11:33:53 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 11:33:53 -<==      Total: 3
2019-04-08 11:33:53 -耗时 : 3
2019-04-08 11:33:53 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@7ac4deac, com.bootdo.moneyList.damain.MoneyListDO@c7fea33, com.bootdo.moneyList.damain.MoneyListDO@703cb16c]
2019-04-08 11:34:02 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 11:34:02 -HTTP METHOD : POST
2019-04-08 11:34:02 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 11:34:02 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@74f17e64]
2019-04-08 11:34:02 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 11:34:02 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 11:34:02 -<==    Updates: 1
2019-04-08 11:34:02 -耗时 : 117
2019-04-08 11:34:02 -返回值 : 0
2019-04-08 11:34:03 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 11:34:03 -HTTP METHOD : POST
2019-04-08 11:34:03 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 11:34:03 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@3a7345fb]
2019-04-08 11:34:03 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 11:34:03 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 11:34:03 -<==      Total: 3
2019-04-08 11:34:03 -耗时 : 5
2019-04-08 11:34:03 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@39f660fb, com.bootdo.moneyList.damain.MoneyListDO@d640f85, com.bootdo.moneyList.damain.MoneyListDO@2d18cf4f]
2019-04-08 11:38:14 -请求地址 : http://localhost:8081/index
2019-04-08 11:38:14 -HTTP METHOD : GET
2019-04-08 11:38:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 11:38:14 -参数 : [{}]
2019-04-08 11:38:14 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 11:38:14 -==> Parameters: 1(Long)
2019-04-08 11:38:14 -<==      Total: 46
2019-04-08 11:38:14 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 11:38:14 -==> Parameters: 138(Long)
2019-04-08 11:38:14 -<==      Total: 1
2019-04-08 11:38:14 -耗时 : 32
2019-04-08 11:38:14 -返回值 : index_v1
2019-04-08 11:38:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 11:38:14 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 32(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 11:38:14.964(Timestamp)
2019-04-08 11:38:15 -请求地址 : http://localhost:8081/main
2019-04-08 11:38:15 -HTTP METHOD : GET
2019-04-08 11:38:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 11:38:15 -参数 : []
2019-04-08 11:38:15 -耗时 : 1
2019-04-08 11:38:15 -返回值 : main
2019-04-08 11:38:15 -<==    Updates: 1
2019-04-08 11:38:15 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 11:38:15 -HTTP METHOD : GET
2019-04-08 11:38:15 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 11:38:15 -参数 : []
2019-04-08 11:38:15 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 11:38:15 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 11:38:15 -<==      Total: 0
2019-04-08 11:38:15 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 11:38:15 -==> Parameters: 1(Long), 0(String)
2019-04-08 11:38:15 -<==      Total: 1
2019-04-08 11:38:15 -耗时 : 7
2019-04-08 11:38:15 -返回值 : com.bootdo.common.utils.PageUtils@141d4530
2019-04-08 11:38:15 -请求地址 : http://localhost:8081/main
2019-04-08 11:38:15 -HTTP METHOD : GET
2019-04-08 11:38:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 11:38:15 -参数 : []
2019-04-08 11:38:15 -耗时 : 0
2019-04-08 11:38:15 -返回值 : main
2019-04-08 11:38:17 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 11:38:17 -HTTP METHOD : GET
2019-04-08 11:38:17 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 11:38:17 -参数 : []
2019-04-08 11:38:17 -耗时 : 0
2019-04-08 11:38:17 -返回值 : /moneyList/moneyList
2019-04-08 11:38:21 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 11:38:21 -HTTP METHOD : GET
2019-04-08 11:38:21 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 11:38:21 -参数 : []
2019-04-08 11:38:21 -耗时 : 1
2019-04-08 11:38:21 -返回值 : system/dept/deptTree
2019-04-08 11:38:22 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 11:38:22 -HTTP METHOD : GET
2019-04-08 11:38:22 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 11:38:22 -参数 : []
2019-04-08 11:38:22 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 11:38:22 -==> Parameters: 
2019-04-08 11:38:22 -<==      Total: 3
2019-04-08 11:38:22 -耗时 : 3
2019-04-08 11:38:22 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 11:38:27 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 11:38:27 -HTTP METHOD : POST
2019-04-08 11:38:27 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 11:38:27 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@6fc29bc6]
2019-04-08 11:38:27 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 11:38:27 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 11:38:27 -<==      Total: 3
2019-04-08 11:38:27 -耗时 : 4
2019-04-08 11:38:27 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@6a176038, com.bootdo.moneyList.damain.MoneyListDO@76051a52, com.bootdo.moneyList.damain.MoneyListDO@d62a3ff]
2019-04-08 11:38:32 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 11:38:32 -HTTP METHOD : POST
2019-04-08 11:38:32 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 11:38:32 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@779efdff]
2019-04-08 11:38:32 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 11:38:32 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 11:38:32 -<==    Updates: 1
2019-04-08 11:38:32 -耗时 : 107
2019-04-08 11:38:32 -返回值 : 0
2019-04-08 11:38:33 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 11:38:33 -HTTP METHOD : POST
2019-04-08 11:38:33 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 11:38:33 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@5d93748]
2019-04-08 11:38:33 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 11:38:33 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 11:38:33 -<==      Total: 3
2019-04-08 11:38:33 -耗时 : 5
2019-04-08 11:38:33 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@15df4f5c, com.bootdo.moneyList.damain.MoneyListDO@33ddddbf, com.bootdo.moneyList.damain.MoneyListDO@7ff2dffb]
2019-04-08 11:39:02 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 11:39:02 -HTTP METHOD : POST
2019-04-08 11:39:02 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 11:39:02 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@44444382]
2019-04-08 11:39:02 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 11:39:02 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 11:39:02 -<==    Updates: 1
2019-04-08 11:39:02 -耗时 : 92
2019-04-08 11:39:02 -返回值 : 0
2019-04-08 11:39:03 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 11:39:03 -HTTP METHOD : POST
2019-04-08 11:39:03 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 11:39:03 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@39129576]
2019-04-08 11:39:03 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 11:39:03 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 11:39:03 -<==      Total: 3
2019-04-08 11:39:03 -耗时 : 8
2019-04-08 11:39:03 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@2cccb0eb, com.bootdo.moneyList.damain.MoneyListDO@509616b9, com.bootdo.moneyList.damain.MoneyListDO@7d8290f8]
2019-04-08 11:40:31 -请求地址 : http://localhost:8081/index
2019-04-08 11:40:31 -HTTP METHOD : GET
2019-04-08 11:40:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 11:40:31 -参数 : [{}]
2019-04-08 11:40:31 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 11:40:31 -==> Parameters: 1(Long)
2019-04-08 11:40:31 -<==      Total: 46
2019-04-08 11:40:31 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 11:40:31 -==> Parameters: 138(Long)
2019-04-08 11:40:31 -<==      Total: 1
2019-04-08 11:40:31 -耗时 : 20
2019-04-08 11:40:31 -返回值 : index_v1
2019-04-08 11:40:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 11:40:31 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 20(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 11:40:31.559(Timestamp)
2019-04-08 11:40:31 -请求地址 : http://localhost:8081/main
2019-04-08 11:40:31 -HTTP METHOD : GET
2019-04-08 11:40:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 11:40:31 -参数 : []
2019-04-08 11:40:31 -耗时 : 3
2019-04-08 11:40:31 -返回值 : main
2019-04-08 11:40:31 -<==    Updates: 1
2019-04-08 11:40:32 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 11:40:32 -HTTP METHOD : GET
2019-04-08 11:40:32 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 11:40:32 -参数 : []
2019-04-08 11:40:32 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 11:40:32 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 11:40:32 -<==      Total: 0
2019-04-08 11:40:32 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 11:40:32 -==> Parameters: 1(Long), 0(String)
2019-04-08 11:40:32 -<==      Total: 1
2019-04-08 11:40:32 -耗时 : 9
2019-04-08 11:40:32 -返回值 : com.bootdo.common.utils.PageUtils@693d70b0
2019-04-08 11:40:32 -请求地址 : http://localhost:8081/main
2019-04-08 11:40:32 -HTTP METHOD : GET
2019-04-08 11:40:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 11:40:32 -参数 : []
2019-04-08 11:40:32 -耗时 : 0
2019-04-08 11:40:32 -返回值 : main
2019-04-08 11:40:33 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-08 11:40:33 -==> Parameters: 1(Long)
2019-04-08 11:40:33 -<==      Total: 90
2019-04-08 11:40:33 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 11:40:33 -HTTP METHOD : GET
2019-04-08 11:40:33 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 11:40:33 -参数 : []
2019-04-08 11:40:33 -耗时 : 0
2019-04-08 11:40:33 -返回值 : /moneyList/moneyList
2019-04-08 11:40:38 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 11:40:38 -HTTP METHOD : GET
2019-04-08 11:40:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 11:40:38 -参数 : []
2019-04-08 11:40:38 -耗时 : 0
2019-04-08 11:40:38 -返回值 : system/dept/deptTree
2019-04-08 11:40:38 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 11:40:38 -HTTP METHOD : GET
2019-04-08 11:40:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 11:40:38 -参数 : []
2019-04-08 11:40:38 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 11:40:38 -==> Parameters: 
2019-04-08 11:40:38 -<==      Total: 3
2019-04-08 11:40:38 -耗时 : 3
2019-04-08 11:40:38 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 11:40:41 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 11:40:41 -HTTP METHOD : POST
2019-04-08 11:40:41 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 11:40:41 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@72866004]
2019-04-08 11:40:41 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 11:40:41 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 11:40:41 -<==      Total: 3
2019-04-08 11:40:41 -耗时 : 4
2019-04-08 11:40:41 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@7ba6b1e, com.bootdo.moneyList.damain.MoneyListDO@790df7ab, com.bootdo.moneyList.damain.MoneyListDO@384a3ece]
2019-04-08 11:40:44 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 11:40:44 -HTTP METHOD : POST
2019-04-08 11:40:44 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 11:40:44 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@5dc7ef94]
2019-04-08 11:40:44 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 11:40:44 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 11:40:44 -<==    Updates: 1
2019-04-08 11:40:44 -耗时 : 107
2019-04-08 11:40:44 -返回值 : 0
2019-04-08 11:40:45 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 11:40:45 -HTTP METHOD : POST
2019-04-08 11:40:45 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 11:40:45 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@35a0d071]
2019-04-08 11:40:45 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 11:40:45 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 11:40:45 -<==      Total: 3
2019-04-08 11:40:45 -耗时 : 4
2019-04-08 11:40:45 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@3021e4c7, com.bootdo.moneyList.damain.MoneyListDO@848ff7f, com.bootdo.moneyList.damain.MoneyListDO@3bd8855f]
2019-04-08 11:40:51 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 11:40:51 -HTTP METHOD : POST
2019-04-08 11:40:51 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 11:40:51 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@7d545fbd]
2019-04-08 11:40:51 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 11:40:51 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 11:40:51 -<==    Updates: 1
2019-04-08 11:40:51 -耗时 : 122
2019-04-08 11:40:51 -返回值 : 0
2019-04-08 11:40:52 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 11:40:52 -HTTP METHOD : POST
2019-04-08 11:40:52 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 11:40:52 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@7882854f]
2019-04-08 11:40:52 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 11:40:52 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 11:40:52 -<==      Total: 3
2019-04-08 11:40:52 -耗时 : 7
2019-04-08 11:40:52 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@30a76602, com.bootdo.moneyList.damain.MoneyListDO@584b26b0, com.bootdo.moneyList.damain.MoneyListDO@340f680b]
2019-04-08 11:40:59 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 11:40:59 -HTTP METHOD : POST
2019-04-08 11:40:59 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 11:40:59 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@112c5e25]
2019-04-08 11:40:59 -==>  Preparing: update heat set heat_sum = heat_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 11:40:59 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 11:40:59 -<==    Updates: 1
2019-04-08 11:40:59 -耗时 : 24
2019-04-08 11:40:59 -返回值 : 1
2019-04-08 11:41:01 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 11:41:01 -HTTP METHOD : POST
2019-04-08 11:41:01 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 11:41:01 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@3d93217d]
2019-04-08 11:41:01 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 11:41:01 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 11:41:01 -<==      Total: 3
2019-04-08 11:41:01 -耗时 : 3
2019-04-08 11:41:01 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@68073137, com.bootdo.moneyList.damain.MoneyListDO@3e26cbbe, com.bootdo.moneyList.damain.MoneyListDO@1a9a8dce]
2019-04-08 11:41:06 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 11:41:06 -HTTP METHOD : POST
2019-04-08 11:41:06 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 11:41:06 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@36967d0d]
2019-04-08 11:41:06 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 11:41:06 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 11:41:06 -<==    Updates: 1
2019-04-08 11:41:06 -耗时 : 135
2019-04-08 11:41:06 -返回值 : 0
2019-04-08 11:41:07 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 11:41:07 -HTTP METHOD : POST
2019-04-08 11:41:07 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 11:41:07 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@4e0930d4]
2019-04-08 11:41:07 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 11:41:07 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 11:41:07 -<==      Total: 3
2019-04-08 11:41:07 -耗时 : 5
2019-04-08 11:41:07 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@22cf4e65, com.bootdo.moneyList.damain.MoneyListDO@14703775, com.bootdo.moneyList.damain.MoneyListDO@13f82abf]
2019-04-08 11:42:06 -请求地址 : http://localhost:8081/index
2019-04-08 11:42:06 -HTTP METHOD : GET
2019-04-08 11:42:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 11:42:06 -参数 : [{}]
2019-04-08 11:42:06 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 11:42:06 -==> Parameters: 1(Long)
2019-04-08 11:42:06 -<==      Total: 46
2019-04-08 11:42:06 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 11:42:06 -==> Parameters: 138(Long)
2019-04-08 11:42:06 -<==      Total: 1
2019-04-08 11:42:06 -耗时 : 24
2019-04-08 11:42:06 -返回值 : index_v1
2019-04-08 11:42:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 11:42:06 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 11:42:06.857(Timestamp)
2019-04-08 11:42:07 -请求地址 : http://localhost:8081/main
2019-04-08 11:42:07 -HTTP METHOD : GET
2019-04-08 11:42:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 11:42:07 -参数 : []
2019-04-08 11:42:07 -耗时 : 0
2019-04-08 11:42:07 -返回值 : main
2019-04-08 11:42:07 -<==    Updates: 1
2019-04-08 11:42:07 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 11:42:07 -HTTP METHOD : GET
2019-04-08 11:42:07 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 11:42:07 -参数 : []
2019-04-08 11:42:07 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 11:42:07 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 11:42:07 -<==      Total: 0
2019-04-08 11:42:07 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 11:42:07 -==> Parameters: 1(Long), 0(String)
2019-04-08 11:42:07 -<==      Total: 1
2019-04-08 11:42:07 -耗时 : 8
2019-04-08 11:42:07 -返回值 : com.bootdo.common.utils.PageUtils@46c6765e
2019-04-08 11:42:07 -请求地址 : http://localhost:8081/main
2019-04-08 11:42:07 -HTTP METHOD : GET
2019-04-08 11:42:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 11:42:07 -参数 : []
2019-04-08 11:42:07 -耗时 : 0
2019-04-08 11:42:07 -返回值 : main
2019-04-08 11:42:08 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 11:42:08 -HTTP METHOD : GET
2019-04-08 11:42:08 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 11:42:08 -参数 : []
2019-04-08 11:42:08 -耗时 : 0
2019-04-08 11:42:08 -返回值 : /moneyList/moneyList
2019-04-08 11:42:13 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 11:42:13 -HTTP METHOD : GET
2019-04-08 11:42:13 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 11:42:13 -参数 : []
2019-04-08 11:42:13 -耗时 : 0
2019-04-08 11:42:13 -返回值 : system/dept/deptTree
2019-04-08 11:42:13 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 11:42:13 -HTTP METHOD : GET
2019-04-08 11:42:13 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 11:42:13 -参数 : []
2019-04-08 11:42:13 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 11:42:13 -==> Parameters: 
2019-04-08 11:42:13 -<==      Total: 3
2019-04-08 11:42:13 -耗时 : 4
2019-04-08 11:42:13 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 11:42:15 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 11:42:15 -HTTP METHOD : POST
2019-04-08 11:42:15 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 11:42:15 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@474d13a4]
2019-04-08 11:42:15 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 11:42:15 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 11:42:15 -<==      Total: 3
2019-04-08 11:42:15 -耗时 : 4
2019-04-08 11:42:15 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@2d0d86c3, com.bootdo.moneyList.damain.MoneyListDO@15c95f2a, com.bootdo.moneyList.damain.MoneyListDO@3a36ae04]
2019-04-08 11:42:17 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 11:42:17 -HTTP METHOD : POST
2019-04-08 11:42:17 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 11:42:17 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@1cdc31f3]
2019-04-08 11:42:17 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 11:42:17 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 11:42:18 -<==    Updates: 1
2019-04-08 11:42:18 -耗时 : 95
2019-04-08 11:42:18 -返回值 : 0
2019-04-08 11:42:19 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 11:42:19 -HTTP METHOD : POST
2019-04-08 11:42:19 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 11:42:19 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@76d9f6b]
2019-04-08 11:42:19 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 11:42:19 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 11:42:19 -<==      Total: 3
2019-04-08 11:42:19 -耗时 : 5
2019-04-08 11:42:19 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@7dd6ad4f, com.bootdo.moneyList.damain.MoneyListDO@2ba5357a, com.bootdo.moneyList.damain.MoneyListDO@405871a2]
2019-04-08 11:42:23 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 11:42:23 -HTTP METHOD : POST
2019-04-08 11:42:23 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 11:42:23 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@2b6b5f6f]
2019-04-08 11:42:23 -==>  Preparing: update heat set heat_sum = heat_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 11:42:23 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 11:42:24 -<==    Updates: 1
2019-04-08 11:42:24 -耗时 : 36
2019-04-08 11:42:24 -返回值 : 1
2019-04-08 11:42:25 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 11:42:25 -HTTP METHOD : POST
2019-04-08 11:42:25 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 11:42:25 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@340fd7c0]
2019-04-08 11:42:25 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 11:42:25 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 11:42:25 -<==      Total: 3
2019-04-08 11:42:25 -耗时 : 3
2019-04-08 11:42:25 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@3d7338d0, com.bootdo.moneyList.damain.MoneyListDO@7061f25c, com.bootdo.moneyList.damain.MoneyListDO@3a1a9a47]
2019-04-08 11:42:28 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 11:42:28 -HTTP METHOD : POST
2019-04-08 11:42:28 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 11:42:28 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@6bcaa877]
2019-04-08 11:42:28 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 11:42:28 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 11:42:28 -<==    Updates: 1
2019-04-08 11:42:28 -耗时 : 23
2019-04-08 11:42:28 -返回值 : 0
2019-04-08 11:42:29 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 11:42:29 -HTTP METHOD : POST
2019-04-08 11:42:29 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 11:42:29 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@32b4df55]
2019-04-08 11:42:29 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 11:42:29 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 11:42:29 -<==      Total: 3
2019-04-08 11:42:29 -耗时 : 6
2019-04-08 11:42:29 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@2bbe1ff9, com.bootdo.moneyList.damain.MoneyListDO@6d431708, com.bootdo.moneyList.damain.MoneyListDO@79992382]
2019-04-08 11:42:35 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 11:42:35 -HTTP METHOD : POST
2019-04-08 11:42:35 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 11:42:35 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@37aec915]
2019-04-08 11:42:35 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 11:42:35 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 11:42:35 -<==    Updates: 1
2019-04-08 11:42:35 -耗时 : 78
2019-04-08 11:42:35 -返回值 : 0
2019-04-08 11:42:36 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 11:42:36 -HTTP METHOD : POST
2019-04-08 11:42:36 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 11:42:36 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@75288c5]
2019-04-08 11:42:36 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 11:42:36 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 11:42:36 -<==      Total: 3
2019-04-08 11:42:36 -耗时 : 6
2019-04-08 11:42:36 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@19470a82, com.bootdo.moneyList.damain.MoneyListDO@160ed120, com.bootdo.moneyList.damain.MoneyListDO@5097784]
2019-04-08 11:57:23 -Validating all active sessions...
2019-04-08 11:57:23 -Finished session validation.  [1] sessions were stopped.
2019-04-08 11:58:08 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 14 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(14)-CONNECTED(14)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 165], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 27], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 867]
2019-04-08 12:30:05 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 14 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(14)-CONNECTED(14)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 165], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 27], sockJsScheduler[pool size = 4, active threads = 2, queued tasks = 0, completed tasks = 1089]
2019-04-08 12:58:08 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 14 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(14)-CONNECTED(14)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 165], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 27], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1694]
2019-04-08 13:14:00 -Validating all active sessions...
2019-04-08 13:14:00 -Finished session validation.  [1] sessions were stopped.
2019-04-08 13:28:08 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 14 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(14)-CONNECTED(14)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 165], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 27], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2127]
2019-04-08 13:57:23 -Validating all active sessions...
2019-04-08 13:57:23 -Finished session validation.  No sessions were stopped.
2019-04-08 13:58:08 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 14 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(14)-CONNECTED(14)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 165], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 27], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2560]
2019-04-08 14:00:00 -请求地址 : http://localhost:8081/login;JSESSIONID=85e08463-ce59-4304-b7e3-66e4c3bbbdf6
2019-04-08 14:00:00 -HTTP METHOD : GET
2019-04-08 14:00:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-08 14:00:00 -参数 : [{}]
2019-04-08 14:00:00 -耗时 : 1
2019-04-08 14:00:00 -返回值 : login
2019-04-08 14:00:00 -请求地址 : http://localhost:8081/getVerify
2019-04-08 14:00:00 -HTTP METHOD : GET
2019-04-08 14:00:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-08 14:00:00 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@6b043088, org.apache.shiro.web.servlet.ShiroHttpServletResponse@72ce83dd]
2019-04-08 14:00:00 -3488
2019-04-08 14:00:00 -耗时 : 29
2019-04-08 14:00:00 -返回值 : null
2019-04-08 14:00:06 -请求地址 : http://localhost:8081/login
2019-04-08 14:00:06 -HTTP METHOD : POST
2019-04-08 14:00:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-08 14:00:06 -参数 : [admin, 111111, 3488, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2de472a4]
2019-04-08 14:00:06 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-08 14:00:06 -==> Parameters: admin(String)
2019-04-08 14:00:06 -<==      Total: 1
2019-04-08 14:00:06 -耗时 : 36
2019-04-08 14:00:06 -返回值 : {msg=操作成功, code=0}
2019-04-08 14:00:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 14:00:07 -==> Parameters: 1(Long), admin(String), 登录(String), 37(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-08 14:00:07.0(Timestamp)
2019-04-08 14:00:07 -请求地址 : http://localhost:8081/index
2019-04-08 14:00:07 -HTTP METHOD : GET
2019-04-08 14:00:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 14:00:07 -参数 : [{}]
2019-04-08 14:00:07 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 14:00:07 -==> Parameters: 1(Long)
2019-04-08 14:00:07 -<==      Total: 46
2019-04-08 14:00:07 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 14:00:07 -==> Parameters: 138(Long)
2019-04-08 14:00:07 -<==      Total: 1
2019-04-08 14:00:07 -耗时 : 37
2019-04-08 14:00:07 -返回值 : index_v1
2019-04-08 14:00:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 14:00:07 -<==    Updates: 1
2019-04-08 14:00:07 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 38(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 14:00:07.065(Timestamp)
2019-04-08 14:00:07 -请求地址 : http://localhost:8081/main
2019-04-08 14:00:07 -HTTP METHOD : GET
2019-04-08 14:00:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 14:00:07 -参数 : []
2019-04-08 14:00:07 -耗时 : 1
2019-04-08 14:00:07 -返回值 : main
2019-04-08 14:00:07 -<==    Updates: 1
2019-04-08 14:00:07 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 14:00:07 -HTTP METHOD : GET
2019-04-08 14:00:07 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 14:00:07 -参数 : []
2019-04-08 14:00:07 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 14:00:07 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 14:00:07 -<==      Total: 0
2019-04-08 14:00:07 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 14:00:07 -==> Parameters: 1(Long), 0(String)
2019-04-08 14:00:07 -<==      Total: 1
2019-04-08 14:00:07 -耗时 : 8
2019-04-08 14:00:07 -返回值 : com.bootdo.common.utils.PageUtils@24c617d1
2019-04-08 14:00:07 -请求地址 : http://localhost:8081/main
2019-04-08 14:00:07 -HTTP METHOD : GET
2019-04-08 14:00:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 14:00:07 -参数 : []
2019-04-08 14:00:07 -耗时 : 1
2019-04-08 14:00:07 -返回值 : main
2019-04-08 14:00:12 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-08 14:00:12 -==> Parameters: 1(Long)
2019-04-08 14:00:12 -<==      Total: 90
2019-04-08 14:00:12 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 14:00:12 -HTTP METHOD : GET
2019-04-08 14:00:12 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 14:00:12 -参数 : []
2019-04-08 14:00:12 -耗时 : 0
2019-04-08 14:00:12 -返回值 : /moneyList/moneyList
2019-04-08 14:00:18 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 14:00:18 -HTTP METHOD : GET
2019-04-08 14:00:18 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 14:00:18 -参数 : []
2019-04-08 14:00:18 -耗时 : 1
2019-04-08 14:00:18 -返回值 : system/dept/deptTree
2019-04-08 14:00:18 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 14:00:18 -HTTP METHOD : GET
2019-04-08 14:00:18 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 14:00:18 -参数 : []
2019-04-08 14:00:18 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 14:00:18 -==> Parameters: 
2019-04-08 14:00:18 -<==      Total: 3
2019-04-08 14:00:18 -耗时 : 4
2019-04-08 14:00:18 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 14:00:21 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 14:00:21 -HTTP METHOD : POST
2019-04-08 14:00:21 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 14:00:21 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@5da4e864]
2019-04-08 14:00:21 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 14:00:21 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 14:00:21 -<==      Total: 3
2019-04-08 14:00:21 -耗时 : 4
2019-04-08 14:00:21 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@75e65963, com.bootdo.moneyList.damain.MoneyListDO@8a88cc9, com.bootdo.moneyList.damain.MoneyListDO@7235b270]
2019-04-08 14:00:27 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 14:00:27 -HTTP METHOD : POST
2019-04-08 14:00:27 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 14:00:27 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@61a566c8]
2019-04-08 14:00:27 -==>  Preparing: update heat set heat_sum = heat_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 14:00:27 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 14:00:27 -<==    Updates: 1
2019-04-08 14:00:27 -耗时 : 96
2019-04-08 14:00:27 -返回值 : 1
2019-04-08 14:00:29 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 14:00:29 -HTTP METHOD : POST
2019-04-08 14:00:29 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 14:00:29 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@4e4c7b57]
2019-04-08 14:00:29 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 14:00:29 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 14:00:29 -<==      Total: 3
2019-04-08 14:00:29 -耗时 : 7
2019-04-08 14:00:29 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@650bd93, com.bootdo.moneyList.damain.MoneyListDO@5f1ab272, com.bootdo.moneyList.damain.MoneyListDO@72a1fc05]
2019-04-08 14:00:50 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 14:00:50 -HTTP METHOD : POST
2019-04-08 14:00:50 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 14:00:50 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@523a81ea]
2019-04-08 14:00:50 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 14:00:50 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 14:00:50 -<==    Updates: 1
2019-04-08 14:00:50 -耗时 : 176
2019-04-08 14:00:50 -返回值 : 0
2019-04-08 14:00:51 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 14:00:51 -HTTP METHOD : POST
2019-04-08 14:00:51 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 14:00:51 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@631c3133]
2019-04-08 14:00:51 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 14:00:51 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 14:00:51 -<==      Total: 3
2019-04-08 14:00:51 -耗时 : 4
2019-04-08 14:00:51 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@41204ada, com.bootdo.moneyList.damain.MoneyListDO@55ccb5b0, com.bootdo.moneyList.damain.MoneyListDO@57db8393]
2019-04-08 14:01:02 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 14:01:02 -HTTP METHOD : POST
2019-04-08 14:01:02 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 14:01:02 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@3e1eec42]
2019-04-08 14:01:02 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 14:01:02 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 14:01:02 -<==    Updates: 1
2019-04-08 14:01:02 -耗时 : 35
2019-04-08 14:01:02 -返回值 : 0
2019-04-08 14:01:04 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 14:01:04 -HTTP METHOD : POST
2019-04-08 14:01:04 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 14:01:04 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@7a1300ae]
2019-04-08 14:01:04 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 14:01:04 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 14:01:04 -<==      Total: 3
2019-04-08 14:01:04 -耗时 : 8
2019-04-08 14:01:04 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@63606413, com.bootdo.moneyList.damain.MoneyListDO@4381059f, com.bootdo.moneyList.damain.MoneyListDO@21756b31]
2019-04-08 14:01:37 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 14:01:37 -HTTP METHOD : POST
2019-04-08 14:01:37 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 14:01:37 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@28bc7ef2]
2019-04-08 14:01:37 -==>  Preparing: update heat set heat_sum = heat_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 14:01:37 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 14:01:37 -<==    Updates: 1
2019-04-08 14:01:37 -耗时 : 128
2019-04-08 14:01:37 -返回值 : 1
2019-04-08 14:01:38 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 14:01:38 -HTTP METHOD : POST
2019-04-08 14:01:38 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 14:01:38 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@5ca2ffe2]
2019-04-08 14:01:38 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 14:01:38 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 14:01:38 -<==      Total: 3
2019-04-08 14:01:38 -耗时 : 159
2019-04-08 14:01:38 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@551edd63, com.bootdo.moneyList.damain.MoneyListDO@28a24211, com.bootdo.moneyList.damain.MoneyListDO@6334e508]
2019-04-08 14:01:45 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 14:01:45 -HTTP METHOD : POST
2019-04-08 14:01:45 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 14:01:45 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@2e13e58f]
2019-04-08 14:01:45 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 14:01:45 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 14:01:45 -<==    Updates: 1
2019-04-08 14:01:45 -耗时 : 42
2019-04-08 14:01:45 -返回值 : 0
2019-04-08 14:01:47 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 14:01:47 -HTTP METHOD : POST
2019-04-08 14:01:47 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 14:01:47 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@60a916fb]
2019-04-08 14:01:47 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 14:01:47 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 14:01:47 -<==      Total: 3
2019-04-08 14:01:47 -耗时 : 3
2019-04-08 14:01:47 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@4c0ef0b4, com.bootdo.moneyList.damain.MoneyListDO@71ae095b, com.bootdo.moneyList.damain.MoneyListDO@5918c75b]
2019-04-08 14:02:25 -请求地址 : http://localhost:8081/index
2019-04-08 14:02:25 -HTTP METHOD : GET
2019-04-08 14:02:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 14:02:25 -参数 : [{}]
2019-04-08 14:02:25 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 14:02:25 -==> Parameters: 1(Long)
2019-04-08 14:02:25 -<==      Total: 46
2019-04-08 14:02:25 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 14:02:25 -==> Parameters: 138(Long)
2019-04-08 14:02:25 -<==      Total: 1
2019-04-08 14:02:25 -耗时 : 29
2019-04-08 14:02:25 -返回值 : index_v1
2019-04-08 14:02:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 14:02:25 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 14:02:25.653(Timestamp)
2019-04-08 14:02:25 -请求地址 : http://localhost:8081/main
2019-04-08 14:02:25 -HTTP METHOD : GET
2019-04-08 14:02:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 14:02:25 -参数 : []
2019-04-08 14:02:25 -耗时 : 1
2019-04-08 14:02:25 -返回值 : main
2019-04-08 14:02:25 -<==    Updates: 1
2019-04-08 14:02:26 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 14:02:26 -HTTP METHOD : GET
2019-04-08 14:02:26 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 14:02:26 -参数 : []
2019-04-08 14:02:26 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 14:02:26 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 14:02:26 -<==      Total: 0
2019-04-08 14:02:26 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 14:02:26 -==> Parameters: 1(Long), 0(String)
2019-04-08 14:02:26 -<==      Total: 1
2019-04-08 14:02:26 -耗时 : 7
2019-04-08 14:02:26 -返回值 : com.bootdo.common.utils.PageUtils@1863fc1e
2019-04-08 14:02:26 -请求地址 : http://localhost:8081/main
2019-04-08 14:02:26 -HTTP METHOD : GET
2019-04-08 14:02:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 14:02:26 -参数 : []
2019-04-08 14:02:26 -耗时 : 0
2019-04-08 14:02:26 -返回值 : main
2019-04-08 14:02:27 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 14:02:27 -HTTP METHOD : GET
2019-04-08 14:02:27 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 14:02:27 -参数 : []
2019-04-08 14:02:27 -耗时 : 0
2019-04-08 14:02:27 -返回值 : /moneyList/moneyList
2019-04-08 14:02:50 -请求地址 : http://localhost:8081/index
2019-04-08 14:02:50 -HTTP METHOD : GET
2019-04-08 14:02:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 14:02:50 -参数 : [{}]
2019-04-08 14:02:50 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 14:02:50 -==> Parameters: 1(Long)
2019-04-08 14:02:50 -<==      Total: 46
2019-04-08 14:02:50 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 14:02:50 -==> Parameters: 138(Long)
2019-04-08 14:02:50 -<==      Total: 1
2019-04-08 14:02:50 -耗时 : 26
2019-04-08 14:02:50 -返回值 : index_v1
2019-04-08 14:02:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 14:02:50 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 14:02:50.512(Timestamp)
2019-04-08 14:02:50 -<==    Updates: 1
2019-04-08 14:02:50 -请求地址 : http://localhost:8081/main
2019-04-08 14:02:50 -HTTP METHOD : GET
2019-04-08 14:02:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 14:02:50 -参数 : []
2019-04-08 14:02:50 -耗时 : 0
2019-04-08 14:02:50 -返回值 : main
2019-04-08 14:02:51 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 14:02:51 -HTTP METHOD : GET
2019-04-08 14:02:51 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 14:02:51 -参数 : []
2019-04-08 14:02:51 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 14:02:51 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 14:02:51 -<==      Total: 0
2019-04-08 14:02:51 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 14:02:51 -==> Parameters: 1(Long), 0(String)
2019-04-08 14:02:51 -<==      Total: 1
2019-04-08 14:02:51 -耗时 : 6
2019-04-08 14:02:51 -返回值 : com.bootdo.common.utils.PageUtils@4793c771
2019-04-08 14:02:51 -请求地址 : http://localhost:8081/main
2019-04-08 14:02:51 -HTTP METHOD : GET
2019-04-08 14:02:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 14:02:51 -参数 : []
2019-04-08 14:02:51 -耗时 : 1
2019-04-08 14:02:51 -返回值 : main
2019-04-08 14:02:52 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 14:02:52 -HTTP METHOD : GET
2019-04-08 14:02:52 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 14:02:52 -参数 : []
2019-04-08 14:02:52 -耗时 : 0
2019-04-08 14:02:52 -返回值 : /moneyList/moneyList
2019-04-08 14:02:54 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 14:02:54 -HTTP METHOD : GET
2019-04-08 14:02:54 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 14:02:54 -参数 : []
2019-04-08 14:02:54 -耗时 : 0
2019-04-08 14:02:54 -返回值 : system/dept/deptTree
2019-04-08 14:02:54 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 14:02:54 -HTTP METHOD : GET
2019-04-08 14:02:54 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 14:02:54 -参数 : []
2019-04-08 14:02:54 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 14:02:54 -==> Parameters: 
2019-04-08 14:02:54 -<==      Total: 3
2019-04-08 14:02:54 -耗时 : 3
2019-04-08 14:02:54 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 14:03:02 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 14:03:02 -HTTP METHOD : GET
2019-04-08 14:03:02 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 14:03:02 -参数 : []
2019-04-08 14:03:02 -耗时 : 1
2019-04-08 14:03:02 -返回值 : system/dept/deptTree
2019-04-08 14:03:03 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 14:03:03 -HTTP METHOD : GET
2019-04-08 14:03:03 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 14:03:03 -参数 : []
2019-04-08 14:03:03 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 14:03:03 -==> Parameters: 
2019-04-08 14:03:03 -<==      Total: 3
2019-04-08 14:03:03 -耗时 : 3
2019-04-08 14:03:03 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 14:03:05 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 14:03:05 -HTTP METHOD : POST
2019-04-08 14:03:05 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 14:03:05 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@49fa61ce]
2019-04-08 14:03:05 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 14:03:05 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 14:03:05 -<==      Total: 3
2019-04-08 14:03:05 -耗时 : 5
2019-04-08 14:03:05 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@7c704018, com.bootdo.moneyList.damain.MoneyListDO@15b26186, com.bootdo.moneyList.damain.MoneyListDO@f5c96ef]
2019-04-08 14:03:09 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 14:03:09 -HTTP METHOD : POST
2019-04-08 14:03:09 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 14:03:09 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@216c1567]
2019-04-08 14:03:09 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 14:03:09 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 14:03:09 -<==    Updates: 1
2019-04-08 14:03:09 -耗时 : 152
2019-04-08 14:03:09 -返回值 : 0
2019-04-08 14:03:10 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 14:03:10 -HTTP METHOD : POST
2019-04-08 14:03:10 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 14:03:10 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@23669d61]
2019-04-08 14:03:10 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 14:03:10 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 14:03:10 -<==      Total: 3
2019-04-08 14:03:10 -耗时 : 6
2019-04-08 14:03:10 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@678fa32a, com.bootdo.moneyList.damain.MoneyListDO@1e129ab, com.bootdo.moneyList.damain.MoneyListDO@167b2163]
2019-04-08 14:03:42 -请求地址 : http://localhost:8081/index
2019-04-08 14:03:42 -HTTP METHOD : GET
2019-04-08 14:03:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 14:03:42 -参数 : [{}]
2019-04-08 14:03:42 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 14:03:42 -==> Parameters: 1(Long)
2019-04-08 14:03:42 -<==      Total: 46
2019-04-08 14:03:42 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 14:03:42 -==> Parameters: 138(Long)
2019-04-08 14:03:42 -<==      Total: 1
2019-04-08 14:03:42 -耗时 : 27
2019-04-08 14:03:42 -返回值 : index_v1
2019-04-08 14:03:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 14:03:42 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 14:03:42.786(Timestamp)
2019-04-08 14:03:42 -<==    Updates: 1
2019-04-08 14:03:42 -请求地址 : http://localhost:8081/main
2019-04-08 14:03:42 -HTTP METHOD : GET
2019-04-08 14:03:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 14:03:42 -参数 : []
2019-04-08 14:03:42 -耗时 : 1
2019-04-08 14:03:42 -返回值 : main
2019-04-08 14:03:43 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 14:03:43 -HTTP METHOD : GET
2019-04-08 14:03:43 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 14:03:43 -参数 : []
2019-04-08 14:03:43 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 14:03:43 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 14:03:43 -<==      Total: 0
2019-04-08 14:03:43 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 14:03:43 -==> Parameters: 1(Long), 0(String)
2019-04-08 14:03:43 -<==      Total: 1
2019-04-08 14:03:43 -耗时 : 5
2019-04-08 14:03:43 -返回值 : com.bootdo.common.utils.PageUtils@8720f69
2019-04-08 14:03:43 -请求地址 : http://localhost:8081/main
2019-04-08 14:03:43 -HTTP METHOD : GET
2019-04-08 14:03:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 14:03:43 -参数 : []
2019-04-08 14:03:43 -耗时 : 0
2019-04-08 14:03:43 -返回值 : main
2019-04-08 14:03:45 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 14:03:45 -HTTP METHOD : GET
2019-04-08 14:03:45 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 14:03:45 -参数 : []
2019-04-08 14:03:45 -耗时 : 1
2019-04-08 14:03:45 -返回值 : /moneyList/moneyList
2019-04-08 14:03:55 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 14:03:55 -HTTP METHOD : GET
2019-04-08 14:03:55 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 14:03:55 -参数 : []
2019-04-08 14:03:55 -耗时 : 0
2019-04-08 14:03:55 -返回值 : system/dept/deptTree
2019-04-08 14:03:56 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 14:03:56 -HTTP METHOD : GET
2019-04-08 14:03:56 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 14:03:56 -参数 : []
2019-04-08 14:03:56 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 14:03:56 -==> Parameters: 
2019-04-08 14:03:56 -<==      Total: 3
2019-04-08 14:03:56 -耗时 : 3
2019-04-08 14:03:56 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 14:03:58 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 14:03:58 -HTTP METHOD : POST
2019-04-08 14:03:58 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 14:03:58 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@754cc48]
2019-04-08 14:03:58 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 14:03:58 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 14:03:58 -<==      Total: 3
2019-04-08 14:03:58 -耗时 : 5
2019-04-08 14:03:58 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@4ad9aa5, com.bootdo.moneyList.damain.MoneyListDO@14772295, com.bootdo.moneyList.damain.MoneyListDO@35608adf]
2019-04-08 14:04:02 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 14:04:02 -HTTP METHOD : POST
2019-04-08 14:04:02 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 14:04:02 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@70303e21]
2019-04-08 14:04:02 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 14:04:02 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 14:04:02 -<==    Updates: 1
2019-04-08 14:04:02 -耗时 : 30
2019-04-08 14:04:02 -返回值 : 0
2019-04-08 14:04:03 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 14:04:03 -HTTP METHOD : POST
2019-04-08 14:04:03 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 14:04:03 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@19f97c61]
2019-04-08 14:04:03 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 14:04:03 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 14:04:03 -<==      Total: 3
2019-04-08 14:04:03 -耗时 : 4
2019-04-08 14:04:03 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@4ca50a39, com.bootdo.moneyList.damain.MoneyListDO@7db6f68f, com.bootdo.moneyList.damain.MoneyListDO@2ffe972c]
2019-04-08 14:04:06 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 14:04:06 -HTTP METHOD : GET
2019-04-08 14:04:06 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 14:04:06 -参数 : []
2019-04-08 14:04:06 -耗时 : 1
2019-04-08 14:04:06 -返回值 : system/dept/deptTree
2019-04-08 14:04:06 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 14:04:06 -HTTP METHOD : GET
2019-04-08 14:04:06 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 14:04:06 -参数 : []
2019-04-08 14:04:06 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 14:04:06 -==> Parameters: 
2019-04-08 14:04:06 -<==      Total: 3
2019-04-08 14:04:06 -耗时 : 2
2019-04-08 14:04:06 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 14:04:08 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 14:04:08 -HTTP METHOD : GET
2019-04-08 14:04:08 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 14:04:08 -参数 : []
2019-04-08 14:04:08 -耗时 : 1
2019-04-08 14:04:08 -返回值 : system/dept/deptTree
2019-04-08 14:04:08 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 14:04:08 -HTTP METHOD : GET
2019-04-08 14:04:08 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 14:04:08 -参数 : []
2019-04-08 14:04:08 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 14:04:08 -==> Parameters: 
2019-04-08 14:04:08 -<==      Total: 3
2019-04-08 14:04:08 -耗时 : 3
2019-04-08 14:04:08 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 14:08:25 -请求地址 : http://localhost:8081/print/print
2019-04-08 14:08:25 -HTTP METHOD : GET
2019-04-08 14:08:25 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-08 14:08:25 -参数 : []
2019-04-08 14:08:25 -耗时 : 1
2019-04-08 14:08:25 -返回值 : print/print/print
2019-04-08 14:08:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 14:08:26 -HTTP METHOD : GET
2019-04-08 14:08:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 14:08:26 -参数 : [userType]
2019-04-08 14:08:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 14:08:26 -==> Parameters: userType(String)
2019-04-08 14:08:26 -<==      Total: 2
2019-04-08 14:08:26 -耗时 : 6
2019-04-08 14:08:26 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 14:08:26 -请求地址 : http://localhost:8081/print/print/list
2019-04-08 14:08:26 -HTTP METHOD : GET
2019-04-08 14:08:26 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-08 14:08:26 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-08 14:08:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-08 14:08:26 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 14:08:26 -<==      Total: 4
2019-04-08 14:08:26 -==>  Preparing: select count(*) from print 
2019-04-08 14:08:26 -==> Parameters: 
2019-04-08 14:08:26 -<==      Total: 1
2019-04-08 14:08:26 -耗时 : 79
2019-04-08 14:08:26 -返回值 : com.bootdo.common.utils.PageUtils@48d896f3
2019-04-08 14:08:27 -请求地址 : http://localhost:8081/print/print/printEdit/1
2019-04-08 14:08:27 -HTTP METHOD : GET
2019-04-08 14:08:27 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printEdit
2019-04-08 14:08:27 -参数 : [1, {}]
2019-04-08 14:08:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-04-08 14:08:27 -==> Parameters: 1(Long)
2019-04-08 14:08:27 -<==      Total: 1
2019-04-08 14:08:27 -耗时 : 6
2019-04-08 14:08:27 -返回值 : print/print/printEdit
2019-04-08 14:10:03 -请求地址 : http://localhost:8081/print/print/printEdit/1
2019-04-08 14:10:03 -HTTP METHOD : GET
2019-04-08 14:10:03 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printEdit
2019-04-08 14:10:03 -参数 : [1, {}]
2019-04-08 14:10:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-04-08 14:10:03 -==> Parameters: 1(Long)
2019-04-08 14:10:03 -<==      Total: 1
2019-04-08 14:10:03 -耗时 : 8
2019-04-08 14:10:03 -返回值 : print/print/printEdit
2019-04-08 14:10:14 -请求地址 : http://localhost:8081/index
2019-04-08 14:10:14 -HTTP METHOD : GET
2019-04-08 14:10:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 14:10:14 -参数 : [{}]
2019-04-08 14:10:14 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 14:10:14 -==> Parameters: 1(Long)
2019-04-08 14:10:14 -<==      Total: 46
2019-04-08 14:10:14 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 14:10:14 -==> Parameters: 138(Long)
2019-04-08 14:10:14 -<==      Total: 1
2019-04-08 14:10:14 -耗时 : 29
2019-04-08 14:10:14 -返回值 : index_v1
2019-04-08 14:10:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 14:10:14 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 14:10:14.185(Timestamp)
2019-04-08 14:10:14 -<==    Updates: 1
2019-04-08 14:10:14 -请求地址 : http://localhost:8081/main
2019-04-08 14:10:14 -HTTP METHOD : GET
2019-04-08 14:10:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 14:10:14 -参数 : []
2019-04-08 14:10:14 -耗时 : 0
2019-04-08 14:10:14 -返回值 : main
2019-04-08 14:10:14 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 14:10:14 -HTTP METHOD : GET
2019-04-08 14:10:14 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 14:10:14 -参数 : []
2019-04-08 14:10:14 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 14:10:14 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 14:10:14 -<==      Total: 0
2019-04-08 14:10:14 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 14:10:14 -==> Parameters: 1(Long), 0(String)
2019-04-08 14:10:14 -<==      Total: 1
2019-04-08 14:10:14 -耗时 : 6
2019-04-08 14:10:14 -返回值 : com.bootdo.common.utils.PageUtils@37b6b589
2019-04-08 14:10:14 -请求地址 : http://localhost:8081/main
2019-04-08 14:10:14 -HTTP METHOD : GET
2019-04-08 14:10:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 14:10:14 -参数 : []
2019-04-08 14:10:14 -耗时 : 0
2019-04-08 14:10:14 -返回值 : main
2019-04-08 14:10:16 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-08 14:10:16 -==> Parameters: 1(Long)
2019-04-08 14:10:16 -<==      Total: 90
2019-04-08 14:10:16 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 14:10:16 -HTTP METHOD : GET
2019-04-08 14:10:16 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 14:10:16 -参数 : []
2019-04-08 14:10:16 -耗时 : 1
2019-04-08 14:10:16 -返回值 : /moneyList/moneyList
2019-04-08 14:10:22 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 14:10:22 -HTTP METHOD : GET
2019-04-08 14:10:22 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 14:10:22 -参数 : []
2019-04-08 14:10:22 -耗时 : 1
2019-04-08 14:10:22 -返回值 : system/dept/deptTree
2019-04-08 14:10:22 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 14:10:22 -HTTP METHOD : GET
2019-04-08 14:10:22 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 14:10:22 -参数 : []
2019-04-08 14:10:22 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 14:10:22 -==> Parameters: 
2019-04-08 14:10:22 -<==      Total: 3
2019-04-08 14:10:22 -耗时 : 5
2019-04-08 14:10:22 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 14:10:24 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 14:10:24 -HTTP METHOD : POST
2019-04-08 14:10:24 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 14:10:24 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@29126d09]
2019-04-08 14:10:24 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 14:10:24 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 14:10:24 -<==      Total: 3
2019-04-08 14:10:24 -耗时 : 6
2019-04-08 14:10:24 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@7a1c7ab, com.bootdo.moneyList.damain.MoneyListDO@75e1a921, com.bootdo.moneyList.damain.MoneyListDO@4f21e8b1]
2019-04-08 14:10:28 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 14:10:28 -HTTP METHOD : POST
2019-04-08 14:10:28 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 14:10:28 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@14025fda]
2019-04-08 14:10:28 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 14:10:28 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 14:10:28 -<==    Updates: 1
2019-04-08 14:10:28 -耗时 : 54
2019-04-08 14:10:28 -返回值 : 0
2019-04-08 14:10:29 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 14:10:29 -HTTP METHOD : POST
2019-04-08 14:10:29 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 14:10:29 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@22cbfb00]
2019-04-08 14:10:29 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 14:10:29 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 14:10:29 -<==      Total: 3
2019-04-08 14:10:29 -耗时 : 4
2019-04-08 14:10:29 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@6ec6e9cf, com.bootdo.moneyList.damain.MoneyListDO@713e674f, com.bootdo.moneyList.damain.MoneyListDO@cd09193]
2019-04-08 14:10:50 -请求地址 : http://localhost:8081/index
2019-04-08 14:10:50 -HTTP METHOD : GET
2019-04-08 14:10:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 14:10:50 -参数 : [{}]
2019-04-08 14:10:50 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 14:10:50 -==> Parameters: 1(Long)
2019-04-08 14:10:50 -<==      Total: 46
2019-04-08 14:10:50 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 14:10:50 -==> Parameters: 138(Long)
2019-04-08 14:10:50 -<==      Total: 1
2019-04-08 14:10:50 -耗时 : 17
2019-04-08 14:10:50 -返回值 : index_v1
2019-04-08 14:10:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 14:10:50 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 14:10:50.801(Timestamp)
2019-04-08 14:10:50 -<==    Updates: 1
2019-04-08 14:10:50 -请求地址 : http://localhost:8081/main
2019-04-08 14:10:50 -HTTP METHOD : GET
2019-04-08 14:10:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 14:10:50 -参数 : []
2019-04-08 14:10:50 -耗时 : 1
2019-04-08 14:10:50 -返回值 : main
2019-04-08 14:10:51 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 14:10:51 -HTTP METHOD : GET
2019-04-08 14:10:51 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 14:10:51 -参数 : []
2019-04-08 14:10:51 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 14:10:51 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 14:10:51 -<==      Total: 0
2019-04-08 14:10:51 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 14:10:51 -==> Parameters: 1(Long), 0(String)
2019-04-08 14:10:51 -<==      Total: 1
2019-04-08 14:10:51 -耗时 : 8
2019-04-08 14:10:51 -返回值 : com.bootdo.common.utils.PageUtils@20620090
2019-04-08 14:10:51 -请求地址 : http://localhost:8081/main
2019-04-08 14:10:51 -HTTP METHOD : GET
2019-04-08 14:10:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 14:10:51 -参数 : []
2019-04-08 14:10:51 -耗时 : 1
2019-04-08 14:10:51 -返回值 : main
2019-04-08 14:10:54 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 14:10:54 -HTTP METHOD : GET
2019-04-08 14:10:54 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 14:10:54 -参数 : []
2019-04-08 14:10:54 -耗时 : 1
2019-04-08 14:10:54 -返回值 : /moneyList/moneyList
2019-04-08 14:11:00 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 14:11:00 -HTTP METHOD : GET
2019-04-08 14:11:00 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 14:11:00 -参数 : []
2019-04-08 14:11:00 -耗时 : 0
2019-04-08 14:11:00 -返回值 : system/dept/deptTree
2019-04-08 14:11:00 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 14:11:00 -HTTP METHOD : GET
2019-04-08 14:11:00 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 14:11:00 -参数 : []
2019-04-08 14:11:00 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 14:11:00 -==> Parameters: 
2019-04-08 14:11:00 -<==      Total: 3
2019-04-08 14:11:00 -耗时 : 4
2019-04-08 14:11:00 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 14:11:29 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 14:11:29 -HTTP METHOD : POST
2019-04-08 14:11:29 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 14:11:29 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@1a55e317]
2019-04-08 14:11:29 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 14:11:29 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 14:11:29 -<==      Total: 3
2019-04-08 14:11:29 -耗时 : 4
2019-04-08 14:11:29 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@6ca1e1dc, com.bootdo.moneyList.damain.MoneyListDO@40175598, com.bootdo.moneyList.damain.MoneyListDO@756f5bd6]
2019-04-08 14:11:33 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 14:11:33 -HTTP METHOD : POST
2019-04-08 14:11:33 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 14:11:33 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@65e8481f]
2019-04-08 14:11:33 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 14:11:33 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 14:11:33 -<==    Updates: 1
2019-04-08 14:11:33 -耗时 : 151
2019-04-08 14:11:33 -返回值 : 0
2019-04-08 14:11:47 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 14:11:47 -HTTP METHOD : POST
2019-04-08 14:11:47 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 14:11:47 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@82bc24b]
2019-04-08 14:11:47 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 14:11:47 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 14:11:47 -<==      Total: 3
2019-04-08 14:11:47 -耗时 : 6
2019-04-08 14:11:47 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@219bf56d, com.bootdo.moneyList.damain.MoneyListDO@23ab027b, com.bootdo.moneyList.damain.MoneyListDO@7544b5df]
2019-04-08 14:16:23 -请求地址 : http://localhost:8081/index
2019-04-08 14:16:23 -HTTP METHOD : GET
2019-04-08 14:16:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 14:16:23 -参数 : [{}]
2019-04-08 14:16:23 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 14:16:23 -==> Parameters: 1(Long)
2019-04-08 14:16:23 -<==      Total: 46
2019-04-08 14:16:23 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 14:16:23 -==> Parameters: 138(Long)
2019-04-08 14:16:23 -<==      Total: 1
2019-04-08 14:16:23 -耗时 : 19
2019-04-08 14:16:23 -返回值 : index_v1
2019-04-08 14:16:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 14:16:23 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 20(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 14:16:23.801(Timestamp)
2019-04-08 14:16:23 -<==    Updates: 1
2019-04-08 14:16:23 -请求地址 : http://localhost:8081/main
2019-04-08 14:16:23 -HTTP METHOD : GET
2019-04-08 14:16:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 14:16:23 -参数 : []
2019-04-08 14:16:23 -耗时 : 1
2019-04-08 14:16:23 -返回值 : main
2019-04-08 14:16:24 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 14:16:24 -HTTP METHOD : GET
2019-04-08 14:16:24 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 14:16:24 -参数 : []
2019-04-08 14:16:24 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 14:16:24 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 14:16:24 -<==      Total: 0
2019-04-08 14:16:24 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 14:16:24 -==> Parameters: 1(Long), 0(String)
2019-04-08 14:16:24 -<==      Total: 1
2019-04-08 14:16:24 -耗时 : 7
2019-04-08 14:16:24 -返回值 : com.bootdo.common.utils.PageUtils@6efb6390
2019-04-08 14:16:24 -请求地址 : http://localhost:8081/main
2019-04-08 14:16:24 -HTTP METHOD : GET
2019-04-08 14:16:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 14:16:24 -参数 : []
2019-04-08 14:16:24 -耗时 : 0
2019-04-08 14:16:24 -返回值 : main
2019-04-08 14:16:26 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 14:16:26 -HTTP METHOD : GET
2019-04-08 14:16:26 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 14:16:26 -参数 : []
2019-04-08 14:16:26 -耗时 : 1
2019-04-08 14:16:26 -返回值 : /moneyList/moneyList
2019-04-08 14:16:31 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 14:16:31 -HTTP METHOD : GET
2019-04-08 14:16:31 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 14:16:31 -参数 : []
2019-04-08 14:16:31 -耗时 : 0
2019-04-08 14:16:31 -返回值 : system/dept/deptTree
2019-04-08 14:16:31 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 14:16:31 -HTTP METHOD : GET
2019-04-08 14:16:31 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 14:16:31 -参数 : []
2019-04-08 14:16:31 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 14:16:31 -==> Parameters: 
2019-04-08 14:16:31 -<==      Total: 3
2019-04-08 14:16:31 -耗时 : 4
2019-04-08 14:16:31 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 14:18:05 -请求地址 : http://localhost:8081/index
2019-04-08 14:18:05 -HTTP METHOD : GET
2019-04-08 14:18:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 14:18:05 -参数 : [{}]
2019-04-08 14:18:05 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 14:18:05 -==> Parameters: 1(Long)
2019-04-08 14:18:05 -<==      Total: 46
2019-04-08 14:18:05 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 14:18:05 -==> Parameters: 138(Long)
2019-04-08 14:18:05 -<==      Total: 1
2019-04-08 14:18:05 -耗时 : 94
2019-04-08 14:18:05 -返回值 : index_v1
2019-04-08 14:18:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 14:18:05 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 94(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 14:18:05.273(Timestamp)
2019-04-08 14:18:05 -<==    Updates: 1
2019-04-08 14:18:05 -请求地址 : http://localhost:8081/main
2019-04-08 14:18:05 -HTTP METHOD : GET
2019-04-08 14:18:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 14:18:05 -参数 : []
2019-04-08 14:18:05 -耗时 : 1
2019-04-08 14:18:05 -返回值 : main
2019-04-08 14:18:05 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 14:18:05 -HTTP METHOD : GET
2019-04-08 14:18:05 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 14:18:05 -参数 : []
2019-04-08 14:18:05 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 14:18:05 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 14:18:05 -<==      Total: 0
2019-04-08 14:18:05 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 14:18:05 -==> Parameters: 1(Long), 0(String)
2019-04-08 14:18:05 -<==      Total: 1
2019-04-08 14:18:05 -耗时 : 7
2019-04-08 14:18:05 -返回值 : com.bootdo.common.utils.PageUtils@7869737
2019-04-08 14:18:05 -请求地址 : http://localhost:8081/main
2019-04-08 14:18:05 -HTTP METHOD : GET
2019-04-08 14:18:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 14:18:05 -参数 : []
2019-04-08 14:18:05 -耗时 : 0
2019-04-08 14:18:05 -返回值 : main
2019-04-08 14:18:07 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 14:18:07 -HTTP METHOD : GET
2019-04-08 14:18:07 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 14:18:07 -参数 : []
2019-04-08 14:18:07 -耗时 : 1
2019-04-08 14:18:07 -返回值 : /moneyList/moneyList
2019-04-08 14:18:12 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 14:18:12 -HTTP METHOD : GET
2019-04-08 14:18:12 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 14:18:12 -参数 : []
2019-04-08 14:18:12 -耗时 : 1
2019-04-08 14:18:12 -返回值 : system/dept/deptTree
2019-04-08 14:18:12 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 14:18:12 -HTTP METHOD : GET
2019-04-08 14:18:12 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 14:18:12 -参数 : []
2019-04-08 14:18:12 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 14:18:12 -==> Parameters: 
2019-04-08 14:18:12 -<==      Total: 3
2019-04-08 14:18:12 -耗时 : 3
2019-04-08 14:18:12 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 14:18:15 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 14:18:15 -HTTP METHOD : POST
2019-04-08 14:18:15 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 14:18:15 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@7806675f]
2019-04-08 14:18:15 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 14:18:15 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 14:18:15 -<==      Total: 3
2019-04-08 14:18:15 -耗时 : 4
2019-04-08 14:18:15 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@2982033b, com.bootdo.moneyList.damain.MoneyListDO@419a086d, com.bootdo.moneyList.damain.MoneyListDO@a6da39e]
2019-04-08 14:18:17 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 14:18:17 -HTTP METHOD : POST
2019-04-08 14:18:17 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 14:18:17 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@a9d66d7]
2019-04-08 14:18:17 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 14:18:17 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 14:18:17 -<==    Updates: 1
2019-04-08 14:18:17 -耗时 : 133
2019-04-08 14:18:17 -返回值 : 0
2019-04-08 14:18:19 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 14:18:19 -HTTP METHOD : POST
2019-04-08 14:18:19 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 14:18:19 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@753ad4be]
2019-04-08 14:18:19 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 14:18:19 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 14:18:19 -<==      Total: 3
2019-04-08 14:18:19 -耗时 : 4
2019-04-08 14:18:19 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@5d6d673c, com.bootdo.moneyList.damain.MoneyListDO@7b38d229, com.bootdo.moneyList.damain.MoneyListDO@588476d4]
2019-04-08 14:19:37 -请求地址 : http://localhost:8081/index
2019-04-08 14:19:37 -HTTP METHOD : GET
2019-04-08 14:19:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 14:19:37 -参数 : [{}]
2019-04-08 14:19:37 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 14:19:37 -==> Parameters: 1(Long)
2019-04-08 14:19:37 -<==      Total: 46
2019-04-08 14:19:37 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 14:19:37 -==> Parameters: 138(Long)
2019-04-08 14:19:37 -<==      Total: 1
2019-04-08 14:19:37 -耗时 : 60
2019-04-08 14:19:37 -返回值 : index_v1
2019-04-08 14:19:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 14:19:37 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 60(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 14:19:37.379(Timestamp)
2019-04-08 14:19:37 -<==    Updates: 1
2019-04-08 14:19:37 -请求地址 : http://localhost:8081/main
2019-04-08 14:19:37 -HTTP METHOD : GET
2019-04-08 14:19:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 14:19:37 -参数 : []
2019-04-08 14:19:37 -耗时 : 1
2019-04-08 14:19:37 -返回值 : main
2019-04-08 14:19:38 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 14:19:38 -HTTP METHOD : GET
2019-04-08 14:19:38 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 14:19:38 -参数 : []
2019-04-08 14:19:38 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 14:19:38 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 14:19:38 -<==      Total: 0
2019-04-08 14:19:38 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 14:19:38 -==> Parameters: 1(Long), 0(String)
2019-04-08 14:19:38 -<==      Total: 1
2019-04-08 14:19:38 -耗时 : 17
2019-04-08 14:19:38 -返回值 : com.bootdo.common.utils.PageUtils@70ae88ed
2019-04-08 14:19:38 -请求地址 : http://localhost:8081/main
2019-04-08 14:19:38 -HTTP METHOD : GET
2019-04-08 14:19:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 14:19:38 -参数 : []
2019-04-08 14:19:38 -耗时 : 0
2019-04-08 14:19:38 -返回值 : main
2019-04-08 14:19:39 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 14:19:39 -HTTP METHOD : GET
2019-04-08 14:19:39 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 14:19:39 -参数 : []
2019-04-08 14:19:39 -耗时 : 0
2019-04-08 14:19:39 -返回值 : /moneyList/moneyList
2019-04-08 14:19:44 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 14:19:44 -HTTP METHOD : GET
2019-04-08 14:19:44 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 14:19:44 -参数 : []
2019-04-08 14:19:44 -耗时 : 0
2019-04-08 14:19:44 -返回值 : system/dept/deptTree
2019-04-08 14:19:44 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 14:19:44 -HTTP METHOD : GET
2019-04-08 14:19:44 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 14:19:44 -参数 : []
2019-04-08 14:19:44 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 14:19:44 -==> Parameters: 
2019-04-08 14:19:44 -<==      Total: 3
2019-04-08 14:19:44 -耗时 : 7
2019-04-08 14:19:44 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 14:19:47 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 14:19:47 -HTTP METHOD : POST
2019-04-08 14:19:47 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 14:19:47 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@44922720]
2019-04-08 14:19:47 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 14:19:47 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 14:19:47 -<==      Total: 3
2019-04-08 14:19:47 -耗时 : 5
2019-04-08 14:19:47 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@2b37d028, com.bootdo.moneyList.damain.MoneyListDO@6e3e1ecb, com.bootdo.moneyList.damain.MoneyListDO@3b408f0b]
2019-04-08 14:19:50 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 14:19:50 -HTTP METHOD : POST
2019-04-08 14:19:50 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 14:19:50 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@2f4448f6]
2019-04-08 14:19:50 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 14:19:50 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 14:19:50 -<==    Updates: 1
2019-04-08 14:19:50 -耗时 : 110
2019-04-08 14:19:50 -返回值 : 0
2019-04-08 14:19:51 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 14:19:51 -HTTP METHOD : POST
2019-04-08 14:19:51 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 14:19:51 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@2227fefe]
2019-04-08 14:19:51 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 14:19:51 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 14:19:51 -<==      Total: 3
2019-04-08 14:19:51 -耗时 : 3
2019-04-08 14:19:51 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@2add7191, com.bootdo.moneyList.damain.MoneyListDO@21e15e4e, com.bootdo.moneyList.damain.MoneyListDO@3c2c8482]
2019-04-08 14:22:55 -请求地址 : http://localhost:8081/login;JSESSIONID=dcf67480-81bf-4078-9485-d4b5df4db730
2019-04-08 14:22:55 -HTTP METHOD : GET
2019-04-08 14:22:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-08 14:22:55 -参数 : [{}]
2019-04-08 14:22:55 -耗时 : 0
2019-04-08 14:22:55 -返回值 : login
2019-04-08 14:22:55 -请求地址 : http://localhost:8081/getVerify
2019-04-08 14:22:55 -HTTP METHOD : GET
2019-04-08 14:22:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-08 14:22:55 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@638dcfe8, org.apache.shiro.web.servlet.ShiroHttpServletResponse@607a62b6]
2019-04-08 14:22:55 -1468
2019-04-08 14:22:55 -耗时 : 73
2019-04-08 14:22:55 -返回值 : null
2019-04-08 14:22:56 -请求地址 : http://localhost:8081/login
2019-04-08 14:22:56 -HTTP METHOD : GET
2019-04-08 14:22:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-08 14:22:56 -参数 : [{}]
2019-04-08 14:22:56 -耗时 : 0
2019-04-08 14:22:56 -返回值 : login
2019-04-08 14:23:01 -请求地址 : http://localhost:8081/login
2019-04-08 14:23:01 -HTTP METHOD : POST
2019-04-08 14:23:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-08 14:23:01 -参数 : [admin, 111111, 1468, org.apache.shiro.web.servlet.ShiroHttpServletRequest@42244cb3]
2019-04-08 14:23:01 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-08 14:23:01 -==> Parameters: admin(String)
2019-04-08 14:23:01 -<==      Total: 1
2019-04-08 14:23:01 -耗时 : 34
2019-04-08 14:23:01 -返回值 : {msg=操作成功, code=0}
2019-04-08 14:23:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 14:23:01 -==> Parameters: 1(Long), admin(String), 登录(String), 35(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-08 14:23:01.443(Timestamp)
2019-04-08 14:23:01 -请求地址 : http://localhost:8081/index
2019-04-08 14:23:01 -HTTP METHOD : GET
2019-04-08 14:23:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 14:23:01 -参数 : [{}]
2019-04-08 14:23:01 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 14:23:01 -==> Parameters: 1(Long)
2019-04-08 14:23:01 -<==    Updates: 1
2019-04-08 14:23:01 -<==      Total: 46
2019-04-08 14:23:01 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 14:23:01 -==> Parameters: 138(Long)
2019-04-08 14:23:01 -<==      Total: 1
2019-04-08 14:23:01 -耗时 : 302
2019-04-08 14:23:01 -返回值 : index_v1
2019-04-08 14:23:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 14:23:01 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 302(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 14:23:01.833(Timestamp)
2019-04-08 14:23:01 -<==    Updates: 1
2019-04-08 14:23:02 -请求地址 : http://localhost:8081/main
2019-04-08 14:23:02 -HTTP METHOD : GET
2019-04-08 14:23:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 14:23:02 -参数 : []
2019-04-08 14:23:02 -耗时 : 2
2019-04-08 14:23:02 -返回值 : main
2019-04-08 14:23:03 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 14:23:03 -HTTP METHOD : GET
2019-04-08 14:23:03 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 14:23:03 -参数 : []
2019-04-08 14:23:03 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 14:23:03 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 14:23:03 -请求地址 : http://localhost:8081/main
2019-04-08 14:23:03 -HTTP METHOD : GET
2019-04-08 14:23:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 14:23:03 -参数 : []
2019-04-08 14:23:03 -耗时 : 1
2019-04-08 14:23:03 -返回值 : main
2019-04-08 14:23:03 -<==      Total: 0
2019-04-08 14:23:03 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 14:23:03 -==> Parameters: 1(Long), 0(String)
2019-04-08 14:23:03 -<==      Total: 1
2019-04-08 14:23:03 -耗时 : 320
2019-04-08 14:23:03 -返回值 : com.bootdo.common.utils.PageUtils@6d643277
2019-04-08 14:23:06 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-08 14:23:06 -==> Parameters: 1(Long)
2019-04-08 14:23:06 -<==      Total: 90
2019-04-08 14:23:06 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 14:23:06 -HTTP METHOD : GET
2019-04-08 14:23:06 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 14:23:06 -参数 : []
2019-04-08 14:23:06 -耗时 : 0
2019-04-08 14:23:06 -返回值 : /moneyList/moneyList
2019-04-08 14:23:12 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 14:23:12 -HTTP METHOD : GET
2019-04-08 14:23:12 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 14:23:12 -参数 : []
2019-04-08 14:23:12 -耗时 : 0
2019-04-08 14:23:12 -返回值 : system/dept/deptTree
2019-04-08 14:23:12 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 14:23:12 -HTTP METHOD : GET
2019-04-08 14:23:12 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 14:23:12 -参数 : []
2019-04-08 14:23:12 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 14:23:12 -==> Parameters: 
2019-04-08 14:23:12 -<==      Total: 3
2019-04-08 14:23:12 -耗时 : 4
2019-04-08 14:23:12 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 14:23:19 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 14:23:19 -HTTP METHOD : POST
2019-04-08 14:23:19 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 14:23:19 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@6def3989]
2019-04-08 14:23:19 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 14:23:19 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 14:23:19 -<==      Total: 3
2019-04-08 14:23:19 -耗时 : 41
2019-04-08 14:23:19 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@3a096f2d, com.bootdo.moneyList.damain.MoneyListDO@30e0e2f4, com.bootdo.moneyList.damain.MoneyListDO@2457a610]
2019-04-08 14:23:23 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 14:23:23 -HTTP METHOD : POST
2019-04-08 14:23:23 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 14:23:23 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@27a2136e]
2019-04-08 14:23:23 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 14:23:23 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 14:23:23 -<==    Updates: 1
2019-04-08 14:23:23 -耗时 : 53
2019-04-08 14:23:23 -返回值 : 0
2019-04-08 14:23:24 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 14:23:24 -HTTP METHOD : POST
2019-04-08 14:23:24 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 14:23:24 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@35f6a6cd]
2019-04-08 14:23:24 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 14:23:24 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 14:23:24 -<==      Total: 3
2019-04-08 14:23:24 -耗时 : 4
2019-04-08 14:23:24 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@65edccb8, com.bootdo.moneyList.damain.MoneyListDO@7e804184, com.bootdo.moneyList.damain.MoneyListDO@7e405057]
2019-04-08 14:28:08 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 24 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(24)-CONNECTED(24)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 285], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 47], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2987]
2019-04-08 14:31:47 -请求地址 : http://localhost:8081/index
2019-04-08 14:31:47 -HTTP METHOD : GET
2019-04-08 14:31:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 14:31:47 -参数 : [{}]
2019-04-08 14:31:47 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 14:31:47 -==> Parameters: 1(Long)
2019-04-08 14:31:47 -<==      Total: 46
2019-04-08 14:31:47 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 14:31:47 -==> Parameters: 138(Long)
2019-04-08 14:31:47 -<==      Total: 1
2019-04-08 14:31:47 -耗时 : 21
2019-04-08 14:31:47 -返回值 : index_v1
2019-04-08 14:31:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 14:31:47 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 14:31:47.625(Timestamp)
2019-04-08 14:31:48 -请求地址 : http://localhost:8081/main
2019-04-08 14:31:48 -HTTP METHOD : GET
2019-04-08 14:31:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 14:31:48 -参数 : []
2019-04-08 14:31:48 -耗时 : 1
2019-04-08 14:31:48 -返回值 : main
2019-04-08 14:31:48 -<==    Updates: 1
2019-04-08 14:31:49 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 14:31:49 -HTTP METHOD : GET
2019-04-08 14:31:49 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 14:31:49 -参数 : []
2019-04-08 14:31:49 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 14:31:49 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 14:31:49 -<==      Total: 0
2019-04-08 14:31:49 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 14:31:49 -==> Parameters: 1(Long), 0(String)
2019-04-08 14:31:49 -<==      Total: 1
2019-04-08 14:31:49 -耗时 : 27
2019-04-08 14:31:49 -返回值 : com.bootdo.common.utils.PageUtils@3649fe77
2019-04-08 14:31:49 -请求地址 : http://localhost:8081/main
2019-04-08 14:31:49 -HTTP METHOD : GET
2019-04-08 14:31:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 14:31:49 -参数 : []
2019-04-08 14:31:49 -耗时 : 2
2019-04-08 14:31:49 -返回值 : main
2019-04-08 14:31:51 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 14:31:51 -HTTP METHOD : GET
2019-04-08 14:31:51 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 14:31:51 -参数 : []
2019-04-08 14:31:51 -耗时 : 1
2019-04-08 14:31:51 -返回值 : /moneyList/moneyList
2019-04-08 14:31:56 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 14:31:56 -HTTP METHOD : GET
2019-04-08 14:31:56 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 14:31:56 -参数 : []
2019-04-08 14:31:56 -耗时 : 0
2019-04-08 14:31:56 -返回值 : system/dept/deptTree
2019-04-08 14:31:56 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 14:31:56 -HTTP METHOD : GET
2019-04-08 14:31:56 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 14:31:56 -参数 : []
2019-04-08 14:31:56 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 14:31:56 -==> Parameters: 
2019-04-08 14:31:56 -<==      Total: 3
2019-04-08 14:31:56 -耗时 : 19
2019-04-08 14:31:56 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 14:32:02 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 14:32:02 -HTTP METHOD : POST
2019-04-08 14:32:02 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 14:32:02 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@78ed22ac]
2019-04-08 14:32:02 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 14:32:02 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 14:32:02 -<==      Total: 3
2019-04-08 14:32:02 -耗时 : 8
2019-04-08 14:32:02 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@242605d9, com.bootdo.moneyList.damain.MoneyListDO@7ef33d43, com.bootdo.moneyList.damain.MoneyListDO@6f1a8873]
2019-04-08 14:32:09 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 14:32:09 -HTTP METHOD : POST
2019-04-08 14:32:09 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 14:32:09 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@2ca9d1fb]
2019-04-08 14:32:09 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 14:32:09 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 14:32:09 -<==    Updates: 1
2019-04-08 14:32:09 -耗时 : 48
2019-04-08 14:32:09 -返回值 : 0
2019-04-08 14:32:10 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 14:32:10 -HTTP METHOD : POST
2019-04-08 14:32:10 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 14:32:10 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@7f0aa84d]
2019-04-08 14:32:10 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 14:32:10 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 14:32:10 -<==      Total: 3
2019-04-08 14:32:10 -耗时 : 5
2019-04-08 14:32:10 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@140ad674, com.bootdo.moneyList.damain.MoneyListDO@50426618, com.bootdo.moneyList.damain.MoneyListDO@7aa0f49d]
2019-04-08 14:34:47 -请求地址 : http://localhost:8081/index
2019-04-08 14:34:47 -HTTP METHOD : GET
2019-04-08 14:34:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 14:34:47 -参数 : [{}]
2019-04-08 14:34:47 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 14:34:47 -==> Parameters: 1(Long)
2019-04-08 14:34:47 -<==      Total: 46
2019-04-08 14:34:47 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 14:34:47 -==> Parameters: 138(Long)
2019-04-08 14:34:47 -<==      Total: 1
2019-04-08 14:34:47 -耗时 : 58
2019-04-08 14:34:47 -返回值 : index_v1
2019-04-08 14:34:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 14:34:47 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 59(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 14:34:47.104(Timestamp)
2019-04-08 14:34:47 -<==    Updates: 1
2019-04-08 14:34:47 -请求地址 : http://localhost:8081/main
2019-04-08 14:34:47 -HTTP METHOD : GET
2019-04-08 14:34:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 14:34:47 -参数 : []
2019-04-08 14:34:47 -耗时 : 0
2019-04-08 14:34:47 -返回值 : main
2019-04-08 14:34:48 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 14:34:48 -HTTP METHOD : GET
2019-04-08 14:34:48 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 14:34:48 -参数 : []
2019-04-08 14:34:48 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 14:34:48 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 14:34:48 -<==      Total: 0
2019-04-08 14:34:48 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 14:34:48 -==> Parameters: 1(Long), 0(String)
2019-04-08 14:34:48 -<==      Total: 1
2019-04-08 14:34:48 -耗时 : 11
2019-04-08 14:34:48 -返回值 : com.bootdo.common.utils.PageUtils@70519842
2019-04-08 14:34:48 -请求地址 : http://localhost:8081/main
2019-04-08 14:34:48 -HTTP METHOD : GET
2019-04-08 14:34:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 14:34:48 -参数 : []
2019-04-08 14:34:48 -耗时 : 0
2019-04-08 14:34:48 -返回值 : main
2019-04-08 14:34:52 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-08 14:34:52 -==> Parameters: 1(Long)
2019-04-08 14:34:52 -<==      Total: 90
2019-04-08 14:34:52 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 14:34:52 -HTTP METHOD : GET
2019-04-08 14:34:52 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 14:34:52 -参数 : []
2019-04-08 14:34:52 -耗时 : 0
2019-04-08 14:34:52 -返回值 : /moneyList/moneyList
2019-04-08 14:34:57 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 14:34:57 -HTTP METHOD : GET
2019-04-08 14:34:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 14:34:57 -参数 : []
2019-04-08 14:34:57 -耗时 : 2
2019-04-08 14:34:57 -返回值 : system/dept/deptTree
2019-04-08 14:34:58 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 14:34:58 -HTTP METHOD : GET
2019-04-08 14:34:58 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 14:34:58 -参数 : []
2019-04-08 14:34:58 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 14:34:58 -==> Parameters: 
2019-04-08 14:34:58 -<==      Total: 3
2019-04-08 14:34:58 -耗时 : 4
2019-04-08 14:34:58 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 14:35:00 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 14:35:00 -HTTP METHOD : POST
2019-04-08 14:35:00 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 14:35:00 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@7e8581d6]
2019-04-08 14:35:00 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 14:35:00 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 14:35:00 -<==      Total: 3
2019-04-08 14:35:00 -耗时 : 8
2019-04-08 14:35:00 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@628acc14, com.bootdo.moneyList.damain.MoneyListDO@2ffa69e4, com.bootdo.moneyList.damain.MoneyListDO@7d23c6fc]
2019-04-08 14:35:03 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 14:35:03 -HTTP METHOD : POST
2019-04-08 14:35:03 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 14:35:03 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@38938cb]
2019-04-08 14:35:03 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 14:35:03 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 14:35:03 -<==    Updates: 1
2019-04-08 14:35:03 -耗时 : 121
2019-04-08 14:35:03 -返回值 : 0
2019-04-08 14:35:04 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 14:35:04 -HTTP METHOD : POST
2019-04-08 14:35:04 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 14:35:04 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@4f33d249]
2019-04-08 14:35:04 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 14:35:04 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 14:35:04 -<==      Total: 3
2019-04-08 14:35:04 -耗时 : 4
2019-04-08 14:35:04 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@7a153326, com.bootdo.moneyList.damain.MoneyListDO@56dd7ea, com.bootdo.moneyList.damain.MoneyListDO@541dec94]
2019-04-08 14:35:22 -请求地址 : http://localhost:8081/login;JSESSIONID=5da67933-2d73-4a36-89cd-ed143407140e
2019-04-08 14:35:22 -HTTP METHOD : GET
2019-04-08 14:35:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-08 14:35:22 -参数 : [{}]
2019-04-08 14:35:22 -耗时 : 4
2019-04-08 14:35:22 -返回值 : login
2019-04-08 14:35:23 -请求地址 : http://localhost:8081/getVerify
2019-04-08 14:35:23 -HTTP METHOD : GET
2019-04-08 14:35:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-08 14:35:23 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@3cf7bbbc, org.apache.shiro.web.servlet.ShiroHttpServletResponse@c1da900]
2019-04-08 14:35:23 -2644
2019-04-08 14:35:23 -耗时 : 44
2019-04-08 14:35:23 -返回值 : null
2019-04-08 14:35:23 -请求地址 : http://localhost:8081/login
2019-04-08 14:35:23 -HTTP METHOD : GET
2019-04-08 14:35:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-08 14:35:23 -参数 : [{}]
2019-04-08 14:35:23 -耗时 : 1
2019-04-08 14:35:23 -返回值 : login
2019-04-08 14:35:27 -请求地址 : http://localhost:8081/login
2019-04-08 14:35:27 -HTTP METHOD : POST
2019-04-08 14:35:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-08 14:35:27 -参数 : [admin, 111111, 2644, org.apache.shiro.web.servlet.ShiroHttpServletRequest@623cc9ec]
2019-04-08 14:35:27 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-08 14:35:27 -==> Parameters: admin(String)
2019-04-08 14:35:27 -<==      Total: 1
2019-04-08 14:35:27 -耗时 : 64
2019-04-08 14:35:27 -返回值 : {msg=操作成功, code=0}
2019-04-08 14:35:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 14:35:27 -==> Parameters: 1(Long), admin(String), 登录(String), 64(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-08 14:35:27.823(Timestamp)
2019-04-08 14:35:27 -请求地址 : http://localhost:8081/index
2019-04-08 14:35:27 -HTTP METHOD : GET
2019-04-08 14:35:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 14:35:27 -参数 : [{}]
2019-04-08 14:35:27 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 14:35:27 -==> Parameters: 1(Long)
2019-04-08 14:35:27 -<==      Total: 46
2019-04-08 14:35:28 -<==    Updates: 1
2019-04-08 14:35:28 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 14:35:28 -==> Parameters: 138(Long)
2019-04-08 14:35:28 -<==      Total: 1
2019-04-08 14:35:28 -耗时 : 137
2019-04-08 14:35:28 -返回值 : index_v1
2019-04-08 14:35:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 14:35:28 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 137(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 14:35:28.063(Timestamp)
2019-04-08 14:35:28 -请求地址 : http://localhost:8081/main
2019-04-08 14:35:28 -HTTP METHOD : GET
2019-04-08 14:35:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 14:35:28 -参数 : []
2019-04-08 14:35:28 -耗时 : 37
2019-04-08 14:35:28 -返回值 : main
2019-04-08 14:35:28 -<==    Updates: 1
2019-04-08 14:35:28 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 14:35:28 -HTTP METHOD : GET
2019-04-08 14:35:28 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 14:35:28 -参数 : []
2019-04-08 14:35:28 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 14:35:28 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 14:35:28 -<==      Total: 0
2019-04-08 14:35:28 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 14:35:28 -==> Parameters: 1(Long), 0(String)
2019-04-08 14:35:28 -<==      Total: 1
2019-04-08 14:35:28 -耗时 : 6
2019-04-08 14:35:28 -返回值 : com.bootdo.common.utils.PageUtils@3bf61a47
2019-04-08 14:35:29 -请求地址 : http://localhost:8081/main
2019-04-08 14:35:29 -HTTP METHOD : GET
2019-04-08 14:35:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 14:35:29 -参数 : []
2019-04-08 14:35:29 -耗时 : 0
2019-04-08 14:35:29 -返回值 : main
2019-04-08 14:35:30 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-08 14:35:30 -==> Parameters: 1(Long)
2019-04-08 14:35:30 -<==      Total: 90
2019-04-08 14:35:30 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 14:35:30 -HTTP METHOD : GET
2019-04-08 14:35:30 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 14:35:30 -参数 : []
2019-04-08 14:35:30 -耗时 : 0
2019-04-08 14:35:30 -返回值 : /moneyList/moneyList
2019-04-08 14:35:35 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 14:35:35 -HTTP METHOD : GET
2019-04-08 14:35:35 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 14:35:35 -参数 : []
2019-04-08 14:35:35 -耗时 : 1
2019-04-08 14:35:35 -返回值 : system/dept/deptTree
2019-04-08 14:35:35 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 14:35:35 -HTTP METHOD : GET
2019-04-08 14:35:35 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 14:35:35 -参数 : []
2019-04-08 14:35:35 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 14:35:35 -==> Parameters: 
2019-04-08 14:35:35 -<==      Total: 3
2019-04-08 14:35:35 -耗时 : 8
2019-04-08 14:35:35 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 14:35:41 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 14:35:41 -HTTP METHOD : POST
2019-04-08 14:35:41 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 14:35:41 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@1ece91af]
2019-04-08 14:35:41 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 14:35:41 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 14:35:41 -<==      Total: 3
2019-04-08 14:35:41 -耗时 : 7
2019-04-08 14:35:41 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@28edfd0, com.bootdo.moneyList.damain.MoneyListDO@7e7ca9b3, com.bootdo.moneyList.damain.MoneyListDO@14551c3a]
2019-04-08 14:35:46 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 14:35:46 -HTTP METHOD : POST
2019-04-08 14:35:46 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 14:35:46 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@7af5afca]
2019-04-08 14:35:46 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 14:35:46 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 14:35:46 -<==    Updates: 1
2019-04-08 14:35:46 -耗时 : 76
2019-04-08 14:35:46 -返回值 : 0
2019-04-08 14:35:47 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 14:35:47 -HTTP METHOD : POST
2019-04-08 14:35:47 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 14:35:47 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@4e7fbf3f]
2019-04-08 14:35:47 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 14:35:47 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 14:35:47 -<==      Total: 3
2019-04-08 14:35:47 -耗时 : 50
2019-04-08 14:35:47 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@648e37c4, com.bootdo.moneyList.damain.MoneyListDO@20f22fdc, com.bootdo.moneyList.damain.MoneyListDO@1347faba]
2019-04-08 14:36:40 -请求地址 : http://localhost:8081/index
2019-04-08 14:36:40 -HTTP METHOD : GET
2019-04-08 14:36:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 14:36:40 -参数 : [{}]
2019-04-08 14:36:40 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 14:36:40 -==> Parameters: 1(Long)
2019-04-08 14:36:40 -<==      Total: 46
2019-04-08 14:36:40 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 14:36:40 -==> Parameters: 138(Long)
2019-04-08 14:36:40 -<==      Total: 1
2019-04-08 14:36:40 -耗时 : 11
2019-04-08 14:36:40 -返回值 : index_v1
2019-04-08 14:36:40 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 14:36:40 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 11(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 14:36:40.745(Timestamp)
2019-04-08 14:36:40 -请求地址 : http://localhost:8081/main
2019-04-08 14:36:40 -HTTP METHOD : GET
2019-04-08 14:36:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 14:36:40 -参数 : []
2019-04-08 14:36:40 -耗时 : 1
2019-04-08 14:36:40 -返回值 : main
2019-04-08 14:36:40 -<==    Updates: 1
2019-04-08 14:36:41 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 14:36:41 -HTTP METHOD : GET
2019-04-08 14:36:41 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 14:36:41 -参数 : []
2019-04-08 14:36:41 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 14:36:41 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 14:36:41 -<==      Total: 0
2019-04-08 14:36:41 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 14:36:41 -==> Parameters: 1(Long), 0(String)
2019-04-08 14:36:41 -<==      Total: 1
2019-04-08 14:36:41 -耗时 : 10
2019-04-08 14:36:41 -返回值 : com.bootdo.common.utils.PageUtils@598e70f3
2019-04-08 14:36:41 -请求地址 : http://localhost:8081/main
2019-04-08 14:36:41 -HTTP METHOD : GET
2019-04-08 14:36:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 14:36:41 -参数 : []
2019-04-08 14:36:41 -耗时 : 0
2019-04-08 14:36:41 -返回值 : main
2019-04-08 14:36:43 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 14:36:43 -HTTP METHOD : GET
2019-04-08 14:36:43 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 14:36:43 -参数 : []
2019-04-08 14:36:43 -耗时 : 0
2019-04-08 14:36:43 -返回值 : /moneyList/moneyList
2019-04-08 14:36:48 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 14:36:48 -HTTP METHOD : GET
2019-04-08 14:36:48 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 14:36:48 -参数 : []
2019-04-08 14:36:48 -耗时 : 0
2019-04-08 14:36:48 -返回值 : system/dept/deptTree
2019-04-08 14:36:49 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 14:36:49 -HTTP METHOD : GET
2019-04-08 14:36:49 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 14:36:49 -参数 : []
2019-04-08 14:36:49 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 14:36:49 -==> Parameters: 
2019-04-08 14:36:49 -<==      Total: 3
2019-04-08 14:36:49 -耗时 : 4
2019-04-08 14:36:49 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 14:36:55 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 14:36:55 -HTTP METHOD : POST
2019-04-08 14:36:55 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 14:36:55 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@a52792]
2019-04-08 14:36:55 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 14:36:55 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 14:36:55 -<==      Total: 3
2019-04-08 14:36:55 -耗时 : 6
2019-04-08 14:36:55 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@1dfc06f, com.bootdo.moneyList.damain.MoneyListDO@47f6b849, com.bootdo.moneyList.damain.MoneyListDO@6e468e92]
2019-04-08 14:36:59 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 14:36:59 -HTTP METHOD : POST
2019-04-08 14:36:59 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 14:36:59 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@2ebff84b]
2019-04-08 14:36:59 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 14:36:59 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 14:36:59 -<==    Updates: 1
2019-04-08 14:36:59 -耗时 : 183
2019-04-08 14:36:59 -返回值 : 0
2019-04-08 14:37:00 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 14:37:00 -HTTP METHOD : POST
2019-04-08 14:37:00 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 14:37:00 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@7c3ef44e]
2019-04-08 14:37:00 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 14:37:00 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 14:37:00 -<==      Total: 3
2019-04-08 14:37:00 -耗时 : 3
2019-04-08 14:37:00 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@55cf2851, com.bootdo.moneyList.damain.MoneyListDO@7920841c, com.bootdo.moneyList.damain.MoneyListDO@723783f2]
2019-04-08 14:41:11 -请求地址 : http://localhost:8081/print/print
2019-04-08 14:41:11 -HTTP METHOD : GET
2019-04-08 14:41:11 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-08 14:41:11 -参数 : []
2019-04-08 14:41:11 -耗时 : 0
2019-04-08 14:41:11 -返回值 : print/print/print
2019-04-08 14:41:12 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 14:41:12 -HTTP METHOD : GET
2019-04-08 14:41:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 14:41:12 -参数 : [userType]
2019-04-08 14:41:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 14:41:12 -==> Parameters: userType(String)
2019-04-08 14:41:12 -<==      Total: 2
2019-04-08 14:41:12 -耗时 : 6
2019-04-08 14:41:12 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 14:41:12 -请求地址 : http://localhost:8081/print/print/list
2019-04-08 14:41:12 -HTTP METHOD : GET
2019-04-08 14:41:12 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-08 14:41:12 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-08 14:41:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-08 14:41:12 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 14:41:12 -<==      Total: 4
2019-04-08 14:41:12 -==>  Preparing: select count(*) from print 
2019-04-08 14:41:12 -==> Parameters: 
2019-04-08 14:41:12 -<==      Total: 1
2019-04-08 14:41:12 -耗时 : 6
2019-04-08 14:41:12 -返回值 : com.bootdo.common.utils.PageUtils@72129dc9
2019-04-08 14:41:24 -请求地址 : http://localhost:8081/print/print/
2019-04-08 14:41:24 -HTTP METHOD : GET
2019-04-08 14:41:24 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-08 14:41:24 -参数 : []
2019-04-08 14:41:24 -耗时 : 1
2019-04-08 14:41:24 -返回值 : print/print/print
2019-04-08 14:41:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 14:41:24 -HTTP METHOD : GET
2019-04-08 14:41:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 14:41:24 -参数 : [userType]
2019-04-08 14:41:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 14:41:24 -==> Parameters: userType(String)
2019-04-08 14:41:24 -<==      Total: 2
2019-04-08 14:41:24 -耗时 : 4
2019-04-08 14:41:24 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 14:41:24 -请求地址 : http://localhost:8081/print/print/list
2019-04-08 14:41:24 -HTTP METHOD : GET
2019-04-08 14:41:24 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-08 14:41:24 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-08 14:41:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-08 14:41:24 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 14:41:24 -<==      Total: 4
2019-04-08 14:41:24 -==>  Preparing: select count(*) from print 
2019-04-08 14:41:24 -==> Parameters: 
2019-04-08 14:41:24 -<==      Total: 1
2019-04-08 14:41:24 -耗时 : 9
2019-04-08 14:41:24 -返回值 : com.bootdo.common.utils.PageUtils@55abee03
2019-04-08 14:42:39 -请求地址 : http://localhost:8081/print/print
2019-04-08 14:42:39 -HTTP METHOD : GET
2019-04-08 14:42:39 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-08 14:42:39 -参数 : []
2019-04-08 14:42:39 -耗时 : 0
2019-04-08 14:42:39 -返回值 : print/print/print
2019-04-08 14:42:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 14:42:40 -请求地址 : http://localhost:8081/print/print/list
2019-04-08 14:42:40 -HTTP METHOD : GET
2019-04-08 14:42:40 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-08 14:42:40 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-08 14:42:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-08 14:42:40 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 14:42:40 -HTTP METHOD : GET
2019-04-08 14:42:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 14:42:40 -参数 : [userType]
2019-04-08 14:42:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 14:42:40 -==> Parameters: userType(String)
2019-04-08 14:42:40 -<==      Total: 2
2019-04-08 14:42:40 -耗时 : 53
2019-04-08 14:42:40 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 14:42:40 -<==      Total: 4
2019-04-08 14:42:40 -==>  Preparing: select count(*) from print 
2019-04-08 14:42:40 -==> Parameters: 
2019-04-08 14:42:40 -<==      Total: 1
2019-04-08 14:42:40 -耗时 : 95
2019-04-08 14:42:40 -返回值 : com.bootdo.common.utils.PageUtils@183f8896
2019-04-08 14:44:16 -请求地址 : http://localhost:8081/
2019-04-08 14:44:16 -HTTP METHOD : GET
2019-04-08 14:44:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-04-08 14:44:16 -参数 : [{}]
2019-04-08 14:44:16 -耗时 : 1
2019-04-08 14:44:16 -返回值 : redirect:/index
2019-04-08 14:44:17 -请求地址 : http://localhost:8081/index
2019-04-08 14:44:17 -HTTP METHOD : GET
2019-04-08 14:44:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 14:44:17 -参数 : [{}]
2019-04-08 14:44:17 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 14:44:17 -==> Parameters: 1(Long)
2019-04-08 14:44:17 -<==      Total: 46
2019-04-08 14:44:17 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 14:44:17 -==> Parameters: 138(Long)
2019-04-08 14:44:17 -<==      Total: 1
2019-04-08 14:44:17 -耗时 : 18
2019-04-08 14:44:17 -返回值 : index_v1
2019-04-08 14:44:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 14:44:17 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 18(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 14:44:17.23(Timestamp)
2019-04-08 14:44:17 -请求地址 : http://localhost:8081/main
2019-04-08 14:44:17 -HTTP METHOD : GET
2019-04-08 14:44:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 14:44:17 -参数 : []
2019-04-08 14:44:17 -耗时 : 1
2019-04-08 14:44:17 -返回值 : main
2019-04-08 14:44:17 -<==    Updates: 1
2019-04-08 14:44:17 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 14:44:17 -HTTP METHOD : GET
2019-04-08 14:44:17 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 14:44:17 -参数 : []
2019-04-08 14:44:17 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 14:44:17 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 14:44:17 -<==      Total: 0
2019-04-08 14:44:17 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 14:44:17 -==> Parameters: 1(Long), 0(String)
2019-04-08 14:44:17 -<==      Total: 1
2019-04-08 14:44:17 -耗时 : 20
2019-04-08 14:44:17 -返回值 : com.bootdo.common.utils.PageUtils@37c9031d
2019-04-08 14:44:17 -请求地址 : http://localhost:8081/main
2019-04-08 14:44:17 -HTTP METHOD : GET
2019-04-08 14:44:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 14:44:17 -参数 : []
2019-04-08 14:44:17 -耗时 : 1
2019-04-08 14:44:17 -返回值 : main
2019-04-08 14:44:21 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 14:44:21 -HTTP METHOD : GET
2019-04-08 14:44:21 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 14:44:21 -参数 : []
2019-04-08 14:44:21 -耗时 : 1
2019-04-08 14:44:21 -返回值 : /moneyList/moneyList
2019-04-08 14:44:25 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 14:44:25 -HTTP METHOD : GET
2019-04-08 14:44:25 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 14:44:25 -参数 : []
2019-04-08 14:44:25 -耗时 : 1
2019-04-08 14:44:25 -返回值 : system/dept/deptTree
2019-04-08 14:44:26 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 14:44:26 -HTTP METHOD : GET
2019-04-08 14:44:26 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 14:44:26 -参数 : []
2019-04-08 14:44:26 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 14:44:26 -==> Parameters: 
2019-04-08 14:44:26 -<==      Total: 3
2019-04-08 14:44:26 -耗时 : 7
2019-04-08 14:44:26 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 14:44:32 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 14:44:32 -HTTP METHOD : POST
2019-04-08 14:44:32 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 14:44:32 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@27b112d8]
2019-04-08 14:44:32 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 14:44:32 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 14:44:32 -<==      Total: 3
2019-04-08 14:44:32 -耗时 : 70
2019-04-08 14:44:32 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@6b6f43cf, com.bootdo.moneyList.damain.MoneyListDO@3a25cde0, com.bootdo.moneyList.damain.MoneyListDO@152d2fae]
2019-04-08 14:44:35 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 14:44:35 -HTTP METHOD : POST
2019-04-08 14:44:35 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 14:44:35 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@417cb28d]
2019-04-08 14:44:35 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 14:44:35 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 14:44:35 -<==    Updates: 1
2019-04-08 14:44:35 -耗时 : 249
2019-04-08 14:44:35 -返回值 : 0
2019-04-08 14:44:36 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 14:44:36 -HTTP METHOD : POST
2019-04-08 14:44:36 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 14:44:36 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@770bd1af]
2019-04-08 14:44:36 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 14:44:36 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 14:44:36 -<==      Total: 3
2019-04-08 14:44:36 -耗时 : 5
2019-04-08 14:44:36 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@4f3333d7, com.bootdo.moneyList.damain.MoneyListDO@7c2371eb, com.bootdo.moneyList.damain.MoneyListDO@558c4169]
2019-04-08 14:44:37 -请求地址 : http://localhost:8081/print/print
2019-04-08 14:44:37 -HTTP METHOD : GET
2019-04-08 14:44:37 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-08 14:44:37 -参数 : []
2019-04-08 14:44:37 -耗时 : 0
2019-04-08 14:44:37 -返回值 : print/print/print
2019-04-08 14:44:37 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 14:44:37 -HTTP METHOD : GET
2019-04-08 14:44:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 14:44:37 -参数 : [userType]
2019-04-08 14:44:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 14:44:37 -==> Parameters: userType(String)
2019-04-08 14:44:37 -<==      Total: 2
2019-04-08 14:44:37 -耗时 : 12
2019-04-08 14:44:37 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 14:44:37 -请求地址 : http://localhost:8081/print/print/list
2019-04-08 14:44:37 -HTTP METHOD : GET
2019-04-08 14:44:37 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-08 14:44:37 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-08 14:44:37 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-08 14:44:37 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 14:44:37 -<==      Total: 4
2019-04-08 14:44:37 -==>  Preparing: select count(*) from print 
2019-04-08 14:44:37 -==> Parameters: 
2019-04-08 14:44:37 -<==      Total: 1
2019-04-08 14:44:37 -耗时 : 8
2019-04-08 14:44:37 -返回值 : com.bootdo.common.utils.PageUtils@7e36638
2019-04-08 14:46:11 -请求地址 : http://localhost:8081/index
2019-04-08 14:46:11 -HTTP METHOD : GET
2019-04-08 14:46:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 14:46:11 -参数 : [{}]
2019-04-08 14:46:11 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 14:46:11 -==> Parameters: 1(Long)
2019-04-08 14:46:11 -<==      Total: 46
2019-04-08 14:46:11 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 14:46:11 -==> Parameters: 138(Long)
2019-04-08 14:46:11 -<==      Total: 1
2019-04-08 14:46:11 -耗时 : 23
2019-04-08 14:46:11 -返回值 : index_v1
2019-04-08 14:46:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 14:46:11 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 14:46:11.461(Timestamp)
2019-04-08 14:46:11 -<==    Updates: 1
2019-04-08 14:46:11 -请求地址 : http://localhost:8081/main
2019-04-08 14:46:11 -HTTP METHOD : GET
2019-04-08 14:46:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 14:46:11 -参数 : []
2019-04-08 14:46:11 -耗时 : 0
2019-04-08 14:46:11 -返回值 : main
2019-04-08 14:46:11 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 14:46:11 -HTTP METHOD : GET
2019-04-08 14:46:11 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 14:46:11 -参数 : []
2019-04-08 14:46:11 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 14:46:11 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 14:46:11 -<==      Total: 0
2019-04-08 14:46:11 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 14:46:11 -==> Parameters: 1(Long), 0(String)
2019-04-08 14:46:11 -<==      Total: 1
2019-04-08 14:46:11 -耗时 : 6
2019-04-08 14:46:11 -返回值 : com.bootdo.common.utils.PageUtils@40164588
2019-04-08 14:46:12 -请求地址 : http://localhost:8081/main
2019-04-08 14:46:12 -HTTP METHOD : GET
2019-04-08 14:46:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 14:46:12 -参数 : []
2019-04-08 14:46:12 -耗时 : 1
2019-04-08 14:46:12 -返回值 : main
2019-04-08 14:46:13 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-08 14:46:13 -==> Parameters: 1(Long)
2019-04-08 14:46:13 -<==      Total: 90
2019-04-08 14:46:13 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 14:46:13 -HTTP METHOD : GET
2019-04-08 14:46:13 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 14:46:13 -参数 : []
2019-04-08 14:46:13 -耗时 : 0
2019-04-08 14:46:13 -返回值 : /moneyList/moneyList
2019-04-08 14:46:18 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 14:46:18 -HTTP METHOD : GET
2019-04-08 14:46:18 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 14:46:18 -参数 : []
2019-04-08 14:46:18 -耗时 : 1
2019-04-08 14:46:18 -返回值 : system/dept/deptTree
2019-04-08 14:46:18 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 14:46:18 -HTTP METHOD : GET
2019-04-08 14:46:18 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 14:46:18 -参数 : []
2019-04-08 14:46:18 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 14:46:18 -==> Parameters: 
2019-04-08 14:46:18 -<==      Total: 3
2019-04-08 14:46:18 -耗时 : 3
2019-04-08 14:46:18 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 14:46:21 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 14:46:21 -HTTP METHOD : POST
2019-04-08 14:46:21 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 14:46:21 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@35c42b6f]
2019-04-08 14:46:21 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 14:46:21 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 14:46:21 -<==      Total: 3
2019-04-08 14:46:21 -耗时 : 4
2019-04-08 14:46:21 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@199d841d, com.bootdo.moneyList.damain.MoneyListDO@76973f59, com.bootdo.moneyList.damain.MoneyListDO@621cedb7]
2019-04-08 14:46:24 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 14:46:24 -HTTP METHOD : POST
2019-04-08 14:46:24 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 14:46:24 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@47d61bbf]
2019-04-08 14:46:24 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 14:46:24 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 14:46:24 -<==    Updates: 1
2019-04-08 14:46:24 -耗时 : 88
2019-04-08 14:46:24 -返回值 : 0
2019-04-08 14:46:25 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 14:46:25 -HTTP METHOD : POST
2019-04-08 14:46:25 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 14:46:25 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@50ae585b]
2019-04-08 14:46:25 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 14:46:25 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 14:46:25 -<==      Total: 3
2019-04-08 14:46:25 -耗时 : 5
2019-04-08 14:46:25 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@4473c66a, com.bootdo.moneyList.damain.MoneyListDO@74572cf4, com.bootdo.moneyList.damain.MoneyListDO@5619dea5]
2019-04-08 14:48:58 -请求地址 : http://localhost:8081/index
2019-04-08 14:48:58 -HTTP METHOD : GET
2019-04-08 14:48:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 14:48:58 -参数 : [{}]
2019-04-08 14:48:58 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 14:48:58 -==> Parameters: 1(Long)
2019-04-08 14:48:58 -<==      Total: 46
2019-04-08 14:48:58 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 14:48:58 -==> Parameters: 138(Long)
2019-04-08 14:48:58 -<==      Total: 1
2019-04-08 14:48:58 -耗时 : 37
2019-04-08 14:48:58 -返回值 : index_v1
2019-04-08 14:48:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 14:48:58 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 38(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 14:48:58.518(Timestamp)
2019-04-08 14:48:58 -<==    Updates: 1
2019-04-08 14:48:58 -请求地址 : http://localhost:8081/main
2019-04-08 14:48:58 -HTTP METHOD : GET
2019-04-08 14:48:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 14:48:58 -参数 : []
2019-04-08 14:48:58 -耗时 : 1
2019-04-08 14:48:58 -返回值 : main
2019-04-08 14:48:58 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 14:48:58 -HTTP METHOD : GET
2019-04-08 14:48:58 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 14:48:58 -参数 : []
2019-04-08 14:48:58 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 14:48:58 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 14:48:58 -<==      Total: 0
2019-04-08 14:48:58 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 14:48:58 -==> Parameters: 1(Long), 0(String)
2019-04-08 14:48:58 -<==      Total: 1
2019-04-08 14:48:58 -耗时 : 5
2019-04-08 14:48:58 -返回值 : com.bootdo.common.utils.PageUtils@5ec49ad7
2019-04-08 14:48:58 -请求地址 : http://localhost:8081/main
2019-04-08 14:48:58 -HTTP METHOD : GET
2019-04-08 14:48:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 14:48:58 -参数 : []
2019-04-08 14:48:58 -耗时 : 1
2019-04-08 14:48:58 -返回值 : main
2019-04-08 14:49:00 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 14:49:00 -HTTP METHOD : GET
2019-04-08 14:49:00 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 14:49:00 -参数 : []
2019-04-08 14:49:00 -耗时 : 1
2019-04-08 14:49:00 -返回值 : /moneyList/moneyList
2019-04-08 14:49:04 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 14:49:04 -HTTP METHOD : GET
2019-04-08 14:49:04 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 14:49:04 -参数 : []
2019-04-08 14:49:04 -耗时 : 1
2019-04-08 14:49:04 -返回值 : system/dept/deptTree
2019-04-08 14:49:05 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 14:49:05 -HTTP METHOD : GET
2019-04-08 14:49:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 14:49:05 -参数 : []
2019-04-08 14:49:05 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 14:49:05 -==> Parameters: 
2019-04-08 14:49:05 -<==      Total: 3
2019-04-08 14:49:05 -耗时 : 3
2019-04-08 14:49:05 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 14:49:07 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 14:49:07 -HTTP METHOD : POST
2019-04-08 14:49:07 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 14:49:07 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@42a68124]
2019-04-08 14:49:07 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 14:49:07 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 14:49:07 -<==      Total: 3
2019-04-08 14:49:07 -耗时 : 140
2019-04-08 14:49:07 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@30b132b6, com.bootdo.moneyList.damain.MoneyListDO@10376aec, com.bootdo.moneyList.damain.MoneyListDO@666e666f]
2019-04-08 14:49:11 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 14:49:11 -HTTP METHOD : POST
2019-04-08 14:49:11 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 14:49:11 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@138a6c7c]
2019-04-08 14:49:11 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 14:49:11 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 14:49:11 -<==    Updates: 1
2019-04-08 14:49:11 -耗时 : 196
2019-04-08 14:49:11 -返回值 : 0
2019-04-08 14:49:13 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 14:49:13 -HTTP METHOD : POST
2019-04-08 14:49:13 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 14:49:13 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@63de8f5b]
2019-04-08 14:49:13 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 14:49:13 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 14:49:13 -<==      Total: 3
2019-04-08 14:49:13 -耗时 : 4
2019-04-08 14:49:13 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@7ae2a5d8, com.bootdo.moneyList.damain.MoneyListDO@5fdddc37, com.bootdo.moneyList.damain.MoneyListDO@486e34c0]
2019-04-08 14:49:37 -请求地址 : http://localhost:8081/index
2019-04-08 14:49:37 -HTTP METHOD : GET
2019-04-08 14:49:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 14:49:37 -参数 : [{}]
2019-04-08 14:49:37 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 14:49:37 -==> Parameters: 1(Long)
2019-04-08 14:49:37 -<==      Total: 46
2019-04-08 14:49:37 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 14:49:37 -==> Parameters: 138(Long)
2019-04-08 14:49:37 -<==      Total: 1
2019-04-08 14:49:37 -耗时 : 37
2019-04-08 14:49:37 -返回值 : index_v1
2019-04-08 14:49:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 14:49:38 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 37(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 14:49:38.01(Timestamp)
2019-04-08 14:49:38 -请求地址 : http://localhost:8081/main
2019-04-08 14:49:38 -HTTP METHOD : GET
2019-04-08 14:49:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 14:49:38 -参数 : []
2019-04-08 14:49:38 -耗时 : 0
2019-04-08 14:49:38 -返回值 : main
2019-04-08 14:49:38 -<==    Updates: 1
2019-04-08 14:49:38 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 14:49:38 -HTTP METHOD : GET
2019-04-08 14:49:38 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 14:49:38 -参数 : []
2019-04-08 14:49:38 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 14:49:38 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 14:49:38 -<==      Total: 0
2019-04-08 14:49:38 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 14:49:38 -==> Parameters: 1(Long), 0(String)
2019-04-08 14:49:38 -<==      Total: 1
2019-04-08 14:49:38 -耗时 : 6
2019-04-08 14:49:38 -返回值 : com.bootdo.common.utils.PageUtils@6395f234
2019-04-08 14:49:38 -请求地址 : http://localhost:8081/main
2019-04-08 14:49:38 -HTTP METHOD : GET
2019-04-08 14:49:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 14:49:38 -参数 : []
2019-04-08 14:49:38 -耗时 : 1
2019-04-08 14:49:38 -返回值 : main
2019-04-08 14:49:40 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 14:49:40 -HTTP METHOD : GET
2019-04-08 14:49:40 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 14:49:40 -参数 : []
2019-04-08 14:49:40 -耗时 : 0
2019-04-08 14:49:40 -返回值 : /moneyList/moneyList
2019-04-08 14:49:46 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 14:49:46 -HTTP METHOD : GET
2019-04-08 14:49:46 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 14:49:46 -参数 : []
2019-04-08 14:49:46 -耗时 : 1
2019-04-08 14:49:46 -返回值 : system/dept/deptTree
2019-04-08 14:49:46 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 14:49:46 -HTTP METHOD : GET
2019-04-08 14:49:46 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 14:49:46 -参数 : []
2019-04-08 14:49:46 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 14:49:46 -==> Parameters: 
2019-04-08 14:49:46 -<==      Total: 3
2019-04-08 14:49:46 -耗时 : 4
2019-04-08 14:49:46 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 14:49:49 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 14:49:49 -HTTP METHOD : POST
2019-04-08 14:49:49 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 14:49:49 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@557d771]
2019-04-08 14:49:49 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 14:49:49 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 14:49:49 -<==      Total: 3
2019-04-08 14:49:49 -耗时 : 17
2019-04-08 14:49:49 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@557f1bec, com.bootdo.moneyList.damain.MoneyListDO@2ae67702, com.bootdo.moneyList.damain.MoneyListDO@11b1d170]
2019-04-08 14:49:53 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 14:49:53 -HTTP METHOD : POST
2019-04-08 14:49:53 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 14:49:53 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@5bf12e8a]
2019-04-08 14:49:53 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 14:49:53 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 14:49:53 -<==    Updates: 1
2019-04-08 14:49:53 -耗时 : 140
2019-04-08 14:49:53 -返回值 : 0
2019-04-08 14:49:54 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 14:49:54 -HTTP METHOD : POST
2019-04-08 14:49:54 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 14:49:54 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@11c62208]
2019-04-08 14:49:54 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 14:49:54 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 14:49:54 -<==      Total: 3
2019-04-08 14:49:54 -耗时 : 6
2019-04-08 14:49:54 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@55f6e6d6, com.bootdo.moneyList.damain.MoneyListDO@4bc0360c, com.bootdo.moneyList.damain.MoneyListDO@6bb69b1e]
2019-04-08 14:51:41 -Starting BootdoApplication on ZJZL-20180906VX with PID 8784 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-08 14:51:41 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-08 14:51:41 -The following profiles are active: dev
2019-04-08 14:51:41 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 08 14:51:41 CST 2019]; root of context hierarchy
2019-04-08 14:51:45 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-08 14:51:50 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7f0c0d77] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 14:51:50 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$71653c1e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 14:51:53 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 14:51:55 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 14:51:55 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 14:51:55 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-08 14:51:55 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-08 14:51:55 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 14:51:55 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 14:51:55 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 14:51:55 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 14:51:57 -Tomcat initialized with port(s): 8081 (http)
2019-04-08 14:51:57 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-08 14:51:57 -Starting service [Tomcat]
2019-04-08 14:51:57 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-08 14:51:57 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-08 14:51:58 -Initializing Spring embedded WebApplicationContext
2019-04-08 14:51:58 -Root WebApplicationContext: initialization completed in 16303 ms
2019-04-08 14:52:04 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-08 14:52:04 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-08 14:52:04 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-08 14:52:04 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-08 14:52:04 -Filter xssFilter was not registered (disabled)
2019-04-08 14:52:04 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-08 14:52:04 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-08 14:52:04 -Servlet statViewServlet mapped to [/druid/*]
2019-04-08 14:52:04 -Servlet dispatcherServlet mapped to [/]
2019-04-08 14:52:10 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 08 14:51:41 CST 2019]; root of context hierarchy
2019-04-08 14:52:11 -Using default implementation for ThreadExecutor
2019-04-08 14:52:11 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-08 14:52:11 -Quartz Scheduler v.2.2.1 created.
2019-04-08 14:52:11 -RAMJobStore initialized.
2019-04-08 14:52:11 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-08 14:52:11 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-08 14:52:11 -Quartz scheduler version: 2.2.1
2019-04-08 14:52:11 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@2035d65b
2019-04-08 14:52:12 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-08 14:52:12 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-08 14:52:16 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 14:52:16 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-08 14:52:16 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-08 14:52:16 -Mapped "{[/charts/countDD/tableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.tableDD()
2019-04-08 14:52:16 -Mapped "{[/charts/countMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 14:52:16 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-08 14:52:16 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-08 14:52:16 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-08 14:52:16 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-08 14:52:16 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 14:52:16 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public int com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-08 14:52:16 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-08 14:52:16 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 14:52:16 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public int com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-08 14:52:16 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-08 14:52:16 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-08 14:52:16 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-08 14:52:16 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-08 14:52:16 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-08 14:52:16 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 14:52:16 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-08 14:52:16 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 14:52:16 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-08 14:52:16 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-08 14:52:16 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-08 14:52:16 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-08 14:52:16 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-08 14:52:16 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-08 14:52:16 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-08 14:52:16 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-08 14:52:16 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 14:52:16 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-08 14:52:16 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-08 14:52:16 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 14:52:16 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-08 14:52:16 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-08 14:52:16 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 14:52:16 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-08 14:52:16 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-08 14:52:16 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-08 14:52:16 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-08 14:52:16 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-08 14:52:16 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-08 14:52:16 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-08 14:52:16 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-08 14:52:16 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-08 14:52:16 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 14:52:16 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-08 14:52:16 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-08 14:52:16 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 14:52:16 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-08 14:52:16 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-08 14:52:16 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-08 14:52:16 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-08 14:52:16 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 14:52:16 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-08 14:52:16 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-08 14:52:16 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-08 14:52:16 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-08 14:52:16 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-08 14:52:16 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-08 14:52:16 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-08 14:52:16 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-08 14:52:16 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-08 14:52:16 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-08 14:52:16 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-08 14:52:16 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 14:52:16 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-08 14:52:16 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-08 14:52:16 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-08 14:52:16 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-08 14:52:16 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-08 14:52:16 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-08 14:52:16 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-08 14:52:16 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-08 14:52:16 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-08 14:52:16 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 14:52:16 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-08 14:52:16 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-08 14:52:16 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 14:52:16 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-08 14:52:16 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-08 14:52:16 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-08 14:52:16 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-08 14:52:16 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-08 14:52:16 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-08 14:52:16 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 14:52:16 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-08 14:52:16 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-08 14:52:16 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-08 14:52:16 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-08 14:52:16 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-08 14:52:16 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-08 14:52:16 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-08 14:52:16 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-08 14:52:16 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-08 14:52:16 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-08 14:52:16 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 14:52:16 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-08 14:52:16 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 14:52:16 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-08 14:52:16 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-08 14:52:16 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-08 14:52:16 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-08 14:52:16 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-08 14:52:16 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-08 14:52:16 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-08 14:52:16 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-08 14:52:16 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-08 14:52:16 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-08 14:52:16 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-08 14:52:16 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-08 14:52:16 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-08 14:52:16 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 14:52:16 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-08 14:52:16 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 14:52:16 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 14:52:16 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-08 14:52:16 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-08 14:52:16 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-08 14:52:16 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-08 14:52:16 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-08 14:52:16 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 14:52:16 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-08 14:52:16 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 14:52:16 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 14:52:16 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-08 14:52:16 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-08 14:52:16 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-08 14:52:16 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-08 14:52:16 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-08 14:52:16 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 14:52:16 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-08 14:52:16 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 14:52:16 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-08 14:52:16 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 14:52:16 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-08 14:52:16 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-08 14:52:16 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-08 14:52:16 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-08 14:52:16 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-08 14:52:16 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 14:52:16 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-08 14:52:16 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-08 14:52:16 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 14:52:16 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-08 14:52:16 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 14:52:16 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-08 14:52:16 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-08 14:52:16 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-08 14:52:16 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-08 14:52:16 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-08 14:52:16 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 14:52:16 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-08 14:52:16 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 14:52:16 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-08 14:52:16 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 14:52:16 -Mapped "{[/print/print/printEdit],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.PrintEdit()
2019-04-08 14:52:16 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 14:52:16 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-08 14:52:16 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-08 14:52:16 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-08 14:52:16 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-08 14:52:16 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-08 14:52:16 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-08 14:52:16 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-08 14:52:16 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 14:52:16 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-08 14:52:16 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-08 14:52:16 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-08 14:52:16 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-08 14:52:16 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-08 14:52:16 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-08 14:52:16 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-08 14:52:16 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-08 14:52:16 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-08 14:52:16 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-08 14:52:16 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-08 14:52:16 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-08 14:52:16 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 14:52:16 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-08 14:52:16 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-08 14:52:16 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-08 14:52:16 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-08 14:52:16 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-08 14:52:16 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-08 14:52:16 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-08 14:52:16 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-08 14:52:16 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-08 14:52:16 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-08 14:52:16 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-08 14:52:16 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 14:52:16 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-08 14:52:16 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-08 14:52:16 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-08 14:52:16 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-08 14:52:16 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-08 14:52:16 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 14:52:16 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-08 14:52:16 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-08 14:52:16 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-08 14:52:16 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 14:52:16 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-08 14:52:16 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-08 14:52:16 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-08 14:52:16 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-08 14:52:16 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-08 14:52:16 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-08 14:52:16 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-08 14:52:16 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-08 14:52:16 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-08 14:52:16 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-08 14:52:16 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-08 14:52:16 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-08 14:52:16 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-08 14:52:16 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-08 14:52:16 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-08 14:52:16 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-08 14:52:16 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-08 14:52:16 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 14:52:16 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-08 14:52:16 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 14:52:16 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-08 14:52:16 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-08 14:52:16 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-08 14:52:16 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-08 14:52:16 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-08 14:52:16 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-08 14:52:16 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-08 14:52:16 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-08 14:52:16 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 14:52:16 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-08 14:52:16 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 14:52:16 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-08 14:52:16 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-08 14:52:16 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-08 14:52:16 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-08 14:52:16 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-08 14:52:16 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-08 14:52:16 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-08 14:52:16 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-08 14:52:16 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-08 14:52:17 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-08 14:52:18 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-08 14:52:18 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-08 14:52:18 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-08 14:52:19 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 08 14:51:41 CST 2019]; root of context hierarchy
2019-04-08 14:52:19 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-08 14:52:19 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-08 14:52:19 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-08 14:52:19 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-08 14:52:20 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-08 14:52:25 -Registering beans for JMX exposure on startup
2019-04-08 14:52:25 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-08 14:52:25 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-08 14:52:25 -Starting beans in phase 2147483647
2019-04-08 14:52:25 -Context refreshed
2019-04-08 14:52:25 -Found 1 custom documentation plugin(s)
2019-04-08 14:52:25 -Scanning for api listing references
2019-04-08 14:52:26 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-08 14:52:27 -Generating unique operation named: getCountDUsingPOST_1
2019-04-08 14:52:27 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-08 14:52:27 -Generating unique operation named: getCountDUsingPOST_2
2019-04-08 14:52:27 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-08 14:52:27 -Generating unique operation named: getCountDUsingPOST_3
2019-04-08 14:52:27 -Generating unique operation named: removeUsingPOST_1
2019-04-08 14:52:27 -Generating unique operation named: addUsingGET_1
2019-04-08 14:52:27 -Generating unique operation named: editUsingGET_1
2019-04-08 14:52:27 -Generating unique operation named: listUsingGET_1
2019-04-08 14:52:27 -Generating unique operation named: removeUsingPOST_2
2019-04-08 14:52:27 -Generating unique operation named: removeUsingPOST_3
2019-04-08 14:52:27 -Generating unique operation named: saveUsingPOST_1
2019-04-08 14:52:27 -Generating unique operation named: updateUsingGET_1
2019-04-08 14:52:27 -Generating unique operation named: updateUsingHEAD_1
2019-04-08 14:52:27 -Generating unique operation named: updateUsingPOST_1
2019-04-08 14:52:27 -Generating unique operation named: updateUsingPUT_1
2019-04-08 14:52:27 -Generating unique operation named: updateUsingPATCH_1
2019-04-08 14:52:27 -Generating unique operation named: updateUsingDELETE_1
2019-04-08 14:52:27 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-08 14:52:27 -Generating unique operation named: updateUsingTRACE_1
2019-04-08 14:52:28 -Generating unique operation named: addUsingGET_2
2019-04-08 14:52:28 -Generating unique operation named: editUsingGET_2
2019-04-08 14:52:28 -Generating unique operation named: listUsingGET_2
2019-04-08 14:52:28 -Generating unique operation named: removeUsingPOST_4
2019-04-08 14:52:28 -Generating unique operation named: removeUsingPOST_5
2019-04-08 14:52:28 -Generating unique operation named: saveUsingPOST_2
2019-04-08 14:52:28 -Generating unique operation named: updateUsingPOST_2
2019-04-08 14:52:28 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-08 14:52:28 -Generating unique operation named: addUsingGET_3
2019-04-08 14:52:28 -Generating unique operation named: editUsingGET_3
2019-04-08 14:52:28 -Generating unique operation named: exprotElecLogUsingGET_4
2019-04-08 14:52:28 -Generating unique operation named: listUsingGET_3
2019-04-08 14:52:28 -Generating unique operation named: removeUsingPOST_6
2019-04-08 14:52:28 -Generating unique operation named: removeUsingPOST_7
2019-04-08 14:52:28 -Generating unique operation named: saveUsingPOST_3
2019-04-08 14:52:28 -Generating unique operation named: updateUsingGET_2
2019-04-08 14:52:28 -Generating unique operation named: updateUsingHEAD_2
2019-04-08 14:52:28 -Generating unique operation named: updateUsingPOST_3
2019-04-08 14:52:28 -Generating unique operation named: updateUsingPUT_2
2019-04-08 14:52:28 -Generating unique operation named: updateUsingPATCH_2
2019-04-08 14:52:28 -Generating unique operation named: updateUsingDELETE_2
2019-04-08 14:52:28 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-08 14:52:28 -Generating unique operation named: updateUsingTRACE_2
2019-04-08 14:52:28 -Generating unique operation named: addUsingGET_4
2019-04-08 14:52:28 -Generating unique operation named: editUsingGET_4
2019-04-08 14:52:28 -Generating unique operation named: listUsingGET_4
2019-04-08 14:52:28 -Generating unique operation named: removeUsingPOST_8
2019-04-08 14:52:28 -Generating unique operation named: removeUsingPOST_9
2019-04-08 14:52:28 -Generating unique operation named: saveUsingPOST_4
2019-04-08 14:52:28 -Generating unique operation named: updateUsingGET_3
2019-04-08 14:52:28 -Generating unique operation named: updateUsingHEAD_3
2019-04-08 14:52:28 -Generating unique operation named: updateUsingPOST_4
2019-04-08 14:52:28 -Generating unique operation named: updateUsingPUT_3
2019-04-08 14:52:28 -Generating unique operation named: updateUsingPATCH_3
2019-04-08 14:52:28 -Generating unique operation named: updateUsingDELETE_3
2019-04-08 14:52:28 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-08 14:52:28 -Generating unique operation named: updateUsingTRACE_3
2019-04-08 14:52:28 -Generating unique operation named: ElecUsingGET_1
2019-04-08 14:52:28 -Generating unique operation named: addUsingGET_5
2019-04-08 14:52:28 -Generating unique operation named: editUsingGET_5
2019-04-08 14:52:28 -Generating unique operation named: listUsingGET_5
2019-04-08 14:52:28 -Generating unique operation named: removeUsingPOST_10
2019-04-08 14:52:28 -Generating unique operation named: removeUsingPOST_11
2019-04-08 14:52:28 -Generating unique operation named: saveUsingPOST_5
2019-04-08 14:52:28 -Generating unique operation named: updateUsingGET_4
2019-04-08 14:52:28 -Generating unique operation named: updateUsingHEAD_4
2019-04-08 14:52:28 -Generating unique operation named: updateUsingPOST_5
2019-04-08 14:52:28 -Generating unique operation named: updateUsingPUT_4
2019-04-08 14:52:28 -Generating unique operation named: updateUsingPATCH_4
2019-04-08 14:52:28 -Generating unique operation named: updateUsingDELETE_4
2019-04-08 14:52:28 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-08 14:52:28 -Generating unique operation named: updateUsingTRACE_4
2019-04-08 14:52:28 -Generating unique operation named: editUsingGET_6
2019-04-08 14:52:28 -Generating unique operation named: listUsingGET_6
2019-04-08 14:52:28 -Generating unique operation named: updateUsingPOST_6
2019-04-08 14:52:28 -Generating unique operation named: addUsingGET_6
2019-04-08 14:52:28 -Generating unique operation named: editUsingGET_7
2019-04-08 14:52:28 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-08 14:52:28 -Generating unique operation named: listUsingGET_7
2019-04-08 14:52:28 -Generating unique operation named: removeUsingPOST_12
2019-04-08 14:52:28 -Generating unique operation named: removeUsingPOST_13
2019-04-08 14:52:28 -Generating unique operation named: saveUsingPOST_6
2019-04-08 14:52:28 -Generating unique operation named: updateUsingGET_5
2019-04-08 14:52:28 -Generating unique operation named: updateUsingHEAD_5
2019-04-08 14:52:28 -Generating unique operation named: updateUsingPOST_7
2019-04-08 14:52:28 -Generating unique operation named: updateUsingPUT_5
2019-04-08 14:52:28 -Generating unique operation named: updateUsingPATCH_5
2019-04-08 14:52:28 -Generating unique operation named: updateUsingDELETE_5
2019-04-08 14:52:28 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-08 14:52:28 -Generating unique operation named: updateUsingTRACE_5
2019-04-08 14:52:28 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-08 14:52:28 -Generating unique operation named: addUsingGET_7
2019-04-08 14:52:28 -Generating unique operation named: editUsingGET_8
2019-04-08 14:52:28 -Generating unique operation named: listUsingGET_8
2019-04-08 14:52:28 -Generating unique operation named: removeUsingPOST_14
2019-04-08 14:52:28 -Generating unique operation named: removeUsingPOST_15
2019-04-08 14:52:28 -Generating unique operation named: saveUsingPOST_7
2019-04-08 14:52:28 -Generating unique operation named: updateUsingGET_6
2019-04-08 14:52:28 -Generating unique operation named: updateUsingHEAD_6
2019-04-08 14:52:28 -Generating unique operation named: updateUsingPOST_8
2019-04-08 14:52:28 -Generating unique operation named: updateUsingPUT_6
2019-04-08 14:52:29 -Generating unique operation named: updateUsingPATCH_6
2019-04-08 14:52:29 -Generating unique operation named: updateUsingDELETE_6
2019-04-08 14:52:29 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-08 14:52:29 -Generating unique operation named: updateUsingTRACE_6
2019-04-08 14:52:29 -Generating unique operation named: addUsingGET_8
2019-04-08 14:52:29 -Generating unique operation named: editUsingGET_9
2019-04-08 14:52:29 -Generating unique operation named: listUsingGET_9
2019-04-08 14:52:29 -Generating unique operation named: removeUsingPOST_16
2019-04-08 14:52:29 -Generating unique operation named: removeUsingPOST_17
2019-04-08 14:52:29 -Generating unique operation named: saveUsingPOST_8
2019-04-08 14:52:29 -Generating unique operation named: updateUsingGET_7
2019-04-08 14:52:29 -Generating unique operation named: updateUsingHEAD_7
2019-04-08 14:52:29 -Generating unique operation named: updateUsingPOST_9
2019-04-08 14:52:29 -Generating unique operation named: updateUsingPUT_7
2019-04-08 14:52:29 -Generating unique operation named: updateUsingPATCH_7
2019-04-08 14:52:29 -Generating unique operation named: updateUsingDELETE_7
2019-04-08 14:52:29 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-08 14:52:29 -Generating unique operation named: updateUsingTRACE_7
2019-04-08 14:52:29 -Generating unique operation named: addUsingGET_9
2019-04-08 14:52:29 -Generating unique operation named: editUsingGET_10
2019-04-08 14:52:29 -Generating unique operation named: infoUsingGET_1
2019-04-08 14:52:29 -Generating unique operation named: infoUsingHEAD_1
2019-04-08 14:52:29 -Generating unique operation named: infoUsingPOST_1
2019-04-08 14:52:29 -Generating unique operation named: infoUsingPUT_1
2019-04-08 14:52:29 -Generating unique operation named: infoUsingPATCH_1
2019-04-08 14:52:29 -Generating unique operation named: infoUsingDELETE_1
2019-04-08 14:52:29 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-08 14:52:29 -Generating unique operation named: infoUsingTRACE_1
2019-04-08 14:52:29 -Generating unique operation named: listUsingGET_10
2019-04-08 14:52:29 -Generating unique operation named: removeUsingPOST_18
2019-04-08 14:52:29 -Generating unique operation named: removeUsingPOST_19
2019-04-08 14:52:29 -Generating unique operation named: saveUsingPOST_9
2019-04-08 14:52:29 -Generating unique operation named: updateUsingPOST_10
2019-04-08 14:52:29 -Generating unique operation named: listUsingGET_11
2019-04-08 14:52:29 -Generating unique operation named: removeUsingPOST_20
2019-04-08 14:52:29 -Generating unique operation named: welcomeUsingGET_1
2019-04-08 14:52:29 -Generating unique operation named: addUsingGET_10
2019-04-08 14:52:29 -Generating unique operation named: editUsingGET_11
2019-04-08 14:52:29 -Generating unique operation named: listUsingGET_12
2019-04-08 14:52:29 -Generating unique operation named: removeUsingPOST_21
2019-04-08 14:52:29 -Generating unique operation named: saveUsingPOST_10
2019-04-08 14:52:29 -Generating unique operation named: treeUsingGET_1
2019-04-08 14:52:29 -Generating unique operation named: treeUsingGET_2
2019-04-08 14:52:29 -Generating unique operation named: updateUsingPOST_11
2019-04-08 14:52:29 -Generating unique operation named: addUsingGET_11
2019-04-08 14:52:29 -Generating unique operation named: editUsingGET_12
2019-04-08 14:52:29 -Generating unique operation named: listUsingGET_13
2019-04-08 14:52:29 -Generating unique operation named: removeUsingPOST_22
2019-04-08 14:52:29 -Generating unique operation named: removeUsingPOST_23
2019-04-08 14:52:29 -Generating unique operation named: saveUsingPOST_11
2019-04-08 14:52:29 -Generating unique operation named: updateUsingGET_8
2019-04-08 14:52:29 -Generating unique operation named: updateUsingHEAD_8
2019-04-08 14:52:29 -Generating unique operation named: updateUsingPOST_12
2019-04-08 14:52:29 -Generating unique operation named: updateUsingPUT_8
2019-04-08 14:52:29 -Generating unique operation named: updateUsingPATCH_8
2019-04-08 14:52:30 -Generating unique operation named: updateUsingDELETE_8
2019-04-08 14:52:30 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-08 14:52:30 -Generating unique operation named: updateUsingTRACE_8
2019-04-08 14:52:30 -Generating unique operation named: addUsingGET_12
2019-04-08 14:52:30 -Generating unique operation named: editUsingGET_13
2019-04-08 14:52:30 -Generating unique operation named: listUsingGET_14
2019-04-08 14:52:30 -Generating unique operation named: removeUsingPOST_24
2019-04-08 14:52:30 -Generating unique operation named: removeUsingPOST_25
2019-04-08 14:52:30 -Generating unique operation named: saveUsingPOST_12
2019-04-08 14:52:30 -Generating unique operation named: updateUsingGET_9
2019-04-08 14:52:30 -Generating unique operation named: updateUsingHEAD_9
2019-04-08 14:52:30 -Generating unique operation named: updateUsingPOST_13
2019-04-08 14:52:30 -Generating unique operation named: updateUsingPUT_9
2019-04-08 14:52:30 -Generating unique operation named: updateUsingPATCH_9
2019-04-08 14:52:30 -Generating unique operation named: updateUsingDELETE_9
2019-04-08 14:52:30 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-08 14:52:30 -Generating unique operation named: updateUsingTRACE_9
2019-04-08 14:52:30 -Generating unique operation named: addUsingGET_13
2019-04-08 14:52:30 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-08 14:52:30 -Generating unique operation named: editUsingGET_14
2019-04-08 14:52:30 -Generating unique operation named: listUsingGET_15
2019-04-08 14:52:30 -Generating unique operation named: saveUsingPOST_13
2019-04-08 14:52:30 -Generating unique operation named: saveUsingPOST_14
2019-04-08 14:52:30 -Generating unique operation named: updateUsingPOST_14
2019-04-08 14:52:30 -Generating unique operation named: listUsingGET_16
2019-04-08 14:52:30 -Generating unique operation named: listUsingHEAD_1
2019-04-08 14:52:30 -Generating unique operation named: listUsingPOST_1
2019-04-08 14:52:30 -Generating unique operation named: listUsingPUT_1
2019-04-08 14:52:30 -Generating unique operation named: listUsingPATCH_1
2019-04-08 14:52:30 -Generating unique operation named: listUsingDELETE_1
2019-04-08 14:52:30 -Generating unique operation named: listUsingOPTIONS_1
2019-04-08 14:52:30 -Generating unique operation named: listUsingTRACE_1
2019-04-08 14:52:30 -Generating unique operation named: addUsingGET_14
2019-04-08 14:52:30 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-08 14:52:30 -Generating unique operation named: editUsingGET_15
2019-04-08 14:52:30 -Generating unique operation named: listUsingGET_17
2019-04-08 14:52:30 -Generating unique operation named: removeUsingPOST_26
2019-04-08 14:52:30 -Generating unique operation named: saveUsingPOST_15
2019-04-08 14:52:30 -Generating unique operation named: treeUsingGET_3
2019-04-08 14:52:30 -Generating unique operation named: treeViewUsingGET_1
2019-04-08 14:52:30 -Generating unique operation named: updateUsingPOST_15
2019-04-08 14:52:30 -Generating unique operation named: addUsingGET_15
2019-04-08 14:52:30 -Generating unique operation named: editUsingGET_16
2019-04-08 14:52:30 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-08 14:52:30 -Generating unique operation named: listUsingGET_18
2019-04-08 14:52:30 -Generating unique operation named: removeUsingPOST_27
2019-04-08 14:52:30 -Generating unique operation named: removeUsingPOST_28
2019-04-08 14:52:30 -Generating unique operation named: saveUsingPOST_16
2019-04-08 14:52:30 -Generating unique operation named: updateUsingGET_10
2019-04-08 14:52:30 -Generating unique operation named: updateUsingHEAD_10
2019-04-08 14:52:30 -Generating unique operation named: updateUsingPOST_16
2019-04-08 14:52:30 -Generating unique operation named: updateUsingPUT_10
2019-04-08 14:52:30 -Generating unique operation named: updateUsingPATCH_10
2019-04-08 14:52:30 -Generating unique operation named: updateUsingDELETE_10
2019-04-08 14:52:30 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-08 14:52:30 -Generating unique operation named: updateUsingTRACE_10
2019-04-08 14:52:30 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-08 14:52:30 -Generating unique operation named: addUsingGET_16
2019-04-08 14:52:30 -Generating unique operation named: editUsingGET_17
2019-04-08 14:52:30 -Generating unique operation named: listUsingGET_19
2019-04-08 14:52:30 -Generating unique operation named: removeUsingPOST_29
2019-04-08 14:52:30 -Generating unique operation named: removeUsingPOST_30
2019-04-08 14:52:30 -Generating unique operation named: saveUsingPOST_17
2019-04-08 14:52:30 -Generating unique operation named: updateUsingGET_11
2019-04-08 14:52:30 -Generating unique operation named: updateUsingHEAD_11
2019-04-08 14:52:30 -Generating unique operation named: updateUsingPOST_17
2019-04-08 14:52:30 -Generating unique operation named: updateUsingPUT_11
2019-04-08 14:52:30 -Generating unique operation named: updateUsingPATCH_11
2019-04-08 14:52:30 -Generating unique operation named: updateUsingDELETE_11
2019-04-08 14:52:30 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-08 14:52:30 -Generating unique operation named: updateUsingTRACE_11
2019-04-08 14:52:30 -Generating unique operation named: addUsingGET_17
2019-04-08 14:52:30 -Generating unique operation named: editUsingGET_18
2019-04-08 14:52:30 -Generating unique operation named: listUsingGET_20
2019-04-08 14:52:30 -Generating unique operation named: removeUsingPOST_31
2019-04-08 14:52:30 -Generating unique operation named: removeUsingPOST_32
2019-04-08 14:52:30 -Generating unique operation named: saveUsingPOST_18
2019-04-08 14:52:30 -Generating unique operation named: updateUsingGET_12
2019-04-08 14:52:30 -Generating unique operation named: updateUsingHEAD_12
2019-04-08 14:52:30 -Generating unique operation named: updateUsingPOST_18
2019-04-08 14:52:30 -Generating unique operation named: updateUsingPUT_12
2019-04-08 14:52:30 -Generating unique operation named: updateUsingPATCH_12
2019-04-08 14:52:30 -Generating unique operation named: updateUsingDELETE_12
2019-04-08 14:52:30 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-08 14:52:30 -Generating unique operation named: updateUsingTRACE_12
2019-04-08 14:52:30 -Starting Quartz Scheduler now
2019-04-08 14:52:30 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-08 14:52:30 -Starting...
2019-04-08 14:52:30 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-08 14:52:30 -Started.
2019-04-08 14:52:30 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-08 14:52:30 -Using a shared selector for servlet write/read
2019-04-08 14:52:30 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-08 14:52:30 -Started BootdoApplication in 50.603 seconds (JVM running for 51.482)
2019-04-08 14:52:31 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-08 14:52:31 -==> Parameters: 
2019-04-08 14:52:31 -<==      Total: 1
2019-04-08 14:53:18 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-04-08 14:55:06 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-08 14:55:06 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-08 14:55:07 -FrameworkServlet 'dispatcherServlet': initialization completed in 165 ms
2019-04-08 14:55:07 -Enabling session validation scheduler...
2019-04-08 14:55:07 -请求地址 : http://localhost:8081/login;JSESSIONID=5e527ef2-0469-4227-bc04-ccfe6a6f69fd
2019-04-08 14:55:07 -HTTP METHOD : GET
2019-04-08 14:55:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-08 14:55:07 -参数 : [{}]
2019-04-08 14:55:07 -耗时 : 4
2019-04-08 14:55:07 -返回值 : login
2019-04-08 14:55:09 -请求地址 : http://localhost:8081/getVerify
2019-04-08 14:55:09 -HTTP METHOD : GET
2019-04-08 14:55:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-08 14:55:09 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@28f5665e, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5c857463]
2019-04-08 14:55:13 -1120
2019-04-08 14:55:13 -耗时 : 4195
2019-04-08 14:55:13 -返回值 : null
2019-04-08 14:55:13 -请求地址 : http://localhost:8081/login
2019-04-08 14:55:13 -HTTP METHOD : GET
2019-04-08 14:55:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-08 14:55:13 -参数 : [{}]
2019-04-08 14:55:13 -耗时 : 0
2019-04-08 14:55:13 -返回值 : login
2019-04-08 14:55:19 -请求地址 : http://localhost:8081/login
2019-04-08 14:55:19 -HTTP METHOD : POST
2019-04-08 14:55:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-08 14:55:19 -参数 : [admin, 111111, 1120, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2fc86a97]
2019-04-08 14:55:19 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-08 14:55:19 -==> Parameters: admin(String)
2019-04-08 14:55:20 -<==      Total: 1
2019-04-08 14:55:20 -耗时 : 285
2019-04-08 14:55:20 -返回值 : {msg=操作成功, code=0}
2019-04-08 14:55:20 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-08 14:55:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 14:55:20 -==> Parameters: 1(Long), admin(String), 登录(String), 285(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-08 14:55:20.653(Timestamp)
2019-04-08 14:55:20 -请求地址 : http://localhost:8081/index
2019-04-08 14:55:20 -HTTP METHOD : GET
2019-04-08 14:55:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 14:55:20 -参数 : [{}]
2019-04-08 14:55:21 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 14:55:21 -<==    Updates: 1
2019-04-08 14:55:21 -==> Parameters: 1(Long)
2019-04-08 14:55:22 -<==      Total: 46
2019-04-08 14:55:22 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 14:55:22 -==> Parameters: 138(Long)
2019-04-08 14:55:22 -<==      Total: 1
2019-04-08 14:55:22 -耗时 : 2055
2019-04-08 14:55:22 -返回值 : index_v1
2019-04-08 14:55:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 14:55:22 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 2056(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 14:55:22.902(Timestamp)
2019-04-08 14:55:23 -请求地址 : http://localhost:8081/main
2019-04-08 14:55:23 -HTTP METHOD : GET
2019-04-08 14:55:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 14:55:23 -参数 : []
2019-04-08 14:55:23 -耗时 : 0
2019-04-08 14:55:23 -返回值 : main
2019-04-08 14:55:23 -<==    Updates: 1
2019-04-08 14:55:23 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 14:55:23 -HTTP METHOD : GET
2019-04-08 14:55:23 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 14:55:23 -参数 : []
2019-04-08 14:55:23 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 14:55:23 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 14:55:24 -<==      Total: 0
2019-04-08 14:55:24 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 14:55:24 -==> Parameters: 1(Long), 0(String)
2019-04-08 14:55:24 -<==      Total: 1
2019-04-08 14:55:24 -耗时 : 209
2019-04-08 14:55:24 -返回值 : com.bootdo.common.utils.PageUtils@6ac5124b
2019-04-08 14:55:24 -请求地址 : http://localhost:8081/main
2019-04-08 14:55:24 -HTTP METHOD : GET
2019-04-08 14:55:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 14:55:24 -参数 : []
2019-04-08 14:55:24 -耗时 : 0
2019-04-08 14:55:24 -返回值 : main
2019-04-08 14:55:25 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-08 14:55:25 -==> Parameters: 1(Long)
2019-04-08 14:55:25 -<==      Total: 90
2019-04-08 14:55:25 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 14:55:25 -HTTP METHOD : GET
2019-04-08 14:55:25 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 14:55:25 -参数 : []
2019-04-08 14:55:25 -耗时 : 0
2019-04-08 14:55:25 -返回值 : /moneyList/moneyList
2019-04-08 14:55:32 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 14:55:32 -HTTP METHOD : GET
2019-04-08 14:55:32 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 14:55:32 -参数 : []
2019-04-08 14:55:32 -耗时 : 0
2019-04-08 14:55:32 -返回值 : system/dept/deptTree
2019-04-08 14:55:33 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 14:55:33 -HTTP METHOD : GET
2019-04-08 14:55:33 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 14:55:33 -参数 : []
2019-04-08 14:55:33 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 14:55:33 -==> Parameters: 
2019-04-08 14:55:33 -<==      Total: 3
2019-04-08 14:55:33 -耗时 : 64
2019-04-08 14:55:33 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 14:55:42 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 14:55:42 -HTTP METHOD : POST
2019-04-08 14:55:42 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 14:55:42 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@1d6cbb8c]
2019-04-08 14:55:42 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 14:55:42 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 14:55:43 -<==      Total: 3
2019-04-08 14:55:43 -耗时 : 180
2019-04-08 14:55:43 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@6d8f7856, com.bootdo.moneyList.damain.MoneyListDO@39d13b5b, com.bootdo.moneyList.damain.MoneyListDO@56ba0477]
2019-04-08 14:55:48 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 14:55:48 -HTTP METHOD : POST
2019-04-08 14:55:48 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 14:55:48 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@6dc7f93a]
2019-04-08 14:55:48 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 14:55:48 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 14:55:48 -<==    Updates: 1
2019-04-08 14:55:48 -耗时 : 143
2019-04-08 14:55:48 -返回值 : 0
2019-04-08 14:55:49 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 14:55:49 -HTTP METHOD : POST
2019-04-08 14:55:49 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 14:55:49 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@64dd39af]
2019-04-08 14:55:49 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 14:55:49 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 14:55:49 -<==      Total: 3
2019-04-08 14:55:49 -耗时 : 7
2019-04-08 14:55:49 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@6bd41982, com.bootdo.moneyList.damain.MoneyListDO@42cb0997, com.bootdo.moneyList.damain.MoneyListDO@1da518cf]
2019-04-08 14:55:50 -请求地址 : http://localhost:8081/print/print/printEdit
2019-04-08 14:55:50 -HTTP METHOD : GET
2019-04-08 14:55:50 -CLASS_METHOD : com.bootdo.print.controller.PrintController.PrintEdit
2019-04-08 14:55:50 -参数 : []
2019-04-08 14:55:50 -耗时 : 1
2019-04-08 14:55:50 -返回值 : print/print/printEdit
2019-04-08 14:55:50 -[THYMELEAF][http-nio-8081-exec-7] Exception processing template "print/print/printEdit": An error happened during template parsing (template: "class path resource [templates/print/print/printEdit.html]")
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/print/print/printEdit.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "print.userId" (template: "print/print/printEdit" - line 14, col 16)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 69 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "print.userId" (template: "print/print/printEdit" - line 14, col 16)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:165)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:126)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 71 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'userId' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:407)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:89)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:111)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:334)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 90 common frames omitted
2019-04-08 14:55:50 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/print/print/printEdit.html]")] with root cause
org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'userId' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:407)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:89)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:111)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:334)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:165)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:126)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-08 15:00:01 -请求地址 : http://localhost:8081/index
2019-04-08 15:00:01 -HTTP METHOD : GET
2019-04-08 15:00:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 15:00:01 -参数 : [{}]
2019-04-08 15:00:01 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 15:00:01 -==> Parameters: 1(Long)
2019-04-08 15:00:01 -<==      Total: 46
2019-04-08 15:00:01 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 15:00:01 -==> Parameters: 138(Long)
2019-04-08 15:00:01 -<==      Total: 1
2019-04-08 15:00:01 -耗时 : 74
2019-04-08 15:00:01 -返回值 : index_v1
2019-04-08 15:00:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 15:00:01 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 75(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 15:00:01.756(Timestamp)
2019-04-08 15:00:01 -请求地址 : http://localhost:8081/main
2019-04-08 15:00:01 -HTTP METHOD : GET
2019-04-08 15:00:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 15:00:01 -参数 : []
2019-04-08 15:00:01 -耗时 : 1
2019-04-08 15:00:01 -返回值 : main
2019-04-08 15:00:02 -<==    Updates: 1
2019-04-08 15:00:03 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 15:00:03 -HTTP METHOD : GET
2019-04-08 15:00:03 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 15:00:03 -参数 : []
2019-04-08 15:00:03 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 15:00:03 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 15:00:03 -<==      Total: 0
2019-04-08 15:00:03 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 15:00:03 -==> Parameters: 1(Long), 0(String)
2019-04-08 15:00:03 -<==      Total: 1
2019-04-08 15:00:03 -耗时 : 11
2019-04-08 15:00:03 -返回值 : com.bootdo.common.utils.PageUtils@24e7994c
2019-04-08 15:00:03 -请求地址 : http://localhost:8081/main
2019-04-08 15:00:03 -HTTP METHOD : GET
2019-04-08 15:00:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 15:00:03 -参数 : []
2019-04-08 15:00:03 -耗时 : 0
2019-04-08 15:00:03 -返回值 : main
2019-04-08 15:00:04 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 15:00:04 -HTTP METHOD : GET
2019-04-08 15:00:04 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 15:00:04 -参数 : []
2019-04-08 15:00:04 -耗时 : 0
2019-04-08 15:00:04 -返回值 : /moneyList/moneyList
2019-04-08 15:00:11 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 15:00:11 -HTTP METHOD : GET
2019-04-08 15:00:11 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 15:00:11 -参数 : []
2019-04-08 15:00:11 -耗时 : 2
2019-04-08 15:00:11 -返回值 : system/dept/deptTree
2019-04-08 15:00:12 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 15:00:12 -HTTP METHOD : GET
2019-04-08 15:00:12 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 15:00:12 -参数 : []
2019-04-08 15:00:12 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 15:00:12 -==> Parameters: 
2019-04-08 15:00:12 -<==      Total: 3
2019-04-08 15:00:12 -耗时 : 5
2019-04-08 15:00:12 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 15:00:19 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 15:00:19 -HTTP METHOD : POST
2019-04-08 15:00:19 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 15:00:19 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@156d9699]
2019-04-08 15:00:19 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 15:00:19 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 15:00:19 -<==      Total: 3
2019-04-08 15:00:19 -耗时 : 8
2019-04-08 15:00:19 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@577c6e79, com.bootdo.moneyList.damain.MoneyListDO@78e3ecee, com.bootdo.moneyList.damain.MoneyListDO@50cc2a9d]
2019-04-08 15:00:23 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 15:00:23 -HTTP METHOD : POST
2019-04-08 15:00:23 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 15:00:23 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@5ec5f3ca]
2019-04-08 15:00:23 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 15:00:23 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 15:00:23 -<==    Updates: 1
2019-04-08 15:00:23 -耗时 : 88
2019-04-08 15:00:23 -返回值 : 0
2019-04-08 15:00:24 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 15:00:24 -HTTP METHOD : POST
2019-04-08 15:00:24 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 15:00:24 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@95cfbe8]
2019-04-08 15:00:24 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 15:00:24 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 15:00:24 -<==      Total: 3
2019-04-08 15:00:24 -耗时 : 8
2019-04-08 15:00:24 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@7b2ff0e7, com.bootdo.moneyList.damain.MoneyListDO@2612699d, com.bootdo.moneyList.damain.MoneyListDO@487f550c]
2019-04-08 15:00:29 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-08 15:02:26 -Starting BootdoApplication on ZJZL-20180906VX with PID 3692 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-08 15:02:26 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-08 15:02:26 -The following profiles are active: dev
2019-04-08 15:02:26 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 08 15:02:26 CST 2019]; root of context hierarchy
2019-04-08 15:02:29 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-08 15:02:32 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6c68c88e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 15:02:33 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$5ec1f735] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 15:02:34 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 15:02:35 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 15:02:35 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 15:02:35 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-08 15:02:35 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-08 15:02:35 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 15:02:35 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 15:02:35 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 15:02:35 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 15:02:37 -Tomcat initialized with port(s): 8081 (http)
2019-04-08 15:02:37 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-08 15:02:37 -Starting service [Tomcat]
2019-04-08 15:02:37 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-08 15:02:37 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-08 15:02:37 -Initializing Spring embedded WebApplicationContext
2019-04-08 15:02:37 -Root WebApplicationContext: initialization completed in 11243 ms
2019-04-08 15:02:38 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-08 15:02:38 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-08 15:02:38 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-08 15:02:38 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-08 15:02:38 -Filter xssFilter was not registered (disabled)
2019-04-08 15:02:38 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-08 15:02:38 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-08 15:02:38 -Servlet statViewServlet mapped to [/druid/*]
2019-04-08 15:02:38 -Servlet dispatcherServlet mapped to [/]
2019-04-08 15:02:42 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 08 15:02:26 CST 2019]; root of context hierarchy
2019-04-08 15:02:44 -Using default implementation for ThreadExecutor
2019-04-08 15:02:45 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-08 15:02:45 -Quartz Scheduler v.2.2.1 created.
2019-04-08 15:02:45 -RAMJobStore initialized.
2019-04-08 15:02:45 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-08 15:02:45 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-08 15:02:45 -Quartz scheduler version: 2.2.1
2019-04-08 15:02:45 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@2dcd0e41
2019-04-08 15:02:45 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-08 15:02:45 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-08 15:02:49 -Mapped "{[/charts/countDD/tableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.tableDD()
2019-04-08 15:02:49 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-08 15:02:49 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-08 15:02:49 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 15:02:49 -Mapped "{[/charts/countMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 15:02:49 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-08 15:02:49 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-08 15:02:49 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-08 15:02:49 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-08 15:02:49 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public int com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-08 15:02:49 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 15:02:49 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-08 15:02:49 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public int com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-08 15:02:49 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 15:02:49 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-08 15:02:49 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-08 15:02:49 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-08 15:02:49 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-08 15:02:49 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-08 15:02:49 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 15:02:49 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-08 15:02:49 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-08 15:02:49 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-08 15:02:49 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 15:02:49 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-08 15:02:49 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-08 15:02:49 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-08 15:02:49 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-08 15:02:49 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-08 15:02:49 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-08 15:02:49 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 15:02:49 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-08 15:02:49 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-08 15:02:49 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 15:02:49 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-08 15:02:49 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-08 15:02:49 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 15:02:49 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-08 15:02:49 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-08 15:02:49 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-08 15:02:49 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-08 15:02:49 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-08 15:02:49 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-08 15:02:49 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-08 15:02:49 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-08 15:02:49 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-08 15:02:49 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 15:02:49 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-08 15:02:49 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-08 15:02:49 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 15:02:49 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-08 15:02:49 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-08 15:02:49 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-08 15:02:49 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-08 15:02:49 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 15:02:49 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-08 15:02:49 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-08 15:02:49 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-08 15:02:49 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-08 15:02:49 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-08 15:02:49 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-08 15:02:49 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-08 15:02:49 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-08 15:02:49 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-08 15:02:49 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-08 15:02:49 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-08 15:02:49 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 15:02:49 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-08 15:02:49 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-08 15:02:49 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-08 15:02:49 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-08 15:02:49 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-08 15:02:49 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-08 15:02:49 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-08 15:02:49 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-08 15:02:49 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-08 15:02:49 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 15:02:49 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-08 15:02:49 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 15:02:49 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-08 15:02:49 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-08 15:02:49 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-08 15:02:49 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-08 15:02:49 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-08 15:02:49 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-08 15:02:49 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-08 15:02:49 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 15:02:49 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-08 15:02:49 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-08 15:02:49 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-08 15:02:49 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-08 15:02:49 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-08 15:02:49 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-08 15:02:49 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-08 15:02:49 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-08 15:02:49 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-08 15:02:49 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-08 15:02:49 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 15:02:49 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-08 15:02:49 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 15:02:49 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-08 15:02:49 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-08 15:02:49 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-08 15:02:49 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-08 15:02:49 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-08 15:02:49 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-08 15:02:49 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-08 15:02:49 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-08 15:02:49 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-08 15:02:49 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-08 15:02:49 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-08 15:02:49 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-08 15:02:49 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-08 15:02:49 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 15:02:49 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-08 15:02:49 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 15:02:49 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 15:02:49 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-08 15:02:49 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-08 15:02:49 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-08 15:02:49 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-08 15:02:49 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-08 15:02:49 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 15:02:49 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-08 15:02:49 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 15:02:49 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-08 15:02:49 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 15:02:49 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-08 15:02:49 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-08 15:02:49 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-08 15:02:49 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-08 15:02:49 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 15:02:49 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-08 15:02:49 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 15:02:49 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 15:02:49 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-08 15:02:49 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-08 15:02:49 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-08 15:02:49 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-08 15:02:49 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-08 15:02:49 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-08 15:02:49 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 15:02:49 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-08 15:02:49 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-08 15:02:49 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 15:02:49 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-08 15:02:49 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 15:02:49 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-08 15:02:49 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-08 15:02:49 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-08 15:02:49 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-08 15:02:49 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-08 15:02:49 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 15:02:49 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-08 15:02:49 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 15:02:49 -Mapped "{[/print/print/Print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.PrintEdit()
2019-04-08 15:02:49 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-08 15:02:49 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 15:02:49 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 15:02:49 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-08 15:02:49 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-08 15:02:49 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-08 15:02:49 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-08 15:02:49 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-08 15:02:49 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-08 15:02:49 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-08 15:02:49 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 15:02:49 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-08 15:02:49 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-08 15:02:49 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-08 15:02:49 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-08 15:02:49 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-08 15:02:49 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-08 15:02:49 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-08 15:02:49 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-08 15:02:49 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-08 15:02:49 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-08 15:02:49 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-08 15:02:49 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-08 15:02:49 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 15:02:49 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-08 15:02:49 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-08 15:02:49 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-08 15:02:49 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-08 15:02:49 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-08 15:02:49 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-08 15:02:49 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-08 15:02:49 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-08 15:02:49 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-08 15:02:49 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-08 15:02:49 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-08 15:02:49 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-08 15:02:49 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 15:02:49 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-08 15:02:49 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-08 15:02:49 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-08 15:02:49 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-08 15:02:49 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 15:02:49 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-08 15:02:49 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-08 15:02:49 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-08 15:02:49 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 15:02:49 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-08 15:02:49 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-08 15:02:49 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-08 15:02:49 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-08 15:02:49 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-08 15:02:49 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-08 15:02:49 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-08 15:02:49 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-08 15:02:49 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-08 15:02:49 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-08 15:02:49 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-08 15:02:49 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-08 15:02:49 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-08 15:02:49 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-08 15:02:49 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-08 15:02:49 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-08 15:02:49 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-08 15:02:49 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 15:02:49 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-08 15:02:49 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 15:02:49 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-08 15:02:49 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-08 15:02:49 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-08 15:02:49 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-08 15:02:49 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-08 15:02:49 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-08 15:02:49 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-08 15:02:49 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-08 15:02:49 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 15:02:49 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-08 15:02:49 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 15:02:49 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-08 15:02:49 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-08 15:02:49 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-08 15:02:49 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-08 15:02:49 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-08 15:02:49 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-08 15:02:49 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-08 15:02:49 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-08 15:02:49 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-08 15:02:50 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-08 15:02:50 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-08 15:02:50 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-08 15:02:50 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-08 15:02:51 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 08 15:02:26 CST 2019]; root of context hierarchy
2019-04-08 15:02:51 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-08 15:02:51 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-08 15:02:51 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-08 15:02:51 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-08 15:02:51 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-08 15:02:53 -Registering beans for JMX exposure on startup
2019-04-08 15:02:53 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-08 15:02:53 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-08 15:02:53 -Starting beans in phase 2147483647
2019-04-08 15:02:53 -Context refreshed
2019-04-08 15:02:54 -Found 1 custom documentation plugin(s)
2019-04-08 15:02:54 -Scanning for api listing references
2019-04-08 15:02:54 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-08 15:02:54 -Generating unique operation named: getCountDUsingPOST_1
2019-04-08 15:02:54 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-08 15:02:54 -Generating unique operation named: getCountDUsingPOST_2
2019-04-08 15:02:54 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-08 15:02:54 -Generating unique operation named: getCountDUsingPOST_3
2019-04-08 15:02:54 -Generating unique operation named: removeUsingPOST_1
2019-04-08 15:02:55 -Generating unique operation named: addUsingGET_1
2019-04-08 15:02:55 -Generating unique operation named: editUsingGET_1
2019-04-08 15:02:55 -Generating unique operation named: listUsingGET_1
2019-04-08 15:02:55 -Generating unique operation named: removeUsingPOST_2
2019-04-08 15:02:55 -Generating unique operation named: removeUsingPOST_3
2019-04-08 15:02:55 -Generating unique operation named: saveUsingPOST_1
2019-04-08 15:02:55 -Generating unique operation named: updateUsingGET_1
2019-04-08 15:02:55 -Generating unique operation named: updateUsingHEAD_1
2019-04-08 15:02:55 -Generating unique operation named: updateUsingPOST_1
2019-04-08 15:02:55 -Generating unique operation named: updateUsingPUT_1
2019-04-08 15:02:55 -Generating unique operation named: updateUsingPATCH_1
2019-04-08 15:02:55 -Generating unique operation named: updateUsingDELETE_1
2019-04-08 15:02:55 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-08 15:02:55 -Generating unique operation named: updateUsingTRACE_1
2019-04-08 15:02:55 -Generating unique operation named: addUsingGET_2
2019-04-08 15:02:55 -Generating unique operation named: editUsingGET_2
2019-04-08 15:02:55 -Generating unique operation named: listUsingGET_2
2019-04-08 15:02:55 -Generating unique operation named: removeUsingPOST_4
2019-04-08 15:02:55 -Generating unique operation named: removeUsingPOST_5
2019-04-08 15:02:55 -Generating unique operation named: saveUsingPOST_2
2019-04-08 15:02:55 -Generating unique operation named: updateUsingPOST_2
2019-04-08 15:02:55 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-08 15:02:55 -Generating unique operation named: addUsingGET_3
2019-04-08 15:02:55 -Generating unique operation named: editUsingGET_3
2019-04-08 15:02:55 -Generating unique operation named: exprotElecLogUsingGET_4
2019-04-08 15:02:55 -Generating unique operation named: listUsingGET_3
2019-04-08 15:02:55 -Generating unique operation named: removeUsingPOST_6
2019-04-08 15:02:55 -Generating unique operation named: removeUsingPOST_7
2019-04-08 15:02:55 -Generating unique operation named: saveUsingPOST_3
2019-04-08 15:02:55 -Generating unique operation named: updateUsingGET_2
2019-04-08 15:02:55 -Generating unique operation named: updateUsingHEAD_2
2019-04-08 15:02:55 -Generating unique operation named: updateUsingPOST_3
2019-04-08 15:02:55 -Generating unique operation named: updateUsingPUT_2
2019-04-08 15:02:55 -Generating unique operation named: updateUsingPATCH_2
2019-04-08 15:02:55 -Generating unique operation named: updateUsingDELETE_2
2019-04-08 15:02:55 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-08 15:02:55 -Generating unique operation named: updateUsingTRACE_2
2019-04-08 15:02:55 -Generating unique operation named: addUsingGET_4
2019-04-08 15:02:55 -Generating unique operation named: editUsingGET_4
2019-04-08 15:02:55 -Generating unique operation named: listUsingGET_4
2019-04-08 15:02:55 -Generating unique operation named: removeUsingPOST_8
2019-04-08 15:02:55 -Generating unique operation named: removeUsingPOST_9
2019-04-08 15:02:55 -Generating unique operation named: saveUsingPOST_4
2019-04-08 15:02:55 -Generating unique operation named: updateUsingGET_3
2019-04-08 15:02:55 -Generating unique operation named: updateUsingHEAD_3
2019-04-08 15:02:55 -Generating unique operation named: updateUsingPOST_4
2019-04-08 15:02:55 -Generating unique operation named: updateUsingPUT_3
2019-04-08 15:02:55 -Generating unique operation named: updateUsingPATCH_3
2019-04-08 15:02:55 -Generating unique operation named: updateUsingDELETE_3
2019-04-08 15:02:55 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-08 15:02:55 -Generating unique operation named: updateUsingTRACE_3
2019-04-08 15:02:55 -Generating unique operation named: ElecUsingGET_1
2019-04-08 15:02:55 -Generating unique operation named: addUsingGET_5
2019-04-08 15:02:55 -Generating unique operation named: editUsingGET_5
2019-04-08 15:02:55 -Generating unique operation named: listUsingGET_5
2019-04-08 15:02:55 -Generating unique operation named: removeUsingPOST_10
2019-04-08 15:02:55 -Generating unique operation named: removeUsingPOST_11
2019-04-08 15:02:55 -Generating unique operation named: saveUsingPOST_5
2019-04-08 15:02:55 -Generating unique operation named: updateUsingGET_4
2019-04-08 15:02:55 -Generating unique operation named: updateUsingHEAD_4
2019-04-08 15:02:55 -Generating unique operation named: updateUsingPOST_5
2019-04-08 15:02:55 -Generating unique operation named: updateUsingPUT_4
2019-04-08 15:02:55 -Generating unique operation named: updateUsingPATCH_4
2019-04-08 15:02:55 -Generating unique operation named: updateUsingDELETE_4
2019-04-08 15:02:55 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-08 15:02:55 -Generating unique operation named: updateUsingTRACE_4
2019-04-08 15:02:55 -Generating unique operation named: editUsingGET_6
2019-04-08 15:02:55 -Generating unique operation named: listUsingGET_6
2019-04-08 15:02:55 -Generating unique operation named: updateUsingPOST_6
2019-04-08 15:02:55 -Generating unique operation named: addUsingGET_6
2019-04-08 15:02:55 -Generating unique operation named: editUsingGET_7
2019-04-08 15:02:55 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-08 15:02:55 -Generating unique operation named: listUsingGET_7
2019-04-08 15:02:55 -Generating unique operation named: removeUsingPOST_12
2019-04-08 15:02:55 -Generating unique operation named: removeUsingPOST_13
2019-04-08 15:02:55 -Generating unique operation named: saveUsingPOST_6
2019-04-08 15:02:55 -Generating unique operation named: updateUsingGET_5
2019-04-08 15:02:55 -Generating unique operation named: updateUsingHEAD_5
2019-04-08 15:02:55 -Generating unique operation named: updateUsingPOST_7
2019-04-08 15:02:55 -Generating unique operation named: updateUsingPUT_5
2019-04-08 15:02:55 -Generating unique operation named: updateUsingPATCH_5
2019-04-08 15:02:55 -Generating unique operation named: updateUsingDELETE_5
2019-04-08 15:02:55 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-08 15:02:55 -Generating unique operation named: updateUsingTRACE_5
2019-04-08 15:02:55 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-08 15:02:55 -Generating unique operation named: addUsingGET_7
2019-04-08 15:02:55 -Generating unique operation named: editUsingGET_8
2019-04-08 15:02:55 -Generating unique operation named: listUsingGET_8
2019-04-08 15:02:55 -Generating unique operation named: removeUsingPOST_14
2019-04-08 15:02:55 -Generating unique operation named: removeUsingPOST_15
2019-04-08 15:02:55 -Generating unique operation named: saveUsingPOST_7
2019-04-08 15:02:55 -Generating unique operation named: updateUsingGET_6
2019-04-08 15:02:56 -Generating unique operation named: updateUsingHEAD_6
2019-04-08 15:02:56 -Generating unique operation named: updateUsingPOST_8
2019-04-08 15:02:56 -Generating unique operation named: updateUsingPUT_6
2019-04-08 15:02:56 -Generating unique operation named: updateUsingPATCH_6
2019-04-08 15:02:56 -Generating unique operation named: updateUsingDELETE_6
2019-04-08 15:02:56 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-08 15:02:56 -Generating unique operation named: updateUsingTRACE_6
2019-04-08 15:02:56 -Generating unique operation named: addUsingGET_8
2019-04-08 15:02:56 -Generating unique operation named: editUsingGET_9
2019-04-08 15:02:56 -Generating unique operation named: listUsingGET_9
2019-04-08 15:02:56 -Generating unique operation named: removeUsingPOST_16
2019-04-08 15:02:56 -Generating unique operation named: removeUsingPOST_17
2019-04-08 15:02:56 -Generating unique operation named: saveUsingPOST_8
2019-04-08 15:02:56 -Generating unique operation named: updateUsingGET_7
2019-04-08 15:02:56 -Generating unique operation named: updateUsingHEAD_7
2019-04-08 15:02:56 -Generating unique operation named: updateUsingPOST_9
2019-04-08 15:02:56 -Generating unique operation named: updateUsingPUT_7
2019-04-08 15:02:56 -Generating unique operation named: updateUsingPATCH_7
2019-04-08 15:02:56 -Generating unique operation named: updateUsingDELETE_7
2019-04-08 15:02:56 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-08 15:02:56 -Generating unique operation named: updateUsingTRACE_7
2019-04-08 15:02:56 -Generating unique operation named: addUsingGET_9
2019-04-08 15:02:56 -Generating unique operation named: editUsingGET_10
2019-04-08 15:02:56 -Generating unique operation named: infoUsingGET_1
2019-04-08 15:02:56 -Generating unique operation named: infoUsingHEAD_1
2019-04-08 15:02:56 -Generating unique operation named: infoUsingPOST_1
2019-04-08 15:02:56 -Generating unique operation named: infoUsingPUT_1
2019-04-08 15:02:56 -Generating unique operation named: infoUsingPATCH_1
2019-04-08 15:02:56 -Generating unique operation named: infoUsingDELETE_1
2019-04-08 15:02:56 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-08 15:02:56 -Generating unique operation named: infoUsingTRACE_1
2019-04-08 15:02:56 -Generating unique operation named: listUsingGET_10
2019-04-08 15:02:56 -Generating unique operation named: removeUsingPOST_18
2019-04-08 15:02:56 -Generating unique operation named: removeUsingPOST_19
2019-04-08 15:02:56 -Generating unique operation named: saveUsingPOST_9
2019-04-08 15:02:56 -Generating unique operation named: updateUsingPOST_10
2019-04-08 15:02:56 -Generating unique operation named: listUsingGET_11
2019-04-08 15:02:56 -Generating unique operation named: removeUsingPOST_20
2019-04-08 15:02:56 -Generating unique operation named: welcomeUsingGET_1
2019-04-08 15:02:56 -Generating unique operation named: addUsingGET_10
2019-04-08 15:02:56 -Generating unique operation named: editUsingGET_11
2019-04-08 15:02:56 -Generating unique operation named: listUsingGET_12
2019-04-08 15:02:56 -Generating unique operation named: removeUsingPOST_21
2019-04-08 15:02:56 -Generating unique operation named: saveUsingPOST_10
2019-04-08 15:02:56 -Generating unique operation named: treeUsingGET_1
2019-04-08 15:02:56 -Generating unique operation named: treeUsingGET_2
2019-04-08 15:02:56 -Generating unique operation named: updateUsingPOST_11
2019-04-08 15:02:56 -Generating unique operation named: addUsingGET_11
2019-04-08 15:02:56 -Generating unique operation named: editUsingGET_12
2019-04-08 15:02:56 -Generating unique operation named: listUsingGET_13
2019-04-08 15:02:56 -Generating unique operation named: removeUsingPOST_22
2019-04-08 15:02:56 -Generating unique operation named: removeUsingPOST_23
2019-04-08 15:02:56 -Generating unique operation named: saveUsingPOST_11
2019-04-08 15:02:56 -Generating unique operation named: updateUsingGET_8
2019-04-08 15:02:56 -Generating unique operation named: updateUsingHEAD_8
2019-04-08 15:02:56 -Generating unique operation named: updateUsingPOST_12
2019-04-08 15:02:56 -Generating unique operation named: updateUsingPUT_8
2019-04-08 15:02:56 -Generating unique operation named: updateUsingPATCH_8
2019-04-08 15:02:56 -Generating unique operation named: updateUsingDELETE_8
2019-04-08 15:02:56 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-08 15:02:56 -Generating unique operation named: updateUsingTRACE_8
2019-04-08 15:02:56 -Generating unique operation named: addUsingGET_12
2019-04-08 15:02:56 -Generating unique operation named: editUsingGET_13
2019-04-08 15:02:56 -Generating unique operation named: listUsingGET_14
2019-04-08 15:02:56 -Generating unique operation named: removeUsingPOST_24
2019-04-08 15:02:56 -Generating unique operation named: removeUsingPOST_25
2019-04-08 15:02:56 -Generating unique operation named: saveUsingPOST_12
2019-04-08 15:02:56 -Generating unique operation named: updateUsingGET_9
2019-04-08 15:02:56 -Generating unique operation named: updateUsingHEAD_9
2019-04-08 15:02:56 -Generating unique operation named: updateUsingPOST_13
2019-04-08 15:02:56 -Generating unique operation named: updateUsingPUT_9
2019-04-08 15:02:56 -Generating unique operation named: updateUsingPATCH_9
2019-04-08 15:02:56 -Generating unique operation named: updateUsingDELETE_9
2019-04-08 15:02:56 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-08 15:02:56 -Generating unique operation named: updateUsingTRACE_9
2019-04-08 15:02:56 -Generating unique operation named: addUsingGET_13
2019-04-08 15:02:56 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-08 15:02:56 -Generating unique operation named: editUsingGET_14
2019-04-08 15:02:57 -Generating unique operation named: listUsingGET_15
2019-04-08 15:02:57 -Generating unique operation named: saveUsingPOST_13
2019-04-08 15:02:57 -Generating unique operation named: saveUsingPOST_14
2019-04-08 15:02:57 -Generating unique operation named: updateUsingPOST_14
2019-04-08 15:02:57 -Generating unique operation named: listUsingGET_16
2019-04-08 15:02:57 -Generating unique operation named: listUsingHEAD_1
2019-04-08 15:02:57 -Generating unique operation named: listUsingPOST_1
2019-04-08 15:02:57 -Generating unique operation named: listUsingPUT_1
2019-04-08 15:02:57 -Generating unique operation named: listUsingPATCH_1
2019-04-08 15:02:57 -Generating unique operation named: listUsingDELETE_1
2019-04-08 15:02:57 -Generating unique operation named: listUsingOPTIONS_1
2019-04-08 15:02:57 -Generating unique operation named: listUsingTRACE_1
2019-04-08 15:02:57 -Generating unique operation named: addUsingGET_14
2019-04-08 15:02:57 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-08 15:02:57 -Generating unique operation named: editUsingGET_15
2019-04-08 15:02:57 -Generating unique operation named: listUsingGET_17
2019-04-08 15:02:57 -Generating unique operation named: removeUsingPOST_26
2019-04-08 15:02:57 -Generating unique operation named: saveUsingPOST_15
2019-04-08 15:02:57 -Generating unique operation named: treeUsingGET_3
2019-04-08 15:02:57 -Generating unique operation named: treeViewUsingGET_1
2019-04-08 15:02:57 -Generating unique operation named: updateUsingPOST_15
2019-04-08 15:02:57 -Generating unique operation named: addUsingGET_15
2019-04-08 15:02:57 -Generating unique operation named: editUsingGET_16
2019-04-08 15:02:57 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-08 15:02:57 -Generating unique operation named: listUsingGET_18
2019-04-08 15:02:57 -Generating unique operation named: removeUsingPOST_27
2019-04-08 15:02:57 -Generating unique operation named: removeUsingPOST_28
2019-04-08 15:02:57 -Generating unique operation named: saveUsingPOST_16
2019-04-08 15:02:57 -Generating unique operation named: updateUsingGET_10
2019-04-08 15:02:57 -Generating unique operation named: updateUsingHEAD_10
2019-04-08 15:02:57 -Generating unique operation named: updateUsingPOST_16
2019-04-08 15:02:57 -Generating unique operation named: updateUsingPUT_10
2019-04-08 15:02:57 -Generating unique operation named: updateUsingPATCH_10
2019-04-08 15:02:57 -Generating unique operation named: updateUsingDELETE_10
2019-04-08 15:02:57 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-08 15:02:57 -Generating unique operation named: updateUsingTRACE_10
2019-04-08 15:02:57 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-08 15:02:57 -Generating unique operation named: addUsingGET_16
2019-04-08 15:02:57 -Generating unique operation named: editUsingGET_17
2019-04-08 15:02:57 -Generating unique operation named: listUsingGET_19
2019-04-08 15:02:57 -Generating unique operation named: removeUsingPOST_29
2019-04-08 15:02:57 -Generating unique operation named: removeUsingPOST_30
2019-04-08 15:02:57 -Generating unique operation named: saveUsingPOST_17
2019-04-08 15:02:57 -Generating unique operation named: updateUsingGET_11
2019-04-08 15:02:57 -Generating unique operation named: updateUsingHEAD_11
2019-04-08 15:02:57 -Generating unique operation named: updateUsingPOST_17
2019-04-08 15:02:57 -Generating unique operation named: updateUsingPUT_11
2019-04-08 15:02:57 -Generating unique operation named: updateUsingPATCH_11
2019-04-08 15:02:57 -Generating unique operation named: updateUsingDELETE_11
2019-04-08 15:02:57 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-08 15:02:57 -Generating unique operation named: updateUsingTRACE_11
2019-04-08 15:02:57 -Generating unique operation named: addUsingGET_17
2019-04-08 15:02:57 -Generating unique operation named: editUsingGET_18
2019-04-08 15:02:57 -Generating unique operation named: listUsingGET_20
2019-04-08 15:02:57 -Generating unique operation named: removeUsingPOST_31
2019-04-08 15:02:57 -Generating unique operation named: removeUsingPOST_32
2019-04-08 15:02:57 -Generating unique operation named: saveUsingPOST_18
2019-04-08 15:02:57 -Generating unique operation named: updateUsingGET_12
2019-04-08 15:02:57 -Generating unique operation named: updateUsingHEAD_12
2019-04-08 15:02:57 -Generating unique operation named: updateUsingPOST_18
2019-04-08 15:02:57 -Generating unique operation named: updateUsingPUT_12
2019-04-08 15:02:57 -Generating unique operation named: updateUsingPATCH_12
2019-04-08 15:02:57 -Generating unique operation named: updateUsingDELETE_12
2019-04-08 15:02:57 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-08 15:02:57 -Generating unique operation named: updateUsingTRACE_12
2019-04-08 15:02:57 -Starting Quartz Scheduler now
2019-04-08 15:02:57 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-08 15:02:57 -Starting...
2019-04-08 15:02:57 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-08 15:02:57 -Started.
2019-04-08 15:02:57 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-08 15:02:57 -Using a shared selector for servlet write/read
2019-04-08 15:02:57 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-08 15:02:57 -Started BootdoApplication in 32.561 seconds (JVM running for 33.526)
2019-04-08 15:02:57 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-08 15:02:58 -==> Parameters: 
2019-04-08 15:02:58 -<==      Total: 1
2019-04-08 15:03:03 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-08 15:03:03 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-08 15:03:03 -FrameworkServlet 'dispatcherServlet': initialization completed in 74 ms
2019-04-08 15:03:03 -Enabling session validation scheduler...
2019-04-08 15:03:03 -请求地址 : http://localhost:8081/login;JSESSIONID=65119836-6c3b-4332-beb3-9c551e98ef58
2019-04-08 15:03:03 -HTTP METHOD : GET
2019-04-08 15:03:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-08 15:03:03 -参数 : [{}]
2019-04-08 15:03:03 -耗时 : 4
2019-04-08 15:03:03 -返回值 : login
2019-04-08 15:03:05 -请求地址 : http://localhost:8081/getVerify
2019-04-08 15:03:05 -HTTP METHOD : GET
2019-04-08 15:03:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-08 15:03:05 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5c623a22, org.apache.shiro.web.servlet.ShiroHttpServletResponse@94fc5a8]
2019-04-08 15:03:09 -1157
2019-04-08 15:03:10 -耗时 : 4913
2019-04-08 15:03:10 -返回值 : null
2019-04-08 15:03:26 -请求地址 : http://localhost:8081/login
2019-04-08 15:03:26 -HTTP METHOD : POST
2019-04-08 15:03:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-08 15:03:26 -参数 : [admin, 111111, 1157, org.apache.shiro.web.servlet.ShiroHttpServletRequest@42afd460]
2019-04-08 15:03:26 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-08 15:03:26 -==> Parameters: admin(String)
2019-04-08 15:03:27 -<==      Total: 1
2019-04-08 15:03:27 -耗时 : 257
2019-04-08 15:03:27 -返回值 : {msg=操作成功, code=0}
2019-04-08 15:03:27 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-08 15:03:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 15:03:27 -请求地址 : http://localhost:8081/index
2019-04-08 15:03:27 -HTTP METHOD : GET
2019-04-08 15:03:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 15:03:27 -参数 : [{}]
2019-04-08 15:03:27 -==> Parameters: 1(Long), admin(String), 登录(String), 257(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-08 15:03:27.338(Timestamp)
2019-04-08 15:03:27 -<==    Updates: 1
2019-04-08 15:03:27 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 15:03:27 -==> Parameters: 1(Long)
2019-04-08 15:03:28 -<==      Total: 46
2019-04-08 15:03:28 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 15:03:28 -==> Parameters: 138(Long)
2019-04-08 15:03:28 -<==      Total: 1
2019-04-08 15:03:28 -耗时 : 683
2019-04-08 15:03:28 -返回值 : index_v1
2019-04-08 15:03:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 15:03:28 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 683(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 15:03:28.187(Timestamp)
2019-04-08 15:03:28 -<==    Updates: 1
2019-04-08 15:03:28 -请求地址 : http://localhost:8081/main
2019-04-08 15:03:28 -HTTP METHOD : GET
2019-04-08 15:03:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 15:03:28 -参数 : []
2019-04-08 15:03:28 -耗时 : 1
2019-04-08 15:03:28 -返回值 : main
2019-04-08 15:03:28 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 15:03:28 -HTTP METHOD : GET
2019-04-08 15:03:28 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 15:03:28 -参数 : []
2019-04-08 15:03:28 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 15:03:28 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 15:03:28 -<==      Total: 0
2019-04-08 15:03:28 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 15:03:28 -==> Parameters: 1(Long), 0(String)
2019-04-08 15:03:28 -<==      Total: 1
2019-04-08 15:03:28 -耗时 : 100
2019-04-08 15:03:28 -返回值 : com.bootdo.common.utils.PageUtils@5b443d0d
2019-04-08 15:03:28 -请求地址 : http://localhost:8081/main
2019-04-08 15:03:28 -HTTP METHOD : GET
2019-04-08 15:03:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 15:03:28 -参数 : []
2019-04-08 15:03:28 -耗时 : 1
2019-04-08 15:03:28 -返回值 : main
2019-04-08 15:03:34 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-08 15:03:34 -==> Parameters: 1(Long)
2019-04-08 15:03:34 -<==      Total: 90
2019-04-08 15:03:34 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 15:03:34 -HTTP METHOD : GET
2019-04-08 15:03:34 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 15:03:34 -参数 : []
2019-04-08 15:03:34 -耗时 : 1
2019-04-08 15:03:34 -返回值 : /moneyList/moneyList
2019-04-08 15:03:39 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 15:03:39 -HTTP METHOD : GET
2019-04-08 15:03:39 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 15:03:39 -参数 : []
2019-04-08 15:03:39 -耗时 : 0
2019-04-08 15:03:39 -返回值 : system/dept/deptTree
2019-04-08 15:03:39 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 15:03:39 -HTTP METHOD : GET
2019-04-08 15:03:39 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 15:03:39 -参数 : []
2019-04-08 15:03:39 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 15:03:39 -==> Parameters: 
2019-04-08 15:03:39 -<==      Total: 3
2019-04-08 15:03:39 -耗时 : 43
2019-04-08 15:03:39 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 15:03:46 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 15:03:46 -HTTP METHOD : POST
2019-04-08 15:03:46 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 15:03:46 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@47ef6c1f]
2019-04-08 15:03:46 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 15:03:46 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 15:03:46 -<==      Total: 3
2019-04-08 15:03:46 -耗时 : 216
2019-04-08 15:03:46 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@46463846, com.bootdo.moneyList.damain.MoneyListDO@4592ebf3, com.bootdo.moneyList.damain.MoneyListDO@622ed3fe]
2019-04-08 15:03:50 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 15:03:50 -HTTP METHOD : POST
2019-04-08 15:03:50 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 15:03:50 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@4e9258fa]
2019-04-08 15:03:50 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 15:03:50 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 15:03:50 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 5]
2019-04-08 15:03:50 -<==    Updates: 1
2019-04-08 15:03:50 -耗时 : 137
2019-04-08 15:03:50 -返回值 : 0
2019-04-08 15:03:51 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 15:03:51 -HTTP METHOD : POST
2019-04-08 15:03:51 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 15:03:51 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@7cd66301]
2019-04-08 15:03:51 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 15:03:51 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 15:03:51 -<==      Total: 3
2019-04-08 15:03:51 -耗时 : 9
2019-04-08 15:03:51 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@5def228e, com.bootdo.moneyList.damain.MoneyListDO@77e90bca, com.bootdo.moneyList.damain.MoneyListDO@96a5335]
2019-04-08 15:03:52 -请求地址 : http://localhost:8081/print/print/Print
2019-04-08 15:03:52 -HTTP METHOD : GET
2019-04-08 15:03:52 -CLASS_METHOD : com.bootdo.print.controller.PrintController.PrintEdit
2019-04-08 15:03:52 -参数 : []
2019-04-08 15:03:52 -耗时 : 1
2019-04-08 15:03:52 -返回值 : print/print/printEdit
2019-04-08 15:03:52 -[THYMELEAF][http-nio-8081-exec-1] Exception processing template "print/print/printEdit": An error happened during template parsing (template: "class path resource [templates/print/print/printEdit.html]")
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/print/print/printEdit.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "print.userId" (template: "print/print/printEdit" - line 14, col 16)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 69 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "print.userId" (template: "print/print/printEdit" - line 14, col 16)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:165)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:126)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 71 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'userId' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:407)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:89)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:111)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:334)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 90 common frames omitted
2019-04-08 15:03:52 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/print/print/printEdit.html]")] with root cause
org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'userId' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:407)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:89)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:111)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:334)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:165)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:126)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-08 15:05:36 -请求地址 : http://localhost:8081/charts/countDD
2019-04-08 15:05:36 -HTTP METHOD : GET
2019-04-08 15:05:36 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-04-08 15:05:36 -参数 : []
2019-04-08 15:05:36 -耗时 : 15
2019-04-08 15:05:36 -返回值 : charts/countDD
2019-04-08 15:05:37 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 15:05:37 -HTTP METHOD : GET
2019-04-08 15:05:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 15:05:37 -参数 : [userType]
2019-04-08 15:05:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 15:05:37 -==> Parameters: userType(String)
2019-04-08 15:05:37 -<==      Total: 2
2019-04-08 15:05:37 -耗时 : 64
2019-04-08 15:05:37 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 15:05:37 -请求地址 : http://localhost:8081/charts/countDD/tableDD
2019-04-08 15:05:37 -HTTP METHOD : POST
2019-04-08 15:05:37 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.tableDD
2019-04-08 15:05:37 -参数 : []
2019-04-08 15:05:37 -耗时 : 1
2019-04-08 15:05:37 -返回值 : charts/tableDD
2019-04-08 15:05:38 -请求地址 : http://localhost:8081/login
2019-04-08 15:05:38 -HTTP METHOD : GET
2019-04-08 15:05:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-08 15:05:38 -参数 : [{}]
2019-04-08 15:05:38 -耗时 : 0
2019-04-08 15:05:38 -返回值 : login
2019-04-08 15:05:38 -请求地址 : http://localhost:8081/getVerify
2019-04-08 15:05:38 -HTTP METHOD : GET
2019-04-08 15:05:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-08 15:05:38 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@2a377ca0, org.apache.shiro.web.servlet.ShiroHttpServletResponse@77c36e49]
2019-04-08 15:05:38 -6569
2019-04-08 15:05:38 -耗时 : 60
2019-04-08 15:05:38 -返回值 : null
2019-04-08 15:05:55 -请求地址 : http://localhost:8081/login
2019-04-08 15:05:55 -HTTP METHOD : POST
2019-04-08 15:05:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-08 15:05:55 -参数 : [admin, 111111, 6569, org.apache.shiro.web.servlet.ShiroHttpServletRequest@4b10f859]
2019-04-08 15:05:55 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-08 15:05:55 -==> Parameters: admin(String)
2019-04-08 15:05:55 -<==      Total: 1
2019-04-08 15:05:55 -耗时 : 103
2019-04-08 15:05:55 -返回值 : {msg=操作成功, code=0}
2019-04-08 15:05:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 15:05:55 -==> Parameters: 1(Long), admin(String), 登录(String), 104(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-08 15:05:55.457(Timestamp)
2019-04-08 15:05:55 -请求地址 : http://localhost:8081/index
2019-04-08 15:05:55 -HTTP METHOD : GET
2019-04-08 15:05:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 15:05:55 -参数 : [{}]
2019-04-08 15:05:55 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 15:05:55 -==> Parameters: 1(Long)
2019-04-08 15:05:55 -<==    Updates: 1
2019-04-08 15:05:55 -<==      Total: 46
2019-04-08 15:05:55 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 15:05:55 -==> Parameters: 138(Long)
2019-04-08 15:05:55 -<==      Total: 1
2019-04-08 15:05:55 -耗时 : 253
2019-04-08 15:05:55 -返回值 : index_v1
2019-04-08 15:05:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 15:05:55 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 253(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 15:05:55.753(Timestamp)
2019-04-08 15:05:55 -<==    Updates: 1
2019-04-08 15:05:55 -请求地址 : http://localhost:8081/main
2019-04-08 15:05:55 -HTTP METHOD : GET
2019-04-08 15:05:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 15:05:55 -参数 : []
2019-04-08 15:05:55 -耗时 : 0
2019-04-08 15:05:55 -返回值 : main
2019-04-08 15:05:56 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 15:05:56 -HTTP METHOD : GET
2019-04-08 15:05:56 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 15:05:56 -参数 : []
2019-04-08 15:05:56 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 15:05:56 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 15:05:56 -<==      Total: 0
2019-04-08 15:05:56 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 15:05:56 -==> Parameters: 1(Long), 0(String)
2019-04-08 15:05:56 -<==      Total: 1
2019-04-08 15:05:56 -耗时 : 315
2019-04-08 15:05:56 -返回值 : com.bootdo.common.utils.PageUtils@4afd669e
2019-04-08 15:05:56 -请求地址 : http://localhost:8081/main
2019-04-08 15:05:56 -HTTP METHOD : GET
2019-04-08 15:05:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 15:05:56 -参数 : []
2019-04-08 15:05:56 -耗时 : 1
2019-04-08 15:05:56 -返回值 : main
2019-04-08 15:13:18 -请求地址 : http://localhost:8081/index
2019-04-08 15:13:18 -HTTP METHOD : GET
2019-04-08 15:13:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 15:13:18 -参数 : [{}]
2019-04-08 15:13:18 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 15:13:18 -==> Parameters: 1(Long)
2019-04-08 15:13:18 -<==      Total: 46
2019-04-08 15:13:18 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 15:13:18 -==> Parameters: 138(Long)
2019-04-08 15:13:18 -<==      Total: 1
2019-04-08 15:13:18 -耗时 : 26
2019-04-08 15:13:18 -返回值 : index_v1
2019-04-08 15:13:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 15:13:18 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 26(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 15:13:18.082(Timestamp)
2019-04-08 15:13:18 -请求地址 : http://localhost:8081/main
2019-04-08 15:13:18 -HTTP METHOD : GET
2019-04-08 15:13:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 15:13:18 -参数 : []
2019-04-08 15:13:18 -耗时 : 0
2019-04-08 15:13:18 -返回值 : main
2019-04-08 15:13:18 -<==    Updates: 1
2019-04-08 15:13:18 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 15:13:18 -HTTP METHOD : GET
2019-04-08 15:13:18 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 15:13:18 -参数 : []
2019-04-08 15:13:18 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 15:13:18 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 15:13:18 -<==      Total: 0
2019-04-08 15:13:18 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 15:13:18 -==> Parameters: 1(Long), 0(String)
2019-04-08 15:13:18 -<==      Total: 1
2019-04-08 15:13:18 -耗时 : 16
2019-04-08 15:13:18 -返回值 : com.bootdo.common.utils.PageUtils@5b0607ba
2019-04-08 15:13:19 -请求地址 : http://localhost:8081/main
2019-04-08 15:13:19 -HTTP METHOD : GET
2019-04-08 15:13:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 15:13:19 -参数 : []
2019-04-08 15:13:19 -耗时 : 0
2019-04-08 15:13:19 -返回值 : main
2019-04-08 15:13:21 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-08 15:13:21 -==> Parameters: 1(Long)
2019-04-08 15:13:21 -<==      Total: 90
2019-04-08 15:13:21 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 15:13:21 -HTTP METHOD : GET
2019-04-08 15:13:21 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 15:13:21 -参数 : []
2019-04-08 15:13:21 -耗时 : 0
2019-04-08 15:13:21 -返回值 : /moneyList/moneyList
2019-04-08 15:13:27 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 15:13:27 -HTTP METHOD : GET
2019-04-08 15:13:27 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 15:13:27 -参数 : []
2019-04-08 15:13:27 -耗时 : 0
2019-04-08 15:13:27 -返回值 : system/dept/deptTree
2019-04-08 15:13:27 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 15:13:27 -HTTP METHOD : GET
2019-04-08 15:13:27 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 15:13:27 -参数 : []
2019-04-08 15:13:27 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 15:13:27 -==> Parameters: 
2019-04-08 15:13:27 -<==      Total: 3
2019-04-08 15:13:27 -耗时 : 84
2019-04-08 15:13:27 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 15:13:35 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 15:13:35 -HTTP METHOD : POST
2019-04-08 15:13:35 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 15:13:35 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@58cb5dcb]
2019-04-08 15:13:35 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 15:13:35 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 15:13:35 -<==      Total: 3
2019-04-08 15:13:35 -耗时 : 27
2019-04-08 15:13:35 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@2406d6a5, com.bootdo.moneyList.damain.MoneyListDO@26a1f2eb, com.bootdo.moneyList.damain.MoneyListDO@138575a1]
2019-04-08 15:13:40 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 15:13:40 -HTTP METHOD : POST
2019-04-08 15:13:40 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 15:13:40 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@5ff74c5c]
2019-04-08 15:13:40 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 15:13:40 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 15:13:40 -<==    Updates: 1
2019-04-08 15:13:40 -耗时 : 167
2019-04-08 15:13:40 -返回值 : 0
2019-04-08 15:13:42 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 15:13:42 -HTTP METHOD : POST
2019-04-08 15:13:42 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 15:13:42 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@769a5caa]
2019-04-08 15:13:42 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 15:13:42 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 15:13:42 -<==      Total: 3
2019-04-08 15:13:42 -耗时 : 11
2019-04-08 15:13:42 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@46c8253e, com.bootdo.moneyList.damain.MoneyListDO@5aa73e4c, com.bootdo.moneyList.damain.MoneyListDO@7e7c56be]
2019-04-08 15:13:43 -请求地址 : http://localhost:8081/print/print/
2019-04-08 15:13:43 -HTTP METHOD : GET
2019-04-08 15:13:43 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-08 15:13:43 -参数 : []
2019-04-08 15:13:43 -耗时 : 0
2019-04-08 15:13:43 -返回值 : print/print/print
2019-04-08 15:13:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 15:13:43 -HTTP METHOD : GET
2019-04-08 15:13:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 15:13:43 -参数 : [userType]
2019-04-08 15:13:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 15:13:43 -==> Parameters: userType(String)
2019-04-08 15:13:43 -<==      Total: 2
2019-04-08 15:13:43 -耗时 : 26
2019-04-08 15:13:43 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 15:13:43 -请求地址 : http://localhost:8081/print/print/list
2019-04-08 15:13:43 -HTTP METHOD : GET
2019-04-08 15:13:43 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-08 15:13:43 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-08 15:13:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-08 15:13:43 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 15:13:43 -<==      Total: 4
2019-04-08 15:13:43 -==>  Preparing: select count(*) from print 
2019-04-08 15:13:43 -==> Parameters: 
2019-04-08 15:13:43 -<==      Total: 1
2019-04-08 15:13:43 -耗时 : 44
2019-04-08 15:13:43 -返回值 : com.bootdo.common.utils.PageUtils@233485d9
2019-04-08 15:13:50 -请求地址 : http://localhost:8081/print/print/printEdit/1
2019-04-08 15:13:50 -HTTP METHOD : GET
2019-04-08 15:13:50 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printEdit
2019-04-08 15:13:50 -参数 : [1, {}]
2019-04-08 15:13:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-04-08 15:13:50 -==> Parameters: 1(Long)
2019-04-08 15:13:50 -<==      Total: 1
2019-04-08 15:13:50 -耗时 : 6
2019-04-08 15:13:50 -返回值 : print/print/printEdit
2019-04-08 15:13:55 -请求地址 : http://localhost:8081/print/print/printEdit/1
2019-04-08 15:13:55 -HTTP METHOD : GET
2019-04-08 15:13:55 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printEdit
2019-04-08 15:13:55 -参数 : [1, {}]
2019-04-08 15:13:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-04-08 15:13:55 -==> Parameters: 1(Long)
2019-04-08 15:13:55 -<==      Total: 1
2019-04-08 15:13:55 -耗时 : 5
2019-04-08 15:13:55 -返回值 : print/print/printEdit
2019-04-08 15:15:19 -请求地址 : http://localhost:8081/index
2019-04-08 15:15:19 -HTTP METHOD : GET
2019-04-08 15:15:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 15:15:19 -参数 : [{}]
2019-04-08 15:15:19 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 15:15:19 -==> Parameters: 1(Long)
2019-04-08 15:15:19 -<==      Total: 46
2019-04-08 15:15:19 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 15:15:19 -==> Parameters: 138(Long)
2019-04-08 15:15:19 -<==      Total: 1
2019-04-08 15:15:19 -耗时 : 28
2019-04-08 15:15:19 -返回值 : index_v1
2019-04-08 15:15:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 15:15:19 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 28(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 15:15:19.128(Timestamp)
2019-04-08 15:15:19 -<==    Updates: 1
2019-04-08 15:15:19 -请求地址 : http://localhost:8081/main
2019-04-08 15:15:19 -HTTP METHOD : GET
2019-04-08 15:15:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 15:15:19 -参数 : []
2019-04-08 15:15:19 -耗时 : 94
2019-04-08 15:15:19 -返回值 : main
2019-04-08 15:15:19 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 15:15:19 -HTTP METHOD : GET
2019-04-08 15:15:19 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 15:15:19 -参数 : []
2019-04-08 15:15:19 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 15:15:19 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 15:15:19 -<==      Total: 0
2019-04-08 15:15:19 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 15:15:19 -==> Parameters: 1(Long), 0(String)
2019-04-08 15:15:19 -<==      Total: 1
2019-04-08 15:15:19 -耗时 : 6
2019-04-08 15:15:19 -返回值 : com.bootdo.common.utils.PageUtils@3815856a
2019-04-08 15:15:19 -请求地址 : http://localhost:8081/main
2019-04-08 15:15:19 -HTTP METHOD : GET
2019-04-08 15:15:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 15:15:19 -参数 : []
2019-04-08 15:15:19 -耗时 : 1
2019-04-08 15:15:19 -返回值 : main
2019-04-08 15:15:22 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 15:15:22 -HTTP METHOD : GET
2019-04-08 15:15:22 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 15:15:22 -参数 : []
2019-04-08 15:15:22 -耗时 : 1
2019-04-08 15:15:22 -返回值 : /moneyList/moneyList
2019-04-08 15:15:26 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 15:15:26 -HTTP METHOD : GET
2019-04-08 15:15:26 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 15:15:26 -参数 : []
2019-04-08 15:15:26 -耗时 : 1
2019-04-08 15:15:26 -返回值 : system/dept/deptTree
2019-04-08 15:15:26 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 15:15:26 -HTTP METHOD : GET
2019-04-08 15:15:26 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 15:15:26 -参数 : []
2019-04-08 15:15:26 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 15:15:26 -==> Parameters: 
2019-04-08 15:15:26 -<==      Total: 3
2019-04-08 15:15:26 -耗时 : 5
2019-04-08 15:15:26 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 15:15:28 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 15:15:28 -HTTP METHOD : POST
2019-04-08 15:15:28 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 15:15:28 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@4567d5a3]
2019-04-08 15:15:28 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 15:15:28 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 15:15:28 -<==      Total: 3
2019-04-08 15:15:28 -耗时 : 4
2019-04-08 15:15:28 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@294ad7f7, com.bootdo.moneyList.damain.MoneyListDO@c34ce87, com.bootdo.moneyList.damain.MoneyListDO@7705d86f]
2019-04-08 15:15:32 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 15:15:32 -HTTP METHOD : POST
2019-04-08 15:15:32 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 15:15:32 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@1aab33c8]
2019-04-08 15:15:32 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 15:15:32 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 15:15:32 -<==    Updates: 1
2019-04-08 15:15:32 -耗时 : 86
2019-04-08 15:15:32 -返回值 : 0
2019-04-08 15:15:33 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 15:15:33 -HTTP METHOD : POST
2019-04-08 15:15:33 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 15:15:33 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@42146814]
2019-04-08 15:15:33 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 15:15:33 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 15:15:33 -<==      Total: 3
2019-04-08 15:15:33 -耗时 : 7
2019-04-08 15:15:33 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@17bc05d, com.bootdo.moneyList.damain.MoneyListDO@3dbed5cd, com.bootdo.moneyList.damain.MoneyListDO@6c2666ac]
2019-04-08 15:18:09 -请求地址 : http://localhost:8081/index
2019-04-08 15:18:09 -HTTP METHOD : GET
2019-04-08 15:18:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 15:18:09 -参数 : [{}]
2019-04-08 15:18:09 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 15:18:09 -==> Parameters: 1(Long)
2019-04-08 15:18:09 -<==      Total: 46
2019-04-08 15:18:09 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 15:18:09 -==> Parameters: 138(Long)
2019-04-08 15:18:09 -<==      Total: 1
2019-04-08 15:18:09 -耗时 : 17
2019-04-08 15:18:09 -返回值 : index_v1
2019-04-08 15:18:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 15:18:09 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 15:18:09.344(Timestamp)
2019-04-08 15:18:09 -<==    Updates: 1
2019-04-08 15:18:09 -请求地址 : http://localhost:8081/main
2019-04-08 15:18:09 -HTTP METHOD : GET
2019-04-08 15:18:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 15:18:09 -参数 : []
2019-04-08 15:18:09 -耗时 : 1
2019-04-08 15:18:09 -返回值 : main
2019-04-08 15:18:09 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 15:18:09 -HTTP METHOD : GET
2019-04-08 15:18:09 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 15:18:09 -参数 : []
2019-04-08 15:18:09 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 15:18:09 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 15:18:09 -<==      Total: 0
2019-04-08 15:18:09 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 15:18:09 -==> Parameters: 1(Long), 0(String)
2019-04-08 15:18:09 -<==      Total: 1
2019-04-08 15:18:09 -耗时 : 10
2019-04-08 15:18:09 -返回值 : com.bootdo.common.utils.PageUtils@26fd24b2
2019-04-08 15:18:10 -请求地址 : http://localhost:8081/main
2019-04-08 15:18:10 -HTTP METHOD : GET
2019-04-08 15:18:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 15:18:10 -参数 : []
2019-04-08 15:18:10 -耗时 : 1
2019-04-08 15:18:10 -返回值 : main
2019-04-08 15:18:11 -请求地址 : http://localhost:8081/elec/elec
2019-04-08 15:18:11 -HTTP METHOD : GET
2019-04-08 15:18:11 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-04-08 15:18:11 -参数 : []
2019-04-08 15:18:11 -耗时 : 1
2019-04-08 15:18:11 -返回值 : elec/elec/elec
2019-04-08 15:18:12 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 15:18:12 -HTTP METHOD : GET
2019-04-08 15:18:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 15:18:12 -参数 : [userType]
2019-04-08 15:18:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 15:18:12 -==> Parameters: userType(String)
2019-04-08 15:18:12 -<==      Total: 2
2019-04-08 15:18:12 -耗时 : 6
2019-04-08 15:18:12 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 15:18:12 -请求地址 : http://localhost:8081/elec/elec/list
2019-04-08 15:18:12 -HTTP METHOD : GET
2019-04-08 15:18:12 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-04-08 15:18:12 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@f96ea87]
2019-04-08 15:18:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-04-08 15:18:12 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 15:18:12 -<==      Total: 10
2019-04-08 15:18:12 -==>  Preparing: select count(*) from elec 
2019-04-08 15:18:12 -==> Parameters: 
2019-04-08 15:18:12 -<==      Total: 1
2019-04-08 15:18:12 -耗时 : 63
2019-04-08 15:18:12 -返回值 : com.bootdo.common.utils.PageUtils@8644e5b
2019-04-08 15:18:17 -请求地址 : http://localhost:8081/index
2019-04-08 15:18:17 -HTTP METHOD : GET
2019-04-08 15:18:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 15:18:17 -参数 : [{}]
2019-04-08 15:18:17 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 15:18:17 -==> Parameters: 1(Long)
2019-04-08 15:18:17 -<==      Total: 46
2019-04-08 15:18:17 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 15:18:17 -==> Parameters: 138(Long)
2019-04-08 15:18:17 -<==      Total: 1
2019-04-08 15:18:17 -耗时 : 30
2019-04-08 15:18:17 -返回值 : index_v1
2019-04-08 15:18:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 15:18:17 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 30(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 15:18:17.912(Timestamp)
2019-04-08 15:18:17 -<==    Updates: 1
2019-04-08 15:18:18 -请求地址 : http://localhost:8081/main
2019-04-08 15:18:18 -HTTP METHOD : GET
2019-04-08 15:18:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 15:18:18 -参数 : []
2019-04-08 15:18:18 -耗时 : 1
2019-04-08 15:18:18 -返回值 : main
2019-04-08 15:18:18 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 15:18:18 -HTTP METHOD : GET
2019-04-08 15:18:18 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 15:18:18 -参数 : []
2019-04-08 15:18:18 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 15:18:18 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 15:18:18 -<==      Total: 0
2019-04-08 15:18:18 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 15:18:18 -==> Parameters: 1(Long), 0(String)
2019-04-08 15:18:18 -<==      Total: 1
2019-04-08 15:18:18 -耗时 : 7
2019-04-08 15:18:18 -返回值 : com.bootdo.common.utils.PageUtils@25e08a3e
2019-04-08 15:18:18 -请求地址 : http://localhost:8081/main
2019-04-08 15:18:18 -HTTP METHOD : GET
2019-04-08 15:18:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 15:18:18 -参数 : []
2019-04-08 15:18:18 -耗时 : 0
2019-04-08 15:18:18 -返回值 : main
2019-04-08 15:18:20 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 15:18:20 -HTTP METHOD : GET
2019-04-08 15:18:20 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 15:18:20 -参数 : []
2019-04-08 15:18:20 -耗时 : 1
2019-04-08 15:18:20 -返回值 : /moneyList/moneyList
2019-04-08 15:18:24 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 15:18:24 -HTTP METHOD : GET
2019-04-08 15:18:24 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 15:18:24 -参数 : []
2019-04-08 15:18:24 -耗时 : 0
2019-04-08 15:18:24 -返回值 : system/dept/deptTree
2019-04-08 15:18:25 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 15:18:25 -HTTP METHOD : GET
2019-04-08 15:18:25 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 15:18:25 -参数 : []
2019-04-08 15:18:25 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 15:18:25 -==> Parameters: 
2019-04-08 15:18:25 -<==      Total: 3
2019-04-08 15:18:25 -耗时 : 3
2019-04-08 15:18:25 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 15:18:28 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 15:18:28 -HTTP METHOD : POST
2019-04-08 15:18:28 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 15:18:28 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@74a5a2b3]
2019-04-08 15:18:28 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 15:18:28 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 15:18:28 -<==      Total: 3
2019-04-08 15:18:28 -耗时 : 4
2019-04-08 15:18:28 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@6752d1c4, com.bootdo.moneyList.damain.MoneyListDO@4642166a, com.bootdo.moneyList.damain.MoneyListDO@1f2b842b]
2019-04-08 15:18:31 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 15:18:31 -HTTP METHOD : POST
2019-04-08 15:18:31 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 15:18:31 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@6a6dea83]
2019-04-08 15:18:31 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 15:18:31 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 15:18:31 -<==    Updates: 1
2019-04-08 15:18:31 -耗时 : 52
2019-04-08 15:18:31 -返回值 : 0
2019-04-08 15:18:32 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 15:18:32 -HTTP METHOD : POST
2019-04-08 15:18:32 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 15:18:32 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@5c33e1db]
2019-04-08 15:18:32 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 15:18:32 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 15:18:32 -<==      Total: 3
2019-04-08 15:18:32 -耗时 : 6
2019-04-08 15:18:32 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@7f446922, com.bootdo.moneyList.damain.MoneyListDO@22216c2d, com.bootdo.moneyList.damain.MoneyListDO@10b6b426]
2019-04-08 15:18:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 15:18:33 -Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "{id}"
org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "{id}"
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:131)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.NumberFormatException: For input string: "{id}"
	at java.lang.NumberFormatException.forInputString(Unknown Source)
	at java.lang.Long.parseLong(Unknown Source)
	at java.lang.Long.valueOf(Unknown Source)
	at org.springframework.util.NumberUtils.parseNumber(NumberUtils.java:213)
	at org.springframework.beans.propertyeditors.CustomNumberEditor.setAsText(CustomNumberEditor.java:115)
	at org.springframework.beans.TypeConverterDelegate.doConvertTextValue(TypeConverterDelegate.java:466)
	at org.springframework.beans.TypeConverterDelegate.doConvertValue(TypeConverterDelegate.java:439)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:192)
	at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:99)
	at org.springframework.beans.TypeConverterSupport.doConvert(TypeConverterSupport.java:73)
	at org.springframework.beans.TypeConverterSupport.convertIfNecessary(TypeConverterSupport.java:52)
	at org.springframework.validation.DataBinder.convertIfNecessary(DataBinder.java:692)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:123)
	... 68 common frames omitted
2019-04-08 15:18:33 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/print/print/printEdit/%7Bid%7D(String), org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: "{id}"(String), null, 2019-04-08 15:18:33.717(Timestamp)
2019-04-08 15:18:33 -<==    Updates: 1
2019-04-08 15:19:42 -请求地址 : http://localhost:8081/index
2019-04-08 15:19:42 -HTTP METHOD : GET
2019-04-08 15:19:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 15:19:42 -参数 : [{}]
2019-04-08 15:19:42 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 15:19:42 -==> Parameters: 1(Long)
2019-04-08 15:19:42 -<==      Total: 46
2019-04-08 15:19:42 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 15:19:42 -==> Parameters: 138(Long)
2019-04-08 15:19:42 -<==      Total: 1
2019-04-08 15:19:42 -耗时 : 21
2019-04-08 15:19:42 -返回值 : index_v1
2019-04-08 15:19:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 15:19:42 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 15:19:42.309(Timestamp)
2019-04-08 15:19:42 -<==    Updates: 1
2019-04-08 15:19:42 -请求地址 : http://localhost:8081/main
2019-04-08 15:19:42 -HTTP METHOD : GET
2019-04-08 15:19:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 15:19:42 -参数 : []
2019-04-08 15:19:42 -耗时 : 0
2019-04-08 15:19:42 -返回值 : main
2019-04-08 15:19:42 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 15:19:42 -HTTP METHOD : GET
2019-04-08 15:19:42 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 15:19:42 -参数 : []
2019-04-08 15:19:42 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 15:19:42 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 15:19:42 -<==      Total: 0
2019-04-08 15:19:42 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 15:19:42 -==> Parameters: 1(Long), 0(String)
2019-04-08 15:19:42 -<==      Total: 1
2019-04-08 15:19:42 -耗时 : 8
2019-04-08 15:19:42 -返回值 : com.bootdo.common.utils.PageUtils@2e13bc77
2019-04-08 15:19:43 -请求地址 : http://localhost:8081/main
2019-04-08 15:19:43 -HTTP METHOD : GET
2019-04-08 15:19:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 15:19:43 -参数 : []
2019-04-08 15:19:43 -耗时 : 1
2019-04-08 15:19:43 -返回值 : main
2019-04-08 15:19:44 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 15:19:44 -HTTP METHOD : GET
2019-04-08 15:19:44 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 15:19:44 -参数 : []
2019-04-08 15:19:44 -耗时 : 0
2019-04-08 15:19:44 -返回值 : /moneyList/moneyList
2019-04-08 15:19:49 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 15:19:49 -HTTP METHOD : GET
2019-04-08 15:19:49 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 15:19:49 -参数 : []
2019-04-08 15:19:49 -耗时 : 1
2019-04-08 15:19:49 -返回值 : system/dept/deptTree
2019-04-08 15:19:49 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 15:19:49 -HTTP METHOD : GET
2019-04-08 15:19:49 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 15:19:49 -参数 : []
2019-04-08 15:19:49 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 15:19:49 -==> Parameters: 
2019-04-08 15:19:49 -<==      Total: 3
2019-04-08 15:19:49 -耗时 : 6
2019-04-08 15:19:49 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 15:19:55 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 15:19:55 -HTTP METHOD : POST
2019-04-08 15:19:55 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 15:19:55 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@553beeac]
2019-04-08 15:19:55 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 15:19:55 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 15:19:55 -<==      Total: 3
2019-04-08 15:19:55 -耗时 : 4
2019-04-08 15:19:55 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@380d328a, com.bootdo.moneyList.damain.MoneyListDO@4d2fbe13, com.bootdo.moneyList.damain.MoneyListDO@476b6794]
2019-04-08 15:19:58 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 15:19:58 -HTTP METHOD : POST
2019-04-08 15:19:58 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 15:19:58 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@23d1fe09]
2019-04-08 15:19:58 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 15:19:58 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 15:19:58 -<==    Updates: 1
2019-04-08 15:19:58 -耗时 : 95
2019-04-08 15:19:58 -返回值 : 0
2019-04-08 15:20:00 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 15:20:00 -HTTP METHOD : POST
2019-04-08 15:20:00 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 15:20:00 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@2825b1fd]
2019-04-08 15:20:00 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 15:20:00 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 15:20:00 -<==      Total: 3
2019-04-08 15:20:00 -耗时 : 7
2019-04-08 15:20:00 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@26c0ccc8, com.bootdo.moneyList.damain.MoneyListDO@7079c915, com.bootdo.moneyList.damain.MoneyListDO@755624be]
2019-04-08 15:33:50 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 8 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(7)-CONNECTED(7)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 84], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 14], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 436]
2019-04-08 16:03:03 -Validating all active sessions...
2019-04-08 16:03:03 -Finished session validation.  [1] sessions were stopped.
2019-04-08 16:03:50 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 8 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(7)-CONNECTED(7)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 87], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 15], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 822]
2019-04-08 16:17:00 -请求地址 : http://localhost:8081/login;JSESSIONID=9b28ec16-06a0-49b1-8d6e-e0fca612a38d
2019-04-08 16:17:00 -HTTP METHOD : GET
2019-04-08 16:17:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-08 16:17:00 -参数 : [{}]
2019-04-08 16:17:00 -耗时 : 1
2019-04-08 16:17:00 -返回值 : login
2019-04-08 16:17:01 -请求地址 : http://localhost:8081/getVerify
2019-04-08 16:17:01 -HTTP METHOD : GET
2019-04-08 16:17:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-08 16:17:01 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@20ade2d2, org.apache.shiro.web.servlet.ShiroHttpServletResponse@44190643]
2019-04-08 16:17:01 -9048
2019-04-08 16:17:01 -耗时 : 65
2019-04-08 16:17:01 -返回值 : null
2019-04-08 16:17:06 -请求地址 : http://localhost:8081/login
2019-04-08 16:17:06 -HTTP METHOD : POST
2019-04-08 16:17:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-08 16:17:06 -参数 : [admin, 111111, 9048, org.apache.shiro.web.servlet.ShiroHttpServletRequest@79056dd6]
2019-04-08 16:17:06 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-08 16:17:06 -==> Parameters: admin(String)
2019-04-08 16:17:06 -<==      Total: 1
2019-04-08 16:17:06 -耗时 : 73
2019-04-08 16:17:06 -返回值 : {msg=操作成功, code=0}
2019-04-08 16:17:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 16:17:06 -==> Parameters: 1(Long), admin(String), 登录(String), 73(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-08 16:17:06.351(Timestamp)
2019-04-08 16:17:06 -请求地址 : http://localhost:8081/index
2019-04-08 16:17:06 -HTTP METHOD : GET
2019-04-08 16:17:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 16:17:06 -参数 : [{}]
2019-04-08 16:17:06 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 16:17:06 -<==    Updates: 1
2019-04-08 16:17:06 -==> Parameters: 1(Long)
2019-04-08 16:17:06 -<==      Total: 46
2019-04-08 16:17:06 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 16:17:06 -==> Parameters: 138(Long)
2019-04-08 16:17:06 -<==      Total: 1
2019-04-08 16:17:06 -耗时 : 246
2019-04-08 16:17:06 -返回值 : index_v1
2019-04-08 16:17:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 16:17:06 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 246(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 16:17:06.624(Timestamp)
2019-04-08 16:17:06 -<==    Updates: 1
2019-04-08 16:17:07 -请求地址 : http://localhost:8081/main
2019-04-08 16:17:07 -HTTP METHOD : GET
2019-04-08 16:17:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 16:17:07 -参数 : []
2019-04-08 16:17:07 -耗时 : 1
2019-04-08 16:17:07 -返回值 : main
2019-04-08 16:17:08 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 16:17:08 -HTTP METHOD : GET
2019-04-08 16:17:08 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 16:17:08 -参数 : []
2019-04-08 16:17:08 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 16:17:08 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 16:17:08 -<==      Total: 0
2019-04-08 16:17:08 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 16:17:08 -==> Parameters: 1(Long), 0(String)
2019-04-08 16:17:08 -<==      Total: 1
2019-04-08 16:17:08 -耗时 : 9
2019-04-08 16:17:08 -返回值 : com.bootdo.common.utils.PageUtils@79aa707
2019-04-08 16:17:08 -请求地址 : http://localhost:8081/main
2019-04-08 16:17:08 -HTTP METHOD : GET
2019-04-08 16:17:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 16:17:08 -参数 : []
2019-04-08 16:17:08 -耗时 : 1
2019-04-08 16:17:08 -返回值 : main
2019-04-08 16:17:10 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-08 16:17:10 -==> Parameters: 1(Long)
2019-04-08 16:17:10 -<==      Total: 90
2019-04-08 16:17:10 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 16:17:10 -HTTP METHOD : GET
2019-04-08 16:17:10 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 16:17:10 -参数 : []
2019-04-08 16:17:10 -耗时 : 0
2019-04-08 16:17:10 -返回值 : /moneyList/moneyList
2019-04-08 16:17:15 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 16:17:15 -HTTP METHOD : GET
2019-04-08 16:17:15 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 16:17:15 -参数 : []
2019-04-08 16:17:15 -耗时 : 1
2019-04-08 16:17:15 -返回值 : system/dept/deptTree
2019-04-08 16:17:15 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 16:17:15 -HTTP METHOD : GET
2019-04-08 16:17:15 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 16:17:15 -参数 : []
2019-04-08 16:17:15 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 16:17:15 -==> Parameters: 
2019-04-08 16:17:15 -<==      Total: 3
2019-04-08 16:17:15 -耗时 : 35
2019-04-08 16:17:15 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 16:17:17 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 16:17:17 -HTTP METHOD : POST
2019-04-08 16:17:17 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 16:17:17 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@4aa68be]
2019-04-08 16:17:17 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 16:17:17 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 16:17:17 -<==      Total: 3
2019-04-08 16:17:17 -耗时 : 40
2019-04-08 16:17:17 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@75936200, com.bootdo.moneyList.damain.MoneyListDO@56d4629f, com.bootdo.moneyList.damain.MoneyListDO@1ec0f63]
2019-04-08 16:17:20 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 16:17:20 -HTTP METHOD : POST
2019-04-08 16:17:20 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 16:17:20 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@300040bb]
2019-04-08 16:17:20 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 16:17:20 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 16:17:21 -<==    Updates: 1
2019-04-08 16:17:21 -耗时 : 48
2019-04-08 16:17:21 -返回值 : 0
2019-04-08 16:17:21 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 16:17:21 -HTTP METHOD : POST
2019-04-08 16:17:21 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 16:17:21 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@25183303]
2019-04-08 16:17:21 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 16:17:21 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 16:17:21 -<==      Total: 3
2019-04-08 16:17:21 -耗时 : 7
2019-04-08 16:17:21 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@4a6c5067, com.bootdo.moneyList.damain.MoneyListDO@4871e606, com.bootdo.moneyList.damain.MoneyListDO@2c155420]
2019-04-08 16:17:41 -请求地址 : http://localhost:8081/print/print
2019-04-08 16:17:41 -HTTP METHOD : GET
2019-04-08 16:17:41 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-04-08 16:17:41 -参数 : []
2019-04-08 16:17:41 -耗时 : 1
2019-04-08 16:17:41 -返回值 : print/print/print
2019-04-08 16:17:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 16:17:41 -HTTP METHOD : GET
2019-04-08 16:17:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 16:17:41 -参数 : [userType]
2019-04-08 16:17:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 16:17:41 -==> Parameters: userType(String)
2019-04-08 16:17:41 -<==      Total: 2
2019-04-08 16:17:41 -耗时 : 4
2019-04-08 16:17:41 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 16:17:41 -请求地址 : http://localhost:8081/print/print/list
2019-04-08 16:17:41 -HTTP METHOD : GET
2019-04-08 16:17:41 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-04-08 16:17:41 -参数 : [{limit=10, offset=0, createTime=, userType=, userOrg=, userId=}]
2019-04-08 16:17:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-04-08 16:17:41 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 16:17:41 -<==      Total: 4
2019-04-08 16:17:41 -==>  Preparing: select count(*) from print 
2019-04-08 16:17:41 -==> Parameters: 
2019-04-08 16:17:41 -<==      Total: 1
2019-04-08 16:17:41 -耗时 : 38
2019-04-08 16:17:41 -返回值 : com.bootdo.common.utils.PageUtils@76f468ab
2019-04-08 16:17:43 -请求地址 : http://localhost:8081/print/print/printEdit/1
2019-04-08 16:17:43 -HTTP METHOD : GET
2019-04-08 16:17:43 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printEdit
2019-04-08 16:17:43 -参数 : [1, {}]
2019-04-08 16:17:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-04-08 16:17:43 -==> Parameters: 1(Long)
2019-04-08 16:17:43 -<==      Total: 1
2019-04-08 16:17:43 -耗时 : 8
2019-04-08 16:17:43 -返回值 : print/print/printEdit
2019-04-08 16:18:19 -请求地址 : http://localhost:8081/print/print/printEdit/1
2019-04-08 16:18:19 -HTTP METHOD : GET
2019-04-08 16:18:19 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printEdit
2019-04-08 16:18:19 -参数 : [1, {}]
2019-04-08 16:18:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_cost`,`water_sum`,`water_money`,`cost_poper`,`print_state`,`print_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-04-08 16:18:19 -==> Parameters: 1(Long)
2019-04-08 16:18:19 -<==      Total: 1
2019-04-08 16:18:19 -耗时 : 29
2019-04-08 16:18:19 -返回值 : print/print/printEdit
2019-04-08 16:23:57 -Starting BootdoApplication on ZJZL-20180906VX with PID 6396 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-08 16:23:57 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-08 16:23:57 -The following profiles are active: dev
2019-04-08 16:23:57 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 08 16:23:57 CST 2019]; root of context hierarchy
2019-04-08 16:24:00 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-08 16:24:02 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d6c6ee3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 16:24:03 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$ffc59d8a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 16:24:04 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 16:24:04 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 16:24:04 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 16:24:04 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-08 16:24:04 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-08 16:24:04 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 16:24:04 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 16:24:04 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 16:24:04 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 16:24:06 -Tomcat initialized with port(s): 8081 (http)
2019-04-08 16:24:06 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-08 16:24:06 -Starting service [Tomcat]
2019-04-08 16:24:06 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-08 16:24:06 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-08 16:24:06 -Initializing Spring embedded WebApplicationContext
2019-04-08 16:24:06 -Root WebApplicationContext: initialization completed in 9144 ms
2019-04-08 16:24:07 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-08 16:24:07 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-08 16:24:07 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-08 16:24:07 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-08 16:24:07 -Filter xssFilter was not registered (disabled)
2019-04-08 16:24:07 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-08 16:24:07 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-08 16:24:07 -Servlet statViewServlet mapped to [/druid/*]
2019-04-08 16:24:07 -Servlet dispatcherServlet mapped to [/]
2019-04-08 16:24:11 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 08 16:23:57 CST 2019]; root of context hierarchy
2019-04-08 16:24:11 -Using default implementation for ThreadExecutor
2019-04-08 16:24:12 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-08 16:24:12 -Quartz Scheduler v.2.2.1 created.
2019-04-08 16:24:12 -RAMJobStore initialized.
2019-04-08 16:24:12 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-08 16:24:12 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-08 16:24:12 -Quartz scheduler version: 2.2.1
2019-04-08 16:24:12 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@61911947
2019-04-08 16:24:12 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-08 16:24:12 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-08 16:24:15 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-08 16:24:15 -Mapped "{[/charts/countDD/tableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.tableDD()
2019-04-08 16:24:15 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-08 16:24:15 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 16:24:15 -Mapped "{[/charts/countMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 16:24:15 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-08 16:24:15 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-08 16:24:15 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-08 16:24:15 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-08 16:24:15 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public int com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-08 16:24:15 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 16:24:15 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-08 16:24:15 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public int com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-08 16:24:15 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 16:24:15 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-08 16:24:15 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-08 16:24:15 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-08 16:24:15 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-08 16:24:15 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-08 16:24:15 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 16:24:15 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-08 16:24:15 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-08 16:24:15 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 16:24:15 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-08 16:24:15 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-08 16:24:15 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-08 16:24:15 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-08 16:24:15 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-08 16:24:15 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-08 16:24:15 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-08 16:24:15 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 16:24:15 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-08 16:24:15 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-08 16:24:15 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 16:24:15 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-08 16:24:15 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-08 16:24:15 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 16:24:15 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-08 16:24:15 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-08 16:24:15 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-08 16:24:15 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-08 16:24:15 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-08 16:24:15 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-08 16:24:15 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-08 16:24:15 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-08 16:24:15 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-08 16:24:15 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 16:24:15 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-08 16:24:15 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-08 16:24:15 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 16:24:15 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-08 16:24:15 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-08 16:24:15 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-08 16:24:15 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-08 16:24:15 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 16:24:15 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-08 16:24:15 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-08 16:24:15 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-08 16:24:15 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-08 16:24:15 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-08 16:24:15 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-08 16:24:15 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-08 16:24:15 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-08 16:24:15 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-08 16:24:15 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-08 16:24:15 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-08 16:24:15 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-08 16:24:15 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-08 16:24:15 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 16:24:15 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-08 16:24:15 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-08 16:24:15 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-08 16:24:15 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-08 16:24:15 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-08 16:24:15 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-08 16:24:15 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-08 16:24:15 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 16:24:15 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-08 16:24:15 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-08 16:24:15 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 16:24:15 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-08 16:24:15 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-08 16:24:15 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-08 16:24:15 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-08 16:24:15 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-08 16:24:15 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-08 16:24:15 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 16:24:15 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-08 16:24:15 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-08 16:24:15 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-08 16:24:15 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-08 16:24:15 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-08 16:24:15 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-08 16:24:15 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-08 16:24:15 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-08 16:24:15 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-08 16:24:15 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-08 16:24:15 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 16:24:15 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-08 16:24:15 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-08 16:24:15 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 16:24:15 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-08 16:24:15 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-08 16:24:15 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-08 16:24:15 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-08 16:24:15 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-08 16:24:15 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-08 16:24:15 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-08 16:24:15 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-08 16:24:15 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-08 16:24:15 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-08 16:24:15 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-08 16:24:15 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-08 16:24:15 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 16:24:15 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-08 16:24:15 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-08 16:24:15 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 16:24:15 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 16:24:15 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-08 16:24:15 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-08 16:24:15 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-08 16:24:15 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-08 16:24:15 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 16:24:15 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-08 16:24:15 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-08 16:24:15 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 16:24:15 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 16:24:15 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-08 16:24:15 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-08 16:24:15 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-08 16:24:15 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-08 16:24:15 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 16:24:15 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-08 16:24:15 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-08 16:24:15 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 16:24:15 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 16:24:15 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-08 16:24:15 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-08 16:24:15 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-08 16:24:15 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-08 16:24:15 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-08 16:24:15 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 16:24:15 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-08 16:24:15 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-08 16:24:15 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 16:24:15 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-08 16:24:15 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-08 16:24:15 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 16:24:15 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-08 16:24:15 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-08 16:24:15 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-08 16:24:15 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-08 16:24:15 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 16:24:15 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-08 16:24:15 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-08 16:24:15 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 16:24:15 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 16:24:15 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-08 16:24:15 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 16:24:15 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-08 16:24:15 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-08 16:24:15 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-08 16:24:15 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-08 16:24:15 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-08 16:24:15 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-08 16:24:15 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-08 16:24:15 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-08 16:24:15 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-08 16:24:15 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 16:24:15 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-08 16:24:15 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-08 16:24:15 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-08 16:24:15 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-08 16:24:15 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-08 16:24:15 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-08 16:24:15 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-08 16:24:15 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-08 16:24:15 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-08 16:24:15 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-08 16:24:15 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 16:24:15 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-08 16:24:15 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-08 16:24:15 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-08 16:24:15 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-08 16:24:15 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-08 16:24:15 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-08 16:24:15 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-08 16:24:15 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-08 16:24:15 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-08 16:24:15 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-08 16:24:15 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-08 16:24:15 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-08 16:24:15 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 16:24:15 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-08 16:24:15 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-08 16:24:15 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-08 16:24:15 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-08 16:24:15 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 16:24:15 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-08 16:24:15 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-08 16:24:15 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-08 16:24:15 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 16:24:15 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-08 16:24:15 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-08 16:24:15 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-08 16:24:15 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-08 16:24:15 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-08 16:24:15 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-08 16:24:15 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-08 16:24:15 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-08 16:24:15 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-08 16:24:15 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-08 16:24:15 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-08 16:24:15 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-08 16:24:15 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-08 16:24:15 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-08 16:24:15 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-08 16:24:15 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-08 16:24:15 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-08 16:24:15 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 16:24:15 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-08 16:24:15 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-08 16:24:15 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-08 16:24:15 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 16:24:15 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-08 16:24:15 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-08 16:24:15 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-08 16:24:15 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-08 16:24:15 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-08 16:24:15 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-08 16:24:15 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 16:24:15 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-08 16:24:15 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-08 16:24:15 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 16:24:15 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-08 16:24:15 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-08 16:24:15 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-08 16:24:15 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-08 16:24:15 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-08 16:24:15 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-08 16:24:15 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-08 16:24:15 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-08 16:24:16 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-08 16:24:16 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-08 16:24:16 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-08 16:24:16 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-08 16:24:16 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 08 16:23:57 CST 2019]; root of context hierarchy
2019-04-08 16:24:17 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-08 16:24:17 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-08 16:24:17 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-08 16:24:17 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-08 16:24:17 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-08 16:24:19 -Registering beans for JMX exposure on startup
2019-04-08 16:24:19 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-08 16:24:19 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-08 16:24:19 -Starting beans in phase 2147483647
2019-04-08 16:24:19 -Context refreshed
2019-04-08 16:24:19 -Found 1 custom documentation plugin(s)
2019-04-08 16:24:19 -Scanning for api listing references
2019-04-08 16:24:19 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-08 16:24:19 -Generating unique operation named: getCountDUsingPOST_1
2019-04-08 16:24:19 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-08 16:24:19 -Generating unique operation named: getCountDUsingPOST_2
2019-04-08 16:24:19 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-08 16:24:19 -Generating unique operation named: getCountDUsingPOST_3
2019-04-08 16:24:19 -Generating unique operation named: removeUsingPOST_1
2019-04-08 16:24:19 -Generating unique operation named: addUsingGET_1
2019-04-08 16:24:20 -Generating unique operation named: editUsingGET_1
2019-04-08 16:24:20 -Generating unique operation named: listUsingGET_1
2019-04-08 16:24:20 -Generating unique operation named: removeUsingPOST_2
2019-04-08 16:24:20 -Generating unique operation named: removeUsingPOST_3
2019-04-08 16:24:20 -Generating unique operation named: saveUsingPOST_1
2019-04-08 16:24:20 -Generating unique operation named: updateUsingGET_1
2019-04-08 16:24:20 -Generating unique operation named: updateUsingHEAD_1
2019-04-08 16:24:20 -Generating unique operation named: updateUsingPOST_1
2019-04-08 16:24:20 -Generating unique operation named: updateUsingPUT_1
2019-04-08 16:24:20 -Generating unique operation named: updateUsingPATCH_1
2019-04-08 16:24:20 -Generating unique operation named: updateUsingDELETE_1
2019-04-08 16:24:20 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-08 16:24:20 -Generating unique operation named: updateUsingTRACE_1
2019-04-08 16:24:20 -Generating unique operation named: addUsingGET_2
2019-04-08 16:24:20 -Generating unique operation named: editUsingGET_2
2019-04-08 16:24:20 -Generating unique operation named: listUsingGET_2
2019-04-08 16:24:20 -Generating unique operation named: removeUsingPOST_4
2019-04-08 16:24:20 -Generating unique operation named: removeUsingPOST_5
2019-04-08 16:24:20 -Generating unique operation named: saveUsingPOST_2
2019-04-08 16:24:20 -Generating unique operation named: updateUsingPOST_2
2019-04-08 16:24:20 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-08 16:24:20 -Generating unique operation named: addUsingGET_3
2019-04-08 16:24:20 -Generating unique operation named: editUsingGET_3
2019-04-08 16:24:20 -Generating unique operation named: exprotElecLogUsingGET_4
2019-04-08 16:24:20 -Generating unique operation named: listUsingGET_3
2019-04-08 16:24:20 -Generating unique operation named: removeUsingPOST_6
2019-04-08 16:24:20 -Generating unique operation named: removeUsingPOST_7
2019-04-08 16:24:20 -Generating unique operation named: saveUsingPOST_3
2019-04-08 16:24:20 -Generating unique operation named: updateUsingGET_2
2019-04-08 16:24:20 -Generating unique operation named: updateUsingHEAD_2
2019-04-08 16:24:20 -Generating unique operation named: updateUsingPOST_3
2019-04-08 16:24:20 -Generating unique operation named: updateUsingPUT_2
2019-04-08 16:24:20 -Generating unique operation named: updateUsingPATCH_2
2019-04-08 16:24:20 -Generating unique operation named: updateUsingDELETE_2
2019-04-08 16:24:20 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-08 16:24:20 -Generating unique operation named: updateUsingTRACE_2
2019-04-08 16:24:20 -Generating unique operation named: addUsingGET_4
2019-04-08 16:24:20 -Generating unique operation named: editUsingGET_4
2019-04-08 16:24:20 -Generating unique operation named: listUsingGET_4
2019-04-08 16:24:20 -Generating unique operation named: removeUsingPOST_8
2019-04-08 16:24:20 -Generating unique operation named: removeUsingPOST_9
2019-04-08 16:24:20 -Generating unique operation named: saveUsingPOST_4
2019-04-08 16:24:20 -Generating unique operation named: updateUsingGET_3
2019-04-08 16:24:20 -Generating unique operation named: updateUsingHEAD_3
2019-04-08 16:24:20 -Generating unique operation named: updateUsingPOST_4
2019-04-08 16:24:20 -Generating unique operation named: updateUsingPUT_3
2019-04-08 16:24:20 -Generating unique operation named: updateUsingPATCH_3
2019-04-08 16:24:20 -Generating unique operation named: updateUsingDELETE_3
2019-04-08 16:24:20 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-08 16:24:20 -Generating unique operation named: updateUsingTRACE_3
2019-04-08 16:24:20 -Generating unique operation named: ElecUsingGET_1
2019-04-08 16:24:20 -Generating unique operation named: addUsingGET_5
2019-04-08 16:24:20 -Generating unique operation named: editUsingGET_5
2019-04-08 16:24:20 -Generating unique operation named: listUsingGET_5
2019-04-08 16:24:20 -Generating unique operation named: removeUsingPOST_10
2019-04-08 16:24:20 -Generating unique operation named: removeUsingPOST_11
2019-04-08 16:24:20 -Generating unique operation named: saveUsingPOST_5
2019-04-08 16:24:20 -Generating unique operation named: updateUsingGET_4
2019-04-08 16:24:20 -Generating unique operation named: updateUsingHEAD_4
2019-04-08 16:24:20 -Generating unique operation named: updateUsingPOST_5
2019-04-08 16:24:20 -Generating unique operation named: updateUsingPUT_4
2019-04-08 16:24:20 -Generating unique operation named: updateUsingPATCH_4
2019-04-08 16:24:20 -Generating unique operation named: updateUsingDELETE_4
2019-04-08 16:24:20 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-08 16:24:20 -Generating unique operation named: updateUsingTRACE_4
2019-04-08 16:24:20 -Generating unique operation named: editUsingGET_6
2019-04-08 16:24:20 -Generating unique operation named: listUsingGET_6
2019-04-08 16:24:20 -Generating unique operation named: updateUsingPOST_6
2019-04-08 16:24:20 -Generating unique operation named: addUsingGET_6
2019-04-08 16:24:20 -Generating unique operation named: editUsingGET_7
2019-04-08 16:24:20 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-08 16:24:20 -Generating unique operation named: listUsingGET_7
2019-04-08 16:24:20 -Generating unique operation named: removeUsingPOST_12
2019-04-08 16:24:20 -Generating unique operation named: removeUsingPOST_13
2019-04-08 16:24:20 -Generating unique operation named: saveUsingPOST_6
2019-04-08 16:24:20 -Generating unique operation named: updateUsingGET_5
2019-04-08 16:24:20 -Generating unique operation named: updateUsingHEAD_5
2019-04-08 16:24:20 -Generating unique operation named: updateUsingPOST_7
2019-04-08 16:24:20 -Generating unique operation named: updateUsingPUT_5
2019-04-08 16:24:20 -Generating unique operation named: updateUsingPATCH_5
2019-04-08 16:24:20 -Generating unique operation named: updateUsingDELETE_5
2019-04-08 16:24:20 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-08 16:24:20 -Generating unique operation named: updateUsingTRACE_5
2019-04-08 16:24:21 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-08 16:24:21 -Generating unique operation named: addUsingGET_7
2019-04-08 16:24:21 -Generating unique operation named: editUsingGET_8
2019-04-08 16:24:21 -Generating unique operation named: listUsingGET_8
2019-04-08 16:24:21 -Generating unique operation named: removeUsingPOST_14
2019-04-08 16:24:21 -Generating unique operation named: removeUsingPOST_15
2019-04-08 16:24:21 -Generating unique operation named: saveUsingPOST_7
2019-04-08 16:24:21 -Generating unique operation named: updateUsingGET_6
2019-04-08 16:24:21 -Generating unique operation named: updateUsingHEAD_6
2019-04-08 16:24:21 -Generating unique operation named: updateUsingPOST_8
2019-04-08 16:24:21 -Generating unique operation named: updateUsingPUT_6
2019-04-08 16:24:21 -Generating unique operation named: updateUsingPATCH_6
2019-04-08 16:24:21 -Generating unique operation named: updateUsingDELETE_6
2019-04-08 16:24:21 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-08 16:24:21 -Generating unique operation named: updateUsingTRACE_6
2019-04-08 16:24:21 -Generating unique operation named: addUsingGET_8
2019-04-08 16:24:21 -Generating unique operation named: editUsingGET_9
2019-04-08 16:24:21 -Generating unique operation named: listUsingGET_9
2019-04-08 16:24:21 -Generating unique operation named: removeUsingPOST_16
2019-04-08 16:24:21 -Generating unique operation named: removeUsingPOST_17
2019-04-08 16:24:21 -Generating unique operation named: saveUsingPOST_8
2019-04-08 16:24:21 -Generating unique operation named: updateUsingGET_7
2019-04-08 16:24:21 -Generating unique operation named: updateUsingHEAD_7
2019-04-08 16:24:21 -Generating unique operation named: updateUsingPOST_9
2019-04-08 16:24:21 -Generating unique operation named: updateUsingPUT_7
2019-04-08 16:24:21 -Generating unique operation named: updateUsingPATCH_7
2019-04-08 16:24:21 -Generating unique operation named: updateUsingDELETE_7
2019-04-08 16:24:21 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-08 16:24:21 -Generating unique operation named: updateUsingTRACE_7
2019-04-08 16:24:21 -Generating unique operation named: addUsingGET_9
2019-04-08 16:24:21 -Generating unique operation named: editUsingGET_10
2019-04-08 16:24:21 -Generating unique operation named: infoUsingGET_1
2019-04-08 16:24:21 -Generating unique operation named: infoUsingHEAD_1
2019-04-08 16:24:21 -Generating unique operation named: infoUsingPOST_1
2019-04-08 16:24:21 -Generating unique operation named: infoUsingPUT_1
2019-04-08 16:24:21 -Generating unique operation named: infoUsingPATCH_1
2019-04-08 16:24:21 -Generating unique operation named: infoUsingDELETE_1
2019-04-08 16:24:21 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-08 16:24:21 -Generating unique operation named: infoUsingTRACE_1
2019-04-08 16:24:21 -Generating unique operation named: listUsingGET_10
2019-04-08 16:24:21 -Generating unique operation named: removeUsingPOST_18
2019-04-08 16:24:21 -Generating unique operation named: removeUsingPOST_19
2019-04-08 16:24:21 -Generating unique operation named: saveUsingPOST_9
2019-04-08 16:24:21 -Generating unique operation named: updateUsingPOST_10
2019-04-08 16:24:21 -Generating unique operation named: listUsingGET_11
2019-04-08 16:24:21 -Generating unique operation named: removeUsingPOST_20
2019-04-08 16:24:21 -Generating unique operation named: welcomeUsingGET_1
2019-04-08 16:24:21 -Generating unique operation named: addUsingGET_10
2019-04-08 16:24:21 -Generating unique operation named: editUsingGET_11
2019-04-08 16:24:21 -Generating unique operation named: listUsingGET_12
2019-04-08 16:24:21 -Generating unique operation named: removeUsingPOST_21
2019-04-08 16:24:21 -Generating unique operation named: saveUsingPOST_10
2019-04-08 16:24:21 -Generating unique operation named: treeUsingGET_1
2019-04-08 16:24:21 -Generating unique operation named: treeUsingGET_2
2019-04-08 16:24:21 -Generating unique operation named: updateUsingPOST_11
2019-04-08 16:24:21 -Generating unique operation named: addUsingGET_11
2019-04-08 16:24:21 -Generating unique operation named: editUsingGET_12
2019-04-08 16:24:21 -Generating unique operation named: listUsingGET_13
2019-04-08 16:24:21 -Generating unique operation named: removeUsingPOST_22
2019-04-08 16:24:21 -Generating unique operation named: removeUsingPOST_23
2019-04-08 16:24:21 -Generating unique operation named: saveUsingPOST_11
2019-04-08 16:24:21 -Generating unique operation named: updateUsingGET_8
2019-04-08 16:24:21 -Generating unique operation named: updateUsingHEAD_8
2019-04-08 16:24:21 -Generating unique operation named: updateUsingPOST_12
2019-04-08 16:24:21 -Generating unique operation named: updateUsingPUT_8
2019-04-08 16:24:21 -Generating unique operation named: updateUsingPATCH_8
2019-04-08 16:24:21 -Generating unique operation named: updateUsingDELETE_8
2019-04-08 16:24:21 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-08 16:24:21 -Generating unique operation named: updateUsingTRACE_8
2019-04-08 16:24:21 -Generating unique operation named: addUsingGET_12
2019-04-08 16:24:21 -Generating unique operation named: editUsingGET_13
2019-04-08 16:24:21 -Generating unique operation named: listUsingGET_14
2019-04-08 16:24:21 -Generating unique operation named: removeUsingPOST_24
2019-04-08 16:24:21 -Generating unique operation named: removeUsingPOST_25
2019-04-08 16:24:21 -Generating unique operation named: saveUsingPOST_12
2019-04-08 16:24:21 -Generating unique operation named: updateUsingGET_9
2019-04-08 16:24:21 -Generating unique operation named: updateUsingHEAD_9
2019-04-08 16:24:21 -Generating unique operation named: updateUsingPOST_13
2019-04-08 16:24:21 -Generating unique operation named: updateUsingPUT_9
2019-04-08 16:24:21 -Generating unique operation named: updateUsingPATCH_9
2019-04-08 16:24:21 -Generating unique operation named: updateUsingDELETE_9
2019-04-08 16:24:21 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-08 16:24:21 -Generating unique operation named: updateUsingTRACE_9
2019-04-08 16:24:21 -Generating unique operation named: addUsingGET_13
2019-04-08 16:24:21 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-08 16:24:21 -Generating unique operation named: editUsingGET_14
2019-04-08 16:24:21 -Generating unique operation named: listUsingGET_15
2019-04-08 16:24:21 -Generating unique operation named: saveUsingPOST_13
2019-04-08 16:24:21 -Generating unique operation named: saveUsingPOST_14
2019-04-08 16:24:21 -Generating unique operation named: updateUsingPOST_14
2019-04-08 16:24:21 -Generating unique operation named: listUsingGET_16
2019-04-08 16:24:21 -Generating unique operation named: listUsingHEAD_1
2019-04-08 16:24:21 -Generating unique operation named: listUsingPOST_1
2019-04-08 16:24:21 -Generating unique operation named: listUsingPUT_1
2019-04-08 16:24:21 -Generating unique operation named: listUsingPATCH_1
2019-04-08 16:24:21 -Generating unique operation named: listUsingDELETE_1
2019-04-08 16:24:21 -Generating unique operation named: listUsingOPTIONS_1
2019-04-08 16:24:21 -Generating unique operation named: listUsingTRACE_1
2019-04-08 16:24:21 -Generating unique operation named: addUsingGET_14
2019-04-08 16:24:21 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-08 16:24:21 -Generating unique operation named: editUsingGET_15
2019-04-08 16:24:21 -Generating unique operation named: listUsingGET_17
2019-04-08 16:24:21 -Generating unique operation named: removeUsingPOST_26
2019-04-08 16:24:21 -Generating unique operation named: saveUsingPOST_15
2019-04-08 16:24:21 -Generating unique operation named: treeUsingGET_3
2019-04-08 16:24:21 -Generating unique operation named: treeViewUsingGET_1
2019-04-08 16:24:21 -Generating unique operation named: updateUsingPOST_15
2019-04-08 16:24:21 -Generating unique operation named: addUsingGET_15
2019-04-08 16:24:22 -Generating unique operation named: editUsingGET_16
2019-04-08 16:24:22 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-08 16:24:22 -Generating unique operation named: listUsingGET_18
2019-04-08 16:24:22 -Generating unique operation named: removeUsingPOST_27
2019-04-08 16:24:22 -Generating unique operation named: removeUsingPOST_28
2019-04-08 16:24:22 -Generating unique operation named: saveUsingPOST_16
2019-04-08 16:24:22 -Generating unique operation named: updateUsingGET_10
2019-04-08 16:24:22 -Generating unique operation named: updateUsingHEAD_10
2019-04-08 16:24:22 -Generating unique operation named: updateUsingPOST_16
2019-04-08 16:24:22 -Generating unique operation named: updateUsingPUT_10
2019-04-08 16:24:22 -Generating unique operation named: updateUsingPATCH_10
2019-04-08 16:24:22 -Generating unique operation named: updateUsingDELETE_10
2019-04-08 16:24:22 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-08 16:24:22 -Generating unique operation named: updateUsingTRACE_10
2019-04-08 16:24:22 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-08 16:24:22 -Generating unique operation named: addUsingGET_16
2019-04-08 16:24:22 -Generating unique operation named: editUsingGET_17
2019-04-08 16:24:22 -Generating unique operation named: listUsingGET_19
2019-04-08 16:24:22 -Generating unique operation named: removeUsingPOST_29
2019-04-08 16:24:22 -Generating unique operation named: removeUsingPOST_30
2019-04-08 16:24:22 -Generating unique operation named: saveUsingPOST_17
2019-04-08 16:24:22 -Generating unique operation named: updateUsingGET_11
2019-04-08 16:24:22 -Generating unique operation named: updateUsingHEAD_11
2019-04-08 16:24:22 -Generating unique operation named: updateUsingPOST_17
2019-04-08 16:24:22 -Generating unique operation named: updateUsingPUT_11
2019-04-08 16:24:22 -Generating unique operation named: updateUsingPATCH_11
2019-04-08 16:24:22 -Generating unique operation named: updateUsingDELETE_11
2019-04-08 16:24:22 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-08 16:24:22 -Generating unique operation named: updateUsingTRACE_11
2019-04-08 16:24:22 -Generating unique operation named: addUsingGET_17
2019-04-08 16:24:22 -Generating unique operation named: editUsingGET_18
2019-04-08 16:24:22 -Generating unique operation named: listUsingGET_20
2019-04-08 16:24:22 -Generating unique operation named: removeUsingPOST_31
2019-04-08 16:24:22 -Generating unique operation named: removeUsingPOST_32
2019-04-08 16:24:22 -Generating unique operation named: saveUsingPOST_18
2019-04-08 16:24:22 -Generating unique operation named: updateUsingGET_12
2019-04-08 16:24:22 -Generating unique operation named: updateUsingHEAD_12
2019-04-08 16:24:22 -Generating unique operation named: updateUsingPOST_18
2019-04-08 16:24:22 -Generating unique operation named: updateUsingPUT_12
2019-04-08 16:24:22 -Generating unique operation named: updateUsingPATCH_12
2019-04-08 16:24:22 -Generating unique operation named: updateUsingDELETE_12
2019-04-08 16:24:22 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-08 16:24:22 -Generating unique operation named: updateUsingTRACE_12
2019-04-08 16:24:22 -Starting Quartz Scheduler now
2019-04-08 16:24:22 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-08 16:24:22 -Starting...
2019-04-08 16:24:22 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-08 16:24:22 -Started.
2019-04-08 16:24:22 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-08 16:24:26 -Using a shared selector for servlet write/read
2019-04-08 16:24:26 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-08 16:24:26 -Started BootdoApplication in 30.295 seconds (JVM running for 31.202)
2019-04-08 16:24:26 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-08 16:24:31 -==> Parameters: 
2019-04-08 16:24:31 -<==      Total: 1
2019-04-08 16:24:39 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-08 16:24:39 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-08 16:24:39 -FrameworkServlet 'dispatcherServlet': initialization completed in 48 ms
2019-04-08 16:24:39 -Enabling session validation scheduler...
2019-04-08 16:24:39 -请求地址 : http://localhost:8081/
2019-04-08 16:24:39 -HTTP METHOD : GET
2019-04-08 16:24:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-04-08 16:24:39 -参数 : [{}]
2019-04-08 16:24:39 -耗时 : 5
2019-04-08 16:24:39 -返回值 : redirect:/index
2019-04-08 16:24:39 -请求地址 : http://localhost:8081/login;JSESSIONID=dd26b3fc-ee13-4f71-8132-f63f860f3b1e
2019-04-08 16:24:39 -HTTP METHOD : GET
2019-04-08 16:24:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-08 16:24:39 -参数 : [{}]
2019-04-08 16:24:39 -耗时 : 1
2019-04-08 16:24:39 -返回值 : login
2019-04-08 16:24:40 -请求地址 : http://localhost:8081/getVerify
2019-04-08 16:24:40 -HTTP METHOD : GET
2019-04-08 16:24:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-08 16:24:40 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5d5e5a4a, org.apache.shiro.web.servlet.ShiroHttpServletResponse@223ca8b3]
2019-04-08 16:24:44 -8393
2019-04-08 16:24:44 -耗时 : 3734
2019-04-08 16:24:44 -返回值 : null
2019-04-08 16:24:44 -请求地址 : http://localhost:8081/login
2019-04-08 16:24:44 -HTTP METHOD : GET
2019-04-08 16:24:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-08 16:24:44 -参数 : [{}]
2019-04-08 16:24:44 -耗时 : 0
2019-04-08 16:24:44 -返回值 : login
2019-04-08 16:25:04 -请求地址 : http://localhost:8081/login
2019-04-08 16:25:04 -HTTP METHOD : GET
2019-04-08 16:25:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-08 16:25:04 -参数 : [{}]
2019-04-08 16:25:04 -耗时 : 1
2019-04-08 16:25:04 -返回值 : login
2019-04-08 16:25:04 -请求地址 : http://localhost:8081/getVerify
2019-04-08 16:25:04 -HTTP METHOD : GET
2019-04-08 16:25:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-08 16:25:04 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@605263c7, org.apache.shiro.web.servlet.ShiroHttpServletResponse@646deb15]
2019-04-08 16:25:04 -4549
2019-04-08 16:25:04 -耗时 : 16
2019-04-08 16:25:04 -返回值 : null
2019-04-08 16:25:04 -请求地址 : http://localhost:8081/login
2019-04-08 16:25:04 -HTTP METHOD : GET
2019-04-08 16:25:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-08 16:25:04 -参数 : [{}]
2019-04-08 16:25:04 -耗时 : 1
2019-04-08 16:25:04 -返回值 : login
2019-04-08 16:25:15 -请求地址 : http://localhost:8081/login
2019-04-08 16:25:15 -HTTP METHOD : POST
2019-04-08 16:25:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-08 16:25:15 -参数 : [admin, 111111, 4549, org.apache.shiro.web.servlet.ShiroHttpServletRequest@55dfdbcf]
2019-04-08 16:25:15 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-08 16:25:15 -==> Parameters: admin(String)
2019-04-08 16:25:15 -<==      Total: 1
2019-04-08 16:25:15 -耗时 : 104
2019-04-08 16:25:15 -返回值 : {msg=操作成功, code=0}
2019-04-08 16:25:15 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-08 16:25:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 16:25:15 -==> Parameters: 1(Long), admin(String), 登录(String), 104(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-08 16:25:15.873(Timestamp)
2019-04-08 16:25:15 -<==    Updates: 1
2019-04-08 16:25:16 -请求地址 : http://localhost:8081/index
2019-04-08 16:25:16 -HTTP METHOD : GET
2019-04-08 16:25:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 16:25:16 -参数 : [{}]
2019-04-08 16:25:16 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 16:25:16 -==> Parameters: 1(Long)
2019-04-08 16:25:16 -<==      Total: 46
2019-04-08 16:25:16 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 16:25:16 -==> Parameters: 138(Long)
2019-04-08 16:25:16 -<==      Total: 1
2019-04-08 16:25:16 -耗时 : 247
2019-04-08 16:25:16 -返回值 : index_v1
2019-04-08 16:25:16 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-04-08 16:25:16 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 16:25:16 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 247(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 16:25:16.298(Timestamp)
2019-04-08 16:25:16 -<==    Updates: 1
2019-04-08 16:25:16 -请求地址 : http://localhost:8081/main
2019-04-08 16:25:16 -HTTP METHOD : GET
2019-04-08 16:25:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 16:25:16 -参数 : []
2019-04-08 16:25:16 -耗时 : 0
2019-04-08 16:25:16 -返回值 : main
2019-04-08 16:25:16 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 16:25:16 -HTTP METHOD : GET
2019-04-08 16:25:16 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 16:25:16 -参数 : []
2019-04-08 16:25:16 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 16:25:16 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 16:25:16 -<==      Total: 0
2019-04-08 16:25:16 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 16:25:16 -==> Parameters: 1(Long), 0(String)
2019-04-08 16:25:16 -<==      Total: 1
2019-04-08 16:25:16 -耗时 : 76
2019-04-08 16:25:16 -返回值 : com.bootdo.common.utils.PageUtils@2c8c5950
2019-04-08 16:25:16 -请求地址 : http://localhost:8081/main
2019-04-08 16:25:16 -HTTP METHOD : GET
2019-04-08 16:25:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 16:25:16 -参数 : []
2019-04-08 16:25:16 -耗时 : 0
2019-04-08 16:25:16 -返回值 : main
2019-04-08 16:25:22 -请求地址 : http://localhost:8081/print/print/printMoney
2019-04-08 16:25:22 -HTTP METHOD : GET
2019-04-08 16:25:22 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printMoney
2019-04-08 16:25:22 -参数 : []
2019-04-08 16:25:22 -耗时 : 1
2019-04-08 16:25:22 -返回值 : print/print/printEdit
2019-04-08 16:25:22 -[THYMELEAF][http-nio-8081-exec-10] Exception processing template "print/print/printEdit": An error happened during template parsing (template: "class path resource [templates/print/print/printEdit.html]")
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/print/print/printEdit.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "print.userId" (template: "print/print/printEdit" - line 14, col 16)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 69 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "print.userId" (template: "print/print/printEdit" - line 14, col 16)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:165)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:126)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 71 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'userId' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:407)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:89)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:111)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:334)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 90 common frames omitted
2019-04-08 16:25:22 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/print/print/printEdit.html]")] with root cause
org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'userId' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:407)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:89)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:111)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:334)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:165)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:126)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-08 16:26:08 -请求地址 : http://localhost:8081/main
2019-04-08 16:26:08 -HTTP METHOD : GET
2019-04-08 16:26:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 16:26:08 -参数 : []
2019-04-08 16:26:08 -耗时 : 1
2019-04-08 16:26:08 -返回值 : main
2019-04-08 16:26:10 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-08 16:26:10 -==> Parameters: 1(Long)
2019-04-08 16:26:10 -<==      Total: 90
2019-04-08 16:26:10 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 16:26:10 -HTTP METHOD : GET
2019-04-08 16:26:10 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 16:26:10 -参数 : []
2019-04-08 16:26:10 -耗时 : 0
2019-04-08 16:26:10 -返回值 : /moneyList/moneyList
2019-04-08 16:26:20 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 16:26:20 -HTTP METHOD : GET
2019-04-08 16:26:20 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 16:26:20 -参数 : []
2019-04-08 16:26:20 -耗时 : 1
2019-04-08 16:26:20 -返回值 : system/dept/deptTree
2019-04-08 16:26:20 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 16:26:20 -HTTP METHOD : GET
2019-04-08 16:26:20 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 16:26:20 -参数 : []
2019-04-08 16:26:20 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 16:26:20 -==> Parameters: 
2019-04-08 16:26:20 -<==      Total: 3
2019-04-08 16:26:20 -耗时 : 26
2019-04-08 16:26:20 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 16:26:28 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 16:26:28 -HTTP METHOD : POST
2019-04-08 16:26:28 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 16:26:28 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@29b6d719]
2019-04-08 16:26:28 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 16:26:28 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 16:26:28 -<==      Total: 3
2019-04-08 16:26:28 -耗时 : 109
2019-04-08 16:26:28 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@65d4cc0d, com.bootdo.moneyList.damain.MoneyListDO@52dafdf8, com.bootdo.moneyList.damain.MoneyListDO@72937ab1]
2019-04-08 16:26:32 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 16:26:32 -HTTP METHOD : POST
2019-04-08 16:26:32 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 16:26:32 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@2cf4f9a]
2019-04-08 16:26:32 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 16:26:32 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 16:26:32 -<==    Updates: 1
2019-04-08 16:26:32 -耗时 : 114
2019-04-08 16:26:32 -返回值 : 0
2019-04-08 16:26:33 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 16:26:33 -HTTP METHOD : POST
2019-04-08 16:26:33 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 16:26:33 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@62247022]
2019-04-08 16:26:33 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 16:26:33 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 16:26:33 -<==      Total: 3
2019-04-08 16:26:33 -耗时 : 8
2019-04-08 16:26:33 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@775d0b77, com.bootdo.moneyList.damain.MoneyListDO@59f55c10, com.bootdo.moneyList.damain.MoneyListDO@417cc166]
2019-04-08 16:27:12 -请求地址 : http://localhost:8081/index
2019-04-08 16:27:12 -HTTP METHOD : GET
2019-04-08 16:27:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 16:27:12 -参数 : [{}]
2019-04-08 16:27:12 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 16:27:12 -==> Parameters: 1(Long)
2019-04-08 16:27:12 -<==      Total: 46
2019-04-08 16:27:12 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 16:27:12 -==> Parameters: 138(Long)
2019-04-08 16:27:12 -<==      Total: 1
2019-04-08 16:27:12 -耗时 : 37
2019-04-08 16:27:12 -返回值 : index_v1
2019-04-08 16:27:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 16:27:13 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 37(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 16:27:12.995(Timestamp)
2019-04-08 16:27:13 -请求地址 : http://localhost:8081/main
2019-04-08 16:27:13 -HTTP METHOD : GET
2019-04-08 16:27:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 16:27:13 -参数 : []
2019-04-08 16:27:13 -耗时 : 4
2019-04-08 16:27:13 -返回值 : main
2019-04-08 16:27:13 -<==    Updates: 1
2019-04-08 16:27:13 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 16:27:13 -HTTP METHOD : GET
2019-04-08 16:27:13 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 16:27:13 -参数 : []
2019-04-08 16:27:13 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 16:27:13 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 16:27:13 -<==      Total: 0
2019-04-08 16:27:13 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 16:27:13 -==> Parameters: 1(Long), 0(String)
2019-04-08 16:27:13 -<==      Total: 1
2019-04-08 16:27:13 -耗时 : 8
2019-04-08 16:27:13 -返回值 : com.bootdo.common.utils.PageUtils@511fcd39
2019-04-08 16:27:13 -请求地址 : http://localhost:8081/main
2019-04-08 16:27:13 -HTTP METHOD : GET
2019-04-08 16:27:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 16:27:13 -参数 : []
2019-04-08 16:27:13 -耗时 : 1
2019-04-08 16:27:13 -返回值 : main
2019-04-08 16:27:16 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 16:27:16 -HTTP METHOD : GET
2019-04-08 16:27:16 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 16:27:16 -参数 : []
2019-04-08 16:27:16 -耗时 : 0
2019-04-08 16:27:16 -返回值 : /moneyList/moneyList
2019-04-08 16:27:19 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 16:27:19 -HTTP METHOD : GET
2019-04-08 16:27:19 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 16:27:19 -参数 : []
2019-04-08 16:27:19 -耗时 : 0
2019-04-08 16:27:19 -返回值 : system/dept/deptTree
2019-04-08 16:27:19 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 16:27:19 -HTTP METHOD : GET
2019-04-08 16:27:19 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 16:27:19 -参数 : []
2019-04-08 16:27:19 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 16:27:19 -==> Parameters: 
2019-04-08 16:27:19 -<==      Total: 3
2019-04-08 16:27:19 -耗时 : 3
2019-04-08 16:27:19 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 16:27:25 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 16:27:25 -HTTP METHOD : POST
2019-04-08 16:27:25 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 16:27:25 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@10798b0f]
2019-04-08 16:27:25 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 16:27:25 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 16:27:25 -<==      Total: 3
2019-04-08 16:27:25 -耗时 : 7
2019-04-08 16:27:25 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@637deea5, com.bootdo.moneyList.damain.MoneyListDO@30a55ac6, com.bootdo.moneyList.damain.MoneyListDO@1d3d8fb9]
2019-04-08 16:27:29 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 16:27:29 -HTTP METHOD : POST
2019-04-08 16:27:29 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 16:27:29 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@1032b6a0]
2019-04-08 16:27:29 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 16:27:29 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 16:27:29 -<==    Updates: 1
2019-04-08 16:27:29 -耗时 : 41
2019-04-08 16:27:29 -返回值 : 0
2019-04-08 16:27:30 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 16:27:30 -HTTP METHOD : POST
2019-04-08 16:27:30 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 16:27:30 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@3591ab83]
2019-04-08 16:27:30 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 16:27:30 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 16:27:30 -<==      Total: 3
2019-04-08 16:27:30 -耗时 : 5
2019-04-08 16:27:30 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@11cc41f, com.bootdo.moneyList.damain.MoneyListDO@6d29b3ec, com.bootdo.moneyList.damain.MoneyListDO@555cc079]
2019-04-08 16:27:32 -请求地址 : http://localhost:8081/print/print/printMoney
2019-04-08 16:27:32 -HTTP METHOD : GET
2019-04-08 16:27:32 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printMoney
2019-04-08 16:27:32 -参数 : []
2019-04-08 16:27:32 -耗时 : 1
2019-04-08 16:27:32 -返回值 : print/print/printEdit
2019-04-08 16:27:32 -[THYMELEAF][http-nio-8081-exec-2] Exception processing template "print/print/printEdit": An error happened during template parsing (template: "class path resource [templates/print/print/printEdit.html]")
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/print/print/printEdit.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "print.userId" (template: "print/print/printEdit" - line 14, col 16)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 69 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "print.userId" (template: "print/print/printEdit" - line 14, col 16)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:165)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:126)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 71 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'userId' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:407)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:89)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:111)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:334)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 90 common frames omitted
2019-04-08 16:27:32 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/print/print/printEdit.html]")] with root cause
org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'userId' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:407)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:89)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:111)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:334)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:165)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:126)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-08 16:29:45 -请求地址 : http://localhost:8081/index
2019-04-08 16:29:45 -HTTP METHOD : GET
2019-04-08 16:29:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 16:29:45 -参数 : [{}]
2019-04-08 16:29:45 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 16:29:45 -==> Parameters: 1(Long)
2019-04-08 16:29:45 -<==      Total: 46
2019-04-08 16:29:45 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 16:29:45 -==> Parameters: 138(Long)
2019-04-08 16:29:45 -<==      Total: 1
2019-04-08 16:29:45 -耗时 : 30
2019-04-08 16:29:45 -返回值 : index_v1
2019-04-08 16:29:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 16:29:45 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 31(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 16:29:45.099(Timestamp)
2019-04-08 16:29:45 -<==    Updates: 1
2019-04-08 16:29:45 -请求地址 : http://localhost:8081/main
2019-04-08 16:29:45 -HTTP METHOD : GET
2019-04-08 16:29:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 16:29:45 -参数 : []
2019-04-08 16:29:45 -耗时 : 1
2019-04-08 16:29:45 -返回值 : main
2019-04-08 16:29:45 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 16:29:45 -HTTP METHOD : GET
2019-04-08 16:29:45 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 16:29:45 -参数 : []
2019-04-08 16:29:45 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 16:29:45 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 16:29:45 -<==      Total: 0
2019-04-08 16:29:45 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 16:29:45 -==> Parameters: 1(Long), 0(String)
2019-04-08 16:29:45 -<==      Total: 1
2019-04-08 16:29:45 -耗时 : 8
2019-04-08 16:29:45 -返回值 : com.bootdo.common.utils.PageUtils@36c0e0a6
2019-04-08 16:29:45 -请求地址 : http://localhost:8081/main
2019-04-08 16:29:45 -HTTP METHOD : GET
2019-04-08 16:29:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 16:29:45 -参数 : []
2019-04-08 16:29:45 -耗时 : 0
2019-04-08 16:29:45 -返回值 : main
2019-04-08 16:29:47 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 16:29:47 -HTTP METHOD : GET
2019-04-08 16:29:47 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 16:29:47 -参数 : []
2019-04-08 16:29:47 -耗时 : 1
2019-04-08 16:29:47 -返回值 : /moneyList/moneyList
2019-04-08 16:29:53 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 16:29:53 -HTTP METHOD : GET
2019-04-08 16:29:53 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 16:29:53 -参数 : []
2019-04-08 16:29:53 -耗时 : 1
2019-04-08 16:29:53 -返回值 : system/dept/deptTree
2019-04-08 16:29:53 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 16:29:53 -HTTP METHOD : GET
2019-04-08 16:29:53 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 16:29:53 -参数 : []
2019-04-08 16:29:53 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 16:29:53 -==> Parameters: 
2019-04-08 16:29:53 -<==      Total: 3
2019-04-08 16:29:53 -耗时 : 7
2019-04-08 16:29:53 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 16:29:55 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 16:29:55 -HTTP METHOD : POST
2019-04-08 16:29:55 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 16:29:55 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@5ed442c5]
2019-04-08 16:29:55 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 16:29:55 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 16:29:55 -<==      Total: 3
2019-04-08 16:29:55 -耗时 : 7
2019-04-08 16:29:55 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@39febe11, com.bootdo.moneyList.damain.MoneyListDO@2e7c040, com.bootdo.moneyList.damain.MoneyListDO@7ed968b3]
2019-04-08 16:29:58 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 16:29:58 -HTTP METHOD : POST
2019-04-08 16:29:58 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 16:29:58 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@4097916b]
2019-04-08 16:29:58 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 16:29:58 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 16:29:59 -<==    Updates: 1
2019-04-08 16:29:59 -耗时 : 673
2019-04-08 16:29:59 -返回值 : 0
2019-04-08 16:30:00 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 16:30:00 -HTTP METHOD : POST
2019-04-08 16:30:00 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 16:30:00 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@2f9da030]
2019-04-08 16:30:00 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 16:30:00 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 16:30:00 -<==      Total: 3
2019-04-08 16:30:00 -耗时 : 14
2019-04-08 16:30:00 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@192a59f8, com.bootdo.moneyList.damain.MoneyListDO@127a9e36, com.bootdo.moneyList.damain.MoneyListDO@10269554]
2019-04-08 16:30:01 -请求地址 : http://localhost:8081/print/print/printMoney
2019-04-08 16:30:01 -HTTP METHOD : GET
2019-04-08 16:30:01 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printMoney
2019-04-08 16:30:01 -参数 : []
2019-04-08 16:30:01 -耗时 : 0
2019-04-08 16:30:01 -返回值 : print/print/printEdit
2019-04-08 16:30:01 -[THYMELEAF][http-nio-8081-exec-2] Exception processing template "print/print/printEdit": An error happened during template parsing (template: "class path resource [templates/print/print/printEdit.html]")
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/print/print/printEdit.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "print.userId" (template: "print/print/printEdit" - line 14, col 16)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 69 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "print.userId" (template: "print/print/printEdit" - line 14, col 16)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:165)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:126)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 71 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'userId' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:407)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:89)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:111)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:334)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 90 common frames omitted
2019-04-08 16:30:01 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/print/print/printEdit.html]")] with root cause
org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'userId' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:407)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:89)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:111)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:334)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:165)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:126)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleOpenElementEnd(TemplateHandlerAdapterMarkupHandler.java:304)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:278)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleOpenElementEnd(OutputExpressionInlinePreProcessorHandler.java:186)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleOpenElementEnd(InlinedOutputExpressionMarkupHandler.java:124)
	at org.attoparser.HtmlElement.handleOpenElementEnd(HtmlElement.java:109)
	at org.attoparser.HtmlMarkupHandler.handleOpenElementEnd(HtmlMarkupHandler.java:297)
	at org.attoparser.MarkupEventProcessorHandler.handleOpenElementEnd(MarkupEventProcessorHandler.java:402)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:159)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-04-08 16:30:26 -Starting BootdoApplication on ZJZL-20180906VX with PID 10764 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-08 16:30:26 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-08 16:30:26 -The following profiles are active: dev
2019-04-08 16:30:27 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Mon Apr 08 16:30:27 CST 2019]; root of context hierarchy
2019-04-08 16:30:30 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-08 16:30:33 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f9d3e633] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 16:30:34 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$ec2d14da] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 16:30:34 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 16:30:35 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 16:30:35 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 16:30:35 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-08 16:30:35 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-08 16:30:35 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 16:30:35 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 16:30:35 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 16:30:35 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 16:30:37 -Tomcat initialized with port(s): 8081 (http)
2019-04-08 16:30:37 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-08 16:30:37 -Starting service [Tomcat]
2019-04-08 16:30:37 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-08 16:30:37 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-08 16:30:37 -Initializing Spring embedded WebApplicationContext
2019-04-08 16:30:37 -Root WebApplicationContext: initialization completed in 10440 ms
2019-04-08 16:30:38 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-08 16:30:38 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-08 16:30:38 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-08 16:30:38 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-08 16:30:38 -Filter xssFilter was not registered (disabled)
2019-04-08 16:30:38 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-08 16:30:38 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-08 16:30:38 -Servlet statViewServlet mapped to [/druid/*]
2019-04-08 16:30:38 -Servlet dispatcherServlet mapped to [/]
2019-04-08 16:30:42 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Mon Apr 08 16:30:27 CST 2019]; root of context hierarchy
2019-04-08 16:30:42 -Using default implementation for ThreadExecutor
2019-04-08 16:30:42 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-08 16:30:42 -Quartz Scheduler v.2.2.1 created.
2019-04-08 16:30:42 -RAMJobStore initialized.
2019-04-08 16:30:42 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-08 16:30:42 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-08 16:30:42 -Quartz scheduler version: 2.2.1
2019-04-08 16:30:42 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@795f6681
2019-04-08 16:30:43 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-08 16:30:43 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-08 16:30:46 -Mapped "{[/charts/countDD/tableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.tableDD()
2019-04-08 16:30:46 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-08 16:30:46 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-08 16:30:46 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 16:30:46 -Mapped "{[/charts/countMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 16:30:46 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-08 16:30:46 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-08 16:30:46 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-08 16:30:46 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-08 16:30:46 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public int com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-08 16:30:46 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 16:30:46 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-08 16:30:46 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public int com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-08 16:30:46 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 16:30:46 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-08 16:30:46 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-08 16:30:46 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-08 16:30:46 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-08 16:30:46 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-08 16:30:46 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 16:30:46 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-08 16:30:46 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-08 16:30:46 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-08 16:30:46 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-08 16:30:46 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-08 16:30:46 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 16:30:46 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-08 16:30:46 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-08 16:30:46 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-08 16:30:46 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-08 16:30:46 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 16:30:46 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-08 16:30:46 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-08 16:30:46 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-08 16:30:46 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 16:30:46 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-08 16:30:46 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 16:30:46 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-08 16:30:46 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-08 16:30:46 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-08 16:30:46 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-08 16:30:46 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-08 16:30:46 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-08 16:30:46 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-08 16:30:46 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-08 16:30:46 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-08 16:30:46 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 16:30:46 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-08 16:30:46 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-08 16:30:46 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 16:30:46 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-08 16:30:46 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-08 16:30:46 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-08 16:30:46 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-08 16:30:46 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 16:30:46 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-08 16:30:46 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-08 16:30:46 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-08 16:30:46 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-08 16:30:46 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-08 16:30:46 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-08 16:30:46 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-08 16:30:46 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-08 16:30:46 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-08 16:30:46 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-08 16:30:46 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-08 16:30:46 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 16:30:46 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-08 16:30:46 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-08 16:30:46 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-08 16:30:46 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-08 16:30:46 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-08 16:30:46 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-08 16:30:46 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-08 16:30:46 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-08 16:30:46 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-08 16:30:46 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 16:30:46 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-08 16:30:46 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 16:30:46 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-08 16:30:46 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-08 16:30:46 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-08 16:30:46 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-08 16:30:46 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-08 16:30:46 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-08 16:30:46 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-08 16:30:46 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 16:30:46 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-08 16:30:46 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-08 16:30:46 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-08 16:30:46 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-08 16:30:46 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-08 16:30:46 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-08 16:30:46 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-08 16:30:46 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-08 16:30:46 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-08 16:30:46 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-08 16:30:46 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 16:30:46 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-08 16:30:46 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 16:30:46 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-08 16:30:46 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-08 16:30:46 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-08 16:30:46 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-08 16:30:46 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-08 16:30:46 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-08 16:30:46 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-08 16:30:46 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-08 16:30:46 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-08 16:30:46 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-08 16:30:46 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-08 16:30:46 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-08 16:30:46 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-08 16:30:46 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 16:30:46 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-08 16:30:46 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 16:30:46 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 16:30:46 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-08 16:30:46 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-08 16:30:46 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-08 16:30:46 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-08 16:30:46 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-08 16:30:46 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 16:30:46 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-08 16:30:46 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 16:30:46 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-08 16:30:46 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 16:30:46 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-08 16:30:46 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-08 16:30:46 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-08 16:30:46 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-08 16:30:46 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 16:30:46 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-08 16:30:46 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 16:30:46 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 16:30:46 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-08 16:30:46 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-08 16:30:46 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-08 16:30:46 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-08 16:30:46 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-08 16:30:46 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-08 16:30:46 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 16:30:46 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-08 16:30:46 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-08 16:30:46 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 16:30:46 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-08 16:30:46 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 16:30:46 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-08 16:30:46 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-08 16:30:46 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-08 16:30:46 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-08 16:30:46 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-08 16:30:46 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 16:30:46 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-08 16:30:46 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 16:30:46 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 16:30:46 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-08 16:30:46 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 16:30:46 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-08 16:30:46 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-08 16:30:46 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-08 16:30:46 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-08 16:30:46 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-08 16:30:46 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-08 16:30:46 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-08 16:30:46 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-08 16:30:46 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-08 16:30:46 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-08 16:30:46 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 16:30:46 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-08 16:30:46 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-08 16:30:46 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-08 16:30:46 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-08 16:30:46 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-08 16:30:46 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-08 16:30:46 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-08 16:30:46 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-08 16:30:46 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-08 16:30:46 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-08 16:30:46 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 16:30:46 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-08 16:30:46 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-08 16:30:46 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-08 16:30:46 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-08 16:30:46 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-08 16:30:46 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-08 16:30:46 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-08 16:30:46 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-08 16:30:46 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-08 16:30:46 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-08 16:30:46 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-08 16:30:46 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-08 16:30:46 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 16:30:46 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-08 16:30:46 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-08 16:30:46 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-08 16:30:46 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-08 16:30:46 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 16:30:46 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-08 16:30:46 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-08 16:30:46 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-08 16:30:46 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 16:30:46 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-08 16:30:46 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-08 16:30:46 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-08 16:30:46 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-08 16:30:46 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-08 16:30:46 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-08 16:30:46 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-08 16:30:46 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-08 16:30:46 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-08 16:30:46 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-08 16:30:46 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-08 16:30:46 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-08 16:30:46 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-08 16:30:46 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-08 16:30:46 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-08 16:30:46 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-08 16:30:46 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-08 16:30:46 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 16:30:46 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-08 16:30:46 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-08 16:30:46 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 16:30:46 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-08 16:30:46 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-08 16:30:46 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-08 16:30:46 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-08 16:30:46 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-08 16:30:46 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-08 16:30:46 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-08 16:30:46 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 16:30:46 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-08 16:30:46 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-08 16:30:46 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 16:30:46 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-08 16:30:46 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-08 16:30:46 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-08 16:30:46 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-08 16:30:46 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-08 16:30:46 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-08 16:30:46 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-08 16:30:46 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-08 16:30:46 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-08 16:30:46 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-08 16:30:47 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-08 16:30:47 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-08 16:30:47 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@a38c7fe: startup date [Mon Apr 08 16:30:27 CST 2019]; root of context hierarchy
2019-04-08 16:30:47 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-08 16:30:47 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-08 16:30:47 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-08 16:30:48 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-08 16:30:48 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-08 16:30:50 -Registering beans for JMX exposure on startup
2019-04-08 16:30:50 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-08 16:30:50 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-08 16:30:50 -Starting beans in phase 2147483647
2019-04-08 16:30:50 -Context refreshed
2019-04-08 16:30:50 -Found 1 custom documentation plugin(s)
2019-04-08 16:30:50 -Scanning for api listing references
2019-04-08 16:30:51 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-08 16:30:51 -Generating unique operation named: getCountDUsingPOST_1
2019-04-08 16:30:51 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-08 16:30:51 -Generating unique operation named: getCountDUsingPOST_2
2019-04-08 16:30:51 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-08 16:30:51 -Generating unique operation named: getCountDUsingPOST_3
2019-04-08 16:30:51 -Generating unique operation named: removeUsingPOST_1
2019-04-08 16:30:51 -Generating unique operation named: addUsingGET_1
2019-04-08 16:30:51 -Generating unique operation named: editUsingGET_1
2019-04-08 16:30:51 -Generating unique operation named: listUsingGET_1
2019-04-08 16:30:51 -Generating unique operation named: removeUsingPOST_2
2019-04-08 16:30:51 -Generating unique operation named: removeUsingPOST_3
2019-04-08 16:30:51 -Generating unique operation named: saveUsingPOST_1
2019-04-08 16:30:51 -Generating unique operation named: updateUsingGET_1
2019-04-08 16:30:51 -Generating unique operation named: updateUsingHEAD_1
2019-04-08 16:30:51 -Generating unique operation named: updateUsingPOST_1
2019-04-08 16:30:51 -Generating unique operation named: updateUsingPUT_1
2019-04-08 16:30:51 -Generating unique operation named: updateUsingPATCH_1
2019-04-08 16:30:51 -Generating unique operation named: updateUsingDELETE_1
2019-04-08 16:30:51 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-08 16:30:51 -Generating unique operation named: updateUsingTRACE_1
2019-04-08 16:30:51 -Generating unique operation named: addUsingGET_2
2019-04-08 16:30:51 -Generating unique operation named: editUsingGET_2
2019-04-08 16:30:51 -Generating unique operation named: listUsingGET_2
2019-04-08 16:30:51 -Generating unique operation named: removeUsingPOST_4
2019-04-08 16:30:51 -Generating unique operation named: removeUsingPOST_5
2019-04-08 16:30:51 -Generating unique operation named: saveUsingPOST_2
2019-04-08 16:30:51 -Generating unique operation named: updateUsingPOST_2
2019-04-08 16:30:51 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-08 16:30:51 -Generating unique operation named: addUsingGET_3
2019-04-08 16:30:51 -Generating unique operation named: editUsingGET_3
2019-04-08 16:30:51 -Generating unique operation named: exprotElecLogUsingGET_4
2019-04-08 16:30:51 -Generating unique operation named: listUsingGET_3
2019-04-08 16:30:51 -Generating unique operation named: removeUsingPOST_6
2019-04-08 16:30:51 -Generating unique operation named: removeUsingPOST_7
2019-04-08 16:30:51 -Generating unique operation named: saveUsingPOST_3
2019-04-08 16:30:51 -Generating unique operation named: updateUsingGET_2
2019-04-08 16:30:51 -Generating unique operation named: updateUsingHEAD_2
2019-04-08 16:30:51 -Generating unique operation named: updateUsingPOST_3
2019-04-08 16:30:51 -Generating unique operation named: updateUsingPUT_2
2019-04-08 16:30:51 -Generating unique operation named: updateUsingPATCH_2
2019-04-08 16:30:51 -Generating unique operation named: updateUsingDELETE_2
2019-04-08 16:30:51 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-08 16:30:51 -Generating unique operation named: updateUsingTRACE_2
2019-04-08 16:30:51 -Generating unique operation named: addUsingGET_4
2019-04-08 16:30:51 -Generating unique operation named: editUsingGET_4
2019-04-08 16:30:51 -Generating unique operation named: listUsingGET_4
2019-04-08 16:30:51 -Generating unique operation named: removeUsingPOST_8
2019-04-08 16:30:51 -Generating unique operation named: removeUsingPOST_9
2019-04-08 16:30:51 -Generating unique operation named: saveUsingPOST_4
2019-04-08 16:30:51 -Generating unique operation named: updateUsingGET_3
2019-04-08 16:30:51 -Generating unique operation named: updateUsingHEAD_3
2019-04-08 16:30:51 -Generating unique operation named: updateUsingPOST_4
2019-04-08 16:30:51 -Generating unique operation named: updateUsingPUT_3
2019-04-08 16:30:51 -Generating unique operation named: updateUsingPATCH_3
2019-04-08 16:30:51 -Generating unique operation named: updateUsingDELETE_3
2019-04-08 16:30:51 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-08 16:30:51 -Generating unique operation named: updateUsingTRACE_3
2019-04-08 16:30:51 -Generating unique operation named: ElecUsingGET_1
2019-04-08 16:30:51 -Generating unique operation named: addUsingGET_5
2019-04-08 16:30:51 -Generating unique operation named: editUsingGET_5
2019-04-08 16:30:52 -Generating unique operation named: listUsingGET_5
2019-04-08 16:30:52 -Generating unique operation named: removeUsingPOST_10
2019-04-08 16:30:52 -Generating unique operation named: removeUsingPOST_11
2019-04-08 16:30:52 -Generating unique operation named: saveUsingPOST_5
2019-04-08 16:30:52 -Generating unique operation named: updateUsingGET_4
2019-04-08 16:30:52 -Generating unique operation named: updateUsingHEAD_4
2019-04-08 16:30:52 -Generating unique operation named: updateUsingPOST_5
2019-04-08 16:30:52 -Generating unique operation named: updateUsingPUT_4
2019-04-08 16:30:52 -Generating unique operation named: updateUsingPATCH_4
2019-04-08 16:30:52 -Generating unique operation named: updateUsingDELETE_4
2019-04-08 16:30:52 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-08 16:30:52 -Generating unique operation named: updateUsingTRACE_4
2019-04-08 16:30:52 -Generating unique operation named: editUsingGET_6
2019-04-08 16:30:52 -Generating unique operation named: listUsingGET_6
2019-04-08 16:30:52 -Generating unique operation named: updateUsingPOST_6
2019-04-08 16:30:52 -Generating unique operation named: addUsingGET_6
2019-04-08 16:30:52 -Generating unique operation named: editUsingGET_7
2019-04-08 16:30:52 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-08 16:30:52 -Generating unique operation named: listUsingGET_7
2019-04-08 16:30:52 -Generating unique operation named: removeUsingPOST_12
2019-04-08 16:30:52 -Generating unique operation named: removeUsingPOST_13
2019-04-08 16:30:52 -Generating unique operation named: saveUsingPOST_6
2019-04-08 16:30:52 -Generating unique operation named: updateUsingGET_5
2019-04-08 16:30:52 -Generating unique operation named: updateUsingHEAD_5
2019-04-08 16:30:52 -Generating unique operation named: updateUsingPOST_7
2019-04-08 16:30:52 -Generating unique operation named: updateUsingPUT_5
2019-04-08 16:30:52 -Generating unique operation named: updateUsingPATCH_5
2019-04-08 16:30:52 -Generating unique operation named: updateUsingDELETE_5
2019-04-08 16:30:52 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-08 16:30:52 -Generating unique operation named: updateUsingTRACE_5
2019-04-08 16:30:52 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-08 16:30:52 -Generating unique operation named: addUsingGET_7
2019-04-08 16:30:52 -Generating unique operation named: editUsingGET_8
2019-04-08 16:30:52 -Generating unique operation named: listUsingGET_8
2019-04-08 16:30:52 -Generating unique operation named: removeUsingPOST_14
2019-04-08 16:30:52 -Generating unique operation named: removeUsingPOST_15
2019-04-08 16:30:52 -Generating unique operation named: saveUsingPOST_7
2019-04-08 16:30:52 -Generating unique operation named: updateUsingGET_6
2019-04-08 16:30:52 -Generating unique operation named: updateUsingHEAD_6
2019-04-08 16:30:52 -Generating unique operation named: updateUsingPOST_8
2019-04-08 16:30:52 -Generating unique operation named: updateUsingPUT_6
2019-04-08 16:30:52 -Generating unique operation named: updateUsingPATCH_6
2019-04-08 16:30:52 -Generating unique operation named: updateUsingDELETE_6
2019-04-08 16:30:52 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-08 16:30:52 -Generating unique operation named: updateUsingTRACE_6
2019-04-08 16:30:52 -Generating unique operation named: addUsingGET_8
2019-04-08 16:30:52 -Generating unique operation named: editUsingGET_9
2019-04-08 16:30:52 -Generating unique operation named: listUsingGET_9
2019-04-08 16:30:52 -Generating unique operation named: removeUsingPOST_16
2019-04-08 16:30:52 -Generating unique operation named: removeUsingPOST_17
2019-04-08 16:30:52 -Generating unique operation named: saveUsingPOST_8
2019-04-08 16:30:52 -Generating unique operation named: updateUsingGET_7
2019-04-08 16:30:52 -Generating unique operation named: updateUsingHEAD_7
2019-04-08 16:30:52 -Generating unique operation named: updateUsingPOST_9
2019-04-08 16:30:52 -Generating unique operation named: updateUsingPUT_7
2019-04-08 16:30:52 -Generating unique operation named: updateUsingPATCH_7
2019-04-08 16:30:52 -Generating unique operation named: updateUsingDELETE_7
2019-04-08 16:30:52 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-08 16:30:52 -Generating unique operation named: updateUsingTRACE_7
2019-04-08 16:30:52 -Generating unique operation named: addUsingGET_9
2019-04-08 16:30:52 -Generating unique operation named: editUsingGET_10
2019-04-08 16:30:52 -Generating unique operation named: infoUsingGET_1
2019-04-08 16:30:52 -Generating unique operation named: infoUsingHEAD_1
2019-04-08 16:30:52 -Generating unique operation named: infoUsingPOST_1
2019-04-08 16:30:52 -Generating unique operation named: infoUsingPUT_1
2019-04-08 16:30:52 -Generating unique operation named: infoUsingPATCH_1
2019-04-08 16:30:52 -Generating unique operation named: infoUsingDELETE_1
2019-04-08 16:30:52 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-08 16:30:52 -Generating unique operation named: infoUsingTRACE_1
2019-04-08 16:30:52 -Generating unique operation named: listUsingGET_10
2019-04-08 16:30:52 -Generating unique operation named: removeUsingPOST_18
2019-04-08 16:30:52 -Generating unique operation named: removeUsingPOST_19
2019-04-08 16:30:52 -Generating unique operation named: saveUsingPOST_9
2019-04-08 16:30:52 -Generating unique operation named: updateUsingPOST_10
2019-04-08 16:30:52 -Generating unique operation named: listUsingGET_11
2019-04-08 16:30:52 -Generating unique operation named: removeUsingPOST_20
2019-04-08 16:30:52 -Generating unique operation named: welcomeUsingGET_1
2019-04-08 16:30:52 -Generating unique operation named: addUsingGET_10
2019-04-08 16:30:52 -Generating unique operation named: editUsingGET_11
2019-04-08 16:30:52 -Generating unique operation named: listUsingGET_12
2019-04-08 16:30:52 -Generating unique operation named: removeUsingPOST_21
2019-04-08 16:30:52 -Generating unique operation named: saveUsingPOST_10
2019-04-08 16:30:52 -Generating unique operation named: treeUsingGET_1
2019-04-08 16:30:52 -Generating unique operation named: treeUsingGET_2
2019-04-08 16:30:52 -Generating unique operation named: updateUsingPOST_11
2019-04-08 16:30:52 -Generating unique operation named: addUsingGET_11
2019-04-08 16:30:52 -Generating unique operation named: editUsingGET_12
2019-04-08 16:30:52 -Generating unique operation named: listUsingGET_13
2019-04-08 16:30:52 -Generating unique operation named: removeUsingPOST_22
2019-04-08 16:30:52 -Generating unique operation named: removeUsingPOST_23
2019-04-08 16:30:52 -Generating unique operation named: saveUsingPOST_11
2019-04-08 16:30:52 -Generating unique operation named: updateUsingGET_8
2019-04-08 16:30:52 -Generating unique operation named: updateUsingHEAD_8
2019-04-08 16:30:52 -Generating unique operation named: updateUsingPOST_12
2019-04-08 16:30:52 -Generating unique operation named: updateUsingPUT_8
2019-04-08 16:30:52 -Generating unique operation named: updateUsingPATCH_8
2019-04-08 16:30:52 -Generating unique operation named: updateUsingDELETE_8
2019-04-08 16:30:52 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-08 16:30:52 -Generating unique operation named: updateUsingTRACE_8
2019-04-08 16:30:52 -Generating unique operation named: addUsingGET_12
2019-04-08 16:30:52 -Generating unique operation named: editUsingGET_13
2019-04-08 16:30:53 -Generating unique operation named: listUsingGET_14
2019-04-08 16:30:53 -Generating unique operation named: removeUsingPOST_24
2019-04-08 16:30:53 -Generating unique operation named: removeUsingPOST_25
2019-04-08 16:30:53 -Generating unique operation named: saveUsingPOST_12
2019-04-08 16:30:53 -Generating unique operation named: updateUsingGET_9
2019-04-08 16:30:53 -Generating unique operation named: updateUsingHEAD_9
2019-04-08 16:30:53 -Generating unique operation named: updateUsingPOST_13
2019-04-08 16:30:53 -Generating unique operation named: updateUsingPUT_9
2019-04-08 16:30:53 -Generating unique operation named: updateUsingPATCH_9
2019-04-08 16:30:53 -Generating unique operation named: updateUsingDELETE_9
2019-04-08 16:30:53 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-08 16:30:53 -Generating unique operation named: updateUsingTRACE_9
2019-04-08 16:30:53 -Generating unique operation named: addUsingGET_13
2019-04-08 16:30:53 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-08 16:30:53 -Generating unique operation named: editUsingGET_14
2019-04-08 16:30:53 -Generating unique operation named: listUsingGET_15
2019-04-08 16:30:53 -Generating unique operation named: saveUsingPOST_13
2019-04-08 16:30:53 -Generating unique operation named: saveUsingPOST_14
2019-04-08 16:30:53 -Generating unique operation named: updateUsingPOST_14
2019-04-08 16:30:53 -Generating unique operation named: listUsingGET_16
2019-04-08 16:30:53 -Generating unique operation named: listUsingHEAD_1
2019-04-08 16:30:53 -Generating unique operation named: listUsingPOST_1
2019-04-08 16:30:53 -Generating unique operation named: listUsingPUT_1
2019-04-08 16:30:53 -Generating unique operation named: listUsingPATCH_1
2019-04-08 16:30:53 -Generating unique operation named: listUsingDELETE_1
2019-04-08 16:30:53 -Generating unique operation named: listUsingOPTIONS_1
2019-04-08 16:30:53 -Generating unique operation named: listUsingTRACE_1
2019-04-08 16:30:53 -Generating unique operation named: addUsingGET_14
2019-04-08 16:30:53 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-08 16:30:53 -Generating unique operation named: editUsingGET_15
2019-04-08 16:30:53 -Generating unique operation named: listUsingGET_17
2019-04-08 16:30:53 -Generating unique operation named: removeUsingPOST_26
2019-04-08 16:30:53 -Generating unique operation named: saveUsingPOST_15
2019-04-08 16:30:53 -Generating unique operation named: treeUsingGET_3
2019-04-08 16:30:53 -Generating unique operation named: treeViewUsingGET_1
2019-04-08 16:30:53 -Generating unique operation named: updateUsingPOST_15
2019-04-08 16:30:53 -Generating unique operation named: addUsingGET_15
2019-04-08 16:30:53 -Generating unique operation named: editUsingGET_16
2019-04-08 16:30:53 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-08 16:30:53 -Generating unique operation named: listUsingGET_18
2019-04-08 16:30:53 -Generating unique operation named: removeUsingPOST_27
2019-04-08 16:30:53 -Generating unique operation named: removeUsingPOST_28
2019-04-08 16:30:53 -Generating unique operation named: saveUsingPOST_16
2019-04-08 16:30:53 -Generating unique operation named: updateUsingGET_10
2019-04-08 16:30:53 -Generating unique operation named: updateUsingHEAD_10
2019-04-08 16:30:53 -Generating unique operation named: updateUsingPOST_16
2019-04-08 16:30:53 -Generating unique operation named: updateUsingPUT_10
2019-04-08 16:30:53 -Generating unique operation named: updateUsingPATCH_10
2019-04-08 16:30:53 -Generating unique operation named: updateUsingDELETE_10
2019-04-08 16:30:53 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-08 16:30:53 -Generating unique operation named: updateUsingTRACE_10
2019-04-08 16:30:53 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-08 16:30:53 -Generating unique operation named: addUsingGET_16
2019-04-08 16:30:53 -Generating unique operation named: editUsingGET_17
2019-04-08 16:30:53 -Generating unique operation named: listUsingGET_19
2019-04-08 16:30:53 -Generating unique operation named: removeUsingPOST_29
2019-04-08 16:30:53 -Generating unique operation named: removeUsingPOST_30
2019-04-08 16:30:53 -Generating unique operation named: saveUsingPOST_17
2019-04-08 16:30:53 -Generating unique operation named: updateUsingGET_11
2019-04-08 16:30:53 -Generating unique operation named: updateUsingHEAD_11
2019-04-08 16:30:53 -Generating unique operation named: updateUsingPOST_17
2019-04-08 16:30:53 -Generating unique operation named: updateUsingPUT_11
2019-04-08 16:30:53 -Generating unique operation named: updateUsingPATCH_11
2019-04-08 16:30:53 -Generating unique operation named: updateUsingDELETE_11
2019-04-08 16:30:53 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-08 16:30:53 -Generating unique operation named: updateUsingTRACE_11
2019-04-08 16:30:53 -Generating unique operation named: addUsingGET_17
2019-04-08 16:30:53 -Generating unique operation named: editUsingGET_18
2019-04-08 16:30:53 -Generating unique operation named: listUsingGET_20
2019-04-08 16:30:53 -Generating unique operation named: removeUsingPOST_31
2019-04-08 16:30:53 -Generating unique operation named: removeUsingPOST_32
2019-04-08 16:30:53 -Generating unique operation named: saveUsingPOST_18
2019-04-08 16:30:53 -Generating unique operation named: updateUsingGET_12
2019-04-08 16:30:53 -Generating unique operation named: updateUsingHEAD_12
2019-04-08 16:30:53 -Generating unique operation named: updateUsingPOST_18
2019-04-08 16:30:53 -Generating unique operation named: updateUsingPUT_12
2019-04-08 16:30:53 -Generating unique operation named: updateUsingPATCH_12
2019-04-08 16:30:53 -Generating unique operation named: updateUsingDELETE_12
2019-04-08 16:30:53 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-08 16:30:53 -Generating unique operation named: updateUsingTRACE_12
2019-04-08 16:30:53 -Starting Quartz Scheduler now
2019-04-08 16:30:53 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-08 16:30:53 -Starting...
2019-04-08 16:30:53 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-08 16:30:53 -Started.
2019-04-08 16:30:53 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-08 16:30:53 -Using a shared selector for servlet write/read
2019-04-08 16:30:53 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-08 16:30:53 -Started BootdoApplication in 28.104 seconds (JVM running for 29.209)
2019-04-08 16:30:53 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-08 16:30:54 -==> Parameters: 
2019-04-08 16:30:54 -<==      Total: 1
2019-04-08 16:31:41 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-08 16:31:41 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-08 16:31:41 -FrameworkServlet 'dispatcherServlet': initialization completed in 76 ms
2019-04-08 16:31:41 -Enabling session validation scheduler...
2019-04-08 16:31:41 -请求地址 : http://localhost:8081/login;JSESSIONID=0faf639d-2c2d-471f-b9fa-e0a93c443161
2019-04-08 16:31:41 -HTTP METHOD : GET
2019-04-08 16:31:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-08 16:31:41 -参数 : [{}]
2019-04-08 16:31:41 -耗时 : 4
2019-04-08 16:31:41 -返回值 : login
2019-04-08 16:31:43 -请求地址 : http://localhost:8081/getVerify
2019-04-08 16:31:43 -HTTP METHOD : GET
2019-04-08 16:31:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-08 16:31:43 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1e8c0ac9, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1ab39dc0]
2019-04-08 16:31:44 -8899
2019-04-08 16:31:44 -耗时 : 675
2019-04-08 16:31:44 -返回值 : null
2019-04-08 16:31:44 -请求地址 : http://localhost:8081/login
2019-04-08 16:31:44 -HTTP METHOD : GET
2019-04-08 16:31:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-08 16:31:44 -参数 : [{}]
2019-04-08 16:31:44 -耗时 : 0
2019-04-08 16:31:44 -返回值 : login
2019-04-08 16:31:47 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-04-08 16:31:47 -请求地址 : http://localhost:8081/login
2019-04-08 16:31:47 -HTTP METHOD : POST
2019-04-08 16:31:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-08 16:31:47 -参数 : [admin, 111111, 8899, org.apache.shiro.web.servlet.ShiroHttpServletRequest@622d8996]
2019-04-08 16:31:47 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-08 16:31:47 -==> Parameters: admin(String)
2019-04-08 16:31:47 -<==      Total: 1
2019-04-08 16:31:47 -耗时 : 156
2019-04-08 16:31:47 -返回值 : {msg=操作成功, code=0}
2019-04-08 16:31:48 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-08 16:31:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 16:31:48 -==> Parameters: 1(Long), admin(String), 登录(String), 156(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-08 16:31:48.028(Timestamp)
2019-04-08 16:31:48 -请求地址 : http://localhost:8081/index
2019-04-08 16:31:48 -HTTP METHOD : GET
2019-04-08 16:31:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 16:31:48 -参数 : [{}]
2019-04-08 16:31:48 -<==    Updates: 1
2019-04-08 16:31:48 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 16:31:48 -==> Parameters: 1(Long)
2019-04-08 16:31:48 -<==      Total: 46
2019-04-08 16:31:48 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 16:31:48 -==> Parameters: 138(Long)
2019-04-08 16:31:48 -<==      Total: 1
2019-04-08 16:31:48 -耗时 : 164
2019-04-08 16:31:48 -返回值 : index_v1
2019-04-08 16:31:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 16:31:48 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 164(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 16:31:48.408(Timestamp)
2019-04-08 16:31:48 -<==    Updates: 1
2019-04-08 16:31:48 -请求地址 : http://localhost:8081/main
2019-04-08 16:31:48 -HTTP METHOD : GET
2019-04-08 16:31:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 16:31:48 -参数 : []
2019-04-08 16:31:48 -耗时 : 7
2019-04-08 16:31:48 -返回值 : main
2019-04-08 16:31:49 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 16:31:49 -HTTP METHOD : GET
2019-04-08 16:31:49 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 16:31:49 -参数 : []
2019-04-08 16:31:49 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 16:31:49 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 16:31:49 -<==      Total: 0
2019-04-08 16:31:49 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 16:31:49 -==> Parameters: 1(Long), 0(String)
2019-04-08 16:31:49 -<==      Total: 1
2019-04-08 16:31:49 -耗时 : 30
2019-04-08 16:31:49 -返回值 : com.bootdo.common.utils.PageUtils@638233f9
2019-04-08 16:31:49 -请求地址 : http://localhost:8081/main
2019-04-08 16:31:49 -HTTP METHOD : GET
2019-04-08 16:31:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 16:31:49 -参数 : []
2019-04-08 16:31:49 -耗时 : 1
2019-04-08 16:31:49 -返回值 : main
2019-04-08 16:31:53 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-08 16:31:53 -==> Parameters: 1(Long)
2019-04-08 16:31:53 -<==      Total: 90
2019-04-08 16:31:53 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 16:31:53 -HTTP METHOD : GET
2019-04-08 16:31:53 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 16:31:53 -参数 : []
2019-04-08 16:31:53 -耗时 : 0
2019-04-08 16:31:53 -返回值 : /moneyList/moneyList
2019-04-08 16:31:59 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 16:31:59 -HTTP METHOD : GET
2019-04-08 16:31:59 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 16:31:59 -参数 : []
2019-04-08 16:31:59 -耗时 : 0
2019-04-08 16:31:59 -返回值 : system/dept/deptTree
2019-04-08 16:31:59 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 16:31:59 -HTTP METHOD : GET
2019-04-08 16:31:59 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 16:31:59 -参数 : []
2019-04-08 16:31:59 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 16:31:59 -==> Parameters: 
2019-04-08 16:31:59 -<==      Total: 3
2019-04-08 16:31:59 -耗时 : 25
2019-04-08 16:31:59 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 16:32:04 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 16:32:04 -HTTP METHOD : POST
2019-04-08 16:32:04 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 16:32:04 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@706332b0]
2019-04-08 16:32:04 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 16:32:04 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 16:32:04 -<==      Total: 3
2019-04-08 16:32:04 -耗时 : 65
2019-04-08 16:32:04 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@55543c0e, com.bootdo.moneyList.damain.MoneyListDO@3a1ae5f0, com.bootdo.moneyList.damain.MoneyListDO@46b53eae]
2019-04-08 16:32:07 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 16:32:07 -HTTP METHOD : POST
2019-04-08 16:32:07 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 16:32:07 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@2b4a6ff2]
2019-04-08 16:32:07 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 16:32:07 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 16:32:07 -<==    Updates: 1
2019-04-08 16:32:07 -耗时 : 108
2019-04-08 16:32:07 -返回值 : 0
2019-04-08 16:32:08 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 16:32:08 -HTTP METHOD : POST
2019-04-08 16:32:08 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 16:32:08 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@7ee856ff]
2019-04-08 16:32:08 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 16:32:08 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 16:32:08 -<==      Total: 3
2019-04-08 16:32:08 -耗时 : 7
2019-04-08 16:32:08 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@1af117bc, com.bootdo.moneyList.damain.MoneyListDO@2efd967b, com.bootdo.moneyList.damain.MoneyListDO@2ed35536]
2019-04-08 16:32:09 -请求地址 : http://localhost:8081/print/print/printMoney
2019-04-08 16:32:09 -HTTP METHOD : GET
2019-04-08 16:32:09 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printMoney
2019-04-08 16:32:09 -参数 : []
2019-04-08 16:32:09 -耗时 : 0
2019-04-08 16:32:09 -返回值 : print/print/printEdit2
2019-04-08 16:35:56 -请求地址 : http://localhost:8081/index
2019-04-08 16:35:56 -HTTP METHOD : GET
2019-04-08 16:35:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 16:35:56 -参数 : [{}]
2019-04-08 16:35:56 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 16:35:56 -==> Parameters: 1(Long)
2019-04-08 16:35:56 -<==      Total: 46
2019-04-08 16:35:56 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 16:35:56 -==> Parameters: 138(Long)
2019-04-08 16:35:56 -<==      Total: 1
2019-04-08 16:35:56 -耗时 : 96
2019-04-08 16:35:56 -返回值 : index_v1
2019-04-08 16:35:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 16:35:56 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 97(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 16:35:56.532(Timestamp)
2019-04-08 16:35:56 -<==    Updates: 1
2019-04-08 16:35:56 -请求地址 : http://localhost:8081/main
2019-04-08 16:35:56 -HTTP METHOD : GET
2019-04-08 16:35:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 16:35:56 -参数 : []
2019-04-08 16:35:56 -耗时 : 1
2019-04-08 16:35:56 -返回值 : main
2019-04-08 16:35:57 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 16:35:57 -HTTP METHOD : GET
2019-04-08 16:35:57 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 16:35:57 -参数 : []
2019-04-08 16:35:57 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 16:35:57 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 16:35:57 -<==      Total: 0
2019-04-08 16:35:57 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 16:35:57 -==> Parameters: 1(Long), 0(String)
2019-04-08 16:35:57 -<==      Total: 1
2019-04-08 16:35:57 -耗时 : 6
2019-04-08 16:35:57 -返回值 : com.bootdo.common.utils.PageUtils@2eb7f408
2019-04-08 16:35:57 -请求地址 : http://localhost:8081/main
2019-04-08 16:35:57 -HTTP METHOD : GET
2019-04-08 16:35:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 16:35:57 -参数 : []
2019-04-08 16:35:57 -耗时 : 1
2019-04-08 16:35:57 -返回值 : main
2019-04-08 16:35:59 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 16:35:59 -HTTP METHOD : GET
2019-04-08 16:35:59 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 16:35:59 -参数 : []
2019-04-08 16:35:59 -耗时 : 0
2019-04-08 16:35:59 -返回值 : /moneyList/moneyList
2019-04-08 16:36:03 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 16:36:03 -HTTP METHOD : GET
2019-04-08 16:36:03 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 16:36:03 -参数 : []
2019-04-08 16:36:03 -耗时 : 1
2019-04-08 16:36:03 -返回值 : system/dept/deptTree
2019-04-08 16:36:03 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 16:36:03 -HTTP METHOD : GET
2019-04-08 16:36:03 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 16:36:03 -参数 : []
2019-04-08 16:36:03 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 16:36:03 -==> Parameters: 
2019-04-08 16:36:03 -<==      Total: 3
2019-04-08 16:36:03 -耗时 : 5
2019-04-08 16:36:03 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 16:36:09 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 16:36:09 -HTTP METHOD : POST
2019-04-08 16:36:09 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 16:36:09 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@60502cfa]
2019-04-08 16:36:09 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 16:36:09 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 16:36:09 -<==      Total: 3
2019-04-08 16:36:09 -耗时 : 8
2019-04-08 16:36:09 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@491ae700, com.bootdo.moneyList.damain.MoneyListDO@326e36a, com.bootdo.moneyList.damain.MoneyListDO@a9d0a1f]
2019-04-08 16:36:13 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 16:36:13 -HTTP METHOD : POST
2019-04-08 16:36:13 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 16:36:13 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@dbfe16e]
2019-04-08 16:36:13 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 16:36:13 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 16:36:13 -<==    Updates: 1
2019-04-08 16:36:13 -耗时 : 67
2019-04-08 16:36:13 -返回值 : 0
2019-04-08 16:36:14 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 16:36:14 -HTTP METHOD : POST
2019-04-08 16:36:14 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 16:36:14 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@2ba28ed0]
2019-04-08 16:36:14 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 16:36:14 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 16:36:14 -<==      Total: 3
2019-04-08 16:36:14 -耗时 : 7
2019-04-08 16:36:14 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@7bc53472, com.bootdo.moneyList.damain.MoneyListDO@486b059d, com.bootdo.moneyList.damain.MoneyListDO@7780c64e]
2019-04-08 16:36:16 -请求地址 : http://localhost:8081/print/print/printMoney
2019-04-08 16:36:16 -HTTP METHOD : GET
2019-04-08 16:36:16 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printMoney
2019-04-08 16:36:16 -参数 : []
2019-04-08 16:36:16 -耗时 : 0
2019-04-08 16:36:16 -返回值 : print/print/printEdit2
2019-04-08 16:36:43 -请求地址 : http://localhost:8081/index
2019-04-08 16:36:43 -HTTP METHOD : GET
2019-04-08 16:36:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 16:36:43 -参数 : [{}]
2019-04-08 16:36:43 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 16:36:43 -==> Parameters: 1(Long)
2019-04-08 16:36:43 -<==      Total: 46
2019-04-08 16:36:43 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 16:36:43 -==> Parameters: 138(Long)
2019-04-08 16:36:43 -<==      Total: 1
2019-04-08 16:36:43 -耗时 : 47
2019-04-08 16:36:43 -返回值 : index_v1
2019-04-08 16:36:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 16:36:43 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 47(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 16:36:43.754(Timestamp)
2019-04-08 16:36:43 -<==    Updates: 1
2019-04-08 16:36:44 -请求地址 : http://localhost:8081/main
2019-04-08 16:36:44 -HTTP METHOD : GET
2019-04-08 16:36:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 16:36:44 -参数 : []
2019-04-08 16:36:44 -耗时 : 0
2019-04-08 16:36:44 -返回值 : main
2019-04-08 16:36:44 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 16:36:44 -HTTP METHOD : GET
2019-04-08 16:36:44 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 16:36:44 -参数 : []
2019-04-08 16:36:44 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 16:36:44 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 16:36:44 -<==      Total: 0
2019-04-08 16:36:44 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 16:36:44 -==> Parameters: 1(Long), 0(String)
2019-04-08 16:36:44 -<==      Total: 1
2019-04-08 16:36:44 -耗时 : 11
2019-04-08 16:36:44 -返回值 : com.bootdo.common.utils.PageUtils@56b16178
2019-04-08 16:36:44 -请求地址 : http://localhost:8081/main
2019-04-08 16:36:44 -HTTP METHOD : GET
2019-04-08 16:36:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 16:36:44 -参数 : []
2019-04-08 16:36:44 -耗时 : 0
2019-04-08 16:36:44 -返回值 : main
2019-04-08 16:36:49 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 16:36:49 -HTTP METHOD : GET
2019-04-08 16:36:49 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 16:36:49 -参数 : []
2019-04-08 16:36:49 -耗时 : 1
2019-04-08 16:36:49 -返回值 : /moneyList/moneyList
2019-04-08 16:36:55 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 16:36:55 -HTTP METHOD : GET
2019-04-08 16:36:55 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 16:36:55 -参数 : []
2019-04-08 16:36:55 -耗时 : 0
2019-04-08 16:36:55 -返回值 : system/dept/deptTree
2019-04-08 16:36:56 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 16:36:56 -HTTP METHOD : GET
2019-04-08 16:36:56 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 16:36:56 -参数 : []
2019-04-08 16:36:56 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 16:36:56 -==> Parameters: 
2019-04-08 16:36:56 -<==      Total: 3
2019-04-08 16:36:56 -耗时 : 4
2019-04-08 16:36:56 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 16:36:58 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 16:36:58 -HTTP METHOD : POST
2019-04-08 16:36:58 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 16:36:58 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@7da1559a]
2019-04-08 16:36:58 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 16:36:58 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 16:36:58 -<==      Total: 3
2019-04-08 16:36:58 -耗时 : 4
2019-04-08 16:36:58 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@668d95c0, com.bootdo.moneyList.damain.MoneyListDO@9a71b1, com.bootdo.moneyList.damain.MoneyListDO@7760e9bd]
2019-04-08 16:37:01 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 16:37:01 -HTTP METHOD : POST
2019-04-08 16:37:01 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 16:37:01 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@9c731d9]
2019-04-08 16:37:01 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 16:37:01 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 16:37:01 -<==    Updates: 1
2019-04-08 16:37:01 -耗时 : 41
2019-04-08 16:37:01 -返回值 : 0
2019-04-08 16:37:03 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 16:37:03 -HTTP METHOD : POST
2019-04-08 16:37:03 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 16:37:03 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@787a60b]
2019-04-08 16:37:03 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 16:37:03 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 16:37:03 -<==      Total: 3
2019-04-08 16:37:03 -耗时 : 8
2019-04-08 16:37:03 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@126f16d5, com.bootdo.moneyList.damain.MoneyListDO@6d220cc4, com.bootdo.moneyList.damain.MoneyListDO@2ddbcf67]
2019-04-08 16:37:09 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 16:37:09 -HTTP METHOD : POST
2019-04-08 16:37:09 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 16:37:09 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@4ce54835]
2019-04-08 16:37:09 -==>  Preparing: update heat set heat_sum = heat_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 16:37:09 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 16:37:09 -<==    Updates: 1
2019-04-08 16:37:09 -耗时 : 52
2019-04-08 16:37:09 -返回值 : 1
2019-04-08 16:37:11 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 16:37:11 -HTTP METHOD : POST
2019-04-08 16:37:11 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 16:37:11 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@209f5871]
2019-04-08 16:37:11 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 16:37:11 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 16:37:11 -<==      Total: 3
2019-04-08 16:37:11 -耗时 : 7
2019-04-08 16:37:11 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@4eddb20a, com.bootdo.moneyList.damain.MoneyListDO@53813724, com.bootdo.moneyList.damain.MoneyListDO@907b1f5]
2019-04-08 16:37:12 -请求地址 : http://localhost:8081/print/print/printMoney
2019-04-08 16:37:12 -HTTP METHOD : GET
2019-04-08 16:37:12 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printMoney
2019-04-08 16:37:12 -参数 : []
2019-04-08 16:37:12 -耗时 : 0
2019-04-08 16:37:12 -返回值 : print/print/printEdit2
2019-04-08 16:37:18 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 16:37:18 -HTTP METHOD : POST
2019-04-08 16:37:18 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 16:37:18 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@3e881031]
2019-04-08 16:37:18 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 16:37:18 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 16:37:18 -<==      Total: 3
2019-04-08 16:37:18 -耗时 : 8
2019-04-08 16:37:18 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@1ba061d, com.bootdo.moneyList.damain.MoneyListDO@62e5622a, com.bootdo.moneyList.damain.MoneyListDO@5950e88a]
2019-04-08 16:37:21 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 16:37:21 -HTTP METHOD : POST
2019-04-08 16:37:21 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 16:37:21 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@450ba0b1]
2019-04-08 16:37:21 -==>  Preparing: update water set water_sum = water_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 16:37:21 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 16:37:21 -<==    Updates: 0
2019-04-08 16:37:21 -耗时 : 5
2019-04-08 16:37:21 -返回值 : 2
2019-04-08 16:37:22 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 16:37:22 -HTTP METHOD : POST
2019-04-08 16:37:22 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 16:37:22 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@37b5b08a]
2019-04-08 16:37:22 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 16:37:22 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 16:37:22 -<==      Total: 3
2019-04-08 16:37:22 -耗时 : 4
2019-04-08 16:37:22 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@5f179ae8, com.bootdo.moneyList.damain.MoneyListDO@67f87e4f, com.bootdo.moneyList.damain.MoneyListDO@7d53a3da]
2019-04-08 16:42:14 -请求地址 : http://localhost:8081/index
2019-04-08 16:42:14 -HTTP METHOD : GET
2019-04-08 16:42:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 16:42:14 -参数 : [{}]
2019-04-08 16:42:14 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 16:42:14 -==> Parameters: 1(Long)
2019-04-08 16:42:14 -<==      Total: 46
2019-04-08 16:42:14 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 16:42:14 -==> Parameters: 138(Long)
2019-04-08 16:42:14 -<==      Total: 1
2019-04-08 16:42:14 -耗时 : 36
2019-04-08 16:42:14 -返回值 : index_v1
2019-04-08 16:42:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 16:42:14 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 37(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 16:42:14.86(Timestamp)
2019-04-08 16:42:14 -<==    Updates: 1
2019-04-08 16:42:14 -请求地址 : http://localhost:8081/main
2019-04-08 16:42:14 -HTTP METHOD : GET
2019-04-08 16:42:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 16:42:14 -参数 : []
2019-04-08 16:42:14 -耗时 : 0
2019-04-08 16:42:14 -返回值 : main
2019-04-08 16:42:15 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 16:42:15 -HTTP METHOD : GET
2019-04-08 16:42:15 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 16:42:15 -参数 : []
2019-04-08 16:42:15 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 16:42:15 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 16:42:15 -<==      Total: 0
2019-04-08 16:42:15 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 16:42:15 -==> Parameters: 1(Long), 0(String)
2019-04-08 16:42:15 -<==      Total: 1
2019-04-08 16:42:15 -耗时 : 7
2019-04-08 16:42:15 -返回值 : com.bootdo.common.utils.PageUtils@5b0b91f4
2019-04-08 16:42:15 -请求地址 : http://localhost:8081/main
2019-04-08 16:42:15 -HTTP METHOD : GET
2019-04-08 16:42:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 16:42:15 -参数 : []
2019-04-08 16:42:15 -耗时 : 1
2019-04-08 16:42:15 -返回值 : main
2019-04-08 16:42:17 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-08 16:42:17 -==> Parameters: 1(Long)
2019-04-08 16:42:17 -<==      Total: 90
2019-04-08 16:42:17 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 16:42:17 -HTTP METHOD : GET
2019-04-08 16:42:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 16:42:17 -参数 : []
2019-04-08 16:42:17 -耗时 : 1
2019-04-08 16:42:17 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 16:42:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 16:42:17 -HTTP METHOD : GET
2019-04-08 16:42:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 16:42:17 -参数 : [userType]
2019-04-08 16:42:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 16:42:17 -==> Parameters: userType(String)
2019-04-08 16:42:17 -<==      Total: 2
2019-04-08 16:42:17 -耗时 : 22
2019-04-08 16:42:17 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 16:42:17 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 16:42:17 -HTTP METHOD : GET
2019-04-08 16:42:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 16:42:17 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 16:42:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 16:42:17 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 16:42:17 -<==      Total: 8
2019-04-08 16:42:17 -==>  Preparing: select count(*) from elec_log 
2019-04-08 16:42:17 -==> Parameters: 
2019-04-08 16:42:17 -<==      Total: 1
2019-04-08 16:42:17 -耗时 : 49
2019-04-08 16:42:17 -返回值 : com.bootdo.common.utils.PageUtils@6c359449
2019-04-08 16:42:20 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 16:42:20 -HTTP METHOD : GET
2019-04-08 16:42:20 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 16:42:20 -参数 : []
2019-04-08 16:42:20 -耗时 : 1
2019-04-08 16:42:20 -返回值 : /moneyList/moneyList
2019-04-08 16:42:24 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 16:42:24 -HTTP METHOD : GET
2019-04-08 16:42:24 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 16:42:24 -参数 : []
2019-04-08 16:42:24 -耗时 : 3
2019-04-08 16:42:24 -返回值 : system/dept/deptTree
2019-04-08 16:42:24 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 16:42:24 -HTTP METHOD : GET
2019-04-08 16:42:24 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 16:42:24 -参数 : []
2019-04-08 16:42:24 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 16:42:24 -==> Parameters: 
2019-04-08 16:42:24 -<==      Total: 3
2019-04-08 16:42:24 -耗时 : 3
2019-04-08 16:42:24 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 16:42:26 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 16:42:26 -HTTP METHOD : POST
2019-04-08 16:42:26 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 16:42:26 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@1d3f7cd1]
2019-04-08 16:42:26 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 16:42:26 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 16:42:26 -<==      Total: 3
2019-04-08 16:42:26 -耗时 : 4
2019-04-08 16:42:26 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@3d478834, com.bootdo.moneyList.damain.MoneyListDO@14f1e7af, com.bootdo.moneyList.damain.MoneyListDO@72ced814]
2019-04-08 16:42:31 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 16:42:31 -HTTP METHOD : POST
2019-04-08 16:42:31 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 16:42:31 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@6fe7a693]
2019-04-08 16:42:31 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 16:42:31 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 16:42:31 -<==    Updates: 1
2019-04-08 16:42:31 -耗时 : 103
2019-04-08 16:42:31 -返回值 : 0
2019-04-08 16:42:32 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 16:42:32 -HTTP METHOD : POST
2019-04-08 16:42:32 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 16:42:32 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@38b6a5ba]
2019-04-08 16:42:32 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 16:42:32 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 16:42:32 -<==      Total: 3
2019-04-08 16:42:32 -耗时 : 5
2019-04-08 16:42:32 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@1184d7fb, com.bootdo.moneyList.damain.MoneyListDO@5ba7ebb9, com.bootdo.moneyList.damain.MoneyListDO@56b11e02]
2019-04-08 16:42:37 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 16:42:37 -HTTP METHOD : POST
2019-04-08 16:42:37 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 16:42:37 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@66a0c857]
2019-04-08 16:42:37 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 16:42:37 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 16:42:37 -<==      Total: 3
2019-04-08 16:42:37 -耗时 : 6
2019-04-08 16:42:37 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@6500e3e1, com.bootdo.moneyList.damain.MoneyListDO@74995626, com.bootdo.moneyList.damain.MoneyListDO@141bca92]
2019-04-08 16:42:46 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-04-08 16:42:46 -HTTP METHOD : POST
2019-04-08 16:42:46 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-04-08 16:42:46 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@259b8f7f]
2019-04-08 16:42:46 -==>  Preparing: select DISTINCT user_name from( select user_name from elec WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from heat WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from water WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) )username 
2019-04-08 16:42:46 -==> Parameters: 2019-02(String), 李(String), 2019-02(String), 李(String), 2019-02(String), 李(String)
2019-04-08 16:42:46 -<==      Total: 1
2019-04-08 16:42:46 -耗时 : 118
2019-04-08 16:42:46 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@19733a49]
2019-04-08 16:42:48 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 16:42:48 -HTTP METHOD : POST
2019-04-08 16:42:48 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 16:42:48 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@1ca300bd]
2019-04-08 16:42:48 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? and user_name = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? and user_name = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? and user_name = ? 
2019-04-08 16:42:48 -==> Parameters: 2019-02(String), 1-0001(String), 李文英(String), 2019-02(String), 1-0001(String), 李文英(String), 2019-02(String), 1-0001(String), 李文英(String)
2019-04-08 16:42:48 -<==      Total: 3
2019-04-08 16:42:48 -耗时 : 10
2019-04-08 16:42:48 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@1e608467, com.bootdo.moneyList.damain.MoneyListDO@6ac08502, com.bootdo.moneyList.damain.MoneyListDO@6e62d60f]
2019-04-08 16:42:56 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-04-08 16:42:56 -HTTP METHOD : POST
2019-04-08 16:42:56 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-04-08 16:42:56 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@1c8af392]
2019-04-08 16:42:56 -==>  Preparing: select DISTINCT user_name from( select user_name from elec WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from heat WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from water WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) )username 
2019-04-08 16:42:56 -==> Parameters: 2019-02(String), 王(String), 2019-02(String), 王(String), 2019-02(String), 王(String)
2019-04-08 16:42:56 -<==      Total: 0
2019-04-08 16:42:56 -耗时 : 5
2019-04-08 16:42:56 -返回值 : []
2019-04-08 16:42:57 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-04-08 16:42:57 -HTTP METHOD : POST
2019-04-08 16:42:57 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-04-08 16:42:57 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@13d4aa88]
2019-04-08 16:42:57 -==>  Preparing: select DISTINCT user_name from( select user_name from elec WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from heat WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from water WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) )username 
2019-04-08 16:42:57 -==> Parameters: 2019-02(String), 王(String), 2019-02(String), 王(String), 2019-02(String), 王(String)
2019-04-08 16:42:57 -<==      Total: 0
2019-04-08 16:42:57 -耗时 : 3
2019-04-08 16:42:57 -返回值 : []
2019-04-08 16:42:58 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-04-08 16:42:58 -HTTP METHOD : POST
2019-04-08 16:42:58 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-04-08 16:42:58 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@43a6e8fe]
2019-04-08 16:42:58 -==>  Preparing: select DISTINCT user_name from( select user_name from elec WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from heat WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from water WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) )username 
2019-04-08 16:42:58 -==> Parameters: 2019-02(String), 王(String), 2019-02(String), 王(String), 2019-02(String), 王(String)
2019-04-08 16:42:58 -<==      Total: 0
2019-04-08 16:42:58 -耗时 : 3
2019-04-08 16:42:58 -返回值 : []
2019-04-08 16:42:58 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-04-08 16:42:58 -HTTP METHOD : POST
2019-04-08 16:42:58 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-04-08 16:42:58 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@47553fc8]
2019-04-08 16:42:58 -==>  Preparing: select DISTINCT user_name from( select user_name from elec WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from heat WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from water WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) )username 
2019-04-08 16:42:58 -==> Parameters: 2019-02(String), 王(String), 2019-02(String), 王(String), 2019-02(String), 王(String)
2019-04-08 16:42:58 -<==      Total: 0
2019-04-08 16:42:58 -耗时 : 3
2019-04-08 16:42:58 -返回值 : []
2019-04-08 16:42:58 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-04-08 16:42:58 -HTTP METHOD : POST
2019-04-08 16:42:58 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-04-08 16:42:58 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@3a8ca25e]
2019-04-08 16:42:58 -==>  Preparing: select DISTINCT user_name from( select user_name from elec WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from heat WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from water WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) )username 
2019-04-08 16:42:58 -==> Parameters: 2019-02(String), 王(String), 2019-02(String), 王(String), 2019-02(String), 王(String)
2019-04-08 16:42:58 -<==      Total: 0
2019-04-08 16:42:58 -耗时 : 3
2019-04-08 16:42:58 -返回值 : []
2019-04-08 16:43:02 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-04-08 16:43:02 -HTTP METHOD : POST
2019-04-08 16:43:02 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-04-08 16:43:02 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@9f89198]
2019-04-08 16:43:02 -==>  Preparing: select DISTINCT user_name from( select user_name from elec WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from heat WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from water WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) )username 
2019-04-08 16:43:02 -==> Parameters: 2019-02(String), 王(String), 2019-02(String), 王(String), 2019-02(String), 王(String)
2019-04-08 16:43:02 -<==      Total: 0
2019-04-08 16:43:02 -耗时 : 4
2019-04-08 16:43:02 -返回值 : []
2019-04-08 16:43:02 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-04-08 16:43:02 -HTTP METHOD : POST
2019-04-08 16:43:02 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-04-08 16:43:02 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@1d689c38]
2019-04-08 16:43:02 -==>  Preparing: select DISTINCT user_name from( select user_name from elec WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from heat WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from water WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) )username 
2019-04-08 16:43:02 -==> Parameters: 2019-02(String), 王(String), 2019-02(String), 王(String), 2019-02(String), 王(String)
2019-04-08 16:43:02 -<==      Total: 0
2019-04-08 16:43:02 -耗时 : 4
2019-04-08 16:43:02 -返回值 : []
2019-04-08 16:43:03 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-04-08 16:43:03 -HTTP METHOD : POST
2019-04-08 16:43:03 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-04-08 16:43:03 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@2bf65e17]
2019-04-08 16:43:03 -==>  Preparing: select DISTINCT user_name from( select user_name from elec WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from heat WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from water WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) )username 
2019-04-08 16:43:03 -==> Parameters: 2019-02(String), 王(String), 2019-02(String), 王(String), 2019-02(String), 王(String)
2019-04-08 16:43:03 -<==      Total: 0
2019-04-08 16:43:03 -耗时 : 3
2019-04-08 16:43:03 -返回值 : []
2019-04-08 16:43:03 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-04-08 16:43:03 -HTTP METHOD : POST
2019-04-08 16:43:03 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-04-08 16:43:03 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@37017d49]
2019-04-08 16:43:03 -==>  Preparing: select DISTINCT user_name from( select user_name from elec WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from heat WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from water WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) )username 
2019-04-08 16:43:03 -==> Parameters: 2019-02(String), 王(String), 2019-02(String), 王(String), 2019-02(String), 王(String)
2019-04-08 16:43:03 -<==      Total: 0
2019-04-08 16:43:03 -耗时 : 4
2019-04-08 16:43:03 -返回值 : []
2019-04-08 16:43:03 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-04-08 16:43:03 -HTTP METHOD : POST
2019-04-08 16:43:03 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-04-08 16:43:03 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@71984333]
2019-04-08 16:43:03 -==>  Preparing: select DISTINCT user_name from( select user_name from elec WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from heat WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from water WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) )username 
2019-04-08 16:43:03 -==> Parameters: 2019-02(String), 王(String), 2019-02(String), 王(String), 2019-02(String), 王(String)
2019-04-08 16:43:03 -<==      Total: 0
2019-04-08 16:43:03 -耗时 : 4
2019-04-08 16:43:03 -返回值 : []
2019-04-08 16:43:10 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-04-08 16:43:10 -HTTP METHOD : POST
2019-04-08 16:43:10 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-04-08 16:43:10 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@38490396]
2019-04-08 16:43:10 -==>  Preparing: select DISTINCT user_name from( select user_name from elec WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from heat WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from water WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) )username 
2019-04-08 16:43:10 -==> Parameters: 2019-03(String), 王(String), 2019-03(String), 王(String), 2019-03(String), 王(String)
2019-04-08 16:43:10 -<==      Total: 0
2019-04-08 16:43:10 -耗时 : 3
2019-04-08 16:43:10 -返回值 : []
2019-04-08 16:43:10 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-04-08 16:43:10 -HTTP METHOD : POST
2019-04-08 16:43:10 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-04-08 16:43:10 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@69e4b99b]
2019-04-08 16:43:10 -==>  Preparing: select DISTINCT user_name from( select user_name from elec WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from heat WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from water WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) )username 
2019-04-08 16:43:10 -==> Parameters: 2019-03(String), 王(String), 2019-03(String), 王(String), 2019-03(String), 王(String)
2019-04-08 16:43:10 -<==      Total: 0
2019-04-08 16:43:10 -耗时 : 5
2019-04-08 16:43:10 -返回值 : []
2019-04-08 16:43:14 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-04-08 16:43:14 -HTTP METHOD : POST
2019-04-08 16:43:14 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-04-08 16:43:14 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@691e59c1]
2019-04-08 16:43:14 -==>  Preparing: select DISTINCT user_name from( select user_name from elec WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from heat WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from water WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) )username 
2019-04-08 16:43:14 -==> Parameters: 2019-03(String), 张(String), 2019-03(String), 张(String), 2019-03(String), 张(String)
2019-04-08 16:43:14 -<==      Total: 0
2019-04-08 16:43:14 -耗时 : 5
2019-04-08 16:43:14 -返回值 : []
2019-04-08 16:43:15 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-04-08 16:43:15 -HTTP METHOD : POST
2019-04-08 16:43:15 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-04-08 16:43:15 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@29d39b2b]
2019-04-08 16:43:15 -==>  Preparing: select DISTINCT user_name from( select user_name from elec WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from heat WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from water WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) )username 
2019-04-08 16:43:15 -==> Parameters: 2019-03(String), 张(String), 2019-03(String), 张(String), 2019-03(String), 张(String)
2019-04-08 16:43:15 -<==      Total: 0
2019-04-08 16:43:15 -耗时 : 4
2019-04-08 16:43:15 -返回值 : []
2019-04-08 16:43:15 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-04-08 16:43:15 -HTTP METHOD : POST
2019-04-08 16:43:15 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-04-08 16:43:15 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@60a5685]
2019-04-08 16:43:15 -==>  Preparing: select DISTINCT user_name from( select user_name from elec WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from heat WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from water WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) )username 
2019-04-08 16:43:15 -==> Parameters: 2019-03(String), 张(String), 2019-03(String), 张(String), 2019-03(String), 张(String)
2019-04-08 16:43:15 -<==      Total: 0
2019-04-08 16:43:15 -耗时 : 4
2019-04-08 16:43:15 -返回值 : []
2019-04-08 16:43:15 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-04-08 16:43:15 -HTTP METHOD : POST
2019-04-08 16:43:15 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-04-08 16:43:15 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@3eed6aee]
2019-04-08 16:43:15 -==>  Preparing: select DISTINCT user_name from( select user_name from elec WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from heat WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from water WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) )username 
2019-04-08 16:43:15 -==> Parameters: 2019-03(String), 张(String), 2019-03(String), 张(String), 2019-03(String), 张(String)
2019-04-08 16:43:15 -<==      Total: 0
2019-04-08 16:43:15 -耗时 : 5
2019-04-08 16:43:15 -返回值 : []
2019-04-08 16:43:15 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-04-08 16:43:15 -HTTP METHOD : POST
2019-04-08 16:43:15 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-04-08 16:43:15 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@5f29cf00]
2019-04-08 16:43:15 -==>  Preparing: select DISTINCT user_name from( select user_name from elec WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from heat WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from water WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) )username 
2019-04-08 16:43:15 -==> Parameters: 2019-03(String), 张(String), 2019-03(String), 张(String), 2019-03(String), 张(String)
2019-04-08 16:43:15 -<==      Total: 0
2019-04-08 16:43:15 -耗时 : 5
2019-04-08 16:43:15 -返回值 : []
2019-04-08 16:43:16 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-04-08 16:43:16 -HTTP METHOD : POST
2019-04-08 16:43:16 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-04-08 16:43:16 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@7db1ae60]
2019-04-08 16:43:16 -==>  Preparing: select DISTINCT user_name from( select user_name from elec WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from heat WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from water WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) )username 
2019-04-08 16:43:16 -==> Parameters: 2019-03(String), 张(String), 2019-03(String), 张(String), 2019-03(String), 张(String)
2019-04-08 16:43:16 -<==      Total: 0
2019-04-08 16:43:16 -耗时 : 5
2019-04-08 16:43:16 -返回值 : []
2019-04-08 16:43:16 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-04-08 16:43:16 -HTTP METHOD : POST
2019-04-08 16:43:16 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-04-08 16:43:16 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@5601d7ae]
2019-04-08 16:43:16 -==>  Preparing: select DISTINCT user_name from( select user_name from elec WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from heat WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from water WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) )username 
2019-04-08 16:43:16 -==> Parameters: 2019-03(String), 张(String), 2019-03(String), 张(String), 2019-03(String), 张(String)
2019-04-08 16:43:16 -<==      Total: 0
2019-04-08 16:43:16 -耗时 : 3
2019-04-08 16:43:16 -返回值 : []
2019-04-08 16:43:27 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-04-08 16:43:27 -HTTP METHOD : POST
2019-04-08 16:43:27 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-04-08 16:43:27 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@34a639b2]
2019-04-08 16:43:27 -==>  Preparing: select DISTINCT user_name from( select user_name from elec WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from heat WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from water WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) )username 
2019-04-08 16:43:27 -==> Parameters: 2019-03(String), 留(String), 2019-03(String), 留(String), 2019-03(String), 留(String)
2019-04-08 16:43:27 -<==      Total: 0
2019-04-08 16:43:27 -耗时 : 4
2019-04-08 16:43:27 -返回值 : []
2019-04-08 16:43:28 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-04-08 16:43:28 -HTTP METHOD : POST
2019-04-08 16:43:28 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-04-08 16:43:28 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@600e26fe]
2019-04-08 16:43:28 -==>  Preparing: select DISTINCT user_name from( select user_name from elec WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from heat WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from water WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) )username 
2019-04-08 16:43:28 -==> Parameters: 2019-03(String), 留(String), 2019-03(String), 留(String), 2019-03(String), 留(String)
2019-04-08 16:43:28 -<==      Total: 0
2019-04-08 16:43:28 -耗时 : 3
2019-04-08 16:43:28 -返回值 : []
2019-04-08 16:43:28 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-04-08 16:43:28 -HTTP METHOD : POST
2019-04-08 16:43:28 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-04-08 16:43:28 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@6840c112]
2019-04-08 16:43:28 -==>  Preparing: select DISTINCT user_name from( select user_name from elec WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from heat WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from water WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) )username 
2019-04-08 16:43:28 -==> Parameters: 2019-03(String), 留(String), 2019-03(String), 留(String), 2019-03(String), 留(String)
2019-04-08 16:43:28 -<==      Total: 0
2019-04-08 16:43:28 -耗时 : 7
2019-04-08 16:43:28 -返回值 : []
2019-04-08 16:43:29 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUserName
2019-04-08 16:43:29 -HTTP METHOD : POST
2019-04-08 16:43:29 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.getAllUserName
2019-04-08 16:43:29 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@75b83d3e]
2019-04-08 16:43:29 -==>  Preparing: select DISTINCT user_name from( select user_name from elec WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from heat WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) UNION ALL select user_name from water WHERE create_time = ? and user_name like CONCAT(CONCAT('%',?,'%')) )username 
2019-04-08 16:43:29 -==> Parameters: 2019-03(String), 留(String), 2019-03(String), 留(String), 2019-03(String), 留(String)
2019-04-08 16:43:29 -<==      Total: 0
2019-04-08 16:43:29 -耗时 : 3
2019-04-08 16:43:29 -返回值 : []
2019-04-08 16:43:32 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 16:43:32 -HTTP METHOD : POST
2019-04-08 16:43:32 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 16:43:32 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@679c7cb5]
2019-04-08 16:43:32 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? and user_name = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? and user_name = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? and user_name = ? 
2019-04-08 16:43:32 -==> Parameters: 2019-03(String), 1-0001(String), 留(String), 2019-03(String), 1-0001(String), 留(String), 2019-03(String), 1-0001(String), 留(String)
2019-04-08 16:43:32 -<==      Total: 3
2019-04-08 16:43:32 -耗时 : 6
2019-04-08 16:43:32 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@53fd6404, com.bootdo.moneyList.damain.MoneyListDO@81a3c9d, com.bootdo.moneyList.damain.MoneyListDO@c6790ff]
2019-04-08 16:50:05 -请求地址 : http://localhost:8081/index
2019-04-08 16:50:05 -HTTP METHOD : GET
2019-04-08 16:50:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 16:50:05 -参数 : [{}]
2019-04-08 16:50:05 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 16:50:05 -==> Parameters: 1(Long)
2019-04-08 16:50:05 -<==      Total: 46
2019-04-08 16:50:05 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 16:50:05 -==> Parameters: 138(Long)
2019-04-08 16:50:05 -<==      Total: 1
2019-04-08 16:50:05 -耗时 : 25
2019-04-08 16:50:05 -返回值 : index_v1
2019-04-08 16:50:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 16:50:05 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 25(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 16:50:05.688(Timestamp)
2019-04-08 16:50:05 -请求地址 : http://localhost:8081/main
2019-04-08 16:50:05 -HTTP METHOD : GET
2019-04-08 16:50:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 16:50:05 -参数 : []
2019-04-08 16:50:05 -耗时 : 1
2019-04-08 16:50:05 -返回值 : main
2019-04-08 16:50:05 -<==    Updates: 1
2019-04-08 16:50:06 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 16:50:06 -HTTP METHOD : GET
2019-04-08 16:50:06 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 16:50:06 -参数 : []
2019-04-08 16:50:06 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 16:50:06 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 16:50:06 -<==      Total: 0
2019-04-08 16:50:06 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 16:50:06 -==> Parameters: 1(Long), 0(String)
2019-04-08 16:50:06 -<==      Total: 1
2019-04-08 16:50:06 -耗时 : 10
2019-04-08 16:50:06 -返回值 : com.bootdo.common.utils.PageUtils@4dd645a7
2019-04-08 16:50:06 -请求地址 : http://localhost:8081/main
2019-04-08 16:50:06 -HTTP METHOD : GET
2019-04-08 16:50:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 16:50:06 -参数 : []
2019-04-08 16:50:06 -耗时 : 1
2019-04-08 16:50:06 -返回值 : main
2019-04-08 16:50:11 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 16:50:11 -HTTP METHOD : GET
2019-04-08 16:50:11 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 16:50:11 -参数 : []
2019-04-08 16:50:11 -耗时 : 0
2019-04-08 16:50:11 -返回值 : /moneyList/moneyList
2019-04-08 16:50:13 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 16:50:13 -HTTP METHOD : GET
2019-04-08 16:50:13 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 16:50:13 -参数 : []
2019-04-08 16:50:13 -耗时 : 1
2019-04-08 16:50:13 -返回值 : system/dept/deptTree
2019-04-08 16:50:14 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 16:50:14 -HTTP METHOD : GET
2019-04-08 16:50:14 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 16:50:14 -参数 : []
2019-04-08 16:50:14 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 16:50:14 -==> Parameters: 
2019-04-08 16:50:14 -<==      Total: 3
2019-04-08 16:50:14 -耗时 : 4
2019-04-08 16:50:14 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 16:50:17 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 16:50:17 -HTTP METHOD : GET
2019-04-08 16:50:17 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 16:50:17 -参数 : []
2019-04-08 16:50:17 -耗时 : 1
2019-04-08 16:50:17 -返回值 : system/dept/deptTree
2019-04-08 16:50:17 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 16:50:17 -HTTP METHOD : GET
2019-04-08 16:50:17 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 16:50:17 -参数 : []
2019-04-08 16:50:17 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 16:50:17 -==> Parameters: 
2019-04-08 16:50:17 -<==      Total: 3
2019-04-08 16:50:17 -耗时 : 6
2019-04-08 16:50:17 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 17:01:47 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 5 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(5)-CONNECTED(5)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 57], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 430]
2019-04-08 18:53:38 -Starting BootdoApplication on ZJZL-20180906VX with PID 7936 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-04-08 18:53:38 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-04-08 18:53:38 -The following profiles are active: dev
2019-04-08 18:53:38 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 08 18:53:38 CST 2019]; root of context hierarchy
2019-04-08 18:53:43 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-04-08 18:53:46 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6c68c88e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 18:53:46 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$5ec1f735] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 18:53:47 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 18:53:47 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 18:53:47 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 18:53:48 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-04-08 18:53:48 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-04-08 18:53:48 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 18:53:48 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 18:53:48 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 18:53:48 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-04-08 18:53:49 -Tomcat initialized with port(s): 8081 (http)
2019-04-08 18:53:49 -Initializing ProtocolHandler ["http-nio-8081"]
2019-04-08 18:53:49 -Starting service [Tomcat]
2019-04-08 18:53:49 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-04-08 18:53:49 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;D:\GIT\Git\cmd;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-04-08 18:53:50 -Initializing Spring embedded WebApplicationContext
2019-04-08 18:53:50 -Root WebApplicationContext: initialization completed in 11297 ms
2019-04-08 18:53:50 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-04-08 18:53:50 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-04-08 18:53:50 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-04-08 18:53:50 -Mapping filter: 'requestContextFilter' to: [/*]
2019-04-08 18:53:50 -Filter xssFilter was not registered (disabled)
2019-04-08 18:53:50 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-04-08 18:53:50 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-04-08 18:53:50 -Servlet statViewServlet mapped to [/druid/*]
2019-04-08 18:53:50 -Servlet dispatcherServlet mapped to [/]
2019-04-08 18:53:54 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 08 18:53:38 CST 2019]; root of context hierarchy
2019-04-08 18:53:54 -Using default implementation for ThreadExecutor
2019-04-08 18:53:54 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-04-08 18:53:54 -Quartz Scheduler v.2.2.1 created.
2019-04-08 18:53:54 -RAMJobStore initialized.
2019-04-08 18:53:54 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-04-08 18:53:54 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-04-08 18:53:54 -Quartz scheduler version: 2.2.1
2019-04-08 18:53:54 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@2dcd0e41
2019-04-08 18:53:55 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-04-08 18:53:55 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-04-08 18:53:57 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 18:53:57 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-04-08 18:53:57 -Mapped "{[/charts/countDD/tableDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.tableDD()
2019-04-08 18:53:57 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-08 18:53:57 -Mapped "{[/charts/countMM/exportCountMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 18:53:57 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-04-08 18:53:57 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public void com.bootdo.charts.controller.countMMController.getCountMM(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletRequest)
2019-04-08 18:53:57 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletRequest)
2019-04-08 18:53:57 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-04-08 18:53:57 -Mapped "{[/charts/countRun/exportCountRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 18:53:57 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public int com.bootdo.charts.controller.countRunController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-08 18:53:57 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-04-08 18:53:57 -Mapped "{[/charts/countYY/exportCountYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 18:53:57 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public int com.bootdo.charts.controller.countYYController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-04-08 18:53:57 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-04-08 18:53:58 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-04-08 18:53:58 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-04-08 18:53:58 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-04-08 18:53:58 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-04-08 18:53:58 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 18:53:58 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-04-08 18:53:58 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-04-08 18:53:58 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-04-08 18:53:58 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 18:53:58 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-04-08 18:53:58 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-04-08 18:53:58 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-04-08 18:53:58 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-04-08 18:53:58 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-04-08 18:53:58 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-04-08 18:53:58 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 18:53:58 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-04-08 18:53:58 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-04-08 18:53:58 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 18:53:58 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-04-08 18:53:58 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-04-08 18:53:58 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 18:53:58 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-04-08 18:53:58 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-08 18:53:58 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-04-08 18:53:58 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-04-08 18:53:58 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-04-08 18:53:58 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-04-08 18:53:58 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-04-08 18:53:58 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-04-08 18:53:58 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-04-08 18:53:58 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 18:53:58 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-04-08 18:53:58 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-04-08 18:53:58 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-04-08 18:53:58 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-04-08 18:53:58 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 18:53:58 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-04-08 18:53:58 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-04-08 18:53:58 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 18:53:58 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-04-08 18:53:58 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-04-08 18:53:58 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-04-08 18:53:58 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-08 18:53:58 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-08 18:53:58 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-04-08 18:53:58 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-04-08 18:53:58 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-04-08 18:53:58 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-04-08 18:53:58 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-04-08 18:53:58 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-04-08 18:53:58 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 18:53:58 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-04-08 18:53:58 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-08 18:53:58 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-04-08 18:53:58 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-04-08 18:53:58 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-04-08 18:53:58 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-04-08 18:53:58 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-04-08 18:53:58 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-04-08 18:53:58 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-04-08 18:53:58 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 18:53:58 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-04-08 18:53:58 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 18:53:58 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-04-08 18:53:58 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-04-08 18:53:58 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-04-08 18:53:58 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-04-08 18:53:58 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-04-08 18:53:58 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-04-08 18:53:58 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-04-08 18:53:58 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 18:53:58 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-04-08 18:53:58 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-04-08 18:53:58 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-08 18:53:58 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-04-08 18:53:58 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-08 18:53:58 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-04-08 18:53:58 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-04-08 18:53:58 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-04-08 18:53:58 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-04-08 18:53:58 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-04-08 18:53:58 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 18:53:58 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-04-08 18:53:58 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 18:53:58 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-04-08 18:53:58 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-08 18:53:58 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-04-08 18:53:58 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-04-08 18:53:58 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-04-08 18:53:58 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-08 18:53:58 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-08 18:53:58 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-04-08 18:53:58 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-04-08 18:53:58 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-04-08 18:53:58 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-04-08 18:53:58 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-04-08 18:53:58 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-08 18:53:58 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 18:53:58 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-04-08 18:53:58 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 18:53:58 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 18:53:58 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-04-08 18:53:58 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-04-08 18:53:58 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-04-08 18:53:58 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-04-08 18:53:58 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-08 18:53:58 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 18:53:58 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-04-08 18:53:58 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 18:53:58 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-04-08 18:53:58 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 18:53:58 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-04-08 18:53:58 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-04-08 18:53:58 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-04-08 18:53:58 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-08 18:53:58 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 18:53:58 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-04-08 18:53:58 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 18:53:58 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-04-08 18:53:58 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 18:53:58 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-04-08 18:53:58 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-04-08 18:53:58 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-04-08 18:53:58 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-04-08 18:53:58 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-04-08 18:53:58 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 18:53:58 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-04-08 18:53:58 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-04-08 18:53:58 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 18:53:58 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-04-08 18:53:58 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 18:53:58 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-04-08 18:53:58 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-04-08 18:53:58 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-04-08 18:53:58 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-04-08 18:53:58 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-04-08 18:53:58 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 18:53:58 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-04-08 18:53:58 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 18:53:58 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 18:53:58 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-04-08 18:53:58 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-04-08 18:53:58 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-04-08 18:53:58 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-04-08 18:53:58 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-04-08 18:53:58 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-04-08 18:53:58 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-04-08 18:53:58 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-04-08 18:53:58 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-04-08 18:53:58 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-04-08 18:53:58 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 18:53:58 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-04-08 18:53:58 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-04-08 18:53:58 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-04-08 18:53:58 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-04-08 18:53:58 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-04-08 18:53:58 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-04-08 18:53:58 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-04-08 18:53:58 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-08 18:53:58 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-04-08 18:53:58 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-04-08 18:53:58 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-04-08 18:53:58 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-04-08 18:53:58 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 18:53:58 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-04-08 18:53:58 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-04-08 18:53:58 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-04-08 18:53:58 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-08 18:53:58 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-04-08 18:53:58 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-04-08 18:53:58 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-04-08 18:53:58 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-04-08 18:53:58 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-04-08 18:53:58 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-04-08 18:53:58 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-04-08 18:53:58 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-04-08 18:53:58 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 18:53:58 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-04-08 18:53:58 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-04-08 18:53:58 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-04-08 18:53:58 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-04-08 18:53:58 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 18:53:58 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-04-08 18:53:58 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-04-08 18:53:58 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-04-08 18:53:58 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 18:53:58 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-04-08 18:53:58 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-04-08 18:53:58 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-04-08 18:53:58 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-04-08 18:53:58 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-04-08 18:53:58 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-04-08 18:53:58 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-08 18:53:58 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-04-08 18:53:58 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-04-08 18:53:58 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-04-08 18:53:58 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-04-08 18:53:58 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-04-08 18:53:58 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-04-08 18:53:58 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-04-08 18:53:58 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-04-08 18:53:58 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-04-08 18:53:58 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-04-08 18:53:58 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 18:53:58 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-04-08 18:53:58 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 18:53:58 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-08 18:53:58 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-04-08 18:53:58 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-08 18:53:58 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-04-08 18:53:58 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-04-08 18:53:58 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-04-08 18:53:58 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-04-08 18:53:58 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-04-08 18:53:58 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-04-08 18:53:58 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-04-08 18:53:58 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-04-08 18:53:58 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-04-08 18:53:58 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-04-08 18:53:58 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-04-08 18:53:58 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-04-08 18:53:58 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-04-08 18:53:58 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-04-08 18:53:58 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-04-08 18:53:58 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-04-08 18:53:58 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-04-08 18:53:58 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-04-08 18:53:59 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-04-08 18:53:59 -Initializing ExecutorService  'brokerChannelExecutor'
2019-04-08 18:53:59 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-08 18:53:59 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6fdbe764: startup date [Mon Apr 08 18:53:38 CST 2019]; root of context hierarchy
2019-04-08 18:54:00 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-08 18:54:00 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-08 18:54:00 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-04-08 18:54:00 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-04-08 18:54:00 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-04-08 18:54:02 -Registering beans for JMX exposure on startup
2019-04-08 18:54:02 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-04-08 18:54:02 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-04-08 18:54:02 -Starting beans in phase 2147483647
2019-04-08 18:54:02 -Context refreshed
2019-04-08 18:54:02 -Found 1 custom documentation plugin(s)
2019-04-08 18:54:02 -Scanning for api listing references
2019-04-08 18:54:03 -Generating unique operation named: exprotElecLogUsingGET_1
2019-04-08 18:54:03 -Generating unique operation named: getCountDUsingPOST_1
2019-04-08 18:54:03 -Generating unique operation named: exprotElecLogUsingGET_2
2019-04-08 18:54:03 -Generating unique operation named: getCountDUsingPOST_2
2019-04-08 18:54:03 -Generating unique operation named: exprotElecLogUsingGET_3
2019-04-08 18:54:03 -Generating unique operation named: getCountDUsingPOST_3
2019-04-08 18:54:03 -Generating unique operation named: removeUsingPOST_1
2019-04-08 18:54:03 -Generating unique operation named: addUsingGET_1
2019-04-08 18:54:03 -Generating unique operation named: editUsingGET_1
2019-04-08 18:54:03 -Generating unique operation named: listUsingGET_1
2019-04-08 18:54:03 -Generating unique operation named: removeUsingPOST_2
2019-04-08 18:54:03 -Generating unique operation named: removeUsingPOST_3
2019-04-08 18:54:03 -Generating unique operation named: saveUsingPOST_1
2019-04-08 18:54:03 -Generating unique operation named: updateUsingGET_1
2019-04-08 18:54:03 -Generating unique operation named: updateUsingHEAD_1
2019-04-08 18:54:03 -Generating unique operation named: updateUsingPOST_1
2019-04-08 18:54:03 -Generating unique operation named: updateUsingPUT_1
2019-04-08 18:54:03 -Generating unique operation named: updateUsingPATCH_1
2019-04-08 18:54:03 -Generating unique operation named: updateUsingDELETE_1
2019-04-08 18:54:03 -Generating unique operation named: updateUsingOPTIONS_1
2019-04-08 18:54:03 -Generating unique operation named: updateUsingTRACE_1
2019-04-08 18:54:03 -Generating unique operation named: addUsingGET_2
2019-04-08 18:54:03 -Generating unique operation named: editUsingGET_2
2019-04-08 18:54:03 -Generating unique operation named: listUsingGET_2
2019-04-08 18:54:03 -Generating unique operation named: removeUsingPOST_4
2019-04-08 18:54:03 -Generating unique operation named: removeUsingPOST_5
2019-04-08 18:54:03 -Generating unique operation named: saveUsingPOST_2
2019-04-08 18:54:03 -Generating unique operation named: updateUsingPOST_2
2019-04-08 18:54:03 -Generating unique operation named: exprotExcelUsingGET_1
2019-04-08 18:54:03 -Generating unique operation named: addUsingGET_3
2019-04-08 18:54:03 -Generating unique operation named: editUsingGET_3
2019-04-08 18:54:03 -Generating unique operation named: exprotElecLogUsingGET_4
2019-04-08 18:54:03 -Generating unique operation named: listUsingGET_3
2019-04-08 18:54:04 -Generating unique operation named: removeUsingPOST_6
2019-04-08 18:54:04 -Generating unique operation named: removeUsingPOST_7
2019-04-08 18:54:04 -Generating unique operation named: saveUsingPOST_3
2019-04-08 18:54:04 -Generating unique operation named: updateUsingGET_2
2019-04-08 18:54:04 -Generating unique operation named: updateUsingHEAD_2
2019-04-08 18:54:04 -Generating unique operation named: updateUsingPOST_3
2019-04-08 18:54:04 -Generating unique operation named: updateUsingPUT_2
2019-04-08 18:54:04 -Generating unique operation named: updateUsingPATCH_2
2019-04-08 18:54:04 -Generating unique operation named: updateUsingDELETE_2
2019-04-08 18:54:04 -Generating unique operation named: updateUsingOPTIONS_2
2019-04-08 18:54:04 -Generating unique operation named: updateUsingTRACE_2
2019-04-08 18:54:04 -Generating unique operation named: addUsingGET_4
2019-04-08 18:54:04 -Generating unique operation named: editUsingGET_4
2019-04-08 18:54:04 -Generating unique operation named: listUsingGET_4
2019-04-08 18:54:04 -Generating unique operation named: removeUsingPOST_8
2019-04-08 18:54:04 -Generating unique operation named: removeUsingPOST_9
2019-04-08 18:54:04 -Generating unique operation named: saveUsingPOST_4
2019-04-08 18:54:04 -Generating unique operation named: updateUsingGET_3
2019-04-08 18:54:04 -Generating unique operation named: updateUsingHEAD_3
2019-04-08 18:54:04 -Generating unique operation named: updateUsingPOST_4
2019-04-08 18:54:04 -Generating unique operation named: updateUsingPUT_3
2019-04-08 18:54:04 -Generating unique operation named: updateUsingPATCH_3
2019-04-08 18:54:04 -Generating unique operation named: updateUsingDELETE_3
2019-04-08 18:54:04 -Generating unique operation named: updateUsingOPTIONS_3
2019-04-08 18:54:04 -Generating unique operation named: updateUsingTRACE_3
2019-04-08 18:54:04 -Generating unique operation named: ElecUsingGET_1
2019-04-08 18:54:04 -Generating unique operation named: addUsingGET_5
2019-04-08 18:54:04 -Generating unique operation named: editUsingGET_5
2019-04-08 18:54:04 -Generating unique operation named: listUsingGET_5
2019-04-08 18:54:04 -Generating unique operation named: removeUsingPOST_10
2019-04-08 18:54:04 -Generating unique operation named: removeUsingPOST_11
2019-04-08 18:54:04 -Generating unique operation named: saveUsingPOST_5
2019-04-08 18:54:04 -Generating unique operation named: updateUsingGET_4
2019-04-08 18:54:04 -Generating unique operation named: updateUsingHEAD_4
2019-04-08 18:54:04 -Generating unique operation named: updateUsingPOST_5
2019-04-08 18:54:04 -Generating unique operation named: updateUsingPUT_4
2019-04-08 18:54:04 -Generating unique operation named: updateUsingPATCH_4
2019-04-08 18:54:04 -Generating unique operation named: updateUsingDELETE_4
2019-04-08 18:54:04 -Generating unique operation named: updateUsingOPTIONS_4
2019-04-08 18:54:04 -Generating unique operation named: updateUsingTRACE_4
2019-04-08 18:54:04 -Generating unique operation named: editUsingGET_6
2019-04-08 18:54:04 -Generating unique operation named: listUsingGET_6
2019-04-08 18:54:04 -Generating unique operation named: updateUsingPOST_6
2019-04-08 18:54:04 -Generating unique operation named: addUsingGET_6
2019-04-08 18:54:04 -Generating unique operation named: editUsingGET_7
2019-04-08 18:54:04 -Generating unique operation named: exprotExcelUsingGET_2
2019-04-08 18:54:04 -Generating unique operation named: listUsingGET_7
2019-04-08 18:54:04 -Generating unique operation named: removeUsingPOST_12
2019-04-08 18:54:04 -Generating unique operation named: removeUsingPOST_13
2019-04-08 18:54:04 -Generating unique operation named: saveUsingPOST_6
2019-04-08 18:54:04 -Generating unique operation named: updateUsingGET_5
2019-04-08 18:54:04 -Generating unique operation named: updateUsingHEAD_5
2019-04-08 18:54:04 -Generating unique operation named: updateUsingPOST_7
2019-04-08 18:54:04 -Generating unique operation named: updateUsingPUT_5
2019-04-08 18:54:04 -Generating unique operation named: updateUsingPATCH_5
2019-04-08 18:54:04 -Generating unique operation named: updateUsingDELETE_5
2019-04-08 18:54:04 -Generating unique operation named: updateUsingOPTIONS_5
2019-04-08 18:54:04 -Generating unique operation named: updateUsingTRACE_5
2019-04-08 18:54:04 -Generating unique operation named: exprotExcelUsingGET_3
2019-04-08 18:54:04 -Generating unique operation named: addUsingGET_7
2019-04-08 18:54:04 -Generating unique operation named: editUsingGET_8
2019-04-08 18:54:04 -Generating unique operation named: listUsingGET_8
2019-04-08 18:54:04 -Generating unique operation named: removeUsingPOST_14
2019-04-08 18:54:04 -Generating unique operation named: removeUsingPOST_15
2019-04-08 18:54:04 -Generating unique operation named: saveUsingPOST_7
2019-04-08 18:54:04 -Generating unique operation named: updateUsingGET_6
2019-04-08 18:54:04 -Generating unique operation named: updateUsingHEAD_6
2019-04-08 18:54:04 -Generating unique operation named: updateUsingPOST_8
2019-04-08 18:54:04 -Generating unique operation named: updateUsingPUT_6
2019-04-08 18:54:04 -Generating unique operation named: updateUsingPATCH_6
2019-04-08 18:54:04 -Generating unique operation named: updateUsingDELETE_6
2019-04-08 18:54:04 -Generating unique operation named: updateUsingOPTIONS_6
2019-04-08 18:54:04 -Generating unique operation named: updateUsingTRACE_6
2019-04-08 18:54:04 -Generating unique operation named: addUsingGET_8
2019-04-08 18:54:04 -Generating unique operation named: editUsingGET_9
2019-04-08 18:54:04 -Generating unique operation named: listUsingGET_9
2019-04-08 18:54:04 -Generating unique operation named: removeUsingPOST_16
2019-04-08 18:54:04 -Generating unique operation named: removeUsingPOST_17
2019-04-08 18:54:04 -Generating unique operation named: saveUsingPOST_8
2019-04-08 18:54:04 -Generating unique operation named: updateUsingGET_7
2019-04-08 18:54:04 -Generating unique operation named: updateUsingHEAD_7
2019-04-08 18:54:04 -Generating unique operation named: updateUsingPOST_9
2019-04-08 18:54:04 -Generating unique operation named: updateUsingPUT_7
2019-04-08 18:54:04 -Generating unique operation named: updateUsingPATCH_7
2019-04-08 18:54:04 -Generating unique operation named: updateUsingDELETE_7
2019-04-08 18:54:04 -Generating unique operation named: updateUsingOPTIONS_7
2019-04-08 18:54:04 -Generating unique operation named: updateUsingTRACE_7
2019-04-08 18:54:04 -Generating unique operation named: addUsingGET_9
2019-04-08 18:54:04 -Generating unique operation named: editUsingGET_10
2019-04-08 18:54:04 -Generating unique operation named: infoUsingGET_1
2019-04-08 18:54:04 -Generating unique operation named: infoUsingHEAD_1
2019-04-08 18:54:04 -Generating unique operation named: infoUsingPOST_1
2019-04-08 18:54:04 -Generating unique operation named: infoUsingPUT_1
2019-04-08 18:54:04 -Generating unique operation named: infoUsingPATCH_1
2019-04-08 18:54:04 -Generating unique operation named: infoUsingDELETE_1
2019-04-08 18:54:04 -Generating unique operation named: infoUsingOPTIONS_1
2019-04-08 18:54:04 -Generating unique operation named: infoUsingTRACE_1
2019-04-08 18:54:04 -Generating unique operation named: listUsingGET_10
2019-04-08 18:54:04 -Generating unique operation named: removeUsingPOST_18
2019-04-08 18:54:04 -Generating unique operation named: removeUsingPOST_19
2019-04-08 18:54:04 -Generating unique operation named: saveUsingPOST_9
2019-04-08 18:54:04 -Generating unique operation named: updateUsingPOST_10
2019-04-08 18:54:04 -Generating unique operation named: listUsingGET_11
2019-04-08 18:54:04 -Generating unique operation named: removeUsingPOST_20
2019-04-08 18:54:04 -Generating unique operation named: welcomeUsingGET_1
2019-04-08 18:54:04 -Generating unique operation named: addUsingGET_10
2019-04-08 18:54:04 -Generating unique operation named: editUsingGET_11
2019-04-08 18:54:04 -Generating unique operation named: listUsingGET_12
2019-04-08 18:54:04 -Generating unique operation named: removeUsingPOST_21
2019-04-08 18:54:04 -Generating unique operation named: saveUsingPOST_10
2019-04-08 18:54:04 -Generating unique operation named: treeUsingGET_1
2019-04-08 18:54:04 -Generating unique operation named: treeUsingGET_2
2019-04-08 18:54:04 -Generating unique operation named: updateUsingPOST_11
2019-04-08 18:54:04 -Generating unique operation named: addUsingGET_11
2019-04-08 18:54:04 -Generating unique operation named: editUsingGET_12
2019-04-08 18:54:04 -Generating unique operation named: listUsingGET_13
2019-04-08 18:54:04 -Generating unique operation named: removeUsingPOST_22
2019-04-08 18:54:04 -Generating unique operation named: removeUsingPOST_23
2019-04-08 18:54:04 -Generating unique operation named: saveUsingPOST_11
2019-04-08 18:54:04 -Generating unique operation named: updateUsingGET_8
2019-04-08 18:54:04 -Generating unique operation named: updateUsingHEAD_8
2019-04-08 18:54:04 -Generating unique operation named: updateUsingPOST_12
2019-04-08 18:54:04 -Generating unique operation named: updateUsingPUT_8
2019-04-08 18:54:04 -Generating unique operation named: updateUsingPATCH_8
2019-04-08 18:54:04 -Generating unique operation named: updateUsingDELETE_8
2019-04-08 18:54:04 -Generating unique operation named: updateUsingOPTIONS_8
2019-04-08 18:54:04 -Generating unique operation named: updateUsingTRACE_8
2019-04-08 18:54:04 -Generating unique operation named: addUsingGET_12
2019-04-08 18:54:04 -Generating unique operation named: editUsingGET_13
2019-04-08 18:54:04 -Generating unique operation named: listUsingGET_14
2019-04-08 18:54:05 -Generating unique operation named: removeUsingPOST_24
2019-04-08 18:54:05 -Generating unique operation named: removeUsingPOST_25
2019-04-08 18:54:05 -Generating unique operation named: saveUsingPOST_12
2019-04-08 18:54:05 -Generating unique operation named: updateUsingGET_9
2019-04-08 18:54:05 -Generating unique operation named: updateUsingHEAD_9
2019-04-08 18:54:05 -Generating unique operation named: updateUsingPOST_13
2019-04-08 18:54:05 -Generating unique operation named: updateUsingPUT_9
2019-04-08 18:54:05 -Generating unique operation named: updateUsingPATCH_9
2019-04-08 18:54:05 -Generating unique operation named: updateUsingDELETE_9
2019-04-08 18:54:05 -Generating unique operation named: updateUsingOPTIONS_9
2019-04-08 18:54:05 -Generating unique operation named: updateUsingTRACE_9
2019-04-08 18:54:05 -Generating unique operation named: addUsingGET_13
2019-04-08 18:54:05 -Generating unique operation named: batchRemoveUsingPOST_1
2019-04-08 18:54:05 -Generating unique operation named: editUsingGET_14
2019-04-08 18:54:05 -Generating unique operation named: listUsingGET_15
2019-04-08 18:54:05 -Generating unique operation named: saveUsingPOST_13
2019-04-08 18:54:05 -Generating unique operation named: saveUsingPOST_14
2019-04-08 18:54:05 -Generating unique operation named: updateUsingPOST_14
2019-04-08 18:54:05 -Generating unique operation named: listUsingGET_16
2019-04-08 18:54:05 -Generating unique operation named: listUsingHEAD_1
2019-04-08 18:54:05 -Generating unique operation named: listUsingPOST_1
2019-04-08 18:54:05 -Generating unique operation named: listUsingPUT_1
2019-04-08 18:54:05 -Generating unique operation named: listUsingPATCH_1
2019-04-08 18:54:05 -Generating unique operation named: listUsingDELETE_1
2019-04-08 18:54:05 -Generating unique operation named: listUsingOPTIONS_1
2019-04-08 18:54:05 -Generating unique operation named: listUsingTRACE_1
2019-04-08 18:54:05 -Generating unique operation named: addUsingGET_14
2019-04-08 18:54:05 -Generating unique operation named: batchRemoveUsingPOST_2
2019-04-08 18:54:05 -Generating unique operation named: editUsingGET_15
2019-04-08 18:54:05 -Generating unique operation named: listUsingGET_17
2019-04-08 18:54:05 -Generating unique operation named: removeUsingPOST_26
2019-04-08 18:54:05 -Generating unique operation named: saveUsingPOST_15
2019-04-08 18:54:05 -Generating unique operation named: treeUsingGET_3
2019-04-08 18:54:05 -Generating unique operation named: treeViewUsingGET_1
2019-04-08 18:54:05 -Generating unique operation named: updateUsingPOST_15
2019-04-08 18:54:05 -Generating unique operation named: addUsingGET_15
2019-04-08 18:54:05 -Generating unique operation named: editUsingGET_16
2019-04-08 18:54:05 -Generating unique operation named: exprotExcelUsingGET_4
2019-04-08 18:54:05 -Generating unique operation named: listUsingGET_18
2019-04-08 18:54:05 -Generating unique operation named: removeUsingPOST_27
2019-04-08 18:54:05 -Generating unique operation named: removeUsingPOST_28
2019-04-08 18:54:05 -Generating unique operation named: saveUsingPOST_16
2019-04-08 18:54:05 -Generating unique operation named: updateUsingGET_10
2019-04-08 18:54:05 -Generating unique operation named: updateUsingHEAD_10
2019-04-08 18:54:05 -Generating unique operation named: updateUsingPOST_16
2019-04-08 18:54:05 -Generating unique operation named: updateUsingPUT_10
2019-04-08 18:54:05 -Generating unique operation named: updateUsingPATCH_10
2019-04-08 18:54:05 -Generating unique operation named: updateUsingDELETE_10
2019-04-08 18:54:05 -Generating unique operation named: updateUsingOPTIONS_10
2019-04-08 18:54:05 -Generating unique operation named: updateUsingTRACE_10
2019-04-08 18:54:05 -Generating unique operation named: exprotExcelUsingGET_5
2019-04-08 18:54:05 -Generating unique operation named: addUsingGET_16
2019-04-08 18:54:05 -Generating unique operation named: editUsingGET_17
2019-04-08 18:54:05 -Generating unique operation named: listUsingGET_19
2019-04-08 18:54:05 -Generating unique operation named: removeUsingPOST_29
2019-04-08 18:54:05 -Generating unique operation named: removeUsingPOST_30
2019-04-08 18:54:05 -Generating unique operation named: saveUsingPOST_17
2019-04-08 18:54:05 -Generating unique operation named: updateUsingGET_11
2019-04-08 18:54:05 -Generating unique operation named: updateUsingHEAD_11
2019-04-08 18:54:05 -Generating unique operation named: updateUsingPOST_17
2019-04-08 18:54:05 -Generating unique operation named: updateUsingPUT_11
2019-04-08 18:54:05 -Generating unique operation named: updateUsingPATCH_11
2019-04-08 18:54:05 -Generating unique operation named: updateUsingDELETE_11
2019-04-08 18:54:05 -Generating unique operation named: updateUsingOPTIONS_11
2019-04-08 18:54:05 -Generating unique operation named: updateUsingTRACE_11
2019-04-08 18:54:05 -Generating unique operation named: addUsingGET_17
2019-04-08 18:54:05 -Generating unique operation named: editUsingGET_18
2019-04-08 18:54:05 -Generating unique operation named: listUsingGET_20
2019-04-08 18:54:05 -Generating unique operation named: removeUsingPOST_31
2019-04-08 18:54:05 -Generating unique operation named: removeUsingPOST_32
2019-04-08 18:54:05 -Generating unique operation named: saveUsingPOST_18
2019-04-08 18:54:05 -Generating unique operation named: updateUsingGET_12
2019-04-08 18:54:05 -Generating unique operation named: updateUsingHEAD_12
2019-04-08 18:54:05 -Generating unique operation named: updateUsingPOST_18
2019-04-08 18:54:05 -Generating unique operation named: updateUsingPUT_12
2019-04-08 18:54:05 -Generating unique operation named: updateUsingPATCH_12
2019-04-08 18:54:05 -Generating unique operation named: updateUsingDELETE_12
2019-04-08 18:54:05 -Generating unique operation named: updateUsingOPTIONS_12
2019-04-08 18:54:05 -Generating unique operation named: updateUsingTRACE_12
2019-04-08 18:54:05 -Starting Quartz Scheduler now
2019-04-08 18:54:05 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-04-08 18:54:05 -Starting...
2019-04-08 18:54:05 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-04-08 18:54:05 -Started.
2019-04-08 18:54:05 -Starting ProtocolHandler ["http-nio-8081"]
2019-04-08 18:54:05 -Using a shared selector for servlet write/read
2019-04-08 18:54:05 -Tomcat started on port(s): 8081 (http) with context path ''
2019-04-08 18:54:05 -Started BootdoApplication in 28.243 seconds (JVM running for 29.135)
2019-04-08 18:54:05 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-04-08 18:54:06 -==> Parameters: 
2019-04-08 18:54:06 -<==      Total: 1
2019-04-08 18:54:21 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-04-08 18:54:21 -FrameworkServlet 'dispatcherServlet': initialization started
2019-04-08 18:54:21 -FrameworkServlet 'dispatcherServlet': initialization completed in 43 ms
2019-04-08 18:54:21 -Enabling session validation scheduler...
2019-04-08 18:54:21 -请求地址 : http://localhost:8081/login;JSESSIONID=1dc93f09-cc7b-43d1-9ee7-3536141ff747
2019-04-08 18:54:21 -HTTP METHOD : GET
2019-04-08 18:54:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-04-08 18:54:21 -参数 : [{}]
2019-04-08 18:54:21 -耗时 : 3
2019-04-08 18:54:21 -返回值 : login
2019-04-08 18:54:24 -请求地址 : http://localhost:8081/getVerify
2019-04-08 18:54:24 -HTTP METHOD : GET
2019-04-08 18:54:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-04-08 18:54:24 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@24c6c312, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2a0129fa]
2019-04-08 18:54:31 -5655
2019-04-08 18:54:31 -耗时 : 7301
2019-04-08 18:54:31 -返回值 : null
2019-04-08 18:54:39 -请求地址 : http://localhost:8081/login
2019-04-08 18:54:39 -HTTP METHOD : POST
2019-04-08 18:54:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-04-08 18:54:39 -参数 : [admin, 111111, 5655, org.apache.shiro.web.servlet.ShiroHttpServletRequest@22f7b344]
2019-04-08 18:54:39 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-04-08 18:54:39 -==> Parameters: admin(String)
2019-04-08 18:54:39 -<==      Total: 1
2019-04-08 18:54:39 -耗时 : 180
2019-04-08 18:54:39 -返回值 : {msg=操作成功, code=0}
2019-04-08 18:54:39 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-04-08 18:54:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 18:54:39 -==> Parameters: 1(Long), admin(String), 登录(String), 180(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-04-08 18:54:39.727(Timestamp)
2019-04-08 18:54:39 -<==    Updates: 1
2019-04-08 18:54:40 -请求地址 : http://localhost:8081/index
2019-04-08 18:54:40 -HTTP METHOD : GET
2019-04-08 18:54:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 18:54:40 -参数 : [{}]
2019-04-08 18:54:40 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 18:54:40 -==> Parameters: 1(Long)
2019-04-08 18:54:40 -<==      Total: 46
2019-04-08 18:54:40 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 18:54:40 -==> Parameters: 138(Long)
2019-04-08 18:54:40 -<==      Total: 1
2019-04-08 18:54:40 -耗时 : 415
2019-04-08 18:54:40 -返回值 : index_v1
2019-04-08 18:54:40 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 18:54:40 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 415(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 18:54:40.521(Timestamp)
2019-04-08 18:54:40 -<==    Updates: 1
2019-04-08 18:54:40 -请求地址 : http://localhost:8081/main
2019-04-08 18:54:40 -HTTP METHOD : GET
2019-04-08 18:54:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 18:54:40 -参数 : []
2019-04-08 18:54:40 -耗时 : 0
2019-04-08 18:54:40 -返回值 : main
2019-04-08 18:54:42 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 18:54:42 -HTTP METHOD : GET
2019-04-08 18:54:42 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 18:54:42 -参数 : []
2019-04-08 18:54:42 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 18:54:42 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 18:54:42 -<==      Total: 0
2019-04-08 18:54:42 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 18:54:42 -==> Parameters: 1(Long), 0(String)
2019-04-08 18:54:42 -<==      Total: 1
2019-04-08 18:54:42 -耗时 : 52
2019-04-08 18:54:42 -返回值 : com.bootdo.common.utils.PageUtils@961ee39
2019-04-08 18:54:42 -请求地址 : http://localhost:8081/main
2019-04-08 18:54:42 -HTTP METHOD : GET
2019-04-08 18:54:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 18:54:42 -参数 : []
2019-04-08 18:54:42 -耗时 : 1
2019-04-08 18:54:42 -返回值 : main
2019-04-08 18:54:46 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-04-08 18:54:46 -==> Parameters: 1(Long)
2019-04-08 18:54:46 -<==      Total: 90
2019-04-08 18:54:46 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 18:54:46 -HTTP METHOD : GET
2019-04-08 18:54:46 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 18:54:46 -参数 : []
2019-04-08 18:54:46 -耗时 : 1
2019-04-08 18:54:46 -返回值 : /moneyList/moneyList
2019-04-08 18:54:50 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 18:54:50 -HTTP METHOD : GET
2019-04-08 18:54:50 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 18:54:50 -参数 : []
2019-04-08 18:54:50 -耗时 : 1
2019-04-08 18:54:50 -返回值 : system/dept/deptTree
2019-04-08 18:54:50 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 18:54:50 -HTTP METHOD : GET
2019-04-08 18:54:50 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 18:54:50 -参数 : []
2019-04-08 18:54:50 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 18:54:50 -==> Parameters: 
2019-04-08 18:54:50 -<==      Total: 3
2019-04-08 18:54:50 -耗时 : 33
2019-04-08 18:54:50 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 18:54:56 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 18:54:56 -HTTP METHOD : GET
2019-04-08 18:54:56 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 18:54:56 -参数 : []
2019-04-08 18:54:56 -耗时 : 0
2019-04-08 18:54:56 -返回值 : system/dept/deptTree
2019-04-08 18:54:57 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 18:54:57 -HTTP METHOD : GET
2019-04-08 18:54:57 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 18:54:57 -参数 : []
2019-04-08 18:54:57 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 18:54:57 -==> Parameters: 
2019-04-08 18:54:57 -<==      Total: 3
2019-04-08 18:54:57 -耗时 : 4
2019-04-08 18:54:57 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 18:54:59 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 4]
2019-04-08 18:54:59 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 18:54:59 -HTTP METHOD : POST
2019-04-08 18:54:59 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 18:54:59 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@3bf6d7ff]
2019-04-08 18:54:59 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 18:54:59 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 18:55:00 -<==      Total: 3
2019-04-08 18:55:00 -耗时 : 77
2019-04-08 18:55:00 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@8e3e8bc, com.bootdo.moneyList.damain.MoneyListDO@5f1538b9, com.bootdo.moneyList.damain.MoneyListDO@265d78d4]
2019-04-08 18:55:30 -请求地址 : http://localhost:8081/index
2019-04-08 18:55:30 -HTTP METHOD : GET
2019-04-08 18:55:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 18:55:30 -参数 : [{}]
2019-04-08 18:55:30 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 18:55:30 -==> Parameters: 1(Long)
2019-04-08 18:55:30 -<==      Total: 46
2019-04-08 18:55:30 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 18:55:30 -==> Parameters: 138(Long)
2019-04-08 18:55:30 -<==      Total: 1
2019-04-08 18:55:30 -耗时 : 36
2019-04-08 18:55:30 -返回值 : index_v1
2019-04-08 18:55:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 18:55:30 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 36(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 18:55:30.199(Timestamp)
2019-04-08 18:55:30 -<==    Updates: 1
2019-04-08 18:55:30 -请求地址 : http://localhost:8081/main
2019-04-08 18:55:30 -HTTP METHOD : GET
2019-04-08 18:55:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 18:55:30 -参数 : []
2019-04-08 18:55:30 -耗时 : 1
2019-04-08 18:55:30 -返回值 : main
2019-04-08 18:55:31 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 18:55:31 -HTTP METHOD : GET
2019-04-08 18:55:31 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 18:55:31 -参数 : []
2019-04-08 18:55:31 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 18:55:31 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 18:55:31 -<==      Total: 0
2019-04-08 18:55:31 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 18:55:31 -==> Parameters: 1(Long), 0(String)
2019-04-08 18:55:31 -<==      Total: 1
2019-04-08 18:55:31 -耗时 : 22
2019-04-08 18:55:31 -返回值 : com.bootdo.common.utils.PageUtils@5dfa1dad
2019-04-08 18:55:31 -请求地址 : http://localhost:8081/main
2019-04-08 18:55:31 -HTTP METHOD : GET
2019-04-08 18:55:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 18:55:31 -参数 : []
2019-04-08 18:55:31 -耗时 : 1
2019-04-08 18:55:31 -返回值 : main
2019-04-08 18:55:33 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 18:55:33 -HTTP METHOD : GET
2019-04-08 18:55:33 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 18:55:33 -参数 : []
2019-04-08 18:55:33 -耗时 : 1
2019-04-08 18:55:33 -返回值 : /moneyList/moneyList
2019-04-08 18:55:38 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 18:55:38 -HTTP METHOD : GET
2019-04-08 18:55:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 18:55:38 -参数 : []
2019-04-08 18:55:38 -耗时 : 1
2019-04-08 18:55:38 -返回值 : system/dept/deptTree
2019-04-08 18:55:38 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 18:55:38 -HTTP METHOD : GET
2019-04-08 18:55:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 18:55:38 -参数 : []
2019-04-08 18:55:38 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 18:55:38 -==> Parameters: 
2019-04-08 18:55:38 -<==      Total: 3
2019-04-08 18:55:38 -耗时 : 6
2019-04-08 18:55:38 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 18:55:41 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 18:55:41 -HTTP METHOD : POST
2019-04-08 18:55:41 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 18:55:41 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@3ca9cc1e]
2019-04-08 18:55:41 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 18:55:41 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 18:55:41 -<==      Total: 3
2019-04-08 18:55:41 -耗时 : 12
2019-04-08 18:55:41 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@38876c93, com.bootdo.moneyList.damain.MoneyListDO@5ba14d49, com.bootdo.moneyList.damain.MoneyListDO@5580bf6a]
2019-04-08 18:55:51 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 18:55:51 -HTTP METHOD : POST
2019-04-08 18:55:51 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 18:55:51 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@45c613f2]
2019-04-08 18:55:51 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 18:55:51 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 18:55:51 -<==    Updates: 1
2019-04-08 18:55:51 -耗时 : 203
2019-04-08 18:55:51 -返回值 : 0
2019-04-08 18:55:53 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 18:55:53 -HTTP METHOD : POST
2019-04-08 18:55:53 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 18:55:53 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@751692c6]
2019-04-08 18:55:53 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 18:55:53 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 18:55:53 -<==      Total: 3
2019-04-08 18:55:53 -耗时 : 4
2019-04-08 18:55:53 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@1cfb6684, com.bootdo.moneyList.damain.MoneyListDO@5d3a477f, com.bootdo.moneyList.damain.MoneyListDO@296adff]
2019-04-08 18:55:55 -请求地址 : http://localhost:8081/print/print/printMoney
2019-04-08 18:55:55 -HTTP METHOD : GET
2019-04-08 18:55:55 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printMoney
2019-04-08 18:55:55 -参数 : []
2019-04-08 18:55:55 -耗时 : 0
2019-04-08 18:55:55 -返回值 : print/print/printEdit2
2019-04-08 18:56:09 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-04-08 18:56:09 -HTTP METHOD : GET
2019-04-08 18:56:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-04-08 18:56:09 -参数 : []
2019-04-08 18:56:09 -耗时 : 1
2019-04-08 18:56:09 -返回值 : /moneyLog/elecLog/elecLog
2019-04-08 18:56:09 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-04-08 18:56:09 -HTTP METHOD : GET
2019-04-08 18:56:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-04-08 18:56:09 -参数 : [userType]
2019-04-08 18:56:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-04-08 18:56:09 -==> Parameters: userType(String)
2019-04-08 18:56:09 -<==      Total: 2
2019-04-08 18:56:09 -耗时 : 17
2019-04-08 18:56:09 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-04-08 18:56:09 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-04-08 18:56:09 -HTTP METHOD : GET
2019-04-08 18:56:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-04-08 18:56:09 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-04-08 18:56:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-04-08 18:56:09 -==> Parameters: 0(Integer), 10(Integer)
2019-04-08 18:56:09 -<==      Total: 8
2019-04-08 18:56:09 -==>  Preparing: select count(*) from elec_log 
2019-04-08 18:56:09 -==> Parameters: 
2019-04-08 18:56:09 -<==      Total: 1
2019-04-08 18:56:09 -耗时 : 68
2019-04-08 18:56:09 -返回值 : com.bootdo.common.utils.PageUtils@5d96465
2019-04-08 18:56:15 -请求地址 : http://localhost:8081/index
2019-04-08 18:56:15 -HTTP METHOD : GET
2019-04-08 18:56:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 18:56:15 -参数 : [{}]
2019-04-08 18:56:15 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 18:56:15 -==> Parameters: 1(Long)
2019-04-08 18:56:15 -<==      Total: 46
2019-04-08 18:56:15 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 18:56:15 -==> Parameters: 138(Long)
2019-04-08 18:56:15 -<==      Total: 1
2019-04-08 18:56:15 -耗时 : 31
2019-04-08 18:56:15 -返回值 : index_v1
2019-04-08 18:56:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 18:56:15 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 32(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 18:56:15.197(Timestamp)
2019-04-08 18:56:15 -<==    Updates: 1
2019-04-08 18:56:15 -请求地址 : http://localhost:8081/main
2019-04-08 18:56:15 -HTTP METHOD : GET
2019-04-08 18:56:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 18:56:15 -参数 : []
2019-04-08 18:56:15 -耗时 : 1
2019-04-08 18:56:15 -返回值 : main
2019-04-08 18:56:15 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 18:56:15 -HTTP METHOD : GET
2019-04-08 18:56:15 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 18:56:15 -参数 : []
2019-04-08 18:56:15 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 18:56:15 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 18:56:15 -<==      Total: 0
2019-04-08 18:56:15 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 18:56:15 -==> Parameters: 1(Long), 0(String)
2019-04-08 18:56:15 -<==      Total: 1
2019-04-08 18:56:15 -耗时 : 8
2019-04-08 18:56:15 -返回值 : com.bootdo.common.utils.PageUtils@4981f8a0
2019-04-08 18:56:15 -请求地址 : http://localhost:8081/main
2019-04-08 18:56:15 -HTTP METHOD : GET
2019-04-08 18:56:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 18:56:15 -参数 : []
2019-04-08 18:56:15 -耗时 : 0
2019-04-08 18:56:15 -返回值 : main
2019-04-08 18:56:18 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 18:56:18 -HTTP METHOD : GET
2019-04-08 18:56:18 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 18:56:18 -参数 : []
2019-04-08 18:56:18 -耗时 : 1
2019-04-08 18:56:18 -返回值 : /moneyList/moneyList
2019-04-08 18:56:26 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 18:56:26 -HTTP METHOD : GET
2019-04-08 18:56:26 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 18:56:26 -参数 : []
2019-04-08 18:56:26 -耗时 : 0
2019-04-08 18:56:26 -返回值 : system/dept/deptTree
2019-04-08 18:56:26 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 18:56:26 -HTTP METHOD : GET
2019-04-08 18:56:26 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 18:56:26 -参数 : []
2019-04-08 18:56:26 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 18:56:26 -==> Parameters: 
2019-04-08 18:56:26 -<==      Total: 3
2019-04-08 18:56:26 -耗时 : 3
2019-04-08 18:56:26 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 18:56:32 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 18:56:32 -HTTP METHOD : POST
2019-04-08 18:56:32 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 18:56:32 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@a9b8f3d]
2019-04-08 18:56:32 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 18:56:32 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 18:56:32 -<==      Total: 3
2019-04-08 18:56:32 -耗时 : 6
2019-04-08 18:56:32 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@56adcc7c, com.bootdo.moneyList.damain.MoneyListDO@5538d212, com.bootdo.moneyList.damain.MoneyListDO@38c4def]
2019-04-08 18:56:38 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 18:56:38 -HTTP METHOD : POST
2019-04-08 18:56:38 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 18:56:38 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@6e5de6f9]
2019-04-08 18:56:38 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 18:56:38 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 18:56:38 -<==    Updates: 1
2019-04-08 18:56:38 -耗时 : 89
2019-04-08 18:56:38 -返回值 : 0
2019-04-08 18:56:44 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 18:56:44 -HTTP METHOD : POST
2019-04-08 18:56:44 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 18:56:44 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@6c411bb5]
2019-04-08 18:56:44 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 18:56:44 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 18:56:44 -<==      Total: 3
2019-04-08 18:56:44 -耗时 : 7
2019-04-08 18:56:44 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@4a988eb5, com.bootdo.moneyList.damain.MoneyListDO@7a8d7281, com.bootdo.moneyList.damain.MoneyListDO@1e7542d6]
2019-04-08 18:57:38 -请求地址 : http://localhost:8081/index
2019-04-08 18:57:38 -HTTP METHOD : GET
2019-04-08 18:57:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-04-08 18:57:38 -参数 : [{}]
2019-04-08 18:57:38 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-04-08 18:57:38 -==> Parameters: 1(Long)
2019-04-08 18:57:38 -<==      Total: 46
2019-04-08 18:57:38 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-04-08 18:57:38 -==> Parameters: 138(Long)
2019-04-08 18:57:38 -<==      Total: 1
2019-04-08 18:57:38 -耗时 : 24
2019-04-08 18:57:38 -返回值 : index_v1
2019-04-08 18:57:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-04-08 18:57:38 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 25(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-04-08 18:57:38.693(Timestamp)
2019-04-08 18:57:38 -请求地址 : http://localhost:8081/main
2019-04-08 18:57:38 -HTTP METHOD : GET
2019-04-08 18:57:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 18:57:38 -参数 : []
2019-04-08 18:57:38 -耗时 : 1
2019-04-08 18:57:38 -返回值 : main
2019-04-08 18:57:38 -<==    Updates: 1
2019-04-08 18:57:38 -请求地址 : http://localhost:8081/oa/notify/message
2019-04-08 18:57:38 -HTTP METHOD : GET
2019-04-08 18:57:38 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-04-08 18:57:38 -参数 : []
2019-04-08 18:57:38 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-04-08 18:57:38 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-04-08 18:57:38 -<==      Total: 0
2019-04-08 18:57:38 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-04-08 18:57:38 -==> Parameters: 1(Long), 0(String)
2019-04-08 18:57:38 -<==      Total: 1
2019-04-08 18:57:38 -耗时 : 12
2019-04-08 18:57:38 -返回值 : com.bootdo.common.utils.PageUtils@3ac9abcc
2019-04-08 18:57:39 -请求地址 : http://localhost:8081/main
2019-04-08 18:57:39 -HTTP METHOD : GET
2019-04-08 18:57:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-04-08 18:57:39 -参数 : []
2019-04-08 18:57:39 -耗时 : 2
2019-04-08 18:57:39 -返回值 : main
2019-04-08 18:57:40 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-04-08 18:57:40 -HTTP METHOD : GET
2019-04-08 18:57:40 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-04-08 18:57:40 -参数 : []
2019-04-08 18:57:40 -耗时 : 0
2019-04-08 18:57:40 -返回值 : /moneyList/moneyList
2019-04-08 18:57:44 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-04-08 18:57:44 -HTTP METHOD : GET
2019-04-08 18:57:44 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-04-08 18:57:44 -参数 : []
2019-04-08 18:57:44 -耗时 : 0
2019-04-08 18:57:44 -返回值 : system/dept/deptTree
2019-04-08 18:57:44 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-04-08 18:57:44 -HTTP METHOD : GET
2019-04-08 18:57:44 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-04-08 18:57:44 -参数 : []
2019-04-08 18:57:44 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-04-08 18:57:44 -==> Parameters: 
2019-04-08 18:57:44 -<==      Total: 3
2019-04-08 18:57:44 -耗时 : 6
2019-04-08 18:57:44 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-04-08 18:57:47 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 18:57:47 -HTTP METHOD : POST
2019-04-08 18:57:47 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 18:57:47 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@648a190]
2019-04-08 18:57:47 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 18:57:47 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 18:57:47 -<==      Total: 3
2019-04-08 18:57:47 -耗时 : 5
2019-04-08 18:57:47 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@1e2ede0f, com.bootdo.moneyList.damain.MoneyListDO@68d31607, com.bootdo.moneyList.damain.MoneyListDO@2efa287a]
2019-04-08 18:57:57 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 18:57:57 -HTTP METHOD : POST
2019-04-08 18:57:57 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 18:57:57 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@45a173ba]
2019-04-08 18:57:57 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 18:57:57 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 18:57:57 -<==    Updates: 1
2019-04-08 18:57:57 -耗时 : 82
2019-04-08 18:57:57 -返回值 : 0
2019-04-08 18:58:00 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 18:58:00 -HTTP METHOD : POST
2019-04-08 18:58:00 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 18:58:00 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@230ce6ee]
2019-04-08 18:58:00 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 18:58:00 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 18:58:00 -<==      Total: 3
2019-04-08 18:58:00 -耗时 : 8
2019-04-08 18:58:00 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@2f7fe00f, com.bootdo.moneyList.damain.MoneyListDO@7ec023ab, com.bootdo.moneyList.damain.MoneyListDO@3a3f910b]
2019-04-08 18:58:12 -请求地址 : http://localhost:8081/moneyList/moneyList/updateMoney
2019-04-08 18:58:12 -HTTP METHOD : POST
2019-04-08 18:58:12 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.updateMoney
2019-04-08 18:58:12 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@5f3a41e4]
2019-04-08 18:58:12 -==>  Preparing: update elec set elec_sum = elec_sum + ? WHERE create_time = ? and user_Id = ? 
2019-04-08 18:58:12 -==> Parameters: 1(String), 2019-02(String), 1-0001(String)
2019-04-08 18:58:12 -<==    Updates: 1
2019-04-08 18:58:12 -耗时 : 90
2019-04-08 18:58:12 -返回值 : 0
2019-04-08 18:58:15 -请求地址 : http://localhost:8081/moneyList/moneyList/queryAllUser
2019-04-08 18:58:15 -HTTP METHOD : POST
2019-04-08 18:58:15 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.queryAllUser
2019-04-08 18:58:15 -参数 : [com.bootdo.moneyList.damain.MoneyListDO@77478bce]
2019-04-08 18:58:15 -==>  Preparing: select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, elec_type usertype, elec_price userprice, elec_amount userarea, elec_cost usercost, elec_Sum usersum from elec WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, heat_type usertype, heat_price userprice, heat_area userarea, heat_cost usercost, heat_Sum usersum from heat WHERE create_time = ? and user_Id = ? UNION ALL select COUNT(*) number, user_id, user_name, (SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, user_tell, user_state, water_type usertype, water_price userprice, water_price userarea, water_price usercost, water_Sum usersum from water WHERE create_time = ? and user_Id = ? 
2019-04-08 18:58:15 -==> Parameters: 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String), 2019-02(String), 1-0001(String)
2019-04-08 18:58:15 -<==      Total: 3
2019-04-08 18:58:15 -耗时 : 7
2019-04-08 18:58:15 -返回值 : [com.bootdo.moneyList.damain.MoneyListDO@46ff2740, com.bootdo.moneyList.damain.MoneyListDO@121db73b, com.bootdo.moneyList.damain.MoneyListDO@184479ff]
2019-04-08 19:24:59 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 4 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 45], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 7], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 435]
2019-04-08 19:54:21 -Validating all active sessions...
2019-04-08 19:54:21 -Finished session validation.  [1] sessions were stopped.
2019-04-08 19:54:59 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 4 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 45], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 7], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 868]
2019-04-08 20:24:59 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 4 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 45], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 7], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1301]
